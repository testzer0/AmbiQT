[{"db_id": "department_management", "query": "select max_budget_in_billions, min_budget_in_billions from department_budget_in_billions", "query_toks": ["SELECT", "max", "(", "budget_in_billions", ")", ",", "min", "(", "budget_in_billions", ")", "FROM", "department"], "query_toks_no_value": ["select", "max", "(", "budget_in_billions", ")", ",", "min", "(", "budget_in_billions", ")", "from", "department"], "question": "What are the maximum and minimum budget of the departments?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "budget", "of", "the", "departments", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]], [2, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"department": "department_id"}, "orig_query": "select max(budget_in_billions), min(budget_in_billions) from department", "split_map": {"department": ["max_budget_in_billions", "min_budget_in_billions", "avg_budget_in_billions", "total_budget_in_billions"]}, "schema_with_content": "department : creation (\"1849\", \"1903\", \"1966\"), budget_in_billions (21.5, 23.4, 44.6), ranking (1, 15, 6), department_id (8, 10, 12), name (\"Agriculture\", \"Treasury\", \"Justice\"), num_employees (208000.0, 17347.0, 4487.0) | department_budget_in_billions : name (\"Agriculture\", \"Treasury\", \"Justice\"), department_id (8, 10, 12), max_budget_in_billions (21.5, 23.4, 44.6), avg_budget_in_billions (21.5, 23.4, 44.6), ranking (1, 15, 6), creation (\"1849\", \"1903\", \"1966\"), total_budget_in_billions (21.5, 23.4, 44.6), min_budget_in_billions (21.5, 23.4, 44.6), num_employees (208000.0, 17347.0, 4487.0) | head : born_state (\"Connecticut\", \"Alabama\", \"Alabama\"), name (\"P\u00c3\u00a1draig Harrington\", \"Franklin Langham\", \"Franklin Langham\"), age (43.0, 67.0, 69.0), head_id (2, 3, 3) | management : temporary_acting (\"Yes\", \"No\"), head_id (3, 5, 4), department_id (2, 2, 15)", "schema_without_content": "department : creation , budget_in_billions , ranking , department_id , name , num_employees  | department_budget_in_billions : name , department_id , max_budget_in_billions , avg_budget_in_billions , ranking , creation , total_budget_in_billions , min_budget_in_billions , num_employees  | head : born_state , name , age , head_id  | management : temporary_acting , head_id , department_id "}, {"db_id": "department_management", "query": "select avg_num_employees from department_num_employees where ranking between 10 and 15", "query_toks": ["SELECT", "avg", "(", "num_employees", ")", "FROM", "department", "WHERE", "ranking", "BETWEEN", "10", "AND", "15"], "query_toks_no_value": ["select", "avg", "(", "num_employees", ")", "from", "department", "where", "ranking", "between", "value", "and", "value"], "question": "What is the average number of employees of the departments whose rank is between 10 and 15?", "question_toks": ["What", "is", "the", "average", "number", "of", "employees", "of", "the", "departments", "whose", "rank", "is", "between", "10", "and", "15", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 4, false], null], 10.0, 15.0]]}, "primary_key": {"department": "department_id"}, "orig_query": "select avg(num_employees) from department where ranking between 10 and 15", "split_map": {"department": ["max_num_employees", "min_num_employees", "avg_num_employees", "total_num_employees"]}, "schema_with_content": "department : num_employees (10600.0, 116100.0, 208000.0), ranking (6, 11, 3), name (\"Energy\", \"Labor\", \"Veterans Affairs\"), creation (\"1903\", \"1953\", \"1966\"), department_id (11, 9, 7), budget_in_billions (58.0, 543.2, 543.2) | department_num_employees : budget_in_billions (58.0, 543.2, 543.2), total_num_employees (10600.0, 116100.0, 208000.0), name (\"Energy\", \"Labor\", \"Veterans Affairs\"), department_id (11, 9, 7), ranking (6, 11, 3), min_num_employees (10600.0, 116100.0, 208000.0), avg_num_employees (10600.0, 116100.0, 208000.0), max_num_employees (10600.0, 116100.0, 208000.0), creation (\"1903\", \"1953\", \"1966\") | head : name (\"P\u00c3\u00a1draig Harrington\", \"Franklin Langham\", \"P\u00c3\u00a1draig Harrington\"), age (56.0, 53.0, 68.0), head_id (9, 3, 6), born_state (\"California\", \"Florida\", \"Delaware\") | management : temporary_acting (\"Yes\", \"No\"), head_id (6, 4, 5), department_id (15, 11, 2)", "schema_without_content": "department : num_employees , ranking , name , creation , department_id , budget_in_billions  | department_num_employees : budget_in_billions , total_num_employees , name , department_id , ranking , min_num_employees , avg_num_employees , max_num_employees , creation  | head : name , age , head_id , born_state  | management : temporary_acting , head_id , department_id "}, {"db_id": "farm", "query": "select avg_working_horses from farm_working_horses where total_horses > 5000", "query_toks": ["SELECT", "avg", "(", "Working_Horses", ")", "FROM", "farm", "WHERE", "Total_Horses", ">", "5000"], "query_toks_no_value": ["select", "avg", "(", "working_horses", ")", "from", "farm", "where", "total_horses", ">", "value"], "question": "What is the average number of working horses of farms with more than 5000 total number of horses?", "question_toks": ["What", "is", "the", "average", "number", "of", "working", "horses", "of", "farms", "with", "more", "than", "5000", "total", "number", "of", "horses", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 9, false], null], 5000.0, null]]}, "primary_key": {"farm": "farm_id"}, "orig_query": "select avg(working_horses) from farm where total_horses > 5000", "split_map": {"farm": ["max_working_horses", "min_working_horses", "avg_working_horses", "total_working_horses"]}, "schema_with_content": "city : census_ranking (\"3460 of 5008\", \"1442 of 5,008\", \"1442 of 5,008\"), area_km_2 (2.24, 8.89, 3.09), status (\"Town\", \"Village\"), official_name (\"Aroostook\", \"Perth-Andover\", \"Perth-Andover\"), population (1778.0, 351.0, 1135.0), city_id (4, 2, 4) | farm : year (1932, 1933, 1929), working_horses (4090.5, 3900.1, 4090.5), bulls (32.8, 49.6, 37.6), farm_id (2, 3, 7), oxen (113.8, 805.5, 805.5), cows (2518.0, 2518.0, 3471.6), total_horses (5308.2, 3658.9, 5056.5), pigs (2623.7, 6962.9, 3171.8), sheep_and_goats (4533.4, 8112.2, 4533.4), total_cattle (4446.3, 6189.5, 6189.5) | farm_working_horses : min_working_horses (4090.5, 3900.1, 4090.5), year (1932, 1933, 1929), max_working_horses (4090.5, 3900.1, 4090.5), farm_id (2, 3, 7), avg_working_horses (4090.5, 3900.1, 4090.5), total_horses (5308.2, 3658.9, 5056.5), total_working_horses (4090.5, 3900.1, 4090.5), total_cattle (4446.3, 6189.5, 6189.5), oxen (113.8, 805.5, 805.5), bulls (32.8, 49.6, 37.6), cows (2518.0, 2518.0, 3471.6), pigs (2623.7, 6962.9, 3171.8), sheep_and_goats (4533.4, 8112.2, 4533.4) | farm_competition : host_city_id (1, 1, 3), year (2002, 2004, 2005), competition_id (6, 1, 3), theme (\"MTV Asia Aid\", \"MTV Cube\", \"Valentine's Day\"), hosts (\"Leehom Wang and Kelly Rowland\", \"Vanness Wu and Michelle Branch\", \"Miley Cyrus Jared Leto and Karen Mok\") | competition_record : competition_id (5, 2, 5), farm_id (3, 4, 4), rank (1, 4, 3)", "schema_without_content": "city : census_ranking , area_km_2 , status , official_name , population , city_id  | farm : year , working_horses , bulls , farm_id , oxen , cows , total_horses , pigs , sheep_and_goats , total_cattle  | farm_working_horses : min_working_horses , year , max_working_horses , farm_id , avg_working_horses , total_horses , total_working_horses , total_cattle , oxen , bulls , cows , pigs , sheep_and_goats  | farm_competition : host_city_id , year , competition_id , theme , hosts  | competition_record : competition_id , farm_id , rank "}, {"db_id": "farm", "query": "select avg_working_horses from farm_working_horses where total_horses > 5000", "query_toks": ["SELECT", "avg", "(", "Working_Horses", ")", "FROM", "farm", "WHERE", "Total_Horses", ">", "5000"], "query_toks_no_value": ["select", "avg", "(", "working_horses", ")", "from", "farm", "where", "total_horses", ">", "value"], "question": "Give the average number of working horses on farms with more than 5000 total horses.", "question_toks": ["Give", "the", "average", "number", "of", "working", "horses", "on", "farms", "with", "more", "than", "5000", "total", "horses", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 9, false], null], 5000.0, null]]}, "primary_key": {"farm": "farm_id"}, "orig_query": "select avg(working_horses) from farm where total_horses > 5000", "split_map": {"farm": ["max_working_horses", "min_working_horses", "avg_working_horses", "total_working_horses"]}, "schema_with_content": "city : census_ranking (\"3460 of 5008\", \"2418 of 5008\", \"3460 of 5008\"), city_id (3, 3, 4), area_km_2 (2.24, 8.91, 3.09), official_name (\"Plaster Rock\", \"Drummond\", \"Perth-Andover\"), status (\"Town\", \"Village\"), population (1778.0, 351.0, 775.0) | farm : working_horses (4090.5, 3900.1, 4198.8), year (1934, 1929, 1931), total_cattle (6189.5, 6274.1, 8374.5), oxen (156.5, 105.2, 156.5), bulls (71.6, 37.6, 37.6), sheep_and_goats (7956.3, 8112.2, 3364.8), farm_id (1, 4, 1), total_horses (5308.2, 5308.2, 2546.9), pigs (3373.3, 6962.9, 4161.2), cows (2739.5, 3987.0, 3471.6) | farm_working_horses : min_working_horses (4090.5, 3900.1, 4198.8), total_working_horses (4090.5, 3900.1, 4198.8), total_horses (5308.2, 5308.2, 2546.9), year (1934, 1929, 1931), farm_id (1, 4, 1), max_working_horses (4090.5, 3900.1, 4198.8), avg_working_horses (4090.5, 3900.1, 4198.8), total_cattle (6189.5, 6274.1, 8374.5), oxen (156.5, 105.2, 156.5), bulls (71.6, 37.6, 37.6), cows (2739.5, 3987.0, 3471.6), pigs (3373.3, 6962.9, 4161.2), sheep_and_goats (7956.3, 8112.2, 3364.8) | farm_competition : theme (\"Aliens\", \"Valentine's Day\", \"MTV Asia Aid\"), hosts (\"Alicia Keys\", \"Leehom Wang and Kelly Rowland\", \"Vanness Wu and Michelle Branch\"), year (2005, 2013, 2004), competition_id (1, 2, 4), host_city_id (1, 3, 1) | competition_record : competition_id (1, 2, 2), rank (4, 4, 3), farm_id (2, 1, 4)", "schema_without_content": "city : census_ranking , city_id , area_km_2 , official_name , status , population  | farm : working_horses , year , total_cattle , oxen , bulls , sheep_and_goats , farm_id , total_horses , pigs , cows  | farm_working_horses : min_working_horses , total_working_horses , total_horses , year , farm_id , max_working_horses , avg_working_horses , total_cattle , oxen , bulls , cows , pigs , sheep_and_goats  | farm_competition : theme , hosts , year , competition_id , host_city_id  | competition_record : competition_id , rank , farm_id "}, {"db_id": "farm", "query": "select max_cows, min_cows from farm_cows", "query_toks": ["SELECT", "max", "(", "Cows", ")", ",", "min", "(", "Cows", ")", "FROM", "farm"], "query_toks_no_value": ["select", "max", "(", "cows", ")", ",", "min", "(", "cows", ")", "from", "farm"], "question": "What are the maximum and minimum number of cows across all farms.", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "number", "of", "cows", "across", "all", "farms", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]]]], "union": null, "where": []}, "primary_key": {"farm": "farm_id"}, "orig_query": "select max(cows), min(cows) from farm", "split_map": {"farm": ["max_cows", "min_cows", "avg_cows", "total_cows"]}, "schema_with_content": "city : census_ranking (\"636 of 5008\", \"636 of 5008\", \"1442 of 5,008\"), population (775.0, 1778.0, 1135.0), official_name (\"Drummond\", \"Drummond\", \"Drummond\"), status (\"Town\", \"Village\"), city_id (4, 1, 4), area_km_2 (3.09, 3.09, 8.91) | farm : pigs (2623.7, 2623.7, 6962.9), farm_id (1, 5, 8), sheep_and_goats (7030.8, 2109.5, 7030.8), working_horses (3711.6, 3721.6, 3593.7), oxen (254.8, 116.9, 156.5), bulls (46.7, 32.8, 49.6), cows (3873.0, 2518.0, 2739.5), total_horses (5607.5, 4781.3, 4781.3), total_cattle (5006.7, 6274.1, 8604.8), year (1930, 1930, 1930) | farm_cows : oxen (254.8, 116.9, 156.5), bulls (46.7, 32.8, 49.6), total_cattle (5006.7, 6274.1, 8604.8), avg_cows (3873.0, 2518.0, 2739.5), max_cows (3873.0, 2518.0, 2739.5), year (1930, 1930, 1930), total_cows (3873.0, 2518.0, 2739.5), total_horses (5607.5, 4781.3, 4781.3), working_horses (3711.6, 3721.6, 3593.7), farm_id (1, 5, 8), min_cows (3873.0, 2518.0, 2739.5), pigs (2623.7, 2623.7, 6962.9), sheep_and_goats (7030.8, 2109.5, 7030.8) | farm_competition : hosts (\"Vanness Wu and Michelle Branch\", \"Leehom Wang and Kelly Rowland\", \"Vanness Wu and Michelle Branch\"), competition_id (5, 2, 6), host_city_id (5, 4, 1), theme (\"Valentine's Day\", \"Valentine's Day\", \"Valentine's Day\"), year (2004, 2005, 2005) | competition_record : farm_id (2, 8, 3), competition_id (3, 2, 1), rank (1, 2, 1)", "schema_without_content": "city : census_ranking , population , official_name , status , city_id , area_km_2  | farm : pigs , farm_id , sheep_and_goats , working_horses , oxen , bulls , cows , total_horses , total_cattle , year  | farm_cows : oxen , bulls , total_cattle , avg_cows , max_cows , year , total_cows , total_horses , working_horses , farm_id , min_cows , pigs , sheep_and_goats  | farm_competition : hosts , competition_id , host_city_id , theme , year  | competition_record : farm_id , competition_id , rank "}, {"db_id": "farm", "query": "select max_cows, min_cows from farm_cows", "query_toks": ["SELECT", "max", "(", "Cows", ")", ",", "min", "(", "Cows", ")", "FROM", "farm"], "query_toks_no_value": ["select", "max", "(", "cows", ")", ",", "min", "(", "cows", ")", "from", "farm"], "question": "Return the maximum and minimum number of cows across all farms.", "question_toks": ["Return", "the", "maximum", "and", "minimum", "number", "of", "cows", "across", "all", "farms", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]]]], "union": null, "where": []}, "primary_key": {"farm": "farm_id"}, "orig_query": "select max(cows), min(cows) from farm", "split_map": {"farm": ["max_cows", "min_cows", "avg_cows", "total_cows"]}, "schema_with_content": "city : official_name (\"Aroostook\", \"Drummond\", \"Plaster Rock\"), city_id (3, 1, 4), status (\"Town\", \"Village\"), area_km_2 (3.09, 3.09, 8.89), census_ranking (\"1936 of 5,008\", \"1936 of 5,008\", \"2418 of 5008\"), population (5706.0, 1778.0, 5706.0) | farm : farm_id (3, 7, 1), pigs (3373.3, 4412.4, 2089.2), oxen (593.7, 805.5, 805.5), bulls (26.9, 40.0, 49.6), working_horses (2197.3, 3711.6, 3593.7), cows (3377.0, 2407.2, 3471.6), sheep_and_goats (2004.7, 2004.7, 7030.8), year (1934, 1934, 1934), total_cattle (4446.3, 8374.5, 8374.5), total_horses (5486.9, 3658.9, 2546.9) | farm_cows : year (1934, 1934, 1934), total_cattle (4446.3, 8374.5, 8374.5), total_cows (3377.0, 2407.2, 3471.6), farm_id (3, 7, 1), oxen (593.7, 805.5, 805.5), avg_cows (3377.0, 2407.2, 3471.6), min_cows (3377.0, 2407.2, 3471.6), working_horses (2197.3, 3711.6, 3593.7), bulls (26.9, 40.0, 49.6), max_cows (3377.0, 2407.2, 3471.6), total_horses (5486.9, 3658.9, 2546.9), pigs (3373.3, 4412.4, 2089.2), sheep_and_goats (2004.7, 2004.7, 7030.8) | farm_competition : theme (\"MTV Asia Aid\", \"Valentine's Day\", \"MTV Cube\"), year (2006, 2002, 2004), host_city_id (1, 1, 1), competition_id (3, 4, 5), hosts (\"Miley Cyrus Jared Leto and Karen Mok\", \"Mandy Moore and Ronan Keating\", \"Leehom Wang and Kelly Rowland\") | competition_record : competition_id (5, 5, 1), rank (3, 4, 2), farm_id (2, 1, 4)", "schema_without_content": "city : official_name , city_id , status , area_km_2 , census_ranking , population  | farm : farm_id , pigs , oxen , bulls , working_horses , cows , sheep_and_goats , year , total_cattle , total_horses  | farm_cows : year , total_cattle , total_cows , farm_id , oxen , avg_cows , min_cows , working_horses , bulls , max_cows , total_horses , pigs , sheep_and_goats  | farm_competition : theme , year , host_city_id , competition_id , hosts  | competition_record : competition_id , rank , farm_id "}, {"db_id": "farm", "query": "select status, avg_population from city_population group by status", "query_toks": ["SELECT", "Status", ",", "avg", "(", "Population", ")", "FROM", "city", "GROUP", "BY", "Status"], "query_toks_no_value": ["select", "status", ",", "avg", "(", "population", ")", "from", "city", "group", "by", "status"], "question": "Please show the different statuses of cities and the average population of cities with each status.", "question_toks": ["Please", "show", "the", "different", "statuses", "of", "cities", "and", "the", "average", "population", "of", "cities", "with", "each", "status", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [5, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"city": "city_id"}, "orig_query": "select status, avg(population) from city group by status", "split_map": {"city": ["max_population", "min_population", "avg_population", "total_population"]}, "schema_with_content": "city : official_name (\"Aroostook\", \"Perth-Andover\", \"Plaster Rock\"), status (\"Town\", \"Village\"), census_ranking (\"1442 of 5,008\", \"2418 of 5008\", \"1442 of 5,008\"), area_km_2 (18.06, 8.91, 2.24), population (775.0, 1778.0, 5706.0), city_id (4, 4, 3) | city_population : area_km_2 (18.06, 8.91, 2.24), status (\"Town\", \"Village\"), max_population (775.0, 1778.0, 5706.0), official_name (\"Aroostook\", \"Perth-Andover\", \"Plaster Rock\"), avg_population (775.0, 1778.0, 5706.0), total_population (775.0, 1778.0, 5706.0), min_population (775.0, 1778.0, 5706.0), city_id (4, 4, 3), census_ranking (\"1442 of 5,008\", \"2418 of 5008\", \"1442 of 5,008\") | farm : farm_id (5, 1, 3), year (1931, 1927, 1933), working_horses (2197.3, 3711.2, 2197.3), bulls (32.8, 49.6, 40.0), total_cattle (8374.5, 8604.8, 8374.5), cows (3852.1, 3873.0, 3377.0), sheep_and_goats (3364.8, 2004.7, 3364.8), oxen (105.2, 113.8, 116.9), pigs (6962.9, 3171.8, 4236.7), total_horses (5486.9, 2546.9, 2546.9) | farm_competition : year (2006, 2006, 2013), host_city_id (2, 2, 4), theme (\"MTV Asia Aid\", \"Codehunters\", \"Aliens\"), hosts (\"Alicia Keys\", \"Mandy Moore and Ronan Keating\", \"Miley Cyrus Jared Leto and Karen Mok\"), competition_id (3, 2, 4) | competition_record : rank (2, 4, 2), competition_id (1, 3, 4), farm_id (8, 8, 4)", "schema_without_content": "city : official_name , status , census_ranking , area_km_2 , population , city_id  | city_population : area_km_2 , status , max_population , official_name , avg_population , total_population , min_population , city_id , census_ranking  | farm : farm_id , year , working_horses , bulls , total_cattle , cows , sheep_and_goats , oxen , pigs , total_horses  | farm_competition : year , host_city_id , theme , hosts , competition_id  | competition_record : rank , competition_id , farm_id "}, {"db_id": "farm", "query": "select status, avg_population from city_population group by status", "query_toks": ["SELECT", "Status", ",", "avg", "(", "Population", ")", "FROM", "city", "GROUP", "BY", "Status"], "query_toks_no_value": ["select", "status", ",", "avg", "(", "population", ")", "from", "city", "group", "by", "status"], "question": "What are the statuses and average populations of each city?", "question_toks": ["What", "are", "the", "statuses", "and", "average", "populations", "of", "each", "city", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [5, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"city": "city_id"}, "orig_query": "select status, avg(population) from city group by status", "split_map": {"city": ["max_population", "min_population", "avg_population", "total_population"]}, "schema_with_content": "city : population (1778.0, 1778.0, 5706.0), census_ranking (\"636 of 5008\", \"636 of 5008\", \"1442 of 5,008\"), city_id (4, 5, 2), official_name (\"Perth-Andover\", \"Perth-Andover\", \"Plaster Rock\"), area_km_2 (18.06, 8.91, 3.09), status (\"Town\", \"Village\") | city_population : avg_population (1778.0, 1778.0, 5706.0), min_population (1778.0, 1778.0, 5706.0), max_population (1778.0, 1778.0, 5706.0), total_population (1778.0, 1778.0, 5706.0), status (\"Town\", \"Village\"), area_km_2 (18.06, 8.91, 3.09), official_name (\"Perth-Andover\", \"Perth-Andover\", \"Plaster Rock\"), city_id (4, 5, 2), census_ranking (\"636 of 5008\", \"636 of 5008\", \"1442 of 5,008\") | farm : sheep_and_goats (3364.8, 7030.8, 2109.5), bulls (37.6, 32.8, 46.7), oxen (105.2, 805.5, 593.7), working_horses (3711.2, 3711.6, 3721.6), farm_id (3, 1, 8), total_cattle (6274.1, 6274.1, 8604.8), cows (3377.0, 2739.5, 3471.6), total_horses (5607.5, 2604.8, 2546.9), pigs (3373.3, 4412.4, 2089.2), year (1927, 1932, 1932) | farm_competition : competition_id (1, 2, 4), hosts (\"Mandy Moore and Ronan Keating\", \"Alicia Keys\", \"Vanness Wu and Michelle Branch\"), year (2004, 2005, 2004), host_city_id (1, 3, 1), theme (\"Carnival M is back!\", \"MTV Asia Aid\", \"Carnival M is back!\") | competition_record : rank (4, 3, 2), farm_id (8, 1, 2), competition_id (1, 5, 3)", "schema_without_content": "city : population , census_ranking , city_id , official_name , area_km_2 , status  | city_population : avg_population , min_population , max_population , total_population , status , area_km_2 , official_name , city_id , census_ranking  | farm : sheep_and_goats , bulls , oxen , working_horses , farm_id , total_cattle , cows , total_horses , pigs , year  | farm_competition : competition_id , hosts , year , host_city_id , theme  | competition_record : rank , farm_id , competition_id "}, {"db_id": "bike_1", "query": "select city, max_lat from station_lat group by city", "query_toks": ["SELECT", "city", ",", "max", "(", "lat", ")", "FROM", "station", "GROUP", "BY", "city"], "query_toks_no_value": ["select", "city", ",", "max", "(", "lat", ")", "from", "station", "group", "by", "city"], "question": "For each city, return the highest latitude among its stations.", "question_toks": ["For", "each", "city", ",", "return", "the", "highest", "latitude", "among", "its", "stations", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [1, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"station": "id"}, "orig_query": "select city, max(lat) from station group by city", "split_map": {"station": ["max_lat", "min_lat", "avg_lat", "total_lat"]}, "schema_with_content": "station : dock_count (19, 23, 11), id (30, 9, 59), lat (37.429082, 37.789625, 37.776619000000004), name (\"Evelyn Park and Ride\", \"Embarcadero at Bryant\", \"5th at Howard\"), long (-122.39997, -122.400811, -122.39526000000001), installation_date (\"12/31/2013\", \"12/31/2013\", \"8/22/2013\"), city (\"San Francisco\", \"San Jose\", \"Mountain View\") | station_lat : min_lat (37.429082, 37.789625, 37.776619000000004), name (\"Evelyn Park and Ride\", \"Embarcadero at Bryant\", \"5th at Howard\"), id (30, 9, 59), avg_lat (37.429082, 37.789625, 37.776619000000004), max_lat (37.429082, 37.789625, 37.776619000000004), total_lat (37.429082, 37.789625, 37.776619000000004), long (-122.39997, -122.400811, -122.39526000000001), dock_count (19, 23, 11), city (\"San Francisco\", \"San Jose\", \"Mountain View\"), installation_date (\"12/31/2013\", \"12/31/2013\", \"8/22/2013\") | status : docks_available (15, 24, 8), station_id (5, 5, 58), time (\"2015-06-02 13:20:02\", \"2015-06-02 13:26:02\", \"2015-06-02 12:51:02\"), bikes_available (16, 12, 6) | trip : zip_code (94546, 98033, 2780), id (902575, 907162, 910177), start_station_id (74, 9, 58), end_station_name (\"Franklin at Maple\", \"Washington at Kearny\", \"Temporary Transbay Terminal (Howard at Beale)\"), end_date (\"8/31/2015 12:58\", \"8/26/2015 8:56\", \"8/28/2015 16:06\"), duration (17108, 836, 672), subscription_type (\"Subscriber\", \"Customer\"), bike_id (16, 69, 419), start_station_name (\"Embarcadero at Vallejo\", \"Arena Green / SAP Center\", \"SJSU - San Salvador at 9th\"), end_station_id (69, 3, 23), start_date (\"8/24/2015 22:06\", \"8/27/2015 8:00\", \"8/31/2015 11:07\") | weather : max_wind_speed_mph (\"\", 100, 38), min_humidity (64, 20, 71), cloud_cover (0, 1, 6), mean_visibility_miles (6, 16, 15), mean_temperature_f (75, 39, 42), max_humidity (73, 74, 94), min_sea_level_pressure_inches (29.93, \"\", 30.12), zip_code (94301, 94301, 94107), events (\"\", \"Rain-Thunderstorm\", \"\"), min_visibility_miles (4, 4, 5), min_dew_point_f (14, 61, 27), max_sea_level_pressure_inches (30.18, 30.45, 30.23), date (\"9/13/2014\", \"6/27/2014\", \"11/30/2013\"), mean_humidity (73, 47, 42), min_temperature_f (28, 40, 37), precipitation_inches (0.35, 0.57, 0.29), mean_sea_level_pressure_inches (30.08, 29.44, 30.2), max_dew_point_f (58, 37, 63), mean_dew_point_f (28, 32, 62), max_temperature_f (93, 99, 71), max_visibility_miles (7, 6, \"\"), wind_dir_degrees (174, 68, 303), max_gust_speed_mph (34, 45, 86), mean_wind_speed_mph (23, 2, 12)", "schema_without_content": "station : dock_count , id , lat , name , long , installation_date , city  | station_lat : min_lat , name , id , avg_lat , max_lat , total_lat , long , dock_count , city , installation_date  | status : docks_available , station_id , time , bikes_available  | trip : zip_code , id , start_station_id , end_station_name \", end_date , duration , subscription_type , bike_id , start_station_name , end_station_id , start_date  | weather : max_wind_speed_mph , min_humidity , cloud_cover , mean_visibility_miles , mean_temperature_f , max_humidity , min_sea_level_pressure_inches , zip_code , events , min_visibility_miles , min_dew_point_f , max_sea_level_pressure_inches , date , mean_humidity , min_temperature_f , precipitation_inches , mean_sea_level_pressure_inches , max_dew_point_f , mean_dew_point_f , max_temperature_f , max_visibility_miles , wind_dir_degrees , max_gust_speed_mph , mean_wind_speed_mph "}, {"db_id": "bike_1", "query": "select city, max_lat from station_lat group by city", "query_toks": ["SELECT", "city", ",", "max", "(", "lat", ")", "FROM", "station", "GROUP", "BY", "city"], "query_toks_no_value": ["select", "city", ",", "max", "(", "lat", ")", "from", "station", "group", "by", "city"], "question": "For each city, what is the highest latitude for its stations?", "question_toks": ["For", "each", "city", ",", "what", "is", "the", "highest", "latitude", "for", "its", "stations", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [1, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"station": "id"}, "orig_query": "select city, max(lat) from station group by city", "split_map": {"station": ["max_lat", "min_lat", "avg_lat", "total_lat"]}, "schema_with_content": "station : city (\"Redwood City\", \"San Jose\", \"Palo Alto\"), installation_date (\"8/25/2013\", \"8/12/2013\", \"8/14/2013\"), id (10, 23, 23), long (-122.227424, -122.164759, -122.40496599999999), name (\"Civic Center BART (7th at Market)\", \"MLK Library\", \"Market at 10th\"), lat (37.795001, 37.776619000000004, 37.444521), dock_count (19, 27, 25) | station_lat : max_lat (37.795001, 37.776619000000004, 37.444521), min_lat (37.795001, 37.776619000000004, 37.444521), id (10, 23, 23), name (\"Civic Center BART (7th at Market)\", \"MLK Library\", \"Market at 10th\"), total_lat (37.795001, 37.776619000000004, 37.444521), avg_lat (37.795001, 37.776619000000004, 37.444521), long (-122.227424, -122.164759, -122.40496599999999), dock_count (19, 27, 25), city (\"Redwood City\", \"San Jose\", \"Palo Alto\"), installation_date (\"8/25/2013\", \"8/12/2013\", \"8/14/2013\") | status : bikes_available (17, 15, 10), time (\"2015-06-02 13:14:03\", \"2015-06-02 13:45:03\", \"2015-06-02 13:12:02\"), station_id (66, 68, 24), docks_available (25, 9, 1) | trip : end_station_name (\"Arena Green / SAP Center\", \"Washington at Kearny\", \"Clay at Battery\"), start_station_id (61, 36, 66), bike_id (160, 559, 554), zip_code (80108, 95112, 44), duration (845, 865, 1530), end_station_id (36, 24, 60), start_station_name (\"San Jose City Hall\", \"Townsend at 7th\", \"Mechanics Plaza (Market at Battery)\"), end_date (\"8/31/2015 9:59\", \"8/29/2015 8:59\", \"8/31/2015 12:24\"), start_date (\"8/24/2015 14:21\", \"8/31/2015 8:08\", \"8/31/2015 7:32\"), subscription_type (\"Subscriber\", \"Customer\"), id (903380, 908690, 906717) | weather : max_visibility_miles (\"\", 16, 19), max_sea_level_pressure_inches (30.01, 30.21, 30.32), max_temperature_f (\"\", 54, 46), mean_sea_level_pressure_inches (30.12, 30.2, 29.94), mean_wind_speed_mph (12, 17, 19), min_dew_point_f (19, 20, 31), max_gust_speed_mph (40, 48, 49), mean_humidity (43, 77, 46), date (\"8/21/2015\", \"11/2/2013\", \"10/13/2014\"), min_temperature_f (73, 59, 36), mean_visibility_miles (11, 11, 6), max_humidity (82, 87, 82), min_sea_level_pressure_inches (29.77, 30.25, 29.55), min_visibility_miles (4, 7, 1), zip_code (94041, 94063, 94107), max_dew_point_f (66, 29, 46), max_wind_speed_mph (16, 19, 31), events (\"Rain\", \"rain\", \"Fog-Rain\"), mean_temperature_f (76, 54, 62), min_humidity (83, 15, 42), wind_dir_degrees (110, 239, 335), cloud_cover (2, 6, 7), mean_dew_point_f (54, 22, 44), precipitation_inches (0.14, 0.41, 0.27)", "schema_without_content": "station : city , installation_date , id , long , name \", \"MLK Library\", \"Market at 10th\", lat , dock_count  | station_lat : max_lat , min_lat , id , name \", \"MLK Library\", \"Market at 10th\", total_lat , avg_lat , long , dock_count , city , installation_date  | status : bikes_available , time , station_id , docks_available  | trip : end_station_name , start_station_id , bike_id , zip_code , duration , end_station_id , start_station_name \", end_date , start_date , subscription_type , id  | weather : max_visibility_miles , max_sea_level_pressure_inches , max_temperature_f , mean_sea_level_pressure_inches , mean_wind_speed_mph , min_dew_point_f , max_gust_speed_mph , mean_humidity , date , min_temperature_f , mean_visibility_miles , max_humidity , min_sea_level_pressure_inches , min_visibility_miles , zip_code , max_dew_point_f , max_wind_speed_mph , events , mean_temperature_f , min_humidity , wind_dir_degrees , cloud_cover , mean_dew_point_f , precipitation_inches "}, {"db_id": "bike_1", "query": "select avg_lat, (long)from station_lat where city = \"San Jose\"", "query_toks": ["SELECT", "avg", "(", "lat", ")", ",", "avg", "(", "long", ")", "FROM", "station", "WHERE", "city", "=", "``", "San", "Jose", "''"], "query_toks_no_value": ["select", "avg", "(", "lat", ")", ",", "avg", "(", "long", ")", "from", "station", "where", "city", "=", "value"], "question": "What is the average latitude and longitude of stations located in San Jose city?", "question_toks": ["What", "is", "the", "average", "latitude", "and", "longitude", "of", "stations", "located", "in", "San", "Jose", "city", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]], [5, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"San Jose\"", null]]}, "primary_key": {"station": "id"}, "orig_query": "select avg(lat), avg(long) from station where city = \"San Jose\"", "split_map": {"station": ["max_lat", "min_lat", "avg_lat", "total_lat"]}, "schema_with_content": "station : dock_count (23, 11, 25), name (\"San Francisco Caltrain 2 (330 Townsend)\", \"2nd at Townsend\", \"Embarcadero at Sansome\"), id (70, 71, 80), city (\"San Francisco\", \"Mountain View\", \"San Jose\"), lat (37.484219, 37.80477, 37.792251), long (-122.10675800000001, -122.40323400000001, -121.90573300000001), installation_date (\"8/12/2013\", \"8/20/2013\", \"12/31/2013\") | station_lat : name (\"San Francisco Caltrain 2 (330 Townsend)\", \"2nd at Townsend\", \"Embarcadero at Sansome\"), min_lat (37.484219, 37.80477, 37.792251), max_lat (37.484219, 37.80477, 37.792251), avg_lat (37.484219, 37.80477, 37.792251), total_lat (37.484219, 37.80477, 37.792251), id (70, 71, 80), long (-122.10675800000001, -122.40323400000001, -121.90573300000001), dock_count (23, 11, 25), city (\"San Francisco\", \"Mountain View\", \"San Jose\"), installation_date (\"8/12/2013\", \"8/20/2013\", \"12/31/2013\") | status : bikes_available (1, 2, 5), time (\"2015-06-02 12:55:02\", \"2015-06-02 14:32:02\", \"2015-06-02 13:22:02\"), station_id (22, 33, 38), docks_available (6, 6, 4) | trip : zip_code (94903, 89451, 94124), start_station_id (31, 42, 39), end_station_name (\"Embarcadero at Sansome\", \"Grant Avenue at Columbus Avenue\", \"San Francisco City Hall\"), start_station_name (\"Stanford in Redwood City\", \"Stanford in Redwood City\", \"San Jose City Hall\"), bike_id (450, 96, 48), id (912524, 901130, 901047), subscription_type (\"Subscriber\", \"Customer\"), end_station_id (27, 42, 12), start_date (\"8/22/2015 7:45\", \"8/28/2015 18:13\", \"8/21/2015 17:09\"), duration (839, 745, 1169), end_date (\"8/31/2015 16:45\", \"8/25/2015 15:44\", \"8/23/2015 16:24\") | weather : max_temperature_f (51, 64, 48), precipitation_inches (0.2, 0.14, 0.32), events (\"Rain\", \"rain\", \"rain\"), min_temperature_f (30, 25, 41), min_sea_level_pressure_inches (29.85, 29.77, 29.72), max_wind_speed_mph (24, 31, 17), min_humidity (51, \"\", 43), wind_dir_degrees (179, 44, 15), min_dew_point_f (49, 42, 28), max_humidity (92, 60, 93), mean_humidity (69, 28, 50), max_dew_point_f (36, 32, 30), max_visibility_miles (\"\", 8, 10), cloud_cover (6, \"\", \"\"), mean_sea_level_pressure_inches (30.18, 29.75, 29.81), date (\"8/14/2014\", \"5/9/2015\", \"4/15/2014\"), mean_dew_point_f (26, 53, 26), zip_code (95113, 94041, 95113), max_gust_speed_mph (14, 15, 43), max_sea_level_pressure_inches (30.42, 30.17, 29.51), min_visibility_miles (9, 7, 9), mean_temperature_f (62, 82, 60), mean_wind_speed_mph (7, 16, 18), mean_visibility_miles (8, 9, 4)", "schema_without_content": "station : dock_count , name \", \"2nd at Townsend\", \"Embarcadero at Sansome\", id , city , lat , long , installation_date  | station_lat : name \", \"2nd at Townsend\", \"Embarcadero at Sansome\", min_lat , max_lat , avg_lat , total_lat , id , long , dock_count , city , installation_date  | status : bikes_available , time , station_id , docks_available  | trip : zip_code , start_station_id , end_station_name , start_station_name , bike_id , id , subscription_type , end_station_id , start_date , duration , end_date  | weather : max_temperature_f , precipitation_inches , events , min_temperature_f , min_sea_level_pressure_inches , max_wind_speed_mph , min_humidity , wind_dir_degrees , min_dew_point_f , max_humidity , mean_humidity , max_dew_point_f , max_visibility_miles , cloud_cover , mean_sea_level_pressure_inches , date , mean_dew_point_f , zip_code , max_gust_speed_mph , max_sea_level_pressure_inches , min_visibility_miles , mean_temperature_f , mean_wind_speed_mph , mean_visibility_miles "}, {"db_id": "bike_1", "query": "select (lat), avg_long from station_long where city = \"San Jose\"", "query_toks": ["SELECT", "avg", "(", "lat", ")", ",", "avg", "(", "long", ")", "FROM", "station", "WHERE", "city", "=", "``", "San", "Jose", "''"], "query_toks_no_value": ["select", "avg", "(", "lat", ")", ",", "avg", "(", "long", ")", "from", "station", "where", "city", "=", "value"], "question": "What is the average latitude and longitude of stations located in San Jose city?", "question_toks": ["What", "is", "the", "average", "latitude", "and", "longitude", "of", "stations", "located", "in", "San", "Jose", "city", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]], [5, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"San Jose\"", null]]}, "primary_key": {"station": "id"}, "orig_query": "select avg(lat), avg(long) from station where city = \"San Jose\"", "split_map": {"station": ["max_long", "min_long", "avg_long", "total_long"]}, "schema_with_content": "station : lat (37.789756, 37.400240999999994, 37.788975), id (25, 67, 42), city (\"Palo Alto\", \"San Jose\", \"Mountain View\"), name (\"San Francisco Caltrain 2 (330 Townsend)\", \"Mountain View City Hall\", \"Park at Olive\"), dock_count (27, 19, 11), installation_date (\"8/16/2013\", \"8/12/2013\", \"8/19/2013\"), long (-122.391034, -122.16309299999999, -121.888979) | station_long : min_long (-122.391034, -122.16309299999999, -121.888979), avg_long (-122.391034, -122.16309299999999, -121.888979), max_long (-122.391034, -122.16309299999999, -121.888979), lat (37.789756, 37.400240999999994, 37.788975), total_long (-122.391034, -122.16309299999999, -121.888979), name (\"San Francisco Caltrain 2 (330 Townsend)\", \"Mountain View City Hall\", \"Park at Olive\"), id (25, 67, 42), dock_count (27, 19, 11), city (\"Palo Alto\", \"San Jose\", \"Mountain View\"), installation_date (\"8/16/2013\", \"8/12/2013\", \"8/19/2013\") | status : station_id (68, 55, 28), time (\"2015-06-02 13:05:03\", \"2015-06-02 13:27:02\", \"2015-06-02 14:10:02\"), docks_available (24, 4, 4), bikes_available (7, 9, 17) | trip : end_station_id (71, 63, 57), start_station_name (\"Embarcadero at Folsom\", \"Japantown\", \"Temporary Transbay Terminal (Howard at Beale)\"), zip_code (84060, 6067, 39), id (911635, 902668, 908365), bike_id (71, 678, 239), duration (1027, 1227, 337), start_station_id (47, 7, 9), end_station_name (\"San Antonio Caltrain Station\", \"Franklin at Maple\", \"Temporary Transbay Terminal (Howard at Beale)\"), start_date (\"8/24/2015 16:01\", \"8/27/2015 16:32\", \"8/26/2015 15:29\"), end_date (\"8/22/2015 11:07\", \"8/21/2015 19:17\", \"8/28/2015 8:20\"), subscription_type (\"Subscriber\", \"Customer\") | weather : max_humidity (76, 61, 84), precipitation_inches (0.19, 0.52, 0.99), max_gust_speed_mph (30, 24, 41), mean_sea_level_pressure_inches (30.12, 30.24, 30.18), mean_dew_point_f (21, 28, 58), min_sea_level_pressure_inches (30.19, 29.48, 29.9), date (\"3/26/2015\", \"10/23/2013\", \"3/25/2015\"), min_visibility_miles (3, 20, 6), min_dew_point_f (4, 57, 27), min_humidity (71, 61, 83), cloud_cover (0, 0, 4), min_temperature_f (58, 28, 75), max_sea_level_pressure_inches (30.22, 29.89, 30.12), mean_wind_speed_mph (15, 20, 20), mean_temperature_f (77, 63, 39), wind_dir_degrees (194, 1, 313), max_dew_point_f (50, 34, 47), zip_code (94107, 95113, 94063), events (\"Rain-Thunderstorm\", \"Fog\", \"Fog-Rain\"), mean_visibility_miles (13, 4, 7), max_wind_speed_mph (16, 22, \"\"), mean_humidity (64, 77, 49), max_visibility_miles (12, 7, 5), max_temperature_f (91, 75, 64)", "schema_without_content": "station : lat , id , city , name \", \"Mountain View City Hall\", \"Park at Olive\", dock_count , installation_date , long  | station_long : min_long , avg_long , max_long , lat , total_long , name \", \"Mountain View City Hall\", \"Park at Olive\", id , dock_count , city , installation_date  | status : station_id , time , docks_available , bikes_available  | trip : end_station_id , start_station_name \", zip_code , id , bike_id , duration , start_station_id , end_station_name \", start_date , end_date , subscription_type  | weather : max_humidity , precipitation_inches , max_gust_speed_mph , mean_sea_level_pressure_inches , mean_dew_point_f , min_sea_level_pressure_inches , date , min_visibility_miles , min_dew_point_f , min_humidity , cloud_cover , min_temperature_f , max_sea_level_pressure_inches , mean_wind_speed_mph , mean_temperature_f , wind_dir_degrees , max_dew_point_f , zip_code , events , mean_visibility_miles , max_wind_speed_mph , mean_humidity , max_visibility_miles , max_temperature_f "}, {"db_id": "bike_1", "query": "select avg_lat, (long)from station_lat where city = \"San Jose\"", "query_toks": ["SELECT", "avg", "(", "lat", ")", ",", "avg", "(", "long", ")", "FROM", "station", "WHERE", "city", "=", "``", "San", "Jose", "''"], "query_toks_no_value": ["select", "avg", "(", "lat", ")", ",", "avg", "(", "long", ")", "from", "station", "where", "city", "=", "value"], "question": "What is the average latitude and longitude in San Jose?", "question_toks": ["What", "is", "the", "average", "latitude", "and", "longitude", "in", "San", "Jose", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]], [5, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"San Jose\"", null]]}, "primary_key": {"station": "id"}, "orig_query": "select avg(lat), avg(long) from station where city = \"San Jose\"", "split_map": {"station": ["max_lat", "min_lat", "avg_lat", "total_lat"]}, "schema_with_content": "station : dock_count (19, 25, 11), long (-121.89561699999999, -122.418954, -121.89471499999999), installation_date (\"12/31/2013\", \"8/23/2013\", \"8/7/2013\"), id (75, 35, 38), lat (37.776617, 37.788446, 37.787152), city (\"Mountain View\", \"Redwood City\", \"Palo Alto\"), name (\"Santa Clara County Civic Center\", \"Temporary Transbay Terminal (Howard at Beale)\", \"Broadway St at Battery St\") | station_lat : name (\"Santa Clara County Civic Center\", \"Temporary Transbay Terminal (Howard at Beale)\", \"Broadway St at Battery St\"), total_lat (37.776617, 37.788446, 37.787152), min_lat (37.776617, 37.788446, 37.787152), id (75, 35, 38), avg_lat (37.776617, 37.788446, 37.787152), max_lat (37.776617, 37.788446, 37.787152), long (-121.89561699999999, -122.418954, -121.89471499999999), dock_count (19, 25, 11), city (\"Mountain View\", \"Redwood City\", \"Palo Alto\"), installation_date (\"12/31/2013\", \"8/23/2013\", \"8/7/2013\") | status : time (\"2015-06-02 12:52:02\", \"2015-06-02 14:16:02\", \"2015-06-02 14:40:02\"), station_id (74, 80, 37), bikes_available (13, 15, 7), docks_available (1, 9, 10) | trip : end_station_name (\"Harry Bridges Plaza (Ferry Building)\", \"Civic Center BART (7th at Market)\", \"California Ave Caltrain Station\"), end_station_id (64, 64, 83), duration (988, 2947, 107), end_date (\"8/24/2015 9:02\", \"8/27/2015 21:24\", \"8/28/2015 7:30\"), zip_code (94086, 90403, 94608), start_station_name (\"Broadway St at Battery St\", \"San Antonio Shopping Center\", \"Mountain View Caltrain Station\"), start_date (\"8/23/2015 18:19\", \"8/24/2015 18:44\", \"8/26/2015 21:58\"), subscription_type (\"Subscriber\", \"Customer\"), start_station_id (7, 57, 7), id (909871, 906826, 902490), bike_id (189, 40, 105) | weather : max_wind_speed_mph (0, 15, 31), max_humidity (72, 58, 54), max_sea_level_pressure_inches (30.27, 30.37, 30.22), max_temperature_f (78, 75, 71), min_dew_point_f (54, 55, 53), min_visibility_miles (0, \"\", 1), mean_sea_level_pressure_inches (30.39, 30.16, 30.13), max_visibility_miles (9, 15, 12), wind_dir_degrees (98, 99, 28), date (\"10/20/2014\", \"12/6/2013\", \"9/12/2013\"), max_dew_point_f (\"\", 29, 38), mean_temperature_f (57, 43, 73), cloud_cover (8, 7, 6), zip_code (94107, 94107, 94301), min_sea_level_pressure_inches (\"\", 30.22, 30.11), min_temperature_f (59, 60, 59), mean_dew_point_f (22, \"\", 30), mean_wind_speed_mph (10, 2, 6), max_gust_speed_mph (28, 20, 35), precipitation_inches (0.66, 0.74, 0.17), min_humidity (23, 69, 55), mean_humidity (80, 44, 81), mean_visibility_miles (18, 13, 8), events (\"\", \"Fog-Rain\", \"\")", "schema_without_content": "station : dock_count , long , installation_date , id , lat , city , name \", \"Broadway St at Battery St\" | station_lat : name \", \"Broadway St at Battery St\", total_lat , min_lat , id , avg_lat , max_lat , long , dock_count , city , installation_date  | status : time , station_id , bikes_available , docks_available  | trip : end_station_name \", \"Civic Center BART \", \"California Ave Caltrain Station\", end_station_id , duration , end_date , zip_code , start_station_name , start_date , subscription_type , start_station_id , id , bike_id  | weather : max_wind_speed_mph , max_humidity , max_sea_level_pressure_inches , max_temperature_f , min_dew_point_f , min_visibility_miles , mean_sea_level_pressure_inches , max_visibility_miles , wind_dir_degrees , date , max_dew_point_f , mean_temperature_f , cloud_cover , zip_code , min_sea_level_pressure_inches , min_temperature_f , mean_dew_point_f , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , min_humidity , mean_humidity , mean_visibility_miles , events "}, {"db_id": "bike_1", "query": "select (lat), avg_long from station_long where city = \"San Jose\"", "query_toks": ["SELECT", "avg", "(", "lat", ")", ",", "avg", "(", "long", ")", "FROM", "station", "WHERE", "city", "=", "``", "San", "Jose", "''"], "query_toks_no_value": ["select", "avg", "(", "lat", ")", ",", "avg", "(", "long", ")", "from", "station", "where", "city", "=", "value"], "question": "What is the average latitude and longitude in San Jose?", "question_toks": ["What", "is", "the", "average", "latitude", "and", "longitude", "in", "San", "Jose", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]], [5, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"San Jose\"", null]]}, "primary_key": {"station": "id"}, "orig_query": "select avg(lat), avg(long) from station where city = \"San Jose\"", "split_map": {"station": ["max_long", "min_long", "avg_long", "total_long"]}, "schema_with_content": "station : installation_date (\"8/6/2013\", \"8/20/2013\", \"2/20/2014\"), name (\"2nd at South Park\", \"Commercial at Montgomery\", \"Golden Gate at Polk\"), city (\"Redwood City\", \"Mountain View\", \"San Jose\"), id (64, 69, 58), long (-122.066553, -122.391034, -122.14280500000001), dock_count (19, 11, 15), lat (37.795001, 37.789756, 37.337391) | station_long : lat (37.795001, 37.789756, 37.337391), avg_long (-122.066553, -122.391034, -122.14280500000001), max_long (-122.066553, -122.391034, -122.14280500000001), total_long (-122.066553, -122.391034, -122.14280500000001), id (64, 69, 58), name (\"2nd at South Park\", \"Commercial at Montgomery\", \"Golden Gate at Polk\"), min_long (-122.066553, -122.391034, -122.14280500000001), dock_count (19, 11, 15), city (\"Redwood City\", \"Mountain View\", \"San Jose\"), installation_date (\"8/6/2013\", \"8/20/2013\", \"2/20/2014\") | status : time (\"2015-06-02 13:55:03\", \"2015-06-02 14:20:03\", \"2015-06-02 13:21:02\"), docks_available (19, 20, 6), bikes_available (10, 17, 9), station_id (73, 84, 37) | trip : bike_id (494, 215, 483), end_station_name (\"Washington at Kearny\", \"SJSU 4th at San Carlos\", \"Adobe on Almaden\"), zip_code (91344, 4901, 43302), start_station_id (16, 70, 56), id (910201, 912268, 904830), subscription_type (\"Subscriber\", \"Customer\"), duration (814, 641, 660), end_date (\"8/27/2015 10:11\", \"8/31/2015 14:14\", \"8/27/2015 21:48\"), start_station_name (\"University and Emerson\", \"Ryland Park\", \"Stanford in Redwood City\"), end_station_id (46, 9, 62), start_date (\"8/26/2015 13:26\", \"8/30/2015 10:00\", \"8/23/2015 12:30\") | weather : wind_dir_degrees (22, 265, 279), max_visibility_miles (9, 12, 6), max_temperature_f (74, 99, 76), mean_visibility_miles (15, 13, \"\"), max_sea_level_pressure_inches (30.29, 30.03, 30.44), min_dew_point_f (23, 58, 55), max_dew_point_f (33, 44, 23), precipitation_inches (0.04, 0.18, 0.41), cloud_cover (5, 3, \"\"), mean_temperature_f (74, 51, 47), events (\"Fog\", \"Rain-Thunderstorm\", \"Fog-Rain\"), mean_humidity (56, 56, 72), mean_wind_speed_mph (23, 7, 1), date (\"12/15/2013\", \"7/20/2014\", \"6/30/2014\"), min_temperature_f (51, 32, 51), max_humidity (63, 74, 68), min_sea_level_pressure_inches (29.95, 29.39, 29.97), max_wind_speed_mph (43, 26, 32), max_gust_speed_mph (15, 8, 17), zip_code (94063, 94301, 94041), mean_dew_point_f (41, 48, 30), min_humidity (14, 63, 36), min_visibility_miles (20, 8, 8), mean_sea_level_pressure_inches (30.38, 30.39, 29.43)", "schema_without_content": "station : installation_date , name , city , id , long , dock_count , lat  | station_long : lat , avg_long , max_long , total_long , id , name , min_long , dock_count , city , installation_date  | status : time , docks_available , bikes_available , station_id  | trip : bike_id , end_station_name , zip_code , start_station_id , id , subscription_type , duration , end_date , start_station_name , end_station_id , start_date  | weather : wind_dir_degrees , max_visibility_miles , max_temperature_f , mean_visibility_miles , max_sea_level_pressure_inches , min_dew_point_f , max_dew_point_f , precipitation_inches , cloud_cover , mean_temperature_f , events , mean_humidity , mean_wind_speed_mph , date , min_temperature_f , max_humidity , min_sea_level_pressure_inches , max_wind_speed_mph , max_gust_speed_mph , zip_code , mean_dew_point_f , min_humidity , min_visibility_miles , mean_sea_level_pressure_inches "}, {"db_id": "bike_1", "query": "select total_duration, max_duration from trip_duration where bike_id = 636", "query_toks": ["SELECT", "sum", "(", "duration", ")", ",", "max", "(", "duration", ")", "FROM", "trip", "WHERE", "bike_id", "=", "636"], "query_toks_no_value": ["select", "sum", "(", "duration", ")", ",", "max", "(", "duration", ")", "from", "trip", "where", "bike_id", "=", "value"], "question": "What is the total and maximum duration of trips with bike id 636?", "question_toks": ["What", "is", "the", "total", "and", "maximum", "duration", "of", "trips", "with", "bike", "id", "636", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], 636.0, null]]}, "primary_key": {"trip": "id"}, "orig_query": "select sum(duration), max(duration) from trip where bike_id = 636", "split_map": {"trip": ["max_duration", "min_duration", "avg_duration", "total_duration"]}, "schema_with_content": "station : id (35, 55, 76), name (\"San Pedro Square\", \"Post at Kearney\", \"Market at 4th\"), long (-122.408433, -121.89471499999999, -122.39997), city (\"Mountain View\", \"Mountain View\", \"Palo Alto\"), dock_count (27, 15, 23), installation_date (\"12/31/2013\", \"8/21/2013\", \"8/15/2013\"), lat (37.486078000000006, 37.389218, 37.333954999999996) | status : bikes_available (2, 3, 6), docks_available (7, 10, 16), time (\"2015-06-02 13:20:02\", \"2015-06-02 14:42:02\", \"2015-06-02 14:35:02\"), station_id (10, 51, 28) | trip : id (906598, 905365, 900969), end_date (\"8/27/2015 9:39\", \"8/24/2015 12:03\", \"8/24/2015 15:17\"), duration (408, 909, 1113), start_station_name (\"Palo Alto Caltrain Station\", \"San Francisco City Hall\", \"Post at Kearny\"), end_station_name (\"Embarcadero at Vallejo\", \"Rengstorff Avenue / California Street\", \"Arena Green / SAP Center\"), subscription_type (\"Subscriber\", \"Customer\"), end_station_id (8, 77, 11), start_station_id (12, 69, 10), zip_code (6878, 83730, 60137), bike_id (117, 14, 472), start_date (\"8/30/2015 16:23\", \"8/25/2015 18:40\", \"8/28/2015 18:24\") | trip_duration : total_duration (408, 909, 1113), min_duration (408, 909, 1113), id (906598, 905365, 900969), avg_duration (408, 909, 1113), max_duration (408, 909, 1113), start_date (\"8/30/2015 16:23\", \"8/25/2015 18:40\", \"8/28/2015 18:24\"), start_station_name (\"Palo Alto Caltrain Station\", \"San Francisco City Hall\", \"Post at Kearny\"), start_station_id (12, 69, 10), end_date (\"8/27/2015 9:39\", \"8/24/2015 12:03\", \"8/24/2015 15:17\"), end_station_name (\"Embarcadero at Vallejo\", \"Rengstorff Avenue / California Street\", \"Arena Green / SAP Center\"), end_station_id (8, 77, 11), bike_id (117, 14, 472), subscription_type (\"Subscriber\", \"Customer\"), zip_code (6878, 83730, 60137) | weather : max_temperature_f (81, 92, 80), min_sea_level_pressure_inches (29.64, 30.23, 29.51), max_gust_speed_mph (86, 30, 62), date (\"8/24/2015\", \"1/5/2014\", \"7/16/2015\"), cloud_cover (2, 6, 1), mean_dew_point_f (51, 58, 53), min_temperature_f (\"\", 57, 54), mean_humidity (33, 96, 44), max_sea_level_pressure_inches (30.34, \"\", 29.84), min_humidity (73, 50, 26), precipitation_inches (0.85, 0.42, 0.49), max_humidity (87, 60, 66), mean_temperature_f (81, 59, 76), min_visibility_miles (9, 7, 10), min_dew_point_f (25, 26, 39), wind_dir_degrees (59, 2772, 65), mean_visibility_miles (6, 4, 4), max_visibility_miles (20, 12, 16), mean_sea_level_pressure_inches (29.85, 30.09, 30.33), max_wind_speed_mph (41, 118, 13), zip_code (94063, 94107, 94107), mean_wind_speed_mph (4, 17, 5), max_dew_point_f (48, 43, 53), events (\"Rain\", \"\", \"\")", "schema_without_content": "station : id , name , long , city , dock_count , installation_date , lat  | status : bikes_available , docks_available , time , station_id  | trip : id , end_date , duration , start_station_name , end_station_name , subscription_type , end_station_id , start_station_id , zip_code , bike_id , start_date  | trip_duration : total_duration , min_duration , id , avg_duration , max_duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code  | weather : max_temperature_f , min_sea_level_pressure_inches , max_gust_speed_mph , date , cloud_cover , mean_dew_point_f , min_temperature_f , mean_humidity , max_sea_level_pressure_inches , min_humidity , precipitation_inches , max_humidity , mean_temperature_f , min_visibility_miles , min_dew_point_f , wind_dir_degrees , mean_visibility_miles , max_visibility_miles , mean_sea_level_pressure_inches , max_wind_speed_mph , zip_code , mean_wind_speed_mph , max_dew_point_f , events "}, {"db_id": "bike_1", "query": "select total_duration, max_duration from trip_duration where bike_id = 636", "query_toks": ["SELECT", "sum", "(", "duration", ")", ",", "max", "(", "duration", ")", "FROM", "trip", "WHERE", "bike_id", "=", "636"], "query_toks_no_value": ["select", "sum", "(", "duration", ")", ",", "max", "(", "duration", ")", "from", "trip", "where", "bike_id", "=", "value"], "question": "What is the total and maximum duration for all trips with the bike id 636?", "question_toks": ["What", "is", "the", "total", "and", "maximum", "duration", "for", "all", "trips", "with", "the", "bike", "id", "636", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], 636.0, null]]}, "primary_key": {"trip": "id"}, "orig_query": "select sum(duration), max(duration) from trip where bike_id = 636", "split_map": {"trip": ["max_duration", "min_duration", "avg_duration", "total_duration"]}, "schema_with_content": "station : lat (37.789625, 37.789756, 37.786305), id (7, 2, 59), installation_date (\"12/31/2013\", \"8/12/2013\", \"8/5/2013\"), city (\"San Francisco\", \"San Francisco\", \"Mountain View\"), dock_count (15, 15, 19), long (-122.066553, -122.39526000000001, -122.399051), name (\"San Jose Diridon Caltrain Station\", \"Howard at 2nd\", \"San Francisco Caltrain (Townsend at 4th)\") | status : docks_available (4, 12, 16), time (\"2015-06-02 14:01:02\", \"2015-06-02 14:44:02\", \"2015-06-02 13:43:03\"), bikes_available (14, 2, 9), station_id (63, 36, 36) | trip : zip_code (48118, 95476, 95124), end_date (\"8/28/2015 5:24\", \"8/29/2015 13:53\", \"8/31/2015 17:27\"), id (913140, 903393, 913419), start_date (\"8/27/2015 20:31\", \"8/25/2015 7:45\", \"8/25/2015 8:09\"), start_station_name (\"South Van Ness at Market\", \"San Jose City Hall\", \"Market at 4th\"), duration (274, 1241, 614), bike_id (384, 617, 331), end_station_name (\"Market at 10th\", \"San Pedro Square\", \"St James Park\"), end_station_id (8, 69, 46), start_station_id (51, 65, 21), subscription_type (\"Subscriber\", \"Customer\") | trip_duration : id (913140, 903393, 913419), avg_duration (274, 1241, 614), min_duration (274, 1241, 614), max_duration (274, 1241, 614), total_duration (274, 1241, 614), start_date (\"8/27/2015 20:31\", \"8/25/2015 7:45\", \"8/25/2015 8:09\"), start_station_name (\"South Van Ness at Market\", \"San Jose City Hall\", \"Market at 4th\"), start_station_id (51, 65, 21), end_date (\"8/28/2015 5:24\", \"8/29/2015 13:53\", \"8/31/2015 17:27\"), end_station_name (\"Market at 10th\", \"San Pedro Square\", \"St James Park\"), end_station_id (8, 69, 46), bike_id (384, 617, 331), subscription_type (\"Subscriber\", \"Customer\"), zip_code (48118, 95476, 95124) | weather : min_dew_point_f (44, 5, 46), mean_visibility_miles (5, 7, 6), max_visibility_miles (16, 9, 8), max_wind_speed_mph (12, 77, 19), min_sea_level_pressure_inches (29.6, 29.75, 29.95), mean_wind_speed_mph (12, \"\", 5), events (\"Fog-Rain\", \"Fog-Rain\", \"rain\"), date (\"8/16/2015\", \"2/6/2015\", \"12/23/2013\"), mean_humidity (55, 71, 26), wind_dir_degrees (267, 254, 313), min_visibility_miles (10, 6, 3), max_temperature_f (76, 72, 63), precipitation_inches (0.72, 0.64, 0.72), mean_temperature_f (49, 70, 42), max_dew_point_f (39, 60, 41), max_sea_level_pressure_inches (29.75, 30.18, 30.25), max_humidity (51, 69, 88), mean_sea_level_pressure_inches (30.32, 30.01, 30.18), min_humidity (78, 14, 69), min_temperature_f (48, 25, 31), mean_dew_point_f (27, 41, 47), zip_code (95113, 94041, 94301), max_gust_speed_mph (48, 19, 24), cloud_cover (3, 2, 6)", "schema_without_content": "station : lat , id , installation_date , city , dock_count , long , name \" | status : docks_available , time , bikes_available , station_id  | trip : zip_code , end_date , id , start_date , start_station_name , duration , bike_id , end_station_name , end_station_id , start_station_id , subscription_type  | trip_duration : id , avg_duration , min_duration , max_duration , total_duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code  | weather : min_dew_point_f , mean_visibility_miles , max_visibility_miles , max_wind_speed_mph , min_sea_level_pressure_inches , mean_wind_speed_mph , events , date , mean_humidity , wind_dir_degrees , min_visibility_miles , max_temperature_f , precipitation_inches , mean_temperature_f , max_dew_point_f , max_sea_level_pressure_inches , max_humidity , mean_sea_level_pressure_inches , min_humidity , min_temperature_f , mean_dew_point_f , zip_code , max_gust_speed_mph , cloud_cover "}, {"db_id": "bike_1", "query": "select avg_long from station_long where id not in (select station_id from status group by station_id having max(bikes_available)> 10)", "query_toks": ["SELECT", "avg", "(", "long", ")", "FROM", "station", "WHERE", "id", "NOT", "IN", "(", "SELECT", "station_id", "FROM", "status", "GROUP", "BY", "station_id", "HAVING", "max", "(", "bikes_available", ")", ">", "10", ")"], "query_toks_no_value": ["select", "avg", "(", "long", ")", "from", "station", "where", "id", "not", "in", "(", "select", "station_id", "from", "status", "group", "by", "station_id", "having", "max", "(", "bikes_available", ")", ">", "value", ")"], "question": "What is the average longitude of stations that never had bike availability more than 10?", "question_toks": ["What", "is", "the", "average", "longitude", "of", "stations", "that", "never", "had", "bike", "availability", "more", "than", "10", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [1, 9, false], null], 10.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"station": "id"}, "orig_query": "select avg(long) from station where id not in (select station_id from status group by station_id having max(bikes_available) > 10)", "split_map": {"station": ["max_long", "min_long", "avg_long", "total_long"]}, "schema_with_content": "station : lat (37.785299, 37.487615999999996, 37.795392), installation_date (\"8/14/2013\", \"2/20/2014\", \"8/16/2013\"), id (69, 67, 32), long (-122.083678, -122.099076, -122.40476699999999), name (\"California Ave Caltrain Station\", \"MLK Library\", \"San Jose Civic Center\"), city (\"San Jose\", \"Palo Alto\", \"Palo Alto\"), dock_count (25, 27, 15) | station_long : lat (37.785299, 37.487615999999996, 37.795392), total_long (-122.083678, -122.099076, -122.40476699999999), max_long (-122.083678, -122.099076, -122.40476699999999), avg_long (-122.083678, -122.099076, -122.40476699999999), name (\"California Ave Caltrain Station\", \"MLK Library\", \"San Jose Civic Center\"), min_long (-122.083678, -122.099076, -122.40476699999999), id (69, 67, 32), dock_count (25, 27, 15), city (\"San Jose\", \"Palo Alto\", \"Palo Alto\"), installation_date (\"8/14/2013\", \"2/20/2014\", \"8/16/2013\") | status : docks_available (10, 18, 10), station_id (51, 9, 69), time (\"2015-06-02 14:11:02\", \"2015-06-02 14:47:02\", \"2015-06-02 14:11:02\"), bikes_available (9, 2, 8) | trip : zip_code (95130, 95125, 60657), id (910275, 904948, 911000), start_station_name (\"Redwood City Medical Center\", \"San Antonio Shopping Center\", \"2nd at Townsend\"), subscription_type (\"Subscriber\", \"Customer\"), end_station_id (3, 62, 33), end_station_name (\"San Jose Diridon Caltrain Station\", \"Market at 4th\", \"MLK Library\"), start_date (\"8/29/2015 10:56\", \"8/21/2015 22:31\", \"8/24/2015 12:04\"), duration (1026, 217, 83888), start_station_id (8, 64, 5), bike_id (618, 284, 444), end_date (\"8/30/2015 15:15\", \"8/25/2015 15:14\", \"8/24/2015 19:34\") | weather : max_temperature_f (94, 57, 54), date (\"11/8/2014\", \"6/5/2014\", \"5/14/2015\"), min_humidity (46, \"\", 66), mean_dew_point_f (43, 40, 49), max_dew_point_f (47, 47, 49), mean_temperature_f (47, 66, 60), wind_dir_degrees (55, 148, 38), mean_sea_level_pressure_inches (29.77, 29.79, 30.09), mean_wind_speed_mph (22, 16, 13), min_visibility_miles (20, 3, \"\"), max_gust_speed_mph (7, 18, 9), max_wind_speed_mph (39, 120, 15), min_sea_level_pressure_inches (30, 29.36, 29.51), max_humidity (90, 70, 61), events (\"\", \"Fog\", \"Rain\"), min_temperature_f (54, 62, 63), max_sea_level_pressure_inches (30.31, 30.16, \"\"), zip_code (94301, 95113, 94301), max_visibility_miles (8, 12, \"\"), min_dew_point_f (48, 31, 29), mean_humidity (44, 40, 65), cloud_cover (7, 3, 2), precipitation_inches (0.68, 0.65, 0.32), mean_visibility_miles (7, \"\", 17)", "schema_without_content": "station : lat , installation_date , id , long , name , city , dock_count  | station_long : lat , total_long , max_long , avg_long , name , min_long , id , dock_count , city , installation_date  | status : docks_available , station_id , time , bikes_available  | trip : zip_code , id , start_station_name , subscription_type , end_station_id , end_station_name , start_date , duration , start_station_id , bike_id , end_date  | weather : max_temperature_f , date , min_humidity , mean_dew_point_f , max_dew_point_f , mean_temperature_f , wind_dir_degrees , mean_sea_level_pressure_inches , mean_wind_speed_mph , min_visibility_miles , max_gust_speed_mph , max_wind_speed_mph , min_sea_level_pressure_inches , max_humidity , events , min_temperature_f , max_sea_level_pressure_inches , zip_code , max_visibility_miles , min_dew_point_f , mean_humidity , cloud_cover , precipitation_inches , mean_visibility_miles "}, {"db_id": "bike_1", "query": "select avg_long from station_long where id not in (select station_id from status group by station_id having max(bikes_available)> 10)", "query_toks": ["SELECT", "avg", "(", "long", ")", "FROM", "station", "WHERE", "id", "NOT", "IN", "(", "SELECT", "station_id", "FROM", "status", "GROUP", "BY", "station_id", "HAVING", "max", "(", "bikes_available", ")", ">", "10", ")"], "query_toks_no_value": ["select", "avg", "(", "long", ")", "from", "station", "where", "id", "not", "in", "(", "select", "station_id", "from", "status", "group", "by", "station_id", "having", "max", "(", "bikes_available", ")", ">", "value", ")"], "question": "What is the mean longitude for all stations that have never had more than 10 bikes available?", "question_toks": ["What", "is", "the", "mean", "longitude", "for", "all", "stations", "that", "have", "never", "had", "more", "than", "10", "bikes", "available", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [1, 9, false], null], 10.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"station": "id"}, "orig_query": "select avg(long) from station where id not in (select station_id from status group by station_id having max(bikes_available) > 10)", "split_map": {"station": ["max_long", "min_long", "avg_long", "total_long"]}, "schema_with_content": "station : city (\"Palo Alto\", \"San Jose\", \"Redwood City\"), installation_date (\"8/19/2013\", \"8/12/2013\", \"8/12/2013\"), dock_count (15, 27, 23), name (\"Washington at Kearney\", \"Adobe on Almaden\", \"Golden Gate at Polk\"), lat (37.798522, 37.79728, 37.795392), long (-122.411748, -121.88993700000002, -122.40496599999999), id (68, 45, 7) | station_long : id (68, 45, 7), name (\"Washington at Kearney\", \"Adobe on Almaden\", \"Golden Gate at Polk\"), lat (37.798522, 37.79728, 37.795392), total_long (-122.411748, -121.88993700000002, -122.40496599999999), max_long (-122.411748, -121.88993700000002, -122.40496599999999), avg_long (-122.411748, -121.88993700000002, -122.40496599999999), min_long (-122.411748, -121.88993700000002, -122.40496599999999), dock_count (15, 27, 23), city (\"Palo Alto\", \"San Jose\", \"Redwood City\"), installation_date (\"8/19/2013\", \"8/12/2013\", \"8/12/2013\") | status : time (\"2015-06-02 14:33:02\", \"2015-06-02 13:34:02\", \"2015-06-02 13:57:02\"), bikes_available (7, 11, 7), station_id (72, 26, 49), docks_available (24, 20, 13) | trip : start_station_id (57, 51, 33), id (907665, 905915, 904047), end_station_name (\"Clay at Battery\", \"Yerba Buena Center of the Arts (3rd @ Howard)\", \"Ryland Park\"), start_station_name (\"Santa Clara County Civic Center\", \"San Jose City Hall\", \"Japantown\"), duration (899, 169, 1577), bike_id (621, 559, 548), start_date (\"8/25/2015 6:19\", \"8/30/2015 20:12\", \"8/27/2015 8:00\"), subscription_type (\"Subscriber\", \"Customer\"), zip_code (94568, 94920, 94598), end_station_id (21, 59, 32), end_date (\"8/31/2015 18:31\", \"8/25/2015 12:53\", \"8/26/2015 19:27\") | weather : min_dew_point_f (35, 29, 50), min_visibility_miles (3, 4, 7), max_gust_speed_mph (9, 49, 7), max_sea_level_pressure_inches (30.16, 30.4, 30.15), mean_sea_level_pressure_inches (30.11, 29.75, 30.31), cloud_cover (1, 1, 5), max_dew_point_f (46, 25, 32), date (\"4/17/2014\", \"11/23/2013\", \"3/6/2014\"), max_temperature_f (62, 84, 67), max_wind_speed_mph (7, 86, 77), mean_wind_speed_mph (21, 14, 13), zip_code (95113, 95113, 94107), mean_temperature_f (78, 72, 75), max_humidity (72, 94, 90), precipitation_inches (0.47, 1.43, 0.15), mean_humidity (51, 71, 46), min_temperature_f (68, 42, 63), mean_visibility_miles (6, 10, 9), events (\"rain\", \"Rain-Thunderstorm\", \"Fog-Rain\"), min_sea_level_pressure_inches (30.27, 30.12, 29.98), wind_dir_degrees (341, 59, 315), mean_dew_point_f (48, 50, 51), min_humidity (13, 40, 73), max_visibility_miles (5, 5, 5)", "schema_without_content": "station : city , installation_date , dock_count , name , lat , long , id  | station_long : id , name , lat , total_long , max_long , avg_long , min_long , dock_count , city , installation_date  | status : time , bikes_available , station_id , docks_available  | trip : start_station_id , id , end_station_name \", \"Ryland Park\", start_station_name , duration , bike_id , start_date , subscription_type , zip_code , end_station_id , end_date  | weather : min_dew_point_f , min_visibility_miles , max_gust_speed_mph , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , cloud_cover , max_dew_point_f , date , max_temperature_f , max_wind_speed_mph , mean_wind_speed_mph , zip_code , mean_temperature_f , max_humidity , precipitation_inches , mean_humidity , min_temperature_f , mean_visibility_miles , events , min_sea_level_pressure_inches , wind_dir_degrees , mean_dew_point_f , min_humidity , max_visibility_miles "}, {"db_id": "twitter_1", "query": "select avg_followers from user_profiles_followers where uid not in (select uid from tweets)", "query_toks": ["SELECT", "avg", "(", "followers", ")", "FROM", "user_profiles", "WHERE", "UID", "NOT", "IN", "(", "SELECT", "UID", "FROM", "tweets", ")"], "query_toks_no_value": ["select", "avg", "(", "followers", ")", "from", "user_profiles", "where", "uid", "not", "in", "(", "select", "uid", "from", "tweets", ")"], "question": "Find the average number of followers for the users who do not have any tweet.", "question_toks": ["Find", "the", "average", "number", "of", "followers", "for", "the", "users", "who", "do", "not", "have", "any", "tweet", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 11, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 7, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"user_profiles": "uid"}, "orig_query": "select avg(followers) from user_profiles where uid not in (select uid from tweets)", "split_map": {"user_profiles": ["max_followers", "min_followers", "avg_followers", "total_followers"]}, "schema_with_content": "follows : f2 (4, 1, 1), f1 (5, 2, 5) | tweets : id (8, 2, 9), createdate (\"2018-03-09 20:00:14\", \"2018-03-09 20:01:02\", \"2018-03-12 02:30:30\"), text (\"I love my new boyfriend.\", \"I love my new boyfriend.\", \"I had a pretty rough time during the last couple of weeks\"), uid (5, 3, 5) | user_profiles : followers (100, 35425845, 6662425), uid (2, 7, 5), name (\"Iron Man\", \"Celine Dion\", \"Celine Dion\"), partitionid (5, 2, 2), email (\"susan@gmail.com\n\", \"bw@superhero.com\", \"cd@superstar.com\") | user_profiles_followers : total_followers (100, 35425845, 6662425), email (\"susan@gmail.com\n\", \"bw@superhero.com\", \"cd@superstar.com\"), max_followers (100, 35425845, 6662425), min_followers (100, 35425845, 6662425), uid (2, 7, 5), partitionid (5, 2, 2), name (\"Iron Man\", \"Celine Dion\", \"Celine Dion\"), avg_followers (100, 35425845, 6662425)", "schema_without_content": "follows : f2 , f1  | tweets : id , createdate , text , uid  | user_profiles : followers , uid , name , partitionid , email  | user_profiles_followers : total_followers , email , max_followers , min_followers , uid , partitionid , name , avg_followers "}, {"db_id": "twitter_1", "query": "select avg_followers from user_profiles_followers where uid in (select uid from tweets)", "query_toks": ["SELECT", "avg", "(", "followers", ")", "FROM", "user_profiles", "WHERE", "UID", "IN", "(", "SELECT", "UID", "FROM", "tweets", ")"], "query_toks_no_value": ["select", "avg", "(", "followers", ")", "from", "user_profiles", "where", "uid", "in", "(", "select", "uid", "from", "tweets", ")"], "question": "Find the average number of followers for the users who had some tweets.", "question_toks": ["Find", "the", "average", "number", "of", "followers", "for", "the", "users", "who", "had", "some", "tweets", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 7, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"user_profiles": "uid"}, "orig_query": "select avg(followers) from user_profiles where uid in (select uid from tweets)", "split_map": {"user_profiles": ["max_followers", "min_followers", "avg_followers", "total_followers"]}, "schema_with_content": "follows : f1 (7, 3, 7), f2 (5, 1, 5) | tweets : text (\"I had a pretty rough time during the last couple of weeks\", \"My company is hiring interns.\", \"Oh, I only have a few fans.\"), id (7, 5, 5), createdate (\"2018-03-09 20:00:14\", \"2018-03-09 20:01:02\", \"2018-03-12 02:30:30\"), uid (6, 5, 5) | user_profiles : partitionid (10, 2, 10), email (\"bw@superhero.com\", \"susan@gmail.com\n\", \"ts@superstar.com\n\"), name (\"Celine Dion\", \"Susan\", \"Susan\"), followers (6662425, 890, 35425845), uid (1, 2, 5) | user_profiles_followers : uid (1, 2, 5), max_followers (6662425, 890, 35425845), min_followers (6662425, 890, 35425845), email (\"bw@superhero.com\", \"susan@gmail.com\n\", \"ts@superstar.com\n\"), total_followers (6662425, 890, 35425845), partitionid (10, 2, 10), avg_followers (6662425, 890, 35425845), name (\"Celine Dion\", \"Susan\", \"Susan\")", "schema_without_content": "follows : f1 , f2  | tweets : text , id , createdate , uid  | user_profiles : partitionid , email , name , followers , uid  | user_profiles_followers : uid , max_followers , min_followers , email , total_followers , partitionid , avg_followers , name "}, {"db_id": "twitter_1", "query": "select max_followers, total_followers from user_profiles_followers", "query_toks": ["SELECT", "max", "(", "followers", ")", ",", "sum", "(", "followers", ")", "FROM", "user_profiles"], "query_toks_no_value": ["select", "max", "(", "followers", ")", ",", "sum", "(", "followers", ")", "from", "user_profiles"], "question": "Find the maximum and total number of followers of all users.", "question_toks": ["Find", "the", "maximum", "and", "total", "number", "of", "followers", "of", "all", "users", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 11, false], null]], [4, [0, [0, 11, false], null]]]], "union": null, "where": []}, "primary_key": {"user_profiles": "uid"}, "orig_query": "select max(followers), sum(followers) from user_profiles", "split_map": {"user_profiles": ["max_followers", "min_followers", "avg_followers", "total_followers"]}, "schema_with_content": "follows : f2 (5, 5, 6), f1 (1, 1, 1) | tweets : id (7, 6, 8), uid (1, 3, 5), text (\"Oh, I only have a few fans.\", \"Oh, I only have a few fans.\", \"My company is hiring interns.\"), createdate (\"2018-03-09 20:00:14\", \"2018-03-09 20:01:02\", \"2018-03-12 02:30:30\") | user_profiles : partitionid (23, 23, 1), uid (5, 2, 3), followers (6662425, 35425845, 100), name (\"Mary\", \"Celine Dion\", \"Iron Man\"), email (\"ts@richest.com\", \"np@superstar.com\", \"np@superstar.com\") | user_profiles_followers : max_followers (6662425, 35425845, 100), min_followers (6662425, 35425845, 100), name (\"Mary\", \"Celine Dion\", \"Iron Man\"), uid (5, 2, 3), avg_followers (6662425, 35425845, 100), total_followers (6662425, 35425845, 100), partitionid (23, 23, 1), email (\"ts@richest.com\", \"np@superstar.com\", \"np@superstar.com\")", "schema_without_content": "follows : f2 , f1  | tweets : id , uid , text , createdate  | user_profiles : partitionid , uid , followers , name , email  | user_profiles_followers : max_followers , min_followers , name , uid , avg_followers , total_followers , partitionid , email "}, {"db_id": "product_catalog", "query": "select avg_price_in_euros, min_price_in_euros from catalog_contents_price_in_euros", "query_toks": ["SELECT", "avg", "(", "price_in_euros", ")", ",", "min", "(", "price_in_euros", ")", "FROM", "catalog_contents"], "query_toks_no_value": ["select", "avg", "(", "price_in_euros", ")", ",", "min", "(", "price_in_euros", ")", "from", "catalog_contents"], "question": "What are the average and minimum price (in Euro) of all products?", "question_toks": ["What", "are", "the", "average", "and", "minimum", "price", "(", "in", "Euro", ")", "of", "all", "products", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 20, false], null]], [2, [0, [0, 20, false], null]]]], "union": null, "where": []}, "primary_key": {"catalog_contents": "catalog_entry_id"}, "orig_query": "select avg(price_in_euros), min(price_in_euros) from catalog_contents", "split_map": {"catalog_contents": ["max_price_in_euros", "min_price_in_euros", "avg_price_in_euros", "total_price_in_euros"]}, "schema_with_content": "attribute_definitions : attribute_name (\"Yellow\", \"Sweet\", \"Green\"), attribute_id (2, 4, 3), attribute_data_type (\"Bool\") | catalogs : catalog_publisher (\"Grady & Kautzer\", \"Murray Coffee shop\", \"Lidl\"), catalog_name (\"Latte\", \"Chocolate\", \"Jam\"), date_of_publication (\"2013-03-15 05:09:17\", \"2013-03-15 05:09:17\", \"2012-04-13 06:37:09\"), date_of_latest_revision (\"2017-03-30 09:15:37\", \"2017-03-30 09:15:37\", \"2017-12-04 06:48:13\"), catalog_id (2, 4, 1) | catalog_structure : catalog_level_number (1, 8, 9), catalog_level_name (\"Category\", \"Sub-Category\", \"Product\"), catalog_id (1, 2, 8) | catalog_contents : next_entry_id (1, 6, 1), height (\"7\", \"2\", \"5\"), width (\"5\", \"6\", \"3\"), capacity (\"4\", \"4\", \"4\"), parent_entry_id (5, 5, 7), previous_entry_id (6, 8, 3), catalog_entry_id (5, 10, 5), catalog_entry_name (\"Wanglaoji\", \"Wanglaoji\", \"Ginger Beer\"), length (\"6\", \"4\", \"7\"), price_in_dollars (475.79, 745.02, 667.89), price_in_pounds (172.17, 371.9, 110.32), catalog_level_number (1, 8, 9), price_in_euros (510.32, 457.4, 441.82), product_stock_number (\"49 jg\", \"89 cp\", \"15 mr\") | catalog_contents_price_in_euros : avg_price_in_euros (510.32, 457.4, 441.82), product_stock_number (\"49 jg\", \"89 cp\", \"15 mr\"), min_price_in_euros (510.32, 457.4, 441.82), catalog_entry_id (5, 10, 5), catalog_entry_name (\"Wanglaoji\", \"Wanglaoji\", \"Ginger Beer\"), next_entry_id (1, 6, 1), max_price_in_euros (510.32, 457.4, 441.82), previous_entry_id (6, 8, 3), total_price_in_euros (510.32, 457.4, 441.82), price_in_dollars (475.79, 745.02, 667.89), parent_entry_id (5, 5, 7), catalog_level_number (1, 8, 9), price_in_pounds (172.17, 371.9, 110.32), capacity (\"4\", \"4\", \"4\"), length (\"6\", \"4\", \"7\"), height (\"7\", \"2\", \"5\"), width (\"5\", \"6\", \"3\") | catalog_contents_additional_attributes : attribute_id (4, 1, 3), catalog_level_number (8, 9, 1), attribute_value (\"1\", \"0\"), catalog_entry_id (4, 8, 11)", "schema_without_content": "attribute_definitions : attribute_name , attribute_id , attribute_data_type  | catalogs : catalog_publisher , catalog_name , date_of_publication , date_of_latest_revision , catalog_id  | catalog_structure : catalog_level_number , catalog_level_name , catalog_id  | catalog_contents : next_entry_id , height , width , capacity , parent_entry_id , previous_entry_id , catalog_entry_id , catalog_entry_name , length , price_in_dollars , price_in_pounds , catalog_level_number , price_in_euros , product_stock_number  | catalog_contents_price_in_euros : avg_price_in_euros , product_stock_number , min_price_in_euros , catalog_entry_id , catalog_entry_name , next_entry_id , max_price_in_euros , previous_entry_id , total_price_in_euros , price_in_dollars , parent_entry_id , catalog_level_number , price_in_pounds , capacity , length , height , width  | catalog_contents_additional_attributes : attribute_id , catalog_level_number , attribute_value , catalog_entry_id "}, {"db_id": "product_catalog", "query": "select avg_price_in_euros, min_price_in_euros from catalog_contents_price_in_euros", "query_toks": ["SELECT", "avg", "(", "price_in_euros", ")", ",", "min", "(", "price_in_euros", ")", "FROM", "catalog_contents"], "query_toks_no_value": ["select", "avg", "(", "price_in_euros", ")", ",", "min", "(", "price_in_euros", ")", "from", "catalog_contents"], "question": "Give me the average and minimum price (in Euro) of the products.", "question_toks": ["Give", "me", "the", "average", "and", "minimum", "price", "(", "in", "Euro", ")", "of", "the", "products", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 20, false], null]], [2, [0, [0, 20, false], null]]]], "union": null, "where": []}, "primary_key": {"catalog_contents": "catalog_entry_id"}, "orig_query": "select avg(price_in_euros), min(price_in_euros) from catalog_contents", "split_map": {"catalog_contents": ["max_price_in_euros", "min_price_in_euros", "avg_price_in_euros", "total_price_in_euros"]}, "schema_with_content": "attribute_definitions : attribute_name (\"Green\", \"Yellow\", \"Sweet\"), attribute_id (4, 1, 3), attribute_data_type (\"Bool\") | catalogs : date_of_latest_revision (\"2017-03-30 09:15:37\", \"2017-09-26 12:10:36\", \"2017-10-26 01:16:51\"), date_of_publication (\"2013-03-15 05:09:17\", \"2012-11-27 19:29:22\", \"2012-11-27 19:29:22\"), catalog_publisher (\"Koepp-Rutherford handmade chocolate store\", \"Grady & Kautzer\", \"Murray Coffee shop\"), catalog_name (\"Chocolate\", \"Lemonade\", \"Coco powder\"), catalog_id (7, 5, 1) | catalog_structure : catalog_level_number (1, 8, 9), catalog_id (1, 2, 8), catalog_level_name (\"Category\", \"Sub-Category\", \"Product\") | catalog_contents : length (\"5\", \"5\", \"4\"), price_in_pounds (172.17, 331.43, 497.4), width (\"6\", \"7\", \"5\"), price_in_dollars (777.41, 415.92, 952.37), price_in_euros (457.4, 590.11, 498.62), next_entry_id (3, 8, 8), product_stock_number (\"26 op\", \"24 ec\", \"15 mr\"), capacity (\"7\", \"7\", \"7\"), parent_entry_id (3, 5, 5), previous_entry_id (8, 5, 8), catalog_entry_name (\"Diet Pepsi\", \"Wanglaoji\", \"Root beer\"), catalog_level_number (1, 8, 9), catalog_entry_id (6, 7, 8), height (\"7\", \"7\", \"4\") | catalog_contents_price_in_euros : price_in_dollars (777.41, 415.92, 952.37), catalog_level_number (1, 8, 9), next_entry_id (3, 8, 8), max_price_in_euros (457.4, 590.11, 498.62), parent_entry_id (3, 5, 5), catalog_entry_id (6, 7, 8), avg_price_in_euros (457.4, 590.11, 498.62), catalog_entry_name (\"Diet Pepsi\", \"Wanglaoji\", \"Root beer\"), previous_entry_id (8, 5, 8), total_price_in_euros (457.4, 590.11, 498.62), product_stock_number (\"26 op\", \"24 ec\", \"15 mr\"), min_price_in_euros (457.4, 590.11, 498.62), price_in_pounds (172.17, 331.43, 497.4), capacity (\"7\", \"7\", \"7\"), length (\"5\", \"5\", \"4\"), height (\"7\", \"7\", \"4\"), width (\"6\", \"7\", \"5\") | catalog_contents_additional_attributes : attribute_value (\"1\", \"0\"), catalog_level_number (8, 9, 1), attribute_id (4, 4, 4), catalog_entry_id (2, 5, 2)", "schema_without_content": "attribute_definitions : attribute_name , attribute_id , attribute_data_type  | catalogs : date_of_latest_revision , date_of_publication , catalog_publisher , catalog_name , catalog_id  | catalog_structure : catalog_level_number , catalog_id , catalog_level_name  | catalog_contents : length , price_in_pounds , width , price_in_dollars , price_in_euros , next_entry_id , product_stock_number , capacity , parent_entry_id , previous_entry_id , catalog_entry_name , catalog_level_number , catalog_entry_id , height  | catalog_contents_price_in_euros : price_in_dollars , catalog_level_number , next_entry_id , max_price_in_euros , parent_entry_id , catalog_entry_id , avg_price_in_euros , catalog_entry_name , previous_entry_id , total_price_in_euros , product_stock_number , min_price_in_euros , price_in_pounds , capacity , length , height , width  | catalog_contents_additional_attributes : attribute_value , catalog_level_number , attribute_id , catalog_entry_id "}, {"db_id": "flight_1", "query": "select min_distance, avg_distance, max_distance from aircraft_distance", "query_toks": ["SELECT", "min", "(", "distance", ")", ",", "avg", "(", "distance", ")", ",", "max", "(", "distance", ")", "FROM", "Aircraft"], "query_toks_no_value": ["select", "min", "(", "distance", ")", ",", "avg", "(", "distance", ")", ",", "max", "(", "distance", ")", "from", "aircraft"], "question": "What is the minimum, average, and maximum distance of all aircrafts.", "question_toks": ["What", "is", "the", "minimum", ",", "average", ",", "and", "maximum", "distance", "of", "all", "aircrafts", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 11, false], null]], [5, [0, [0, 11, false], null]], [1, [0, [0, 11, false], null]]]], "union": null, "where": []}, "primary_key": {"aircraft": "aid"}, "orig_query": "select min(distance), avg(distance), max(distance) from aircraft", "split_map": {"aircraft": ["max_distance", "min_distance", "avg_distance", "total_distance"]}, "schema_with_content": "flight : aid (1, 5, 9), destination (\"Honolulu\", \"Boston\", \"Honolulu\"), distance (2606, 802, 2606), origin (\"Los Angeles\", \"Chicago\"), price (182, 375.23, 780.99), departure_date (\"04/12/2005 09:00\", \"04/12/2005 08:32\", \"04/12/2005 12:45\"), flno (7, 13, 99), arrival_date (\"04/12/2005 10:03\", \"04/12/2005 11:10\", \"04/12/2005 09:40\") | aircraft : name (\"Lockheed L1011\", \"Boeing 737-800\", \"Boeing 767-400ER\"), aid (11, 2, 10), distance (2128, 1805, 4103) | aircraft_distance : avg_distance (2128, 1805, 4103), name (\"Lockheed L1011\", \"Boeing 737-800\", \"Boeing 767-400ER\"), min_distance (2128, 1805, 4103), max_distance (2128, 1805, 4103), total_distance (2128, 1805, 4103), aid (11, 2, 10) | employee : name (\"George Wright\", \"Donald King\", \"Robert Brown\"), salary (48250, 23980, 105743), eid (254099823, 274878974, 556784565) | certificate : eid (274878974, 159542516, 355548984), aid (10, 9, 6)", "schema_without_content": "flight : aid , destination , distance , origin , price , departure_date , flno , arrival_date  | aircraft : name , aid , distance  | aircraft_distance : avg_distance , name , min_distance , max_distance , total_distance , aid  | employee : name , salary , eid  | certificate : eid , aid "}, {"db_id": "flight_1", "query": "select min_distance, avg_distance, max_distance from aircraft_distance", "query_toks": ["SELECT", "min", "(", "distance", ")", ",", "avg", "(", "distance", ")", ",", "max", "(", "distance", ")", "FROM", "Aircraft"], "query_toks_no_value": ["select", "min", "(", "distance", ")", ",", "avg", "(", "distance", ")", ",", "max", "(", "distance", ")", "from", "aircraft"], "question": "Return the minimum, average and maximum distances traveled across all aircrafts.", "question_toks": ["Return", "the", "minimum", ",", "average", "and", "maximum", "distances", "traveled", "across", "all", "aircrafts", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 11, false], null]], [5, [0, [0, 11, false], null]], [1, [0, [0, 11, false], null]]]], "union": null, "where": []}, "primary_key": {"aircraft": "aid"}, "orig_query": "select min(distance), avg(distance), max(distance) from aircraft", "split_map": {"aircraft": ["max_distance", "min_distance", "avg_distance", "total_distance"]}, "schema_with_content": "flight : destination (\"Dallas\", \"Sydney\", \"Boston\"), aid (9, 10, 3), flno (7, 99, 346), price (375.23, 202.45, 425.98), origin (\"Los Angeles\", \"Chicago\"), distance (1251, 1251, 1749), departure_date (\"04/12/2005 07:03\", \"04/12/2005 09:30\", \"04/12/2005 08:32\"), arrival_date (\"04/12/2005 11:15\", \"04/12/2005 03:55\", \"04/12/2005 03:55\") | aircraft : distance (6441, 6441, 6900), aid (12, 8, 8), name (\"Lockheed L1011\", \"Tupolev 154\", \"Boeing 777-300\") | aircraft_distance : aid (12, 8, 8), name (\"Lockheed L1011\", \"Tupolev 154\", \"Boeing 777-300\"), avg_distance (6441, 6441, 6900), total_distance (6441, 6441, 6900), max_distance (6441, 6441, 6900), min_distance (6441, 6441, 6900) | employee : salary (23980, 84476, 120433), eid (159542516, 310454876, 556784565), name (\"Chad Stewart\", \"Lisa Walker\", \"Angela Martinez\") | certificate : aid (11, 13, 4), eid (90873519, 574489457, 11564812)", "schema_without_content": "flight : destination , aid , flno , price , origin , distance , departure_date , arrival_date  | aircraft : distance , aid , name  | aircraft_distance : aid , name , avg_distance , total_distance , max_distance , min_distance  | employee : salary , eid , name  | certificate : aid , eid "}, {"db_id": "flight_1", "query": "select avg_salary, max_salary from employee_salary", "query_toks": ["SELECT", "avg", "(", "salary", ")", ",", "max", "(", "salary", ")", "FROM", "Employee"], "query_toks_no_value": ["select", "avg", "(", "salary", ")", ",", "max", "(", "salary", ")", "from", "employee"], "question": "What is average and maximum salary of all employees.", "question_toks": ["What", "is", "average", "and", "maximum", "salary", "of", "all", "employees", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]], [1, [0, [0, 14, false], null]]]], "union": null, "where": []}, "primary_key": {"employee": "eid"}, "orig_query": "select avg(salary), max(salary) from employee", "split_map": {"employee": ["max_salary", "min_salary", "avg_salary", "total_salary"]}, "schema_with_content": "flight : arrival_date (\"04/12/2005 11:15\", \"04/12/2005 09:40\", \"04/12/2005 03:18\"), distance (2308, 5478, 2308), price (278.56, 235.98, 182), departure_date (\"04/12/2005 08:32\", \"04/12/2005 09:00\", \"04/12/2005 06:30\"), origin (\"Los Angeles\", \"Chicago\"), aid (5, 1, 2), destination (\"Washington D.C.\", \"Honolulu\", \"Chicago\"), flno (99, 346, 68) | aircraft : name (\"Schwitzer 2-33\", \"Boeing 777-300\", \"Piper Archer III\"), distance (2128, 6900, 1504), aid (3, 10, 2) | employee : eid (142519864, 274878974, 11564812), salary (32021, 48250, 48250), name (\"Angela Martinez\", \"Donald King\", \"Larry West\") | employee_salary : total_salary (32021, 48250, 48250), eid (142519864, 274878974, 11564812), min_salary (32021, 48250, 48250), name (\"Angela Martinez\", \"Donald King\", \"Larry West\"), avg_salary (32021, 48250, 48250), max_salary (32021, 48250, 48250) | certificate : aid (3, 15, 7), eid (90873519, 574489456, 159542516)", "schema_without_content": "flight : arrival_date , distance , price , departure_date , origin , aid , destination , flno  | aircraft : name , distance , aid  | employee : eid , salary , name  | employee_salary : total_salary , eid , min_salary , name , avg_salary , max_salary  | certificate : aid , eid "}, {"db_id": "flight_1", "query": "select avg_salary, max_salary from employee_salary", "query_toks": ["SELECT", "avg", "(", "salary", ")", ",", "max", "(", "salary", ")", "FROM", "Employee"], "query_toks_no_value": ["select", "avg", "(", "salary", ")", ",", "max", "(", "salary", ")", "from", "employee"], "question": "What is the average and largest salary of all employees?", "question_toks": ["What", "is", "the", "average", "and", "largest", "salary", "of", "all", "employees", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]], [1, [0, [0, 14, false], null]]]], "union": null, "where": []}, "primary_key": {"employee": "eid"}, "orig_query": "select avg(salary), max(salary) from employee", "split_map": {"employee": ["max_salary", "min_salary", "avg_salary", "total_salary"]}, "schema_with_content": "flight : origin (\"Los Angeles\", \"Chicago\"), arrival_date (\"04/12/2005 10:03\", \"04/12/2005 12:02\", \"04/12/2005 10:03\"), flno (7, 68, 387), price (235.98, 425.98, 780.99), destination (\"Los Angeles\", \"Chicago\", \"Los Angeles\"), distance (2606, 2308, 2606), aid (10, 3, 3), departure_date (\"04/12/2005 05:30\", \"04/12/2005 09:15\", \"04/12/2005 12:45\") | aircraft : name (\"SAAB 340\", \"Tupolev 154\", \"Boeing 757-300\"), aid (12, 2, 1), distance (4010, 6900, 6441) | employee : name (\"Larry West\", \"Milo Brooks\", \"Donald King\"), salary (43723, 43001, 152013), eid (254099823, 348121549, 159542516) | employee_salary : total_salary (43723, 43001, 152013), min_salary (43723, 43001, 152013), eid (254099823, 348121549, 159542516), avg_salary (43723, 43001, 152013), max_salary (43723, 43001, 152013), name (\"Larry West\", \"Milo Brooks\", \"Donald King\") | certificate : eid (90873519, 574489456, 90873519), aid (5, 12, 15)", "schema_without_content": "flight : origin , arrival_date , flno , price , destination , distance , aid , departure_date  | aircraft : name , aid , distance  | employee : name , salary , eid  | employee_salary : total_salary , min_salary , eid , avg_salary , max_salary , name  | certificate : eid , aid "}, {"db_id": "flight_1", "query": "select avg_price from flight_price where origin = \"Los Angeles\" and destination = \"Honolulu\"", "query_toks": ["SELECT", "avg", "(", "price", ")", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''", "AND", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "avg", "(", "price", ")", "from", "flight", "where", "origin", "=", "value", "and", "destination", "=", "value"], "question": "What is the average price for flights from Los Angeles to Honolulu.", "question_toks": ["What", "is", "the", "average", "price", "for", "flights", "from", "Los", "Angeles", "to", "Honolulu", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null], "and", [false, 2, [0, [0, 3, false], null], "\"Honolulu\"", null]]}, "primary_key": {"flight": "flno"}, "orig_query": "select avg(price) from flight where origin = \"Los Angeles\" and destination = \"Honolulu\"", "split_map": {"flight": ["max_price", "min_price", "avg_price", "total_price"]}, "schema_with_content": "flight : distance (2308, 2551, 1251), aid (2, 9, 9), origin (\"Los Angeles\", \"Chicago\"), price (261.56, 220.98, 780.99), flno (99, 7, 68), destination (\"Dallas\", \"Dallas\", \"Tokyo\"), departure_date (\"04/12/2005 09:30\", \"04/12/2005 09:00\", \"04/12/2005 09:15\"), arrival_date (\"04/12/2005 12:02\", \"04/12/2005 09:40\", \"04/12/2005 12:02\") | flight_price : avg_price (261.56, 220.98, 780.99), destination (\"Dallas\", \"Dallas\", \"Tokyo\"), arrival_date (\"04/12/2005 12:02\", \"04/12/2005 09:40\", \"04/12/2005 12:02\"), departure_date (\"04/12/2005 09:30\", \"04/12/2005 09:00\", \"04/12/2005 09:15\"), flno (99, 7, 68), distance (2308, 2551, 1251), total_price (261.56, 220.98, 780.99), origin (\"Los Angeles\", \"Chicago\"), min_price (261.56, 220.98, 780.99), max_price (261.56, 220.98, 780.99), aid (2, 9, 9) | aircraft : distance (7120, 8430, 3383), aid (13, 6, 14), name (\"Airbus A320\", \"Piper Archer III\", \"Boeing 747-400\") | employee : salary (24450, 178345, 152013), eid (619023588, 142519864, 142519864), name (\"William Jones\", \"Lawrence Sperry\", \"Larry West\") | certificate : eid (310454876, 548977562, 310454876), aid (13, 9, 9)", "schema_without_content": "flight : distance , aid , origin , price , flno , destination , departure_date , arrival_date  | flight_price : avg_price , destination , arrival_date , departure_date , flno , distance , total_price , origin , min_price , max_price , aid  | aircraft : distance , aid , name  | employee : salary , eid , name  | certificate : eid , aid "}, {"db_id": "flight_1", "query": "select avg_price from flight_price where origin = \"Los Angeles\" and destination = \"Honolulu\"", "query_toks": ["SELECT", "avg", "(", "price", ")", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''", "AND", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "avg", "(", "price", ")", "from", "flight", "where", "origin", "=", "value", "and", "destination", "=", "value"], "question": "What is the average price for flights from LA to Honolulu?", "question_toks": ["What", "is", "the", "average", "price", "for", "flights", "from", "LA", "to", "Honolulu", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null], "and", [false, 2, [0, [0, 3, false], null], "\"Honolulu\"", null]]}, "primary_key": {"flight": "flno"}, "orig_query": "select avg(price) from flight where origin = \"Los Angeles\" and destination = \"Honolulu\"", "split_map": {"flight": ["max_price", "min_price", "avg_price", "total_price"]}, "schema_with_content": "flight : departure_date (\"04/12/2005 08:32\", \"04/12/2005 12:45\", \"04/12/2005 09:30\"), price (375.23, 235.98, 220.98), destination (\"Honolulu\", \"Washington D.C.\", \"Boston\"), distance (7487, 2308, 2606), origin (\"Los Angeles\", \"Chicago\"), aid (6, 5, 7), arrival_date (\"04/12/2005 08:45\", \"04/12/2005 12:02\", \"04/12/2005 11:10\"), flno (99, 7, 346) | flight_price : origin (\"Los Angeles\", \"Chicago\"), total_price (375.23, 235.98, 220.98), avg_price (375.23, 235.98, 220.98), arrival_date (\"04/12/2005 08:45\", \"04/12/2005 12:02\", \"04/12/2005 11:10\"), min_price (375.23, 235.98, 220.98), destination (\"Honolulu\", \"Washington D.C.\", \"Boston\"), max_price (375.23, 235.98, 220.98), distance (7487, 2308, 2606), departure_date (\"04/12/2005 08:32\", \"04/12/2005 12:45\", \"04/12/2005 09:30\"), flno (99, 7, 346), aid (6, 5, 7) | aircraft : aid (3, 13, 11), distance (3383, 6441, 1504), name (\"SAAB 340\", \"Lockheed L1011\", \"Boeing 767-400ER\") | employee : salary (43723, 32899, 54921), name (\"Chad Stewart\", \"William Jones\", \"Joseph Thompson\"), eid (15645489, 248965255, 355548984) | certificate : eid (310454876, 356187925, 550156548), aid (7, 14, 11)", "schema_without_content": "flight : departure_date , price , destination , distance , origin , aid , arrival_date , flno  | flight_price : origin , total_price , avg_price , arrival_date , min_price , destination , max_price , distance , departure_date , flno , aid  | aircraft : aid , distance , name  | employee : salary , name , eid  | certificate : eid , aid "}, {"db_id": "flight_1", "query": "select avg_distance, (price)from flight_distance where origin = \"Los Angeles\"", "query_toks": ["SELECT", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "from", "flight", "where", "origin", "=", "value"], "question": "What is the average distance and average price for flights from Los Angeles.", "question_toks": ["What", "is", "the", "average", "distance", "and", "average", "price", "for", "flights", "from", "Los", "Angeles", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [5, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null]]}, "primary_key": {"flight": "flno"}, "orig_query": "select avg(distance), avg(price) from flight where origin = \"Los Angeles\"", "split_map": {"flight": ["max_distance", "min_distance", "avg_distance", "total_distance"]}, "schema_with_content": "flight : flno (13, 2, 2), destination (\"Dallas\", \"Boston\", \"Tokyo\"), distance (2606, 1749, 1251), aid (9, 6, 2), arrival_date (\"04/12/2005 05:03\", \"04/12/2005 12:02\", \"04/12/2005 05:03\"), price (425.98, 425.98, 261.56), departure_date (\"04/12/2005 08:32\", \"04/12/2005 09:15\", \"04/12/2005 11:50\"), origin (\"Los Angeles\", \"Chicago\") | flight_distance : avg_distance (2606, 1749, 1251), flno (13, 2, 2), destination (\"Dallas\", \"Boston\", \"Tokyo\"), min_distance (2606, 1749, 1251), max_distance (2606, 1749, 1251), total_distance (2606, 1749, 1251), origin (\"Los Angeles\", \"Chicago\"), departure_date (\"04/12/2005 08:32\", \"04/12/2005 09:15\", \"04/12/2005 11:50\"), arrival_date (\"04/12/2005 05:03\", \"04/12/2005 12:02\", \"04/12/2005 05:03\"), price (425.98, 425.98, 261.56), aid (9, 6, 2) | aircraft : aid (12, 1, 2), name (\"Boeing 737-800\", \"Airbus A319\", \"Boeing 737-800\"), distance (1530, 6475, 1504) | employee : eid (287321212, 15645489, 567354612), name (\"Donald King\", \"Milo Brooks\", \"Eric Cooper\"), salary (23980, 289950, 48250) | certificate : aid (3, 7, 14), eid (11564812, 355548984, 390487451)", "schema_without_content": "flight : flno , destination , distance , aid , arrival_date , price , departure_date , origin  | flight_distance : avg_distance , flno , destination , min_distance , max_distance , total_distance , origin , departure_date , arrival_date , price , aid  | aircraft : aid , name , distance  | employee : eid , name , salary  | certificate : aid , eid "}, {"db_id": "flight_1", "query": "select (distance), avg_price from flight_price where origin = \"Los Angeles\"", "query_toks": ["SELECT", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "from", "flight", "where", "origin", "=", "value"], "question": "What is the average distance and average price for flights from Los Angeles.", "question_toks": ["What", "is", "the", "average", "distance", "and", "average", "price", "for", "flights", "from", "Los", "Angeles", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [5, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null]]}, "primary_key": {"flight": "flno"}, "orig_query": "select avg(distance), avg(price) from flight where origin = \"Los Angeles\"", "split_map": {"flight": ["max_price", "min_price", "avg_price", "total_price"]}, "schema_with_content": "flight : arrival_date (\"04/12/2005 11:10\", \"04/12/2005 03:18\", \"04/12/2005 03:18\"), price (425.98, 278.56, 202.45), departure_date (\"04/12/2005 08:32\", \"04/12/2005 08:32\", \"04/12/2005 12:45\"), destination (\"Honolulu\", \"Dallas\", \"Chicago\"), distance (2551, 2308, 1251), origin (\"Los Angeles\", \"Chicago\"), aid (5, 5, 10), flno (13, 346, 7) | flight_price : arrival_date (\"04/12/2005 11:10\", \"04/12/2005 03:18\", \"04/12/2005 03:18\"), max_price (425.98, 278.56, 202.45), departure_date (\"04/12/2005 08:32\", \"04/12/2005 08:32\", \"04/12/2005 12:45\"), destination (\"Honolulu\", \"Dallas\", \"Chicago\"), avg_price (425.98, 278.56, 202.45), flno (13, 346, 7), total_price (425.98, 278.56, 202.45), min_price (425.98, 278.56, 202.45), distance (2551, 2308, 1251), origin (\"Los Angeles\", \"Chicago\"), aid (5, 5, 10) | aircraft : name (\"British Aerospace Jetstream 41\", \"Airbus A340-300\", \"Boeing 757-300\"), distance (2605, 7120, 1504), aid (2, 14, 13) | employee : name (\"David Anderson\", \"George Wright\", \"John Williams\"), salary (44740, 48250, 48090), eid (556784565, 552455318, 556784565) | certificate : aid (5, 14, 6), eid (573284895, 573284895, 390487451)", "schema_without_content": "flight : arrival_date , price , departure_date , destination , distance , origin , aid , flno  | flight_price : arrival_date , max_price , departure_date , destination , avg_price , flno , total_price , min_price , distance , origin , aid  | aircraft : name , distance , aid  | employee : name , salary , eid  | certificate : aid , eid "}, {"db_id": "flight_1", "query": "select avg_distance, (price)from flight_distance where origin = \"Los Angeles\"", "query_toks": ["SELECT", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "from", "flight", "where", "origin", "=", "value"], "question": "What is the average distance and price for all flights from LA?", "question_toks": ["What", "is", "the", "average", "distance", "and", "price", "for", "all", "flights", "from", "LA", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [5, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null]]}, "primary_key": {"flight": "flno"}, "orig_query": "select avg(distance), avg(price) from flight where origin = \"Los Angeles\"", "split_map": {"flight": ["max_distance", "min_distance", "avg_distance", "total_distance"]}, "schema_with_content": "flight : origin (\"Los Angeles\", \"Chicago\"), arrival_date (\"04/12/2005 11:10\", \"04/12/2005 07:05\", \"04/12/2005 11:15\"), aid (2, 3, 10), destination (\"Tokyo\", \"Washington D.C.\", \"New York\"), flno (13, 346, 346), price (182, 261.56, 375.23), departure_date (\"04/12/2005 07:03\", \"04/12/2005 08:45\", \"04/12/2005 12:45\"), distance (7487, 2551, 2606) | flight_distance : max_distance (7487, 2551, 2606), min_distance (7487, 2551, 2606), total_distance (7487, 2551, 2606), flno (13, 346, 346), destination (\"Tokyo\", \"Washington D.C.\", \"New York\"), origin (\"Los Angeles\", \"Chicago\"), avg_distance (7487, 2551, 2606), departure_date (\"04/12/2005 07:03\", \"04/12/2005 08:45\", \"04/12/2005 12:45\"), arrival_date (\"04/12/2005 11:10\", \"04/12/2005 07:05\", \"04/12/2005 11:15\"), price (182, 261.56, 375.23), aid (2, 3, 10) | aircraft : distance (7120, 2605, 1502), name (\"SAAB 340\", \"Airbus A320\", \"Airbus A320\"), aid (7, 6, 9) | employee : salary (289950, 44740, 43723), name (\"Angela Martinez\", \"David Anderson\", \"Barbara Wilson\"), eid (242518965, 269734834, 552455318) | certificate : eid (552455318, 390487451, 141582651), aid (10, 3, 1)", "schema_without_content": "flight : origin , arrival_date , aid , destination , flno , price , departure_date , distance  | flight_distance : max_distance , min_distance , total_distance , flno , destination , origin , avg_distance , departure_date , arrival_date , price , aid  | aircraft : distance , name , aid  | employee : salary , name , eid  | certificate : eid , aid "}, {"db_id": "flight_1", "query": "select (distance), avg_price from flight_price where origin = \"Los Angeles\"", "query_toks": ["SELECT", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "from", "flight", "where", "origin", "=", "value"], "question": "What is the average distance and price for all flights from LA?", "question_toks": ["What", "is", "the", "average", "distance", "and", "price", "for", "all", "flights", "from", "LA", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [5, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null]]}, "primary_key": {"flight": "flno"}, "orig_query": "select avg(distance), avg(price) from flight where origin = \"Los Angeles\"", "split_map": {"flight": ["max_price", "min_price", "avg_price", "total_price"]}, "schema_with_content": "flight : origin (\"Los Angeles\", \"Chicago\"), destination (\"Los Angeles\", \"Los Angeles\", \"Sydney\"), arrival_date (\"04/12/2005 08:45\", \"04/12/2005 11:15\", \"04/12/2005 11:15\"), price (425.98, 220.98, 425.98), departure_date (\"04/12/2005 11:50\", \"04/12/2005 07:03\", \"04/12/2005 08:45\"), flno (76, 76, 346), aid (1, 10, 5), distance (2308, 1749, 7487) | flight_price : total_price (425.98, 220.98, 425.98), flno (76, 76, 346), distance (2308, 1749, 7487), origin (\"Los Angeles\", \"Chicago\"), destination (\"Los Angeles\", \"Los Angeles\", \"Sydney\"), min_price (425.98, 220.98, 425.98), avg_price (425.98, 220.98, 425.98), arrival_date (\"04/12/2005 08:45\", \"04/12/2005 11:15\", \"04/12/2005 11:15\"), max_price (425.98, 220.98, 425.98), departure_date (\"04/12/2005 11:50\", \"04/12/2005 07:03\", \"04/12/2005 08:45\"), aid (1, 10, 5) | aircraft : name (\"Lockheed L1011\", \"Boeing 737-800\", \"Boeing 757-300\"), distance (1805, 2128, 3383), aid (3, 4, 8) | employee : salary (289950, 18050, 227489), name (\"Richard Jackson\", \"Chad Stewart\", \"William Ward\"), eid (310454876, 310454876, 548977562) | certificate : aid (13, 2, 10), eid (11564812, 556784565, 142519864)", "schema_without_content": "flight : origin , destination , arrival_date , price , departure_date , flno , aid , distance  | flight_price : total_price , flno , distance , origin , destination , min_price , avg_price , arrival_date , max_price , departure_date , aid  | aircraft : name , distance , aid  | employee : salary , name , eid  | certificate : aid , eid "}, {"db_id": "allergy_1", "query": "select min_age, avg_age, max_age from student_age", "query_toks": ["SELECT", "min", "(", "age", ")", ",", "avg", "(", "age", ")", ",", "max", "(", "age", ")", "FROM", "Student"], "query_toks_no_value": ["select", "min", "(", "age", ")", ",", "avg", "(", "age", ")", ",", "max", "(", "age", ")", "from", "student"], "question": "Show the minimum, average, and maximum age of all students.", "question_toks": ["Show", "the", "minimum", ",", "average", ",", "and", "maximum", "age", "of", "all", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 8, false], null]], [5, [0, [0, 8, false], null]], [1, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stuid"}, "orig_query": "select min(age), avg(age), max(age) from student", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "allergy_type : allergy (\"Rodent\", \"Tree Pollen\", \"Tree Pollen\"), allergytype (\"food\", \"environmental\", \"animal\") | has_allergy : stuid (1026, 1019, 1010), allergy (\"Milk\", \"Tree Pollen\", \"Cat\") | student : major (540, 520, 600), stuid (1022, 1016, 1012), fname (\"Jandy\", \"Sarah\", \"Ian\"), advisor (8722, 7134, 2311), lname (\"Epp\", \"Smith\", \"Han\"), city_code (\"CHI\", \"NAR\", \"HOU\"), sex (\"F\", \"M\"), age (17, 26, 18) | student_age : lname (\"Epp\", \"Smith\", \"Han\"), fname (\"Jandy\", \"Sarah\", \"Ian\"), max_age (17, 26, 18), total_age (17, 26, 18), stuid (1022, 1016, 1012), avg_age (17, 26, 18), min_age (17, 26, 18), sex (\"F\", \"M\"), major (540, 520, 600), advisor (8722, 7134, 2311), city_code (\"CHI\", \"NAR\", \"HOU\")", "schema_without_content": "allergy_type : allergy , allergytype  | has_allergy : stuid , allergy  | student : major , stuid , fname , advisor , lname , city_code , sex , age  | student_age : lname , fname , max_age , total_age , stuid , avg_age , min_age , sex , major , advisor , city_code "}, {"db_id": "allergy_1", "query": "select min_age, avg_age, max_age from student_age", "query_toks": ["SELECT", "min", "(", "age", ")", ",", "avg", "(", "age", ")", ",", "max", "(", "age", ")", "FROM", "Student"], "query_toks_no_value": ["select", "min", "(", "age", ")", ",", "avg", "(", "age", ")", ",", "max", "(", "age", ")", "from", "student"], "question": "What is the minimum, mean, and maximum age across all students?", "question_toks": ["What", "is", "the", "minimum", ",", "mean", ",", "and", "maximum", "age", "across", "all", "students", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 8, false], null]], [5, [0, [0, 8, false], null]], [1, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stuid"}, "orig_query": "select min(age), avg(age), max(age) from student", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "allergy_type : allergytype (\"food\", \"environmental\", \"animal\"), allergy (\"Nuts\", \"Ragweed\", \"Tree Pollen\") | has_allergy : stuid (1004, 1019, 1027), allergy (\"Ragweed\", \"Dog\", \"Grass Pollen\") | student : sex (\"F\", \"M\"), lname (\"Gompers\", \"Rugh\", \"Thornton\"), advisor (2311, 8423, 8918), fname (\"Stacy\", \"Stacy\", \"Linda\"), age (21, 17, 26), city_code (\"NAR\", \"LON\", \"HOU\"), major (100, 100, 600), stuid (1031, 1017, 1008) | student_age : lname (\"Gompers\", \"Rugh\", \"Thornton\"), max_age (21, 17, 26), total_age (21, 17, 26), avg_age (21, 17, 26), min_age (21, 17, 26), fname (\"Stacy\", \"Stacy\", \"Linda\"), stuid (1031, 1017, 1008), sex (\"F\", \"M\"), major (100, 100, 600), advisor (2311, 8423, 8918), city_code (\"NAR\", \"LON\", \"HOU\")", "schema_without_content": "allergy_type : allergytype , allergy  | has_allergy : stuid , allergy  | student : sex , lname , advisor , fname , age , city_code , major , stuid  | student_age : lname , max_age , total_age , avg_age , min_age , fname , stuid , sex , major , advisor , city_code "}, {"db_id": "allergy_1", "query": "select avg_age, sex from student_age group by sex", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "sex", "FROM", "Student", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "sex", "from", "student", "group", "by", "sex"], "question": "Show the average age for male and female students.", "question_toks": ["Show", "the", "average", "age", "for", "male", "and", "female", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stuid"}, "orig_query": "select avg(age), sex from student group by sex", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "allergy_type : allergy (\"Grass Pollen\", \"Eggs\", \"Shellfish\"), allergytype (\"food\", \"environmental\", \"animal\") | has_allergy : stuid (1031, 1004, 1002), allergy (\"Soy\", \"Cat\", \"Eggs\") | student : advisor (8721, 7712, 1121), fname (\"Charles\", \"Derek\", \"Linda\"), lname (\"Brody\", \"Lee\", \"Kumar\"), city_code (\"WAS\", \"BOS\", \"YYZ\"), sex (\"F\", \"M\"), age (19, 27, 22), major (550, 50, 600), stuid (1021, 1028, 1004) | student_age : fname (\"Charles\", \"Derek\", \"Linda\"), max_age (19, 27, 22), lname (\"Brody\", \"Lee\", \"Kumar\"), total_age (19, 27, 22), stuid (1021, 1028, 1004), avg_age (19, 27, 22), min_age (19, 27, 22), sex (\"F\", \"M\"), major (550, 50, 600), advisor (8721, 7712, 1121), city_code (\"WAS\", \"BOS\", \"YYZ\")", "schema_without_content": "allergy_type : allergy , allergytype  | has_allergy : stuid , allergy  | student : advisor , fname , lname , city_code , sex , age , major , stuid  | student_age : fname , max_age , lname , total_age , stuid , avg_age , min_age , sex , major , advisor , city_code "}, {"db_id": "allergy_1", "query": "select avg_age, sex from student_age group by sex", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "sex", "FROM", "Student", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "sex", "from", "student", "group", "by", "sex"], "question": "What are the average ages for male and female students?", "question_toks": ["What", "are", "the", "average", "ages", "for", "male", "and", "female", "students", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stuid"}, "orig_query": "select avg(age), sex from student group by sex", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "allergy_type : allergytype (\"food\", \"environmental\", \"animal\"), allergy (\"Bee Stings\", \"Wheat\", \"Wheat\") | has_allergy : stuid (1013, 1002, 1015), allergy (\"Tree Pollen\", \"Ragweed\", \"Eggs\") | student : major (600, 50, 50), fname (\"Jandy\", \"Jandy\", \"Steven\"), stuid (1004, 1022, 1018), city_code (\"HKG\", \"PHL\", \"HKG\"), advisor (8722, 9172, 7271), sex (\"F\", \"M\"), age (16, 17, 18), lname (\"Leighton\", \"Brody\", \"Thornton\") | student_age : fname (\"Jandy\", \"Jandy\", \"Steven\"), max_age (16, 17, 18), stuid (1004, 1022, 1018), avg_age (16, 17, 18), min_age (16, 17, 18), total_age (16, 17, 18), lname (\"Leighton\", \"Brody\", \"Thornton\"), sex (\"F\", \"M\"), major (600, 50, 50), advisor (8722, 9172, 7271), city_code (\"HKG\", \"PHL\", \"HKG\")", "schema_without_content": "allergy_type : allergytype , allergy  | has_allergy : stuid , allergy  | student : major , fname , stuid , city_code , advisor , sex , age , lname  | student_age : fname , max_age , stuid , avg_age , min_age , total_age , lname , sex , major , advisor , city_code "}, {"db_id": "store_1", "query": "select billing_country, total_total from invoices_total group by billing_country order by sum(total)desc limit 8", "query_toks": ["SELECT", "billing_country", ",", "SUM", "(", "total", ")", "FROM", "invoices", "GROUP", "BY", "billing_country", "ORDER", "BY", "SUM", "(", "total", ")", "DESC", "LIMIT", "8", ";"], "query_toks_no_value": ["select", "billing_country", ",", "sum", "(", "total", ")", "from", "invoices", "group", "by", "billing_country", "order", "by", "sum", "(", "total", ")", "desc", "limit", "value"], "question": "A list of the top 8 countries by gross/total invoice size. List country name and gross invoice size.", "question_toks": ["A", "list", "of", "the", "top", "8", "countries", "by", "gross/total", "invoice", "size", ".", "List", "country", "name", "and", "gross", "invoice", "size", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": 8, "orderBy": ["desc", [[0, [4, 46, false], null]]], "select": [false, [[0, [0, [0, 44, false], null]], [4, [0, [0, 46, false], null]]]], "union": null, "where": []}, "primary_key": {"invoices": "id"}, "orig_query": "select billing_country, sum(total) from invoices group by billing_country order by sum(total) desc limit 8", "split_map": {"invoices": ["max_total", "min_total", "avg_total", "total_total"]}, "schema_with_content": "artists : name (\"Heroes\", \"Julian Bream\", \"Adrian Leaper & Doreen de Feis\"), id (101, 40, 244) | sqlite_sequence : seq (8, 3503, 275), name (\"albums\", \"invoices\", \"artists\") | albums : id (214, 187, 130), title (\"Big Ones\", \"The X Factor\", \"Vozes do MPB\"), artist_id (118, 270, 218) | employees : city (\"Edmonton\", \"Calgary\", \"Lethbridge\"), hire_date (\"2002-05-01 00:00:00\", \"2004-03-04 00:00:00\", \"2004-03-04 00:00:00\"), birth_date (\"1962-02-18 00:00:00\", \"1970-05-29 00:00:00\", \"1970-05-29 00:00:00\"), id (1, 3, 6), address (\"1111 6 Ave SW\", \"11120 Jasper Ave NW\", \"923 7 ST NW\"), reports_to (None, 6, None), postal_code (\"T3B 0C5\", \"T2P 5M5\", \"T2P 5G3\"), title (\"IT Manager\", \"Sales Manager\", \"Sales Manager\"), email (\"andrew@chinookcorp.com\", \"michael@chinookcorp.com\", \"michael@chinookcorp.com\"), state (\"AB\"), country (\"Canada\"), fax (\"+1 (403) 262-3322\", \"+1 (403) 456-8485\", \"+1 (403) 263-4289\"), last_name (\"Peacock\", \"Johnson\", \"Adams\"), phone (\"+1 (403) 467-3351\", \"+1 (780) 428-9482\", \"+1 (780) 428-9482\"), first_name (\"Laura\", \"Nancy\", \"Laura\") | customers : email (\"fernadaramos4@uol.com.br\", \"frantisekw@jetbrains.com\", \"edfrancis@yachoo.ca\"), city (\"Porto\", \"Santiago\", \"Bras\u00c3\u00adlia\"), fax (\"+55 (11) 3055-8131\", \"+420 2 4172 5555\", \"+1 (604) 688-8756\"), last_name (\"Gray\", \"Gon\u00c3\u00a7alves\", \"Van der Berg\"), first_name (\"Isabelle\", \"Manoj\", \"Jo\u00c3\u00a3o\"), id (59, 1, 33), company (\"JetBrains s.r.o.\", None, \"Apple Inc.\"), country (\"Sweden\", \"Australia\", \"Portugal\"), phone (\"+1 (650) 253-0000\", \"+1 (312) 332-3232\", \"+420 2 4172 5555\"), support_rep_id (3, 4, 5), postal_code (\"01007-010\", \"11230\", \"SW1V 3EN\"), address (\"Theodor-Heuss-Stra\u00c3\u009fe 34\", \"421 Bourke Street\", \"Celsiusg. 9\"), state (\"AB\", \"CA\", \"MA\") | genres : id (5, 16, 6), name (\"Science Fiction\", \"Drama\", \"Drama\") | invoices : billing_address (\"627 Broadway\", \"696 Osborne Street\", \"162 E Superior Street\"), total (25.86, 9.91, 0.99), billing_postal_code (\"14300\", \"H-1073\", \"0171\"), billing_city (\"Ottawa\", \"Salt Lake City\", \"Prague\"), billing_state (\"BC\", \"NY\", \"NY\"), billing_country (\"Finland\", \"Chile\", \"Ireland\"), customer_id (8, 15, 28), id (400, 310, 319), invoice_date (\"2009-06-20 00:00:00\", \"2010-06-26 00:00:00\", \"2010-11-28 00:00:00\") | invoices_total : total_total (25.86, 9.91, 0.99), billing_state (\"BC\", \"NY\", \"NY\"), customer_id (8, 15, 28), billing_address (\"627 Broadway\", \"696 Osborne Street\", \"162 E Superior Street\"), id (400, 310, 319), max_total (25.86, 9.91, 0.99), billing_country (\"Finland\", \"Chile\", \"Ireland\"), invoice_date (\"2009-06-20 00:00:00\", \"2010-06-26 00:00:00\", \"2010-11-28 00:00:00\"), billing_postal_code (\"14300\", \"H-1073\", \"0171\"), billing_city (\"Ottawa\", \"Salt Lake City\", \"Prague\"), min_total (25.86, 9.91, 0.99), avg_total (25.86, 9.91, 0.99) | media_types : name (\"AAC audio file\", \"AAC audio file\", \"Protected AAC audio file\"), id (3, 2, 1) | tracks : name (\"Suck On The Jugular\", \"Jaded\", \"Eu Te Devoro\"), album_id (223, 139, 162), milliseconds (262556, 322455, 243436), unit_price (0.99, 1.99), media_type_id (3, 5, 1), genre_id (8, 17, 3), id (2926, 62, 2227), bytes (11590284, 6902878, 8101723), composer (\"Steven Tyler, Tom Hamilton\", \"U2 & Van Dyke Parks\", \"John Dowland\") | invoice_lines : unit_price (0.99, 1.99), id (1857, 1779, 1998), invoice_id (379, 277, 318), quantity (1), track_id (1413, 1954, 248) | playlists : name (\"Music Videos\", \"Classical 101 - The Basics\", \"Audiobooks\"), id (10, 17, 6) | playlist_tracks : playlist_id (13, 18, 1), track_id (1784, 155, 2117)", "schema_without_content": "artists : name , id  | sqlite_sequence : seq , name  | albums : id , title , artist_id  | employees : city , hire_date , birth_date , id , address , reports_to , postal_code , title , email , state , country , fax  262-3322\", \"+1  456-8485\", \"+1  263-4289\", last_name , phone  467-3351\", \"+1  428-9482\", \"+1  428-9482\", first_name  | customers : email , city , fax  3055-8131\", \"+420 2 4172 5555\", \"+1  688-8756\", last_name , first_name , id , company , country , phone  253-0000\", \"+1  332-3232\", \"+420 2 4172 5555\", support_rep_id , postal_code , address , state  | genres : id , name  | invoices : billing_address , total , billing_postal_code , billing_city , billing_state , billing_country , customer_id , id , invoice_date  | invoices_total : total_total , billing_state , customer_id , billing_address , id , max_total , billing_country , invoice_date , billing_postal_code , billing_city , min_total , avg_total  | media_types : name , id  | tracks : name , album_id , milliseconds , unit_price , media_type_id , genre_id , id , bytes , composer  | invoice_lines : unit_price , id , invoice_id , quantity , track_id  | playlists : name , id  | playlist_tracks : playlist_id , track_id "}, {"db_id": "store_1", "query": "select billing_country, total_total from invoices_total group by billing_country order by sum(total)desc limit 8", "query_toks": ["SELECT", "billing_country", ",", "SUM", "(", "total", ")", "FROM", "invoices", "GROUP", "BY", "billing_country", "ORDER", "BY", "SUM", "(", "total", ")", "DESC", "LIMIT", "8", ";"], "query_toks_no_value": ["select", "billing_country", ",", "sum", "(", "total", ")", "from", "invoices", "group", "by", "billing_country", "order", "by", "sum", "(", "total", ")", "desc", "limit", "value"], "question": "What are the names of the top 8 countries by total invoice size and what are those sizes?", "question_toks": ["What", "are", "the", "names", "of", "the", "top", "8", "countries", "by", "total", "invoice", "size", "and", "what", "are", "those", "sizes", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": 8, "orderBy": ["desc", [[0, [4, 46, false], null]]], "select": [false, [[0, [0, [0, 44, false], null]], [4, [0, [0, 46, false], null]]]], "union": null, "where": []}, "primary_key": {"invoices": "id"}, "orig_query": "select billing_country, sum(total) from invoices group by billing_country order by sum(total) desc limit 8", "split_map": {"invoices": ["max_total", "min_total", "avg_total", "total_total"]}, "schema_with_content": "artists : name (\"Dhani Harrison & Jakob Dylan\", \"Martin Roscoe\", \"Britten Sinfonia, Ivor Bolton & Lesley Garrett\"), id (32, 124, 272) | sqlite_sequence : seq (2240, 275, 59), name (\"customers\", \"employees\", \"customers\") | albums : title (\"Rock In Rio CD1\", \"Prokofiev: Symphony No.1\", \"Strauss: Waltzes\"), artist_id (146, 114, 255), id (253, 327, 284) | employees : email (\"andrew@chinookcorp.com\", \"michael@chinookcorp.com\", \"robert@chinookcorp.com\"), city (\"Edmonton\", \"Calgary\", \"Lethbridge\"), state (\"AB\"), birth_date (\"1958-12-08 00:00:00\", \"1965-03-03 00:00:00\", \"1973-08-29 00:00:00\"), postal_code (\"T1H 1Y8\", \"T2P 5G3\", \"T3B 1Y7\"), fax (\"+1 (403) 263-4289\", \"+1 (403) 262-3322\", \"1 (780) 836-9543\"), hire_date (\"2002-08-14 00:00:00\", \"2004-03-04 00:00:00\", \"2002-05-01 00:00:00\"), id (6, 3, 3), first_name (\"Andrew\", \"Jane\", \"Steve\"), country (\"Canada\"), address (\"825 8 Ave SW\", \"1111 6 Ave SW\", \"7727B 41 Ave\"), phone (\"+1 (403) 467-3351\", \"+1 (403) 246-9887\", \"+1 (403) 456-9986\"), title (\"Sales Manager\", \"General Manager\", \"IT Manager\"), reports_to (None, None, 6), last_name (\"Park\", \"Mitchell\", \"Edwards\") | customers : state (\"AB\", \"NT\", \"IL\"), id (37, 45, 34), phone (\"+47 22 44 22 22\", \"+56 (0)2 635 4444\", \"+351 (213) 466-111\"), city (\"New York\", \"Stuttgart\", \"Santiago\"), fax (\"+55 (12) 3923-5566\", \"+55 (21) 2271-7070\", \"+55 (61) 3363-7855\"), company (\"Google Inc.\", \"Embraer - Empresa Brasileira de Aeron\u00c3\u00a1utica S.A.\", \"Microsoft Corporation\"), email (\"fernadaramos4@uol.com.br\", \"hughoreilly@apple.ie\", \"manoj.pareek@rediff.com\"), first_name (\"Hannah\", \"Aaron\", \"Dominique\"), address (\"Theodor-Heuss-Stra\u00c3\u009fe 34\", \"Rua Dr. Falc\u00c3\u00a3o Filho, 155\", \"3 Chatham Street\"), support_rep_id (3, 4, 5), last_name (\"Tremblay\", \"Girard\", \"Cunningham\"), country (\"Portugal\", \"France\", \"Denmark\"), postal_code (\"33000\", \"71020-677\", \"2113\") | genres : id (8, 24, 10), name (\"Classical\", \"Electronica/Dance\", \"Drama\") | invoices : billing_postal_code (\"1010\", \"94043-1351\", \"84102\"), billing_city (\"Yellowknife\", \"Madison\", \"Edmonton\"), customer_id (43, 10, 58), billing_country (\"Denmark\", \"India\", \"India\"), invoice_date (\"2009-01-16 00:00:00\", \"2009-10-07 00:00:00\", \"2008-12-19 00:00:00\"), billing_state (\"AB\", \"MA\", \"IL\"), billing_address (\"Theodor-Heuss-Stra\u00c3\u009fe 34\", \"1600 Amphitheatre Parkway\", \"8210 111 ST NW\"), id (84, 68, 407), total (0.99, 23.86, 9.91) | invoices_total : invoice_date (\"2009-01-16 00:00:00\", \"2009-10-07 00:00:00\", \"2008-12-19 00:00:00\"), max_total (0.99, 23.86, 9.91), billing_state (\"AB\", \"MA\", \"IL\"), avg_total (0.99, 23.86, 9.91), billing_city (\"Yellowknife\", \"Madison\", \"Edmonton\"), billing_address (\"Theodor-Heuss-Stra\u00c3\u009fe 34\", \"1600 Amphitheatre Parkway\", \"8210 111 ST NW\"), billing_country (\"Denmark\", \"India\", \"India\"), billing_postal_code (\"1010\", \"94043-1351\", \"84102\"), id (84, 68, 407), min_total (0.99, 23.86, 9.91), customer_id (43, 10, 58), total_total (0.99, 23.86, 9.91) | media_types : id (2, 4, 4), name (\"MPEG audio file\", \"Purchased AAC audio file\", \"MPEG audio file\") | tracks : album_id (223, 137, 135), milliseconds (135053, 224261, 222171), media_type_id (5, 5, 4), composer (\"Izzy Stradlin'\", \"Blackmore, Gillan, Glover, Lord, Paice\", \"Hector Berlioz\"), bytes (8947356, 8538199, 4298006), id (3059, 3094, 1206), name (\"Assaltaram A Gram\u00c3\u00a1tica\", \"The Meaning Of The Blues/Lament (Alternate Take)\", \"Naked Sunday\"), unit_price (0.99, 1.99), genre_id (16, 6, 23) | invoice_lines : invoice_id (85, 335, 227), quantity (1), unit_price (0.99, 1.99), id (1401, 825, 547), track_id (750, 5, 1864) | playlists : id (18, 3, 12), name (\"Brazilian Music\", \"On-The-Go 1\", \"Music Videos\") | playlist_tracks : playlist_id (8, 15, 11), track_id (1513, 2365, 1758)", "schema_without_content": "artists : name , id  | sqlite_sequence : seq , name  | albums : title , artist_id , id  | employees : email , city , state , birth_date , postal_code , fax  263-4289\", \"+1  262-3322\", \"1  836-9543\", hire_date , id , first_name , country , address , phone  467-3351\", \"+1  246-9887\", \"+1  456-9986\", title , reports_to , last_name  | customers : state , id , phone 2 635 4444\", \"+351  466-111\", city , fax  3923-5566\", \"+55  2271-7070\", \"+55  3363-7855\", company , email , first_name , address , support_rep_id , last_name , country , postal_code  | genres : id , name  | invoices : billing_postal_code , billing_city , customer_id , billing_country , invoice_date , billing_state , billing_address , id , total  | invoices_total : invoice_date , max_total , billing_state , avg_total , billing_city , billing_address , billing_country , billing_postal_code , id , min_total , customer_id , total_total  | media_types : id , name  | tracks : album_id , milliseconds , media_type_id , composer , bytes , id , name \", \"Naked Sunday\", unit_price , genre_id  | invoice_lines : invoice_id , quantity , unit_price , id , track_id  | playlists : id , name  | playlist_tracks : playlist_id , track_id "}, {"db_id": "store_1", "query": "select billing_country, avg_total from invoices_total group by billing_country order by avg(total)desc limit 10", "query_toks": ["SELECT", "billing_country", ",", "AVG", "(", "total", ")", "FROM", "invoices", "GROUP", "BY", "billing_country", "ORDER", "BY", "AVG", "(", "total", ")", "DESC", "LIMIT", "10", ";"], "query_toks_no_value": ["select", "billing_country", ",", "avg", "(", "total", ")", "from", "invoices", "group", "by", "billing_country", "order", "by", "avg", "(", "total", ")", "desc", "limit", "value"], "question": "A list of the top 10 countries by average invoice size. List country name and average invoice size.", "question_toks": ["A", "list", "of", "the", "top", "10", "countries", "by", "average", "invoice", "size", ".", "List", "country", "name", "and", "average", "invoice", "size", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": 10, "orderBy": ["desc", [[0, [5, 46, false], null]]], "select": [false, [[0, [0, [0, 44, false], null]], [5, [0, [0, 46, false], null]]]], "union": null, "where": []}, "primary_key": {"invoices": "id"}, "orig_query": "select billing_country, avg(total) from invoices group by billing_country order by avg(total) desc limit 10", "split_map": {"invoices": ["max_total", "min_total", "avg_total", "total_total"]}, "schema_with_content": "artists : id (72, 211, 93), name (\"Martin Roscoe\", \"James Brown\", \"The King's Singers\") | sqlite_sequence : seq (412, 59, 2240), name (\"artists\", \"invoices\", \"albums\") | albums : id (93, 40, 161), title (\"Beethoven Piano Sonatas: Moonlight & Pastorale\", \"Ac\u00c3\u00bastico MTV\", \"Synkronized\"), artist_id (269, 224, 243) | employees : state (\"AB\"), reports_to (None, 6, None), birth_date (\"1965-03-03 00:00:00\", \"1973-08-29 00:00:00\", \"1970-05-29 00:00:00\"), title (\"General Manager\", \"Sales Support Agent\", \"General Manager\"), country (\"Canada\"), email (\"margaret@chinookcorp.com\", \"jane@chinookcorp.com\", \"michael@chinookcorp.com\"), last_name (\"Mitchell\", \"Adams\", \"Johnson\"), address (\"825 8 Ave SW\", \"1111 6 Ave SW\", \"825 8 Ave SW\"), hire_date (\"2004-03-04 00:00:00\", \"2003-05-03 00:00:00\", \"2002-04-01 00:00:00\"), fax (\"+1 (403) 456-8485\", \"+1 (403) 262-6712\", \"+1 (403) 262-3322\"), city (\"Edmonton\", \"Calgary\", \"Lethbridge\"), first_name (\"Michael\", \"Andrew\", \"Margaret\"), phone (\"+1 (403) 456-9986\", \"+1 (403) 467-3351\", \"+1 (403) 262-3443\"), postal_code (\"T2P 5G3\", \"T3B 1Y7\", \"T2P 5M5\"), id (2, 3, 7) | customers : state (\"MA\", \"ON\", \"NY\"), address (\"307 Macacha G\u00c3\u00bcemes\", \"8, Rue Hanovre\", \"307 Macacha G\u00c3\u00bcemes\"), id (34, 49, 41), phone (\"+453 3331 9991\", \"+46 08-651 52 52\", None), city (\"Copenhagen\", \"Helsinki\", \"Winnipeg\"), country (\"India\", \"United Kingdom\", \"Italy\"), postal_code (\"12227-000\", \"B3S 1C5\", \"K2P 1L7\"), company (\"Embraer - Empresa Brasileira de Aeron\u00c3\u00a1utica S.A.\", \"Woodstock Discos\", \"Apple Inc.\"), support_rep_id (3, 4, 5), first_name (\"Jack\", \"Fernanda\", \"Ellie\"), last_name (\"Kov\u00c3\u00a1cs\", \"Dubois\", \"Lefebvre\"), email (\"fralston@gmail.com\", \"fralston@gmail.com\", \"jubarnett@gmail.com\"), fax (\"+1 (780) 434-5565\", \"+1 (212) 221-4679\", None) | genres : name (\"R&B/Soul\", \"TV Shows\", \"TV Shows\"), id (14, 18, 16) | invoices : customer_id (34, 27, 16), billing_country (\"Canada\", \"Norway\", \"Canada\"), billing_state (\"UT\", \"NS\", \"FL\"), billing_city (\"Buenos Aires\", \"Berlin\", \"Halifax\"), billing_postal_code (\"SW1V 3EN\", \"1016\", \"N1 5LH\"), billing_address (\"627 Broadway\", \"194A Chain Lake Drive\", \"1600 Amphitheatre Parkway\"), invoice_date (\"2008-11-15 00:00:00\", \"2007-08-07 00:00:00\", \"2010-03-11 00:00:00\"), id (42, 244, 205), total (16.86, 15.86, 10.91) | invoices_total : id (42, 244, 205), billing_state (\"UT\", \"NS\", \"FL\"), billing_city (\"Buenos Aires\", \"Berlin\", \"Halifax\"), customer_id (34, 27, 16), billing_country (\"Canada\", \"Norway\", \"Canada\"), max_total (16.86, 15.86, 10.91), invoice_date (\"2008-11-15 00:00:00\", \"2007-08-07 00:00:00\", \"2010-03-11 00:00:00\"), min_total (16.86, 15.86, 10.91), total_total (16.86, 15.86, 10.91), avg_total (16.86, 15.86, 10.91), billing_address (\"627 Broadway\", \"194A Chain Lake Drive\", \"1600 Amphitheatre Parkway\"), billing_postal_code (\"SW1V 3EN\", \"1016\", \"N1 5LH\") | media_types : name (\"AAC audio file\", \"MPEG audio file\", \"MPEG audio file\"), id (5, 3, 3) | tracks : album_id (108, 180, 263), bytes (7937731, 8213710, 7609110), unit_price (0.99, 1.99), id (1707, 3025, 238), media_type_id (3, 5, 2), genre_id (21, 20, 11), name (\"Sun And Steel\", \"Dust N' Bones\", \"Cuando Eu For Pro Ceu\"), composer (\"Gelder, Nick van\", \"Bi Ribeira/Herbert Vianna/Jo\u00c3\u00a3o Barone\", \"J. Purdell, M. Inez, O. Osbourne, R. Castillo & Z. Wylde\"), milliseconds (274886, 244793, 136803) | invoice_lines : quantity (1), track_id (271, 2088, 2763), unit_price (0.99, 1.99), id (1575, 981, 1179), invoice_id (299, 109, 411) | playlists : name (\"Music Videos\", \"TV Shows\", \"TV Shows\"), id (6, 8, 8) | playlist_tracks : track_id (1735, 2907, 2892), playlist_id (13, 13, 13)", "schema_without_content": "artists : id , name  | sqlite_sequence : seq , name  | albums : id , title , artist_id  | employees : state , reports_to , birth_date , title , country , email , last_name , address , hire_date , fax  456-8485\", \"+1  262-6712\", \"+1  262-3322\", city , first_name , phone  456-9986\", \"+1  467-3351\", \"+1  262-3443\", postal_code , id  | customers : state , address , id , phone , city , country , postal_code , company , support_rep_id , first_name , last_name , email , fax  434-5565\", \"+1  221-4679\", None | genres : name , id  | invoices : customer_id , billing_country , billing_state , billing_city , billing_postal_code , billing_address , invoice_date , id , total  | invoices_total : id , billing_state , billing_city , customer_id , billing_country , max_total , invoice_date , min_total , total_total , avg_total , billing_address , billing_postal_code  | media_types : name , id  | tracks : album_id , bytes , unit_price , id , media_type_id , genre_id , name , composer , milliseconds  | invoice_lines : quantity , track_id , unit_price , id , invoice_id  | playlists : name , id  | playlist_tracks : track_id , playlist_id "}, {"db_id": "store_1", "query": "select billing_country, avg_total from invoices_total group by billing_country order by avg(total)desc limit 10", "query_toks": ["SELECT", "billing_country", ",", "AVG", "(", "total", ")", "FROM", "invoices", "GROUP", "BY", "billing_country", "ORDER", "BY", "AVG", "(", "total", ")", "DESC", "LIMIT", "10", ";"], "query_toks_no_value": ["select", "billing_country", ",", "avg", "(", "total", ")", "from", "invoices", "group", "by", "billing_country", "order", "by", "avg", "(", "total", ")", "desc", "limit", "value"], "question": "What are the names of the countries and average invoice size of the top countries by size?", "question_toks": ["What", "are", "the", "names", "of", "the", "countries", "and", "average", "invoice", "size", "of", "the", "top", "countries", "by", "size", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": 10, "orderBy": ["desc", [[0, [5, 46, false], null]]], "select": [false, [[0, [0, [0, 44, false], null]], [5, [0, [0, 46, false], null]]]], "union": null, "where": []}, "primary_key": {"invoices": "id"}, "orig_query": "select billing_country, avg(total) from invoices group by billing_country order by avg(total) desc limit 10", "split_map": {"invoices": ["max_total", "min_total", "avg_total", "total_total"]}, "schema_with_content": "artists : id (129, 152, 84), name (\"Marisa Monte\", \"Judas Priest\", \"UB40\") | sqlite_sequence : seq (412, 5, 25), name (\"tracks\", \"albums\", \"albums\") | albums : artist_id (263, 51, 14), id (198, 77, 340), title (\"C\u00c3\u00a1ssia Eller - Cole\u00c3\u00a7\u00c3\u00a3o Sem Limite [Disc 2]\", \"BackBeat Soundtrack\", \"ReLoad\") | employees : state (\"AB\"), fax (\"+1 (403) 262-3322\", \"1 (780) 836-9543\", \"+1 (780) 428-3457\"), country (\"Canada\"), last_name (\"Park\", \"Edwards\", \"Peacock\"), reports_to (None, 6, 6), phone (\"+1 (403) 456-9986\", \"+1 (403) 467-3351\", \"+1 (403) 263-4423\"), postal_code (\"T2P 5M5\", \"T1K 5N8\", \"T5K 2N1\"), city (\"Edmonton\", \"Calgary\", \"Lethbridge\"), first_name (\"Robert\", \"Laura\", \"Michael\"), hire_date (\"2003-10-17 00:00:00\", \"2004-03-04 00:00:00\", \"2002-05-01 00:00:00\"), birth_date (\"1973-08-29 00:00:00\", \"1965-03-03 00:00:00\", \"1965-03-03 00:00:00\"), title (\"Sales Support Agent\", \"Sales Manager\", \"IT Manager\"), address (\"683 10 Street SW\", \"7727B 41 Ave\", \"11120 Jasper Ave NW\"), id (7, 2, 7), email (\"steve@chinookcorp.com\", \"laura@chinookcorp.com\", \"michael@chinookcorp.com\") | customers : postal_code (\"1000\", \"12227-000\", \"70174\"), id (31, 49, 20), company (\"Woodstock Discos\", \"Microsoft Corporation\", \"JetBrains s.r.o.\"), phone (\"+49 030 26550280\", \"+91 0124 39883988\", \"+1 (650) 644-3358\"), first_name (\"Enrique\", \"Kara\", \"Julia\"), support_rep_id (3, 4, 5), city (\"Helsinki\", \"Edinburgh \", \"Tucson\"), fax (\"+55 (12) 3923-5566\", \"+1 (425) 882-8081\", \"+55 (21) 2271-7070\"), country (\"France\", \"Italy\", \"Portugal\"), last_name (\"K\u00c3\u00b6hler\", \"Chase\", \"Peeters\"), email (\"manoj.pareek@rediff.com\", \"johavanderberg@yahoo.nl\", \"johavanderberg@yahoo.nl\"), state (\"IL\", \"WI\", \"MA\"), address (\"801 W 4th Street\", \"120 S Orange Ave\", \"Theodor-Heuss-Stra\u00c3\u009fe 34\") | genres : name (\"Rock\", \"Rock And Roll\", \"Comedy\"), id (3, 24, 14) | invoices : billing_country (\"Brazil\", \"India\", \"Norway\"), customer_id (55, 38, 15), billing_city (\"Budapest\", \"Berlin\", \"Tucson\"), invoice_date (\"2007-02-03 00:00:00\", \"2011-07-20 00:00:00\", \"2009-07-29 00:00:00\"), billing_state (\"NT\", \"CA\", None), id (340, 198, 109), billing_postal_code (\"SW1V 3EN\", \"12227-000\", \"2010\"), total (18.86, 15.86, 1.99), billing_address (\"11, Place Bellecour\", \"Rilsk\u00c3\u00a1 3174/6\", \"Pra\u00c3\u00a7a Pio X, 119\") | invoices_total : billing_city (\"Budapest\", \"Berlin\", \"Tucson\"), id (340, 198, 109), invoice_date (\"2007-02-03 00:00:00\", \"2011-07-20 00:00:00\", \"2009-07-29 00:00:00\"), billing_state (\"NT\", \"CA\", None), billing_country (\"Brazil\", \"India\", \"Norway\"), max_total (18.86, 15.86, 1.99), min_total (18.86, 15.86, 1.99), avg_total (18.86, 15.86, 1.99), billing_postal_code (\"SW1V 3EN\", \"12227-000\", \"2010\"), customer_id (55, 38, 15), billing_address (\"11, Place Bellecour\", \"Rilsk\u00c3\u00a1 3174/6\", \"Pra\u00c3\u00a7a Pio X, 119\"), total_total (18.86, 15.86, 1.99) | media_types : name (\"Protected MPEG-4 video file\", \"Protected AAC audio file\", \"MPEG audio file\"), id (2, 4, 1) | tracks : genre_id (10, 25, 1), bytes (8114582, 8624063, 7569506), name (\"Magnetic Ocean\", \"Outra Vez\", \"06 - Transylvania\"), album_id (88, 345, 7), milliseconds (385541, 292179, 315559), id (2573, 1565, 490), unit_price (0.99, 1.99), media_type_id (4, 5, 4), composer (\"Bruce Dickinson/Steve Harris\", \"E. Schrody/L. Freese/L. Muggerud\", \"Ben Shepherd/Chris Cornell\") | invoice_lines : id (1061, 1540, 373), track_id (2519, 911, 1231), unit_price (0.99, 1.99), quantity (1), invoice_id (322, 300, 293) | playlists : id (8, 17, 17), name (\"Classical 101 - Deep Cuts\", \"Heavy Metal Classic\", \"Classical\") | playlist_tracks : playlist_id (17, 18, 8), track_id (838, 1703, 2281)", "schema_without_content": "artists : id , name  | sqlite_sequence : seq , name  | albums : artist_id , id , title  | employees : state , fax  262-3322\", \"1  836-9543\", \"+1  428-3457\", country , last_name , reports_to , phone  456-9986\", \"+1  467-3351\", \"+1  263-4423\", postal_code , city , first_name , hire_date , birth_date , title , address , id , email  | customers : postal_code , id , company , phone  644-3358\", first_name , support_rep_id , city , fax  3923-5566\", \"+1  882-8081\", \"+55  2271-7070\", country , last_name , email , state , address  | genres : name , id  | invoices : billing_country , customer_id , billing_city , invoice_date , billing_state , id , billing_postal_code , total , billing_address  | invoices_total : billing_city , id , invoice_date , billing_state , billing_country , max_total , min_total , avg_total , billing_postal_code , customer_id , billing_address , total_total  | media_types : name , id  | tracks : genre_id , bytes , name , album_id , milliseconds , id , unit_price , media_type_id , composer  | invoice_lines : id , track_id , unit_price , quantity , invoice_id  | playlists : id , name  | playlist_tracks : playlist_id , track_id "}, {"db_id": "store_1", "query": "select total_total from invoices_total where billing_city = \"Chicago\" and billing_state = \"IL\"", "query_toks": ["SELECT", "sum", "(", "total", ")", "FROM", "invoices", "WHERE", "billing_city", "=", "``", "Chicago", "''", "AND", "billing_state", "=", "``", "IL", "''", ";"], "query_toks_no_value": ["select", "sum", "(", "total", ")", "from", "invoices", "where", "billing_city", "=", "value", "and", "billing_state", "=", "value"], "question": "List total amount of  invoice from Chicago, IL.", "question_toks": ["List", "total", "amount", "of", "invoice", "from", "Chicago", ",", "IL", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 46, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 42, false], null], "\"Chicago\"", null], "and", [false, 2, [0, [0, 43, false], null], "\"IL\"", null]]}, "primary_key": {"invoices": "id"}, "orig_query": "select sum(total) from invoices where billing_city = \"Chicago\" and billing_state = \"IL\"", "split_map": {"invoices": ["max_total", "min_total", "avg_total", "total_total"]}, "schema_with_content": "artists : id (151, 34, 163), name (\"Green Day\", \"Academy of St. Martin in the Fields, John Birch, Sir Neville Marriner & Sylvia McNair\", \"System Of A Down\") | sqlite_sequence : seq (2240, 2240, 347), name (\"artists\", \"invoice_lines\", \"artists\") | albums : title (\"C\u00c3\u00a1ssia Eller - Cole\u00c3\u00a7\u00c3\u00a3o Sem Limite [Disc 2]\", \"One By One\", \"Sozinho Remix Ao Vivo\"), artist_id (151, 248, 217), id (217, 180, 64) | employees : id (3, 2, 6), postal_code (\"T1K 5N8\", \"T2P 5G3\", \"T2P 2T3\"), state (\"AB\"), title (\"Sales Support Agent\", \"IT Manager\", \"Sales Manager\"), hire_date (\"2002-08-14 00:00:00\", \"2002-08-14 00:00:00\", \"2003-10-17 00:00:00\"), country (\"Canada\"), phone (\"+1 (403) 467-3351\", \"+1 (403) 456-9986\", \"+1 (780) 428-9482\"), birth_date (\"1958-12-08 00:00:00\", \"1962-02-18 00:00:00\", \"1962-02-18 00:00:00\"), last_name (\"Johnson\", \"Park\", \"Edwards\"), reports_to (2, None, 6), fax (\"+1 (780) 428-3457\", \"+1 (780) 428-3457\", \"+1 (403) 467-8772\"), email (\"andrew@chinookcorp.com\", \"robert@chinookcorp.com\", \"nancy@chinookcorp.com\"), first_name (\"Nancy\", \"Jane\", \"Steve\"), address (\"923 7 ST NW\", \"11120 Jasper Ave NW\", \"923 7 ST NW\"), city (\"Edmonton\", \"Calgary\", \"Lethbridge\") | customers : first_name (\"Astrid\", \"Johannes\", \"Fynn\"), company (\"Riotur\", \"Microsoft Corporation\", \"Woodstock Discos\"), fax (\"+1 (780) 434-5565\", \"+55 (21) 2271-7070\", \"+1 (604) 688-8756\"), country (\"France\", \"Belgium\", \"Netherlands\"), address (\"421 Bourke Street\", \"68, Rue Jouvence\", \"302 S 700 E\"), email (\"jubarnett@gmail.com\", \"isabelle_mercier@apple.fr\", \"steve.murray@yahoo.uk\"), support_rep_id (3, 4, 5), state (\"DF\", \"CA\", \"ON\"), id (47, 44, 39), phone (\"+1 (801) 531-7272\", \"+49 030 26550280\", \"+1 (520) 622-4200\"), last_name (\"Srivastava\", \"Mercier\", \"Smith\"), city (\"Boston\", \"Yellowknife\", \"Madrid\"), postal_code (\"75002\", \"2113\", \"98052-8300\") | genres : name (\"Opera\", \"Blues\", \"Sci Fi & Fantasy\"), id (1, 22, 3) | invoices : billing_city (\"Frankfurt\", \"Rome\", \"Sidney\"), invoice_date (\"2008-12-15 00:00:00\", \"2010-04-03 00:00:00\", \"2011-09-02 00:00:00\"), customer_id (58, 54, 10), billing_address (\"Rotenturmstra\u00c3\u009fe 4, 1010 Innere Stadt\", \"Berger Stra\u00c3\u009fe 10\", \"Tauentzienstra\u00c3\u009fe 8\"), billing_state (\"VV\", None, \"NS\"), total (25.86, 13.86, 8.91), id (166, 108, 405), billing_postal_code (\"84102\", \"560001\", \"12227-000\"), billing_country (\"Brazil\", \"Argentina\", \"Brazil\") | invoices_total : invoice_date (\"2008-12-15 00:00:00\", \"2010-04-03 00:00:00\", \"2011-09-02 00:00:00\"), id (166, 108, 405), customer_id (58, 54, 10), billing_country (\"Brazil\", \"Argentina\", \"Brazil\"), total_total (25.86, 13.86, 8.91), billing_address (\"Rotenturmstra\u00c3\u009fe 4, 1010 Innere Stadt\", \"Berger Stra\u00c3\u009fe 10\", \"Tauentzienstra\u00c3\u009fe 8\"), avg_total (25.86, 13.86, 8.91), min_total (25.86, 13.86, 8.91), billing_city (\"Frankfurt\", \"Rome\", \"Sidney\"), max_total (25.86, 13.86, 8.91), billing_postal_code (\"84102\", \"560001\", \"12227-000\"), billing_state (\"VV\", None, \"NS\") | media_types : name (\"Protected MPEG-4 video file\", \"Protected AAC audio file\", \"Purchased AAC audio file\"), id (1, 1, 3) | tracks : bytes (7824586, 8336591, 6414550), composer (\"Mick Hucknall\", \"Gilmour, Mason, Wright, Waters\", \"Billy Duffy/Ian Astbury/Marti Frederiksen/Mick Jones\"), album_id (77, 151, 163), id (2415, 3020, 3257), genre_id (5, 18, 13), media_type_id (3, 2, 4), milliseconds (240613, 245315, 204846), name (\"I Looked At You\", \"Road Trippin'\", \"Chapa o Coco\"), unit_price (0.99, 1.99) | invoice_lines : unit_price (0.99, 1.99), quantity (1), invoice_id (364, 268, 372), id (2095, 1429, 400), track_id (1258, 3272, 1358) | playlists : name (\"Heavy Metal Classic\", \"Heavy Metal Classic\", \"Classical\"), id (2, 7, 10) | playlist_tracks : track_id (2560, 1447, 2834), playlist_id (3, 8, 14)", "schema_without_content": "artists : id , name  | sqlite_sequence : seq , name  | albums : title , artist_id , id  | employees : id , postal_code , state , title , hire_date , country , phone  467-3351\", \"+1  456-9986\", \"+1  428-9482\", birth_date , last_name , reports_to , fax  428-3457\", \"+1  428-3457\", \"+1  467-8772\", email , first_name , address , city  | customers : first_name , company , fax  434-5565\", \"+55  2271-7070\", \"+1  688-8756\", country , address , email , support_rep_id , state , id , phone  531-7272\", \"+49 030 26550280\", \"+1  622-4200\", last_name , city , postal_code  | genres : name , id  | invoices : billing_city , invoice_date , customer_id , billing_address , billing_state , total , id , billing_postal_code , billing_country  | invoices_total : invoice_date , id , customer_id , billing_country , total_total , billing_address , avg_total , min_total , billing_city , max_total , billing_postal_code , billing_state  | media_types : name , id  | tracks : bytes , composer , album_id , id , genre_id , media_type_id , milliseconds , name , unit_price  | invoice_lines : unit_price , quantity , invoice_id , id , track_id  | playlists : name , id  | playlist_tracks : track_id , playlist_id "}, {"db_id": "store_1", "query": "select total_total from invoices_total where billing_city = \"Chicago\" and billing_state = \"IL\"", "query_toks": ["SELECT", "sum", "(", "total", ")", "FROM", "invoices", "WHERE", "billing_city", "=", "``", "Chicago", "''", "AND", "billing_state", "=", "``", "IL", "''", ";"], "query_toks_no_value": ["select", "sum", "(", "total", ")", "from", "invoices", "where", "billing_city", "=", "value", "and", "billing_state", "=", "value"], "question": "What are the total amount of money in the invoices billed from Chicago, Illinois?", "question_toks": ["What", "are", "the", "total", "amount", "of", "money", "in", "the", "invoices", "billed", "from", "Chicago", ",", "Illinois", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 46, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 42, false], null], "\"Chicago\"", null], "and", [false, 2, [0, [0, 43, false], null], "\"IL\"", null]]}, "primary_key": {"invoices": "id"}, "orig_query": "select sum(total) from invoices where billing_city = \"Chicago\" and billing_state = \"IL\"", "split_map": {"invoices": ["max_total", "min_total", "avg_total", "total_total"]}, "schema_with_content": "artists : name (\"Fretwork\", \"Milton Nascimento & Bebeto\", \"Apocalyptica\"), id (195, 270, 120) | sqlite_sequence : seq (8, 2240, 412), name (\"invoice_lines\", \"media_types\", \"genres\") | albums : title (\"Are You Experienced?\", \"English Renaissance\", \"Volume Dois\"), artist_id (215, 17, 112), id (334, 158, 169) | employees : first_name (\"Robert\", \"Robert\", \"Robert\"), address (\"683 10 Street SW\", \"5827 Bowness Road NW\", \"11120 Jasper Ave NW\"), postal_code (\"T2P 5M5\", \"T5K 2N1\", \"T3B 0C5\"), phone (\"+1 (403) 263-4423\", \"1 (780) 836-9987\", \"+1 (403) 263-4423\"), state (\"AB\"), email (\"steve@chinookcorp.com\", \"steve@chinookcorp.com\", \"laura@chinookcorp.com\"), fax (\"+1 (780) 428-3457\", \"1 (780) 836-9543\", \"+1 (780) 428-3457\"), city (\"Edmonton\", \"Calgary\", \"Lethbridge\"), id (5, 3, 2), reports_to (None, 1, 6), last_name (\"Peacock\", \"Mitchell\", \"King\"), birth_date (\"1973-07-01 00:00:00\", \"1947-09-19 00:00:00\", \"1947-09-19 00:00:00\"), title (\"General Manager\", \"IT Staff\", \"Sales Support Agent\"), hire_date (\"2002-08-14 00:00:00\", \"2003-05-03 00:00:00\", \"2004-03-04 00:00:00\"), country (\"Canada\") | customers : support_rep_id (3, 4, 5), phone (\"+54 (0)11 4311 4333\", \"+49 030 26550280\", \"+453 3331 9991\"), last_name (\"Ralston\", \"Silk\", \"Van der Berg\"), id (48, 50, 42), fax (\"+55 (61) 3363-7855\", \"+55 (12) 3923-5566\", \"+1 (780) 434-5565\"), company (\"Apple Inc.\", \"Banco do Brasil S.A.\", \"Embraer - Empresa Brasileira de Aeron\u00c3\u00a1utica S.A.\"), first_name (\"Isabelle\", \"Ellie\", \"Johannes\"), city (\"Yellowknife\", \"Winnipeg\", \"Frankfurt\"), country (\"Finland\", \"Poland\", \"Denmark\"), state (\"DF\", \"NSW\", \"ON\"), address (\"Calle Lira, 198\", \"3 Chatham Street\", \"113 Lupus St\"), postal_code (\"89503\", \"M6J 1V1\", \"89503\"), email (\"dominiquelefebvre@gmail.com\", \"roberto.almeida@riotur.gov.br\", \"aaronmitchell@yahoo.ca\") | genres : name (\"Sci Fi & Fantasy\", \"Alternative\", \"Heavy Metal\"), id (24, 12, 3) | invoices : billing_city (\"Prague\", \"Yellowknife\", \"Ottawa\"), billing_state (\"DF\", \"QC\", \"NY\"), id (127, 325, 189), total (8.94, 13.86, 18.86), billing_address (\"2211 W Berry Street\", \"S\u00c3\u00b8nder Boulevard 51\", \"1033 N Park Ave\"), billing_postal_code (\"75002\", \"60316\", \"N1 5LH\"), billing_country (\"USA\", \"Czech Republic\", \"Chile\"), customer_id (15, 18, 46), invoice_date (\"2007-04-14 00:00:00\", \"2008-05-16 00:00:00\", \"2007-08-06 00:00:00\") | invoices_total : avg_total (8.94, 13.86, 18.86), billing_postal_code (\"75002\", \"60316\", \"N1 5LH\"), min_total (8.94, 13.86, 18.86), billing_country (\"USA\", \"Czech Republic\", \"Chile\"), customer_id (15, 18, 46), total_total (8.94, 13.86, 18.86), billing_address (\"2211 W Berry Street\", \"S\u00c3\u00b8nder Boulevard 51\", \"1033 N Park Ave\"), billing_city (\"Prague\", \"Yellowknife\", \"Ottawa\"), id (127, 325, 189), invoice_date (\"2007-04-14 00:00:00\", \"2008-05-16 00:00:00\", \"2007-08-06 00:00:00\"), billing_state (\"DF\", \"QC\", \"NY\"), max_total (8.94, 13.86, 18.86) | media_types : id (4, 2, 3), name (\"MPEG audio file\", \"MPEG audio file\", \"AAC audio file\") | tracks : unit_price (0.99, 1.99), bytes (6709579, 7599602, 19347584), milliseconds (167549, 298475, 421982), media_type_id (4, 3, 5), genre_id (9, 5, 3), composer (\"Miles Davis\", \"I. Toure, S. Tidiane Toure, Carlos Santana & K. Perazzo\", \"Adrian Smith/Steve Harris\"), name (\"Love And Marriage\", \"Call Me At Cleo\u00c2\u00b4s\", \"Rock You Like a Hurricane\"), id (54, 2579, 393), album_id (212, 297, 255) | invoice_lines : unit_price (0.99, 1.99), track_id (477, 3337, 488), quantity (1), invoice_id (361, 239, 145), id (1524, 1623, 459) | playlists : id (14, 3, 8), name (\"On-The-Go 1\", \"Grunge\", \"Classical 101 - Deep Cuts\") | playlist_tracks : track_id (2375, 2494, 717), playlist_id (12, 9, 12)", "schema_without_content": "artists : name , id  | sqlite_sequence : seq , name  | albums : title , artist_id , id  | employees : first_name , address , postal_code , phone  263-4423\", \"1  836-9987\", \"+1  263-4423\", state , email , fax  428-3457\", \"1  836-9543\", \"+1  428-3457\", city , id , reports_to , last_name , birth_date , title , hire_date , country  | customers : support_rep_id , phone 11 4311 4333\", \"+49 030 26550280\", \"+453 3331 9991\", last_name , id , fax  3363-7855\", \"+55  3923-5566\", \"+1  434-5565\", company , first_name , city , country , state , address , postal_code , email  | genres : name , id  | invoices : billing_city , billing_state , id , total , billing_address , billing_postal_code , billing_country , customer_id , invoice_date  | invoices_total : avg_total , billing_postal_code , min_total , billing_country , customer_id , total_total , billing_address , billing_city , id , invoice_date , billing_state , max_total  | media_types : id , name  | tracks : unit_price , bytes , milliseconds , media_type_id , genre_id , composer , name , id , album_id  | invoice_lines : unit_price , track_id , quantity , invoice_id , id  | playlists : id , name  | playlist_tracks : track_id , playlist_id "}, {"db_id": "store_1", "query": "select billing_state, count(*), total_total from invoices_total where billing_state = \"CA\"", "query_toks": ["SELECT", "billing_state", ",", "COUNT", "(", "*", ")", ",", "SUM", "(", "total", ")", "FROM", "invoices", "WHERE", "billing_state", "=", "``", "CA", "''", ";"], "query_toks_no_value": ["select", "billing_state", ",", "count", "(", "*", ")", ",", "sum", "(", "total", ")", "from", "invoices", "where", "billing_state", "=", "value"], "question": "List the number of invoices and the invoice total from California.", "question_toks": ["List", "the", "number", "of", "invoices", "and", "the", "invoice", "total", "from", "California", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 43, false], null]], [3, [0, [0, 0, false], null]], [4, [0, [0, 46, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 43, false], null], "\"CA\"", null]]}, "primary_key": {"invoices": "id"}, "orig_query": "select billing_state, count(*), sum(total) from invoices where billing_state = \"CA\"", "split_map": {"invoices": ["max_total", "min_total", "avg_total", "total_total"]}, "schema_with_content": "artists : id (228, 90, 18), name (\"Milton Nascimento\", \"Ben Harper\", \"Cidade Negra\") | sqlite_sequence : name (\"invoices\", \"albums\", \"media_types\"), seq (2240, 3503, 59) | albums : id (283, 200, 178), title (\"Arquivo Os Paralamas Do Sucesso\", \"Led Zeppelin II\", \"Master Of Puppets\"), artist_id (253, 271, 14) | employees : id (1, 3, 4), phone (\"1 (780) 836-9987\", \"+1 (403) 262-3443\", \"+1 (403) 467-3351\"), fax (\"+1 (780) 428-3457\", \"+1 (403) 262-3322\", \"+1 (403) 262-3322\"), last_name (\"Mitchell\", \"Park\", \"Callahan\"), reports_to (6, 1, 2), postal_code (\"T5K 2N1\", \"T2P 2T3\", \"T5K 2N1\"), email (\"michael@chinookcorp.com\", \"nancy@chinookcorp.com\", \"nancy@chinookcorp.com\"), birth_date (\"1962-02-18 00:00:00\", \"1973-08-29 00:00:00\", \"1973-07-01 00:00:00\"), address (\"11120 Jasper Ave NW\", \"683 10 Street SW\", \"1111 6 Ave SW\"), title (\"IT Staff\", \"Sales Manager\", \"Sales Support Agent\"), country (\"Canada\"), hire_date (\"2002-08-14 00:00:00\", \"2004-03-04 00:00:00\", \"2002-05-01 00:00:00\"), state (\"AB\"), first_name (\"Michael\", \"Margaret\", \"Laura\"), city (\"Edmonton\", \"Calgary\", \"Lethbridge\") | customers : phone (\"+351 (225) 022-448\", \"+351 (225) 022-448\", \"+33 01 49 70 65 65\"), country (\"Czech Republic\", \"Poland\", \"Ireland\"), email (\"manoj.pareek@rediff.com\", \"kara.nielsen@jubii.dk\", \"mphilips12@shaw.ca\"), state (\"SP\", \"UT\", \"Dublin\"), company (\"Microsoft Corporation\", \"Microsoft Corporation\", None), fax (\"+1 (650) 253-0000\", \"+1 (425) 882-8081\", \"+55 (12) 3923-5566\"), last_name (\"Pareek\", \"Almeida\", \"Gon\u00c3\u00a7alves\"), support_rep_id (3, 4, 5), first_name (\"Alexandre\", \"Tim\", \"Leonie\"), address (\"4, Rue Milton\", \"202 Hoxton Street\", \"2211 W Berry Street\"), id (10, 23, 57), postal_code (\"85719\", \"12227-000\", \"01310-200\"), city (\"Redmond\", \"Stuttgart\", \"Bras\u00c3\u00adlia\") | genres : name (\"Opera\", \"Hip Hop/Rap\", \"Metal\"), id (1, 1, 22) | invoices : billing_postal_code (\"53703\", \"H-1073\", \"M6J 1V1\"), billing_city (\"Fort Worth\", \"Lyon\", \"Rome\"), billing_country (\"Germany\", \"USA\", \"Spain\"), billing_address (\"162 E Superior Street\", \"Qe 7 Bloco G\", \"801 W 4th Street\"), total (11.94, 25.86, 11.94), invoice_date (\"2007-12-13 00:00:00\", \"2010-08-05 00:00:00\", \"2008-10-23 00:00:00\"), customer_id (11, 12, 20), id (120, 233, 177), billing_state (\"BC\", \"NSW\", \"DF\") | invoices_total : billing_city (\"Fort Worth\", \"Lyon\", \"Rome\"), billing_state (\"BC\", \"NSW\", \"DF\"), min_total (11.94, 25.86, 11.94), avg_total (11.94, 25.86, 11.94), id (120, 233, 177), total_total (11.94, 25.86, 11.94), billing_postal_code (\"53703\", \"H-1073\", \"M6J 1V1\"), billing_address (\"162 E Superior Street\", \"Qe 7 Bloco G\", \"801 W 4th Street\"), billing_country (\"Germany\", \"USA\", \"Spain\"), customer_id (11, 12, 20), max_total (11.94, 25.86, 11.94), invoice_date (\"2007-12-13 00:00:00\", \"2010-08-05 00:00:00\", \"2008-10-23 00:00:00\") | media_types : name (\"Protected AAC audio file\", \"Protected MPEG-4 video file\", \"Purchased AAC audio file\"), id (1, 2, 2) | tracks : media_type_id (3, 5, 5), milliseconds (278465, 291291, 302994), bytes (21676727, 258561054, 4072205), composer (\"Gustav Holst\", \"Kurt Cobain\", \"Ben Shepherd/Chris Cornell\"), id (198, 2075, 2826), name (\"Blew\", \"Don't Look Now\", \"The Longest Day\"), album_id (268, 186, 319), unit_price (0.99, 1.99), genre_id (2, 16, 23) | invoice_lines : id (350, 1818, 638), quantity (1), unit_price (0.99, 1.99), invoice_id (55, 380, 349), track_id (508, 31, 2097) | playlists : name (\"Music\", \"On-The-Go 1\", \"TV Shows\"), id (1, 16, 2) | playlist_tracks : playlist_id (5, 18, 9), track_id (2680, 1298, 909)", "schema_without_content": "artists : id , name  | sqlite_sequence : name , seq  | albums : id , title , artist_id  | employees : id , phone  836-9987\", \"+1  262-3443\", \"+1  467-3351\", fax  428-3457\", \"+1  262-3322\", \"+1  262-3322\", last_name , reports_to , postal_code , email , birth_date , address , title , country , hire_date , state , first_name , city  | customers : phone  022-448\", \"+351  022-448\", \"+33 01 49 70 65 65\", country , email , state , company , fax  253-0000\", \"+1  882-8081\", \"+55  3923-5566\", last_name , support_rep_id , first_name , address , id , postal_code , city  | genres : name , id  | invoices : billing_postal_code , billing_city , billing_country , billing_address , total , invoice_date , customer_id , id , billing_state  | invoices_total : billing_city , billing_state , min_total , avg_total , id , total_total , billing_postal_code , billing_address , billing_country , customer_id , max_total , invoice_date  | media_types : name , id  | tracks : media_type_id , milliseconds , bytes , composer , id , name , album_id , unit_price , genre_id  | invoice_lines : id , quantity , unit_price , invoice_id , track_id  | playlists : name , id  | playlist_tracks : playlist_id , track_id "}, {"db_id": "store_1", "query": "select billing_state, count(*), total_total from invoices_total where billing_state = \"CA\"", "query_toks": ["SELECT", "billing_state", ",", "COUNT", "(", "*", ")", ",", "SUM", "(", "total", ")", "FROM", "invoices", "WHERE", "billing_state", "=", "``", "CA", "''", ";"], "query_toks_no_value": ["select", "billing_state", ",", "count", "(", "*", ")", ",", "sum", "(", "total", ")", "from", "invoices", "where", "billing_state", "=", "value"], "question": "What is the number of invoices and total money billed in them from CA?", "question_toks": ["What", "is", "the", "number", "of", "invoices", "and", "total", "money", "billed", "in", "them", "from", "CA", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 43, false], null]], [3, [0, [0, 0, false], null]], [4, [0, [0, 46, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 43, false], null], "\"CA\"", null]]}, "primary_key": {"invoices": "id"}, "orig_query": "select billing_state, count(*), sum(total) from invoices where billing_state = \"CA\"", "split_map": {"invoices": ["max_total", "min_total", "avg_total", "total_total"]}, "schema_with_content": "artists : id (143, 133, 261), name (\"Mela Tenenbaum, Pro Musica Prague & Richard Kapp\", \"Adrian Leaper & Doreen de Feis\", \"Michele Campanella\") | sqlite_sequence : name (\"media_types\", \"invoice_lines\", \"invoices\"), seq (2240, 5, 18) | albums : title (\"Are You Experienced?\", \"Elis Regina-Minha Hist\u00c3\u00b3ria\", \"St. Anger\"), id (109, 303, 329), artist_id (37, 258, 91) | employees : birth_date (\"1958-12-08 00:00:00\", \"1947-09-19 00:00:00\", \"1970-05-29 00:00:00\"), id (6, 2, 4), title (\"IT Manager\", \"Sales Manager\", \"Sales Support Agent\"), last_name (\"Callahan\", \"Callahan\", \"Edwards\"), address (\"5827 Bowness Road NW\", \"7727B 41 Ave\", \"7727B 41 Ave\"), state (\"AB\"), postal_code (\"T5K 2N1\", \"T2P 5G3\", \"T1K 5N8\"), reports_to (2, 1, 1), hire_date (\"2003-10-17 00:00:00\", \"2003-10-17 00:00:00\", \"2002-04-01 00:00:00\"), fax (\"+1 (403) 262-6712\", \"+1 (780) 428-3457\", \"+1 (403) 262-3322\"), first_name (\"Michael\", \"Jane\", \"Margaret\"), email (\"laura@chinookcorp.com\", \"laura@chinookcorp.com\", \"jane@chinookcorp.com\"), city (\"Edmonton\", \"Calgary\", \"Lethbridge\"), phone (\"+1 (403) 263-4423\", \"+1 (403) 467-3351\", \"+1 (403) 262-3443\"), country (\"Canada\") | customers : address (\"Pra\u00c3\u00a7a Pio X, 119\", \"S\u00c3\u00b8nder Boulevard 51\", \"421 Bourke Street\"), fax (None, None, \"+55 (11) 3033-4564\"), phone (\"+420 2 4172 5555\", \"+351 (213) 466-111\", \"+55 (11) 3055-3278\"), city (\"Stuttgart\", \"Delhi\", \"Fort Worth\"), state (\"NS\", \"CA\", None), email (\"fernadaramos4@uol.com.br\", \"hholy@gmail.com\", \"hughoreilly@apple.ie\"), last_name (\"H\u00c3\u00a4m\u00c3\u00a4l\u00c3\u00a4inen\", \"O'Reilly\", \"Guti\u00c3\u00a9rrez\"), first_name (\"Dominique\", \"Hannah\", \"Lu\u00c3\u00ads\"), id (4, 42, 42), support_rep_id (3, 4, 5), country (\"Spain\", \"France\", \"Germany\"), company (\"Woodstock Discos\", \"Woodstock Discos\", \"Riotur\"), postal_code (\"2113\", \"98052-8300\", \"110017\") | genres : name (\"Sci Fi & Fantasy\", \"Blues\", \"Drama\"), id (14, 13, 9) | invoices : billing_state (\"Dublin\", \"NSW\", \"MB\"), total (10.91, 18.86, 10.91), invoice_date (\"2011-08-04 00:00:00\", \"2007-08-07 00:00:00\", \"2009-09-06 00:00:00\"), billing_address (\"Barbarossastra\u00c3\u009fe 19\", \"1 Infinite Loop\", \"68, Rue Jouvence\"), billing_postal_code (\"1720\", \"1016\", \"11230\"), billing_country (\"Canada\", \"Czech Republic\", \"Poland\"), billing_city (\"Oslo\", \"Buenos Aires\", \"Salt Lake City\"), id (198, 202, 315), customer_id (45, 12, 46) | invoices_total : invoice_date (\"2011-08-04 00:00:00\", \"2007-08-07 00:00:00\", \"2009-09-06 00:00:00\"), billing_postal_code (\"1720\", \"1016\", \"11230\"), avg_total (10.91, 18.86, 10.91), customer_id (45, 12, 46), billing_state (\"Dublin\", \"NSW\", \"MB\"), billing_address (\"Barbarossastra\u00c3\u009fe 19\", \"1 Infinite Loop\", \"68, Rue Jouvence\"), id (198, 202, 315), total_total (10.91, 18.86, 10.91), billing_city (\"Oslo\", \"Buenos Aires\", \"Salt Lake City\"), max_total (10.91, 18.86, 10.91), min_total (10.91, 18.86, 10.91), billing_country (\"Canada\", \"Czech Republic\", \"Poland\") | media_types : id (1, 4, 4), name (\"Protected MPEG-4 video file\", \"Protected AAC audio file\", \"AAC audio file\") | tracks : name (\"My World\", \"A.N.D.R.O.T.A.Z.\", \"M\u00c3\u00basica De Trabalho\"), bytes (8092463, 12345289, 6270503), id (3105, 2923, 539), genre_id (25, 22, 6), composer (\"Guio De Morais E Seus \"Parentes\"/Luiz Gonzaga\", \"Richard Bull\", \"Mauro Diniz/Ratino Sigem\"), media_type_id (4, 3, 3), album_id (71, 27, 163), milliseconds (236355, 2587370, 340114), unit_price (0.99, 1.99) | invoice_lines : invoice_id (42, 349, 364), track_id (1576, 1470, 2155), unit_price (0.99, 1.99), quantity (1), id (1736, 195, 640) | playlists : id (3, 7, 6), name (\"90\u00e2\u0080\u0099s Music\", \"On-The-Go 1\", \"Movies\") | playlist_tracks : playlist_id (14, 11, 8), track_id (248, 1723, 2230)", "schema_without_content": "artists : id , name  | sqlite_sequence : name , seq  | albums : title , id , artist_id  | employees : birth_date , id , title , last_name , address , state , postal_code , reports_to , hire_date , fax  262-6712\", \"+1  428-3457\", \"+1  262-3322\", first_name , email , city , phone  263-4423\", \"+1  467-3351\", \"+1  262-3443\", country  | customers : address , fax  3033-4564\", phone  466-111\", \"+55  3055-3278\", city , state , email , last_name , first_name , id , support_rep_id , country , company , postal_code  | genres : name , id  | invoices : billing_state , total , invoice_date , billing_address , billing_postal_code , billing_country , billing_city , id , customer_id  | invoices_total : invoice_date , billing_postal_code , avg_total , customer_id , billing_state , billing_address , id , total_total , billing_city , max_total , min_total , billing_country  | media_types : id , name  | tracks : name , bytes , id , genre_id , composer , media_type_id , album_id , milliseconds , unit_price  | invoice_lines : invoice_id , track_id , unit_price , quantity , id  | playlists : id , name  | playlist_tracks : playlist_id , track_id "}, {"db_id": "race_track", "query": "select min_seating, max_seating, avg_seating from track_seating", "query_toks": ["SELECT", "min", "(", "seating", ")", ",", "max", "(", "seating", ")", ",", "avg", "(", "seating", ")", "FROM", "track"], "query_toks_no_value": ["select", "min", "(", "seating", ")", ",", "max", "(", "seating", ")", ",", "avg", "(", "seating", ")", "from", "track"], "question": "What is the minimum, maximum, and average seating for all tracks.", "question_toks": ["What", "is", "the", "minimum", ",", "maximum", ",", "and", "average", "seating", "for", "all", "tracks", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 9, false], null]], [1, [0, [0, 9, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"track": "track_id"}, "orig_query": "select min(seating), max(seating), avg(seating) from track", "split_map": {"track": ["max_seating", "min_seating", "avg_seating", "total_seating"]}, "schema_with_content": "race : race_id (3, 2, 1), name (\"Rolex 24 At Daytona\", \"Rolex 24 At Daytona\", \"Bosch Engineering 250 at VIR\"), class (\"DP/GT\", \"GT\"), date (\"May 26\", \"April 19\", \"April 19\"), track_id (\"2\", \"5\", \"1\") | track : name (\"Martinsville Speedway\", \"Darlington Raceway\", \"Daytona International Speedway\"), location (\"Avondale, AZ\", \"Daytona Beach, FL\", \"Brooklyn, MI\"), seating (92000.0, 92000.0, 81687.0), track_id (9, 2, 7), year_opened (1947.0, 1959.0, 1995.0) | track_seating : min_seating (92000.0, 92000.0, 81687.0), avg_seating (92000.0, 92000.0, 81687.0), max_seating (92000.0, 92000.0, 81687.0), name (\"Martinsville Speedway\", \"Darlington Raceway\", \"Daytona International Speedway\"), track_id (9, 2, 7), total_seating (92000.0, 92000.0, 81687.0), location (\"Avondale, AZ\", \"Daytona Beach, FL\", \"Brooklyn, MI\"), year_opened (1947.0, 1959.0, 1995.0)", "schema_without_content": "race : race_id , name , class , date , track_id  | track : name , location , seating , track_id , year_opened  | track_seating : min_seating , avg_seating , max_seating , name , track_id , total_seating , location , year_opened "}, {"db_id": "race_track", "query": "select min_seating, max_seating, avg_seating from track_seating", "query_toks": ["SELECT", "min", "(", "seating", ")", ",", "max", "(", "seating", ")", ",", "avg", "(", "seating", ")", "FROM", "track"], "query_toks_no_value": ["select", "min", "(", "seating", ")", ",", "max", "(", "seating", ")", ",", "avg", "(", "seating", ")", "from", "track"], "question": "Return the minimum, maximum, and average seating across all tracks.", "question_toks": ["Return", "the", "minimum", ",", "maximum", ",", "and", "average", "seating", "across", "all", "tracks", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 9, false], null]], [1, [0, [0, 9, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"track": "track_id"}, "orig_query": "select min(seating), max(seating), avg(seating) from track", "split_map": {"track": ["max_seating", "min_seating", "avg_seating", "total_seating"]}, "schema_with_content": "race : track_id (\"4\", \"5\", \"7\"), class (\"DP/GT\", \"GT\"), name (\"RumBum.com 250\", \"Sahlen's Six Hours of the Glen\", \"Bosch Engineering 250 at VIR\"), race_id (5, 6, 6), date (\"May 26\", \"May 17\", \"March 29\") | track : name (\"Homestead-Miami Speedway\", \"Phoenix International Raceway\", \"Chicagoland Speedway\"), track_id (5, 8, 4), year_opened (1964.0, 1959.0, 1947.0), location (\"Avondale, AZ\", \"Daytona Beach, FL\", \"Fontana, CA\"), seating (75000.0, 63000.0, 75000.0) | track_seating : max_seating (75000.0, 63000.0, 75000.0), total_seating (75000.0, 63000.0, 75000.0), min_seating (75000.0, 63000.0, 75000.0), avg_seating (75000.0, 63000.0, 75000.0), name (\"Homestead-Miami Speedway\", \"Phoenix International Raceway\", \"Chicagoland Speedway\"), location (\"Avondale, AZ\", \"Daytona Beach, FL\", \"Fontana, CA\"), track_id (5, 8, 4), year_opened (1964.0, 1959.0, 1947.0)", "schema_without_content": "race : track_id , class , name , race_id , date  | track : name , track_id , year_opened , location , seating  | track_seating : max_seating , total_seating , min_seating , avg_seating , name , location , track_id , year_opened "}, {"db_id": "coffee_shop", "query": "select avg_num_of_staff, (score)from shop_num_of_staff", "query_toks": ["SELECT", "avg", "(", "num_of_staff", ")", ",", "avg", "(", "score", ")", "FROM", "shop"], "query_toks_no_value": ["select", "avg", "(", "num_of_staff", ")", ",", "avg", "(", "score", ")", "from", "shop"], "question": "What are the average score and average staff number of all shops?", "question_toks": ["What", "are", "the", "average", "score", "and", "average", "staff", "number", "of", "all", "shops", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]], [5, [0, [0, 4, false], null]]]], "union": null, "where": []}, "primary_key": {"shop": "shop_id"}, "orig_query": "select avg(num_of_staff), avg(score) from shop", "split_map": {"shop": ["max_num_of_staff", "min_num_of_staff", "avg_num_of_staff", "total_num_of_staff"]}, "schema_with_content": "shop : shop_id (7, 2, 8), num_of_staff (\"16\", \"34\", \"24\"), address (\"909 Walnut Street\", \"1200 Main Street\", \"414 E. 12th Street\"), score (40.0, 30.0, 38.0), open_year (\"2010\", \"2006\", \"2011\") | shop_num_of_staff : total_num_of_staff (\"16\", \"34\", \"24\"), max_num_of_staff (\"16\", \"34\", \"24\"), address (\"909 Walnut Street\", \"1200 Main Street\", \"414 E. 12th Street\"), avg_num_of_staff (\"16\", \"34\", \"24\"), min_num_of_staff (\"16\", \"34\", \"24\"), shop_id (7, 2, 8), score (40.0, 30.0, 38.0), open_year (\"2010\", \"2006\", \"2011\") | member : level_of_membership (6, 6, 1), name (\"Cobb, Sedrick\", \"Rizzo, Todd\", \"Hayes, Steven\"), membership_card (\"Black\", \"White\"), member_id (5, 9, 4), time_of_purchase (26, 18, 20), age (35, 45, 67), address (\"Cheshire\", \"Hartford\", \"Cheshire\") | happy_hour : shop_id (1, 3, 5), hh_id (1, 4, 9), month (\"May\", \"July\", \"May\"), num_of_shaff_in_charge (5, 15, 3) | happy_hour_member : hh_id (7, 1, 7), member_id (3, 5, 9), total_amount (20.9, 16.9, 4.9)", "schema_without_content": "shop : shop_id , num_of_staff , address , score , open_year  | shop_num_of_staff : total_num_of_staff , max_num_of_staff , address , avg_num_of_staff , min_num_of_staff , shop_id , score , open_year  | member : level_of_membership , name , membership_card , member_id , time_of_purchase , age , address  | happy_hour : shop_id , hh_id , month , num_of_shaff_in_charge  | happy_hour_member : hh_id , member_id , total_amount "}, {"db_id": "coffee_shop", "query": "select (num_of_staff), avg_score from shop_score", "query_toks": ["SELECT", "avg", "(", "num_of_staff", ")", ",", "avg", "(", "score", ")", "FROM", "shop"], "query_toks_no_value": ["select", "avg", "(", "num_of_staff", ")", ",", "avg", "(", "score", ")", "from", "shop"], "question": "What are the average score and average staff number of all shops?", "question_toks": ["What", "are", "the", "average", "score", "and", "average", "staff", "number", "of", "all", "shops", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]], [5, [0, [0, 4, false], null]]]], "union": null, "where": []}, "primary_key": {"shop": "shop_id"}, "orig_query": "select avg(num_of_staff), avg(score) from shop", "split_map": {"shop": ["max_score", "min_score", "avg_score", "total_score"]}, "schema_with_content": "shop : shop_id (3, 1, 9), score (42.0, 38.0, 30.0), open_year (\"2010\", \"2008\", \"2011\"), num_of_staff (\"13\", \"28\", \"425\"), address (\"1100 Main Street\", \"2345 McGee Street\", \"324 E. 11th Street\") | shop_score : total_score (42.0, 38.0, 30.0), address (\"1100 Main Street\", \"2345 McGee Street\", \"324 E. 11th Street\"), shop_id (3, 1, 9), min_score (42.0, 38.0, 30.0), num_of_staff (\"13\", \"28\", \"425\"), avg_score (42.0, 38.0, 30.0), max_score (42.0, 38.0, 30.0), open_year (\"2010\", \"2008\", \"2011\") | member : name (\"Komisarjevsky, Joshua\", \"Rizzo, Todd\", \"Campbell, Jessie\"), member_id (5, 6, 4), time_of_purchase (26, 24, 44), membership_card (\"Black\", \"White\"), address (\"Cheshire\", \"Cheshire\", \"Bridgeport\"), level_of_membership (6, 1, 4), age (51, 29, 35) | happy_hour : month (\"June\", \"April\", \"May\"), hh_id (10, 4, 3), num_of_shaff_in_charge (5, 10, 15), shop_id (1, 10, 5) | happy_hour_member : hh_id (1, 2, 8), member_id (3, 5, 9), total_amount (20.92, 16.9, 20.92)", "schema_without_content": "shop : shop_id , score , open_year , num_of_staff , address  | shop_score : total_score , address , shop_id , min_score , num_of_staff , avg_score , max_score , open_year  | member : name , member_id , time_of_purchase , membership_card , address , level_of_membership , age  | happy_hour : month , hh_id , num_of_shaff_in_charge , shop_id  | happy_hour_member : hh_id , member_id , total_amount "}, {"db_id": "chinook_1", "query": "select avg_unitprice from track_unitprice", "query_toks": ["SELECT", "AVG", "(", "UnitPrice", ")", "FROM", "TRACK"], "query_toks_no_value": ["select", "avg", "(", "unitprice", ")", "from", "track"], "question": "What is the average unit price of all the tracks?", "question_toks": ["What", "is", "the", "average", "unit", "price", "of", "all", "the", "tracks", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 10]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 64, false], null]]]], "union": null, "where": []}, "primary_key": {"track": "trackid"}, "orig_query": "select avg(unitprice) from track", "split_map": {"track": ["max_unitprice", "min_unitprice", "avg_unitprice", "total_unitprice"]}, "schema_with_content": "album : title (\"Bach: The Brandenburg Concertos\", \"Seek And Shall Find: More Of The Best (1963-1981)\", \"News Of The World\"), artistid (159, 221, 85), albumid (173, 185, 343) | artist : artistid (213, 223, 130), name (\"Sergei Prokofiev & Yuri Temirkanov\", \"UB40\", \"Smashing Pumpkins\") | customer : address (\"Porthaninkatu 9\", \"Celsiusg. 9\", \"Rua dos Campe\u00c3\u00b5es Europeus de Viena, 4350\"), postalcode (\"76110\", \"00530\", \"94040-111\"), firstname (\"Puja\", \"Diego\", \"Johannes\"), lastname (\"Zimmermann\", \"Nielsen\", \"Ralston\"), email (\"stanis\u00c5\u0082aw.w\u00c3\u00b3jcik@wp.pl\", \"luisg@embraer.com.br\", \"ricunningham@hotmail.com\"), customerid (38, 35, 8), city (\"Amsterdam\", \"Amsterdam\", \"Lisbon\"), phone (\"+1 (902) 450-0450\", \"+1 (617) 522-1333\", \"+1 (604) 688-2255\"), country (\"Chile\", \"Italy\", \"Hungary\"), supportrepid (3, 4, 5), state (\"MA\", \"NS\", \"DF\"), fax (None, \"+55 (12) 3923-5566\", \"+1 (408) 996-1011\"), company (\"Banco do Brasil S.A.\", \"Banco do Brasil S.A.\", None) | employee : hiredate (\"2003-10-17 00:00:00\", \"2002-04-01 00:00:00\", \"2004-03-04 00:00:00\"), birthdate (\"1962-02-18 00:00:00\", \"1973-08-29 00:00:00\", \"1947-09-19 00:00:00\"), city (\"Edmonton\", \"Calgary\", \"Lethbridge\"), email (\"andrew@chinookcorp.com\", \"steve@chinookcorp.com\", \"nancy@chinookcorp.com\"), postalcode (\"T2P 5M5\", \"T3B 1Y7\", \"T3B 1Y7\"), state (\"AB\"), lastname (\"King\", \"Park\", \"Adams\"), address (\"825 8 Ave SW\", \"11120 Jasper Ave NW\", \"11120 Jasper Ave NW\"), fax (\"+1 (403) 263-4289\", \"1 (780) 836-9543\", \"+1 (403) 262-6712\"), reportsto (2, 2, 1), country (\"Canada\"), firstname (\"Michael\", \"Laura\", \"Robert\"), title (\"IT Staff\", \"IT Staff\", \"General Manager\"), employeeid (3, 1, 3), phone (\"+1 (403) 262-3443\", \"+1 (780) 428-9482\", \"+1 (403) 246-9887\") | genre : name (\"Rock And Roll\", \"R&B/Soul\", \"Latin\"), genreid (13, 2, 11) | invoice : invoicedate (\"2010-04-11 00:00:00\", \"2011-07-30 00:00:00\", \"2012-01-22 00:00:00\"), billingcity (\"Rome\", \"Buenos Aires\", \"Budapest\"), total (17.91, 5.94, 1.99), billingpostalcode (\"1016\", \"1106\", \"70174\"), invoiceid (310, 407, 212), billingaddress (\"Rua dos Campe\u00c3\u00b5es Europeus de Viena, 4350\", \"Pra\u00c3\u00a7a Pio X, 119\", \"801 W 4th Street\"), billingstate (None, \"NV\", \"AB\"), billingcountry (\"USA\", \"USA\", \"Netherlands\"), customerid (22, 59, 34) | invoiceline : trackid (1454, 2770, 2983), invoiceid (10, 201, 362), invoicelineid (6, 972, 1480), quantity (1), unitprice (0.99, 1.99) | mediatype : name (\"MPEG audio file\", \"Protected AAC audio file\", \"AAC audio file\"), mediatypeid (1, 4, 2) | playlist : playlistid (6, 9, 4), name (\"Brazilian Music\", \"Classical 101 - The Basics\", \"Music Videos\") | playlisttrack : trackid (2741, 989, 2089), playlistid (9, 5, 8) | track : albumid (299, 181, 279), mediatypeid (4, 4, 2), composer (\"Peninha\", \"Bino Farias/Da Gama/Laz\u00c3\u00a3o/R\u00c3\u00a1s Bernardo\", \"L\u00c3\u00b4 Borges, Fernando Brant\"), trackid (2969, 3343, 2015), genreid (25, 25, 12), bytes (5227579, 8360999, 7205844), milliseconds (588564, 2593760, 142602), unitprice (0.99, 1.99), name (\"They Can't Take That Away From Me\", \"Cavalleria Rusticana  Act  Intermezzo Sinfonico\", \"Branch Closing\") | track_unitprice : albumid (299, 181, 279), bytes (5227579, 8360999, 7205844), min_unitprice (0.99, 1.99), milliseconds (588564, 2593760, 142602), max_unitprice (0.99, 1.99), trackid (2969, 3343, 2015), avg_unitprice (0.99, 1.99), total_unitprice (0.99, 1.99), name (\"They Can't Take That Away From Me\", \"Cavalleria Rusticana  Act  Intermezzo Sinfonico\", \"Branch Closing\"), composer (\"Peninha\", \"Bino Farias/Da Gama/Laz\u00c3\u00a3o/R\u00c3\u00a1s Bernardo\", \"L\u00c3\u00b4 Borges, Fernando Brant\"), mediatypeid (4, 4, 2), genreid (25, 25, 12)", "schema_without_content": "album : title \", \"News Of The World\", artistid , albumid  | artist : artistid , name  | customer : address , postalcode , firstname , lastname , email , customerid , city , phone  450-0450\", \"+1  522-1333\", \"+1  688-2255\", country , supportrepid , state , fax  3923-5566\", \"+1  996-1011\", company  | employee : hiredate , birthdate , city , email , postalcode , state , lastname , address , fax  263-4289\", \"1  836-9543\", \"+1  262-6712\", reportsto , country , firstname , title , employeeid , phone  262-3443\", \"+1  428-9482\", \"+1  246-9887\" | genre : name , genreid  | invoice : invoicedate , billingcity , total , billingpostalcode , invoiceid , billingaddress , billingstate , billingcountry , customerid  | invoiceline : trackid , invoiceid , invoicelineid , quantity , unitprice  | mediatype : name , mediatypeid  | playlist : playlistid , name  | playlisttrack : trackid , playlistid  | track : albumid , mediatypeid , composer , trackid , genreid , bytes , milliseconds , unitprice , name  | track_unitprice : albumid , bytes , min_unitprice , milliseconds , max_unitprice , trackid , avg_unitprice , total_unitprice , name , composer , mediatypeid , genreid "}, {"db_id": "chinook_1", "query": "select avg_unitprice from track_unitprice", "query_toks": ["SELECT", "AVG", "(", "UnitPrice", ")", "FROM", "TRACK"], "query_toks_no_value": ["select", "avg", "(", "unitprice", ")", "from", "track"], "question": "Find the average unit price for a track.", "question_toks": ["Find", "the", "average", "unit", "price", "for", "a", "track", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 10]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 64, false], null]]]], "union": null, "where": []}, "primary_key": {"track": "trackid"}, "orig_query": "select avg(unitprice) from track", "split_map": {"track": ["max_unitprice", "min_unitprice", "avg_unitprice", "total_unitprice"]}, "schema_with_content": "album : artistid (88, 243, 204), albumid (235, 305, 110), title (\"Chronicle, Vol. 1\", \"Warner 25 Anos\", \"Haydn: Symphonies 99 - 104\") | artist : name (\"Van Halen\", \"Philharmonia Orchestra & Sir Neville Marriner\", \"Jota Quest\"), artistid (215, 134, 239) | customer : email (\"enrique_munoz@yahoo.es\", \"hleacock@gmail.com\", \"puja_srivastava@yahoo.in\"), postalcode (\"21000\", \"10012-2612\", \"01007-010\"), supportrepid (3, 4, 5), company (None, \"Banco do Brasil S.A.\", \"Riotur\"), fax (\"+1 (650) 253-0000\", \"+1 (425) 882-8081\", \"+55 (11) 3033-4564\"), city (\"Madrid\", \"Copenhagen\", \"Ottawa\"), address (\"Via Degli Scipioni, 43\", \"Gr\u00c3\u00a9trystraat 63\", \"113 Lupus St\"), customerid (2, 54, 6), phone (\"+1 (312) 332-3232\", \"+1 (780) 434-4554\", \"+420 2 4172 5555\"), country (\"Chile\", \"Austria\", \"Argentina\"), firstname (\"Lu\u00c3\u00ads\", \"Mark\", \"Stanis\u00c5\u0082aw\"), state (\"SP\", \"AB\", \"UT\"), lastname (\"W\u00c3\u00b3jcik\", \"Srivastava\", \"Chase\") | employee : firstname (\"Margaret\", \"Robert\", \"Jane\"), state (\"AB\"), postalcode (\"T3B 1Y7\", \"T1H 1Y8\", \"T3B 0C5\"), phone (\"+1 (403) 262-3443\", \"+1 (403) 467-3351\", \"+1 (780) 428-9482\"), address (\"7727B 41 Ave\", \"825 8 Ave SW\", \"11120 Jasper Ave NW\"), city (\"Edmonton\", \"Calgary\", \"Lethbridge\"), hiredate (\"2002-04-01 00:00:00\", \"2003-10-17 00:00:00\", \"2002-05-01 00:00:00\"), employeeid (1, 2, 7), birthdate (\"1947-09-19 00:00:00\", \"1947-09-19 00:00:00\", \"1962-02-18 00:00:00\"), fax (\"+1 (403) 263-4289\", \"+1 (403) 262-6712\", \"+1 (403) 246-9899\"), email (\"nancy@chinookcorp.com\", \"jane@chinookcorp.com\", \"steve@chinookcorp.com\"), reportsto (2, 2, None), country (\"Canada\"), lastname (\"Adams\", \"Edwards\", \"Johnson\"), title (\"General Manager\", \"Sales Manager\", \"Sales Support Agent\") | genre : genreid (25, 1, 20), name (\"Pop\", \"Jazz\", \"Alternative & Punk\") | invoice : billingcity (\"Amsterdam\", \"Frankfurt\", \"Delhi\"), total (21.86, 11.94, 8.91), customerid (15, 25, 49), billingstate (\"RJ\", None, \"IL\"), billingaddress (\"696 Osborne Street\", \"1 Infinite Loop\", \"302 S 700 E\"), invoiceid (57, 230, 380), invoicedate (\"2012-01-01 00:00:00\", \"2011-07-25 00:00:00\", \"2013-05-03 00:00:00\"), billingcountry (\"Poland\", \"Czech Republic\", \"Argentina\"), billingpostalcode (\"75009\", \"01310-200\", \"0171\") | invoiceline : unitprice (0.99, 1.99), invoicelineid (908, 2174, 1000), trackid (1834, 2112, 1762), quantity (1), invoiceid (41, 304, 60) | mediatype : name (\"MPEG audio file\", \"Protected AAC audio file\", \"MPEG audio file\"), mediatypeid (3, 5, 3) | playlist : name (\"90\u00e2\u0080\u0099s Music\", \"Classical 101 - Next Steps\", \"Brazilian Music\"), playlistid (14, 10, 1) | playlisttrack : playlistid (3, 16, 1), trackid (466, 3424, 3059) | track : mediatypeid (4, 4, 5), unitprice (0.99, 1.99), milliseconds (203415, 209867, 235728), name (\"Roadrunner\", \"Electric Eye\", \"Da Lama Ao Caos\"), trackid (2489, 715, 1333), composer (\"Do Vale, Valverde/Gal Oliveira/Luciano Pinto\", \"Big Bill Broonzy\", \"Jimmy Page/Robert Plant\"), genreid (15, 15, 16), bytes (515671080, 211997, 9900469), albumid (267, 280, 183) | track_unitprice : composer (\"Do Vale, Valverde/Gal Oliveira/Luciano Pinto\", \"Big Bill Broonzy\", \"Jimmy Page/Robert Plant\"), max_unitprice (0.99, 1.99), albumid (267, 280, 183), bytes (515671080, 211997, 9900469), total_unitprice (0.99, 1.99), min_unitprice (0.99, 1.99), mediatypeid (4, 4, 5), genreid (15, 15, 16), trackid (2489, 715, 1333), name (\"Roadrunner\", \"Electric Eye\", \"Da Lama Ao Caos\"), milliseconds (203415, 209867, 235728), avg_unitprice (0.99, 1.99)", "schema_without_content": "album : artistid , albumid , title  | artist : name , artistid  | customer : email , postalcode , supportrepid , company , fax  253-0000\", \"+1  882-8081\", \"+55  3033-4564\", city , address , customerid , phone  332-3232\", \"+1  434-4554\", \"+420 2 4172 5555\", country , firstname , state , lastname  | employee : firstname , state , postalcode , phone  262-3443\", \"+1  467-3351\", \"+1  428-9482\", address , city , hiredate , employeeid , birthdate , fax  263-4289\", \"+1  262-6712\", \"+1  246-9899\", email , reportsto , country , lastname , title  | genre : genreid , name  | invoice : billingcity , total , customerid , billingstate , billingaddress , invoiceid , invoicedate , billingcountry , billingpostalcode  | invoiceline : unitprice , invoicelineid , trackid , quantity , invoiceid  | mediatype : name , mediatypeid  | playlist : name , playlistid  | playlisttrack : playlistid , trackid  | track : mediatypeid , unitprice , milliseconds , name , trackid , composer , genreid , bytes , albumid  | track_unitprice : composer , max_unitprice , albumid , bytes , total_unitprice , min_unitprice , mediatypeid , genreid , trackid , name , milliseconds , avg_unitprice "}, {"db_id": "chinook_1", "query": "select max_milliseconds, min_milliseconds from track_milliseconds", "query_toks": ["SELECT", "max", "(", "Milliseconds", ")", ",", "min", "(", "Milliseconds", ")", "FROM", "TRACK"], "query_toks_no_value": ["select", "max", "(", "milliseconds", ")", ",", "min", "(", "milliseconds", ")", "from", "track"], "question": "What are the durations of the longest and the shortest tracks in milliseconds?", "question_toks": ["What", "are", "the", "durations", "of", "the", "longest", "and", "the", "shortest", "tracks", "in", "milliseconds", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 10]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 62, false], null]], [2, [0, [0, 62, false], null]]]], "union": null, "where": []}, "primary_key": {"track": "trackid"}, "orig_query": "select max(milliseconds), min(milliseconds) from track", "split_map": {"track": ["max_milliseconds", "min_milliseconds", "avg_milliseconds", "total_milliseconds"]}, "schema_with_content": "album : albumid (345, 17, 341), artistid (5, 270, 244), title (\"Tangents\", \"Liszt - 12 \u00c3\u0089tudes D'Execution Transcendante\", \"Ax\u00c3\u00a9 Bahia 2001\") | artist : artistid (59, 158, 124), name (\"Sergei Prokofiev & Yuri Temirkanov\", \"Chicago Symphony Orchestra & Fritz Reiner\", \"System Of A Down\") | customer : state (\"RM\", \"ON\", \"ON\"), customerid (50, 39, 53), fax (None, \"+1 (425) 882-8081\", \"+1 (780) 434-5565\"), city (\"Helsinki\", \"Vancouver\", \"Lisbon\"), email (\"jenniferp@rogers.ca\", \"jfernandes@yahoo.pt\", \"ladislav_kovacs@apple.hu\"), phone (\"+420 2 4172 5555\", \"+1 (650) 253-0000\", \"+1 (408) 996-1010\"), supportrepid (3, 4, 5), address (\"11, Place Bellecour\", \"Rilsk\u00c3\u00a1 3174/6\", \"11, Place Bellecour\"), lastname (\"Bernard\", \"Mitchell\", \"Rocha\"), company (\"Rogers Canada\", \"Google Inc.\", \"Woodstock Discos\"), postalcode (\"14300\", \"84102\", \"32801\"), firstname (\"Enrique\", \"Stanis\u00c5\u0082aw\", \"Diego\"), country (\"Belgium\", \"France\", \"Ireland\") | employee : postalcode (\"T5K 2N1\", \"T2P 5G3\", \"T2P 5G3\"), reportsto (None, 1, 1), birthdate (\"1973-07-01 00:00:00\", \"1962-02-18 00:00:00\", \"1962-02-18 00:00:00\"), country (\"Canada\"), firstname (\"Michael\", \"Steve\", \"Nancy\"), email (\"margaret@chinookcorp.com\", \"jane@chinookcorp.com\", \"michael@chinookcorp.com\"), lastname (\"Mitchell\", \"Johnson\", \"Edwards\"), fax (\"+1 (403) 262-6712\", \"+1 (403) 246-9899\", \"+1 (403) 246-9899\"), phone (\"+1 (780) 428-9482\", \"+1 (780) 428-9482\", \"+1 (403) 456-9986\"), hiredate (\"2002-05-01 00:00:00\", \"2002-08-14 00:00:00\", \"2003-05-03 00:00:00\"), city (\"Edmonton\", \"Calgary\", \"Lethbridge\"), state (\"AB\"), employeeid (3, 2, 6), address (\"1111 6 Ave SW\", \"1111 6 Ave SW\", \"825 8 Ave SW\"), title (\"IT Staff\", \"Sales Support Agent\", \"General Manager\") | genre : genreid (15, 24, 8), name (\"Comedy\", \"Hip Hop/Rap\", \"Science Fiction\") | invoice : total (17.91, 17.91, 15.86), customerid (36, 25, 54), billingstate (None, \"Dublin\", None), invoicedate (\"2013-12-05 00:00:00\", \"2013-03-05 00:00:00\", \"2010-01-26 00:00:00\"), invoiceid (32, 164, 96), billingaddress (\"C/ San Bernardo 85\", \"Theodor-Heuss-Stra\u00c3\u009fe 34\", \"Barbarossastra\u00c3\u009fe 19\"), billingcity (\"Dublin\", \"Buenos Aires\", \"Paris\"), billingcountry (\"United Kingdom\", \"Portugal\", \"Czech Republic\"), billingpostalcode (\"110017\", \"32801\", \"85719\") | invoiceline : invoiceid (276, 345, 189), trackid (659, 1735, 1626), quantity (1), invoicelineid (2141, 158, 1020), unitprice (0.99, 1.99) | mediatype : name (\"AAC audio file\", \"AAC audio file\", \"Protected MPEG-4 video file\"), mediatypeid (5, 1, 2) | playlist : name (\"Audiobooks\", \"Grunge\", \"TV Shows\"), playlistid (5, 4, 2) | playlisttrack : trackid (2631, 3212, 1435), playlistid (18, 16, 10) | track : unitprice (0.99, 1.99), trackid (3059, 2157, 2296), name (\"Voodoo\", \"The Number Of The Beast\", \"From Afar\"), milliseconds (343431, 198556, 99108), composer (\"Geddy Lee And Alex Lifeson/Geddy Lee And Neil Peart/Rush\", \"E. Schrody/L. Dimant\", \"Cliff Burton\"), albumid (321, 345, 3), bytes (52490554, 10784595, 5735902), genreid (14, 21, 23), mediatypeid (2, 1, 1) | track_milliseconds : max_milliseconds (343431, 198556, 99108), composer (\"Geddy Lee And Alex Lifeson/Geddy Lee And Neil Peart/Rush\", \"E. Schrody/L. Dimant\", \"Cliff Burton\"), trackid (3059, 2157, 2296), albumid (321, 345, 3), avg_milliseconds (343431, 198556, 99108), genreid (14, 21, 23), min_milliseconds (343431, 198556, 99108), name (\"Voodoo\", \"The Number Of The Beast\", \"From Afar\"), total_milliseconds (343431, 198556, 99108), mediatypeid (2, 1, 1), bytes (52490554, 10784595, 5735902), unitprice (0.99, 1.99)", "schema_without_content": "album : albumid , artistid , title  | artist : artistid , name  | customer : state , customerid , fax  882-8081\", \"+1  434-5565\", city , email , phone  253-0000\", \"+1  996-1010\", supportrepid , address , lastname , company , postalcode , firstname , country  | employee : postalcode , reportsto , birthdate , country , firstname , email , lastname , fax  262-6712\", \"+1  246-9899\", \"+1  246-9899\", phone  428-9482\", \"+1  428-9482\", \"+1  456-9986\", hiredate , city , state , employeeid , address , title  | genre : genreid , name  | invoice : total , customerid , billingstate , invoicedate , invoiceid , billingaddress , billingcity , billingcountry , billingpostalcode  | invoiceline : invoiceid , trackid , quantity , invoicelineid , unitprice  | mediatype : name , mediatypeid  | playlist : name , playlistid  | playlisttrack : trackid , playlistid  | track : unitprice , trackid , name , milliseconds , composer , albumid , bytes , genreid , mediatypeid  | track_milliseconds : max_milliseconds , composer , trackid , albumid , avg_milliseconds , genreid , min_milliseconds , name , total_milliseconds , mediatypeid , bytes , unitprice "}, {"db_id": "chinook_1", "query": "select max_milliseconds, min_milliseconds from track_milliseconds", "query_toks": ["SELECT", "max", "(", "Milliseconds", ")", ",", "min", "(", "Milliseconds", ")", "FROM", "TRACK"], "query_toks_no_value": ["select", "max", "(", "milliseconds", ")", ",", "min", "(", "milliseconds", ")", "from", "track"], "question": "Find the maximum and minimum durations of tracks in milliseconds.", "question_toks": ["Find", "the", "maximum", "and", "minimum", "durations", "of", "tracks", "in", "milliseconds", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 10]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 62, false], null]], [2, [0, [0, 62, false], null]]]], "union": null, "where": []}, "primary_key": {"track": "trackid"}, "orig_query": "select max(milliseconds), min(milliseconds) from track", "split_map": {"track": ["max_milliseconds", "min_milliseconds", "avg_milliseconds", "total_milliseconds"]}, "schema_with_content": "album : title (\"From The Muddy Banks Of The Wishkah [Live]\", \"King For A Day Fool For A Lifetime\", \"Greatest Hits II\"), albumid (284, 236, 106), artistid (110, 21, 46) | artist : name (\"Cl\u00c3\u00a1udio Zoli\", \"Kid Abelha\", \"Banda Black Rio\"), artistid (135, 6, 40) | customer : address (\"Tauentzienstra\u00c3\u009fe 8\", \"Rua dos Campe\u00c3\u00b5es Europeus de Viena, 4350\", \"3,Raj Bhavan Road\"), postalcode (\"14300\", \"0171\", \"T6G 2C7\"), company (\"Rogers Canada\", \"Riotur\", \"Google Inc.\"), customerid (2, 48, 16), email (\"leonekohler@surfeu.de\", \"luisg@embraer.com.br\", \"emma_jones@hotmail.com\"), fax (\"+1 (408) 996-1011\", \"+1 (650) 253-0000\", \"+55 (12) 3923-5566\"), state (\"BC\", None, \"NS\"), phone (\"+1 (514) 721-4711\", \"+1 (617) 522-1333\", \"+34 914 454 454\"), supportrepid (3, 4, 5), country (\"Denmark\", \"Poland\", \"Norway\"), firstname (\"Alexandre\", \"Wyatt\", \"Edward\"), lastname (\"K\u00c3\u00b6hler\", \"Mu\u00c3\u00b1oz\", \"H\u00c3\u00a4m\u00c3\u00a4l\u00c3\u00a4inen\"), city (\"Salt Lake City\", \"Chicago\", \"New York\") | employee : reportsto (1, 1, 1), address (\"5827 Bowness Road NW\", \"590 Columbia Boulevard West\", \"825 8 Ave SW\"), fax (\"+1 (403) 262-6712\", \"+1 (403) 456-8485\", \"1 (780) 836-9543\"), employeeid (5, 5, 5), birthdate (\"1947-09-19 00:00:00\", \"1968-01-09 00:00:00\", \"1958-12-08 00:00:00\"), title (\"IT Manager\", \"Sales Manager\", \"IT Manager\"), country (\"Canada\"), phone (\"+1 (780) 428-9482\", \"+1 (403) 246-9887\", \"+1 (403) 456-9986\"), city (\"Edmonton\", \"Calgary\", \"Lethbridge\"), postalcode (\"T1H 1Y8\", \"T3B 1Y7\", \"T2P 2T3\"), lastname (\"Peacock\", \"Edwards\", \"Edwards\"), firstname (\"Michael\", \"Steve\", \"Nancy\"), email (\"andrew@chinookcorp.com\", \"andrew@chinookcorp.com\", \"jane@chinookcorp.com\"), state (\"AB\"), hiredate (\"2003-10-17 00:00:00\", \"2002-04-01 00:00:00\", \"2003-05-03 00:00:00\") | genre : genreid (7, 9, 1), name (\"Alternative\", \"Comedy\", \"Hip Hop/Rap\") | invoice : invoicedate (\"2011-05-06 00:00:00\", \"2013-08-03 00:00:00\", \"2009-01-01 00:00:00\"), invoiceid (309, 247, 213), billingaddress (\"8210 111 ST NW\", \"3,Raj Bhavan Road\", \"Lijnbaansgracht 120bg\"), total (11.94, 23.86, 7.96), billingcountry (\"Portugal\", \"Sweden\", \"Denmark\"), billingcity (\"Brussels\", \"Rome\", \"Buenos Aires\"), billingstate (\"NV\", \"SP\", \"QC\"), billingpostalcode (\"2113\", \"32801\", \"60316\"), customerid (47, 48, 12) | invoiceline : trackid (1509, 466, 2380), invoiceid (294, 408, 137), unitprice (0.99, 1.99), invoicelineid (1644, 965, 793), quantity (1) | mediatype : mediatypeid (4, 1, 2), name (\"MPEG audio file\", \"MPEG audio file\", \"Protected AAC audio file\") | playlist : playlistid (2, 4, 10), name (\"90\u00e2\u0080\u0099s Music\", \"Classical\", \"Audiobooks\") | playlisttrack : trackid (2910, 344, 3343), playlistid (16, 16, 8) | track : albumid (71, 177, 90), milliseconds (409547, 342282, 294530), composer (\"Kretz/R. DeLeo/Weiland\", \"Full Force/James Brown\", \"Diamond/Shermann\"), trackid (3325, 1195, 358), unitprice (0.99, 1.99), bytes (2256484, 9056902, 9310370), name (\"200 Years Old\", \"Phantom Of The Opera\", \"Babylon\"), genreid (23, 18, 20), mediatypeid (4, 5, 5) | track_milliseconds : genreid (23, 18, 20), avg_milliseconds (409547, 342282, 294530), albumid (71, 177, 90), name (\"200 Years Old\", \"Phantom Of The Opera\", \"Babylon\"), min_milliseconds (409547, 342282, 294530), composer (\"Kretz/R. DeLeo/Weiland\", \"Full Force/James Brown\", \"Diamond/Shermann\"), mediatypeid (4, 5, 5), max_milliseconds (409547, 342282, 294530), total_milliseconds (409547, 342282, 294530), trackid (3325, 1195, 358), bytes (2256484, 9056902, 9310370), unitprice (0.99, 1.99)", "schema_without_content": "album : title , albumid , artistid  | artist : name , artistid  | customer : address , postalcode , company , customerid , email , fax  996-1011\", \"+1  253-0000\", \"+55  3923-5566\", state , phone  721-4711\", \"+1  522-1333\", \"+34 914 454 454\", supportrepid , country , firstname , lastname , city  | employee : reportsto , address , fax  262-6712\", \"+1  456-8485\", \"1  836-9543\", employeeid , birthdate , title , country , phone  428-9482\", \"+1  246-9887\", \"+1  456-9986\", city , postalcode , lastname , firstname , email , state , hiredate  | genre : genreid , name  | invoice : invoicedate , invoiceid , billingaddress , total , billingcountry , billingcity , billingstate , billingpostalcode , customerid  | invoiceline : trackid , invoiceid , unitprice , invoicelineid , quantity  | mediatype : mediatypeid , name  | playlist : playlistid , name  | playlisttrack : trackid , playlistid  | track : albumid , milliseconds , composer , trackid , unitprice , bytes , name , genreid , mediatypeid  | track_milliseconds : genreid , avg_milliseconds , albumid , name , min_milliseconds , composer , mediatypeid , max_milliseconds , total_milliseconds , trackid , bytes , unitprice "}, {"db_id": "insurance_fnol", "query": "select total_settlement_amount, avg_settlement_amount from settlements_settlement_amount", "query_toks": ["SELECT", "sum", "(", "settlement_amount", ")", ",", "avg", "(", "settlement_amount", ")", "FROM", "settlements"], "query_toks_no_value": ["select", "sum", "(", "settlement_amount", ")", ",", "avg", "(", "settlement_amount", ")", "from", "settlements"], "question": "Find the total and average amount of settlements.", "question_toks": ["Find", "the", "total", "and", "average", "amount", "of", "settlements", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 22, false], null]], [5, [0, [0, 22, false], null]]]], "union": null, "where": []}, "primary_key": {"settlements": "settlement_id"}, "orig_query": "select sum(settlement_amount), avg(settlement_amount) from settlements", "split_map": {"settlements": ["max_settlement_amount", "min_settlement_amount", "avg_settlement_amount", "total_settlement_amount"]}, "schema_with_content": "customers : customer_name (\"Sydnie Friesen\", \"Mr. Randal Lynch III\", \"Mrs. Liza Heller V\"), customer_id (996, 562, 956) | services : service_name (\"Change a policy\", \"Change a policy\", \"Upgrade a policy\"), service_id (1, 6, 4) | available_policies : customer_phone (\"1-797-927-3585x9321\", \"1-446-940-9907x257\", \"+16(2)5838999222\"), policy_type_code (\"Travel Insurance\", \"Property Insurance\", \"Mortgage Insurance\"), policy_id (993, 257, 257) | customers_policies : policy_id (257, 366, 366), customer_id (996, 682, 256), date_opened (\"2016-07-07\", \"2017-01-05\", \"2016-11-18\"), date_closed (\"2018-03-20\", \"2018-02-13\", \"2018-03-19\") | first_notification_of_loss : fnol_id (1611, 2543, 2543), service_id (4, 9, 9), customer_id (826, 892, 996), policy_id (879, 927, 366) | claims : effective_date (\"1992-02-09\", \"1992-01-05\", \"1975-05-07\"), fnol_id (1611, 4525, 4323), claim_id (311, 134, 311) | settlements : settlement_id (616, 208, 205), effective_date (\"1978-09-09\", \"2003-12-28\", \"1995-04-02\"), claim_id (360, 360, 360), settlement_amount (8013.95, 1588.45, 9164.1) | settlements_settlement_amount : claim_id (360, 360, 360), effective_date (\"1978-09-09\", \"2003-12-28\", \"1995-04-02\"), max_settlement_amount (8013.95, 1588.45, 9164.1), avg_settlement_amount (8013.95, 1588.45, 9164.1), total_settlement_amount (8013.95, 1588.45, 9164.1), min_settlement_amount (8013.95, 1588.45, 9164.1), settlement_id (616, 208, 205)", "schema_without_content": "customers : customer_name , customer_id  | services : service_name , service_id  | available_policies : customer_phone 5838999222\", policy_type_code , policy_id  | customers_policies : policy_id , customer_id , date_opened , date_closed  | first_notification_of_loss : fnol_id , service_id , customer_id , policy_id  | claims : effective_date , fnol_id , claim_id  | settlements : settlement_id , effective_date , claim_id , settlement_amount  | settlements_settlement_amount : claim_id , effective_date , max_settlement_amount , avg_settlement_amount , total_settlement_amount , min_settlement_amount , settlement_id "}, {"db_id": "insurance_fnol", "query": "select total_settlement_amount, avg_settlement_amount from settlements_settlement_amount", "query_toks": ["SELECT", "sum", "(", "settlement_amount", ")", ",", "avg", "(", "settlement_amount", ")", "FROM", "settlements"], "query_toks_no_value": ["select", "sum", "(", "settlement_amount", ")", ",", "avg", "(", "settlement_amount", ")", "from", "settlements"], "question": "Return the sum and average of all settlement amounts.", "question_toks": ["Return", "the", "sum", "and", "average", "of", "all", "settlement", "amounts", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 22, false], null]], [5, [0, [0, 22, false], null]]]], "union": null, "where": []}, "primary_key": {"settlements": "settlement_id"}, "orig_query": "select sum(settlement_amount), avg(settlement_amount) from settlements", "split_map": {"settlements": ["max_settlement_amount", "min_settlement_amount", "avg_settlement_amount", "total_settlement_amount"]}, "schema_with_content": "customers : customer_id (956, 892, 923), customer_name (\"Mrs. Lilly Graham III\", \"Dr. Diana Rath\", \"Selena Gerhold\") | services : service_id (6, 6, 1), service_name (\"Upgrade a policy\", \"New policy application\", \"New policy application\") | available_policies : customer_phone (\"+16(2)5838999222\", \"405.090.8654x021\", \"+85(6)1302858396\"), policy_id (879, 257, 630), policy_type_code (\"Travel Insurance\", \"Property Insurance\", \"Life Insurance\") | customers_policies : date_opened (\"2016-04-11\", \"2016-06-24\", \"2017-01-05\"), policy_id (927, 993, 927), date_closed (\"2018-02-24\", \"2018-03-04\", \"2018-03-03\"), customer_id (641, 214, 996) | first_notification_of_loss : policy_id (879, 927, 927), service_id (1, 4, 6), customer_id (996, 826, 582), fnol_id (532, 4525, 4525) | claims : fnol_id (4525, 4226, 1722), claim_id (228, 145, 311), effective_date (\"1975-05-07\", \"1985-03-24\", \"2009-02-11\") | settlements : settlement_id (604, 205, 176), claim_id (641, 717, 309), settlement_amount (8013.95, 3101.3, 3101.3), effective_date (\"1995-04-02\", \"1995-04-02\", \"1972-03-02\") | settlements_settlement_amount : total_settlement_amount (8013.95, 3101.3, 3101.3), settlement_id (604, 205, 176), avg_settlement_amount (8013.95, 3101.3, 3101.3), min_settlement_amount (8013.95, 3101.3, 3101.3), effective_date (\"1995-04-02\", \"1995-04-02\", \"1972-03-02\"), max_settlement_amount (8013.95, 3101.3, 3101.3), claim_id (641, 717, 309)", "schema_without_content": "customers : customer_id , customer_name  | services : service_id , service_name  | available_policies : customer_phone 5838999222\", \"405.090.8654x021\", \"+851302858396\", policy_id , policy_type_code  | customers_policies : date_opened , policy_id , date_closed , customer_id  | first_notification_of_loss : policy_id , service_id , customer_id , fnol_id  | claims : fnol_id , claim_id , effective_date  | settlements : settlement_id , claim_id , settlement_amount , effective_date  | settlements_settlement_amount : total_settlement_amount , settlement_id , avg_settlement_amount , min_settlement_amount , effective_date , max_settlement_amount , claim_id "}, {"db_id": "insurance_fnol", "query": "select max_settlement_amount, min_settlement_amount from settlements_settlement_amount", "query_toks": ["SELECT", "max", "(", "settlement_amount", ")", ",", "min", "(", "settlement_amount", ")", "FROM", "settlements"], "query_toks_no_value": ["select", "max", "(", "settlement_amount", ")", ",", "min", "(", "settlement_amount", ")", "from", "settlements"], "question": "What are the maximum and minimum settlement amount on record?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "settlement", "amount", "on", "record", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 22, false], null]], [2, [0, [0, 22, false], null]]]], "union": null, "where": []}, "primary_key": {"settlements": "settlement_id"}, "orig_query": "select max(settlement_amount), min(settlement_amount) from settlements", "split_map": {"settlements": ["max_settlement_amount", "min_settlement_amount", "avg_settlement_amount", "total_settlement_amount"]}, "schema_with_content": "customers : customer_id (214, 882, 882), customer_name (\"Dayana Robel\", \"Ellsworth Paucek\", \"Mrs. Liza Heller V\") | services : service_name (\"Close a policy\", \"New policy application\", \"New policy application\"), service_id (9, 4, 9) | available_policies : policy_id (366, 993, 246), policy_type_code (\"Travel Insurance\", \"Mortgage Insurance\", \"Property Insurance\"), customer_phone (\"813.178.8211x557\", \"242.763.9214\", \"+16(2)5838999222\") | customers_policies : policy_id (586, 366, 472), customer_id (582, 826, 214), date_opened (\"2016-07-22\", \"2016-07-22\", \"2016-07-22\"), date_closed (\"2018-02-25\", \"2018-03-20\", \"2018-02-25\") | first_notification_of_loss : service_id (1, 4, 1), customer_id (582, 582, 214), policy_id (366, 586, 879), fnol_id (1722, 4323, 4226) | claims : claim_id (311, 360, 311), effective_date (\"1996-11-29\", \"1992-01-05\", \"1975-05-07\"), fnol_id (1611, 4323, 1722) | settlements : settlement_id (176, 543, 543), effective_date (\"1973-10-27\", \"1973-10-27\", \"2001-07-02\"), settlement_amount (6451.65, 9164.1, 1721.17), claim_id (428, 145, 428) | settlements_settlement_amount : effective_date (\"1973-10-27\", \"1973-10-27\", \"2001-07-02\"), max_settlement_amount (6451.65, 9164.1, 1721.17), min_settlement_amount (6451.65, 9164.1, 1721.17), avg_settlement_amount (6451.65, 9164.1, 1721.17), settlement_id (176, 543, 543), claim_id (428, 145, 428), total_settlement_amount (6451.65, 9164.1, 1721.17)", "schema_without_content": "customers : customer_id , customer_name  | services : service_name , service_id  | available_policies : policy_id , policy_type_code , customer_phone 5838999222\" | customers_policies : policy_id , customer_id , date_opened , date_closed  | first_notification_of_loss : service_id , customer_id , policy_id , fnol_id  | claims : claim_id , effective_date , fnol_id  | settlements : settlement_id , effective_date , settlement_amount , claim_id  | settlements_settlement_amount : effective_date , max_settlement_amount , min_settlement_amount , avg_settlement_amount , settlement_id , claim_id , total_settlement_amount "}, {"db_id": "insurance_fnol", "query": "select max_settlement_amount, min_settlement_amount from settlements_settlement_amount", "query_toks": ["SELECT", "max", "(", "settlement_amount", ")", ",", "min", "(", "settlement_amount", ")", "FROM", "settlements"], "query_toks_no_value": ["select", "max", "(", "settlement_amount", ")", ",", "min", "(", "settlement_amount", ")", "from", "settlements"], "question": "Find the maximum and minimum settlement amount.", "question_toks": ["Find", "the", "maximum", "and", "minimum", "settlement", "amount", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 22, false], null]], [2, [0, [0, 22, false], null]]]], "union": null, "where": []}, "primary_key": {"settlements": "settlement_id"}, "orig_query": "select max(settlement_amount), min(settlement_amount) from settlements", "split_map": {"settlements": ["max_settlement_amount", "min_settlement_amount", "avg_settlement_amount", "total_settlement_amount"]}, "schema_with_content": "customers : customer_id (194, 214, 923), customer_name (\"America Jaskolski\", \"America Jaskolski\", \"America Jaskolski\") | services : service_name (\"Close a policy\", \"Upgrade a policy\", \"Upgrade a policy\"), service_id (9, 9, 9) | available_policies : policy_type_code (\"Mortgage Insurance\", \"Travel Insurance\", \"Life Insurance\"), customer_phone (\"405.090.8654x021\", \"405.090.8654x021\", \"1-797-927-3585x9321\"), policy_id (636, 927, 301) | customers_policies : policy_id (630, 301, 583), date_closed (\"2018-03-03\", \"2018-03-20\", \"2018-03-17\"), customer_id (892, 214, 562), date_opened (\"2016-07-03\", \"2016-04-11\", \"2016-07-03\") | first_notification_of_loss : service_id (4, 6, 9), fnol_id (2543, 4226, 4226), policy_id (879, 630, 586), customer_id (892, 214, 582) | claims : fnol_id (532, 4226, 4226), effective_date (\"2014-10-19\", \"1996-11-29\", \"1985-03-24\"), claim_id (360, 309, 604) | settlements : claim_id (145, 145, 145), settlement_id (628, 543, 616), effective_date (\"1995-04-02\", \"2003-12-28\", \"1972-03-02\"), settlement_amount (8013.95, 1721.17, 6451.65) | settlements_settlement_amount : avg_settlement_amount (8013.95, 1721.17, 6451.65), min_settlement_amount (8013.95, 1721.17, 6451.65), total_settlement_amount (8013.95, 1721.17, 6451.65), claim_id (145, 145, 145), effective_date (\"1995-04-02\", \"2003-12-28\", \"1972-03-02\"), max_settlement_amount (8013.95, 1721.17, 6451.65), settlement_id (628, 543, 616)", "schema_without_content": "customers : customer_id , customer_name  | services : service_name , service_id  | available_policies : policy_type_code , customer_phone , policy_id  | customers_policies : policy_id , date_closed , customer_id , date_opened  | first_notification_of_loss : service_id , fnol_id , policy_id , customer_id  | claims : fnol_id , effective_date , claim_id  | settlements : claim_id , settlement_id , effective_date , settlement_amount  | settlements_settlement_amount : avg_settlement_amount , min_settlement_amount , total_settlement_amount , claim_id , effective_date , max_settlement_amount , settlement_id "}, {"db_id": "medicine_enzyme_interaction", "query": "select max_omim from enzyme_omim", "query_toks": ["SELECT", "max", "(", "OMIM", ")", "FROM", "enzyme"], "query_toks_no_value": ["select", "max", "(", "omim", ")", "from", "enzyme"], "question": "What is the maximum Online Mendelian Inheritance in Man (OMIM) value of the enzymes?", "question_toks": ["What", "is", "the", "maximum", "Online", "Mendelian", "Inheritance", "in", "Man", "(", "OMIM", ")", "value", "of", "the", "enzymes", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 10, false], null]]]], "union": null, "where": []}, "primary_key": {"enzyme": "id"}, "orig_query": "select max(omim) from enzyme", "split_map": {"enzyme": ["max_omim", "min_omim", "avg_omim", "total_omim"]}, "schema_with_content": "medicine : id (10, 21, 12), name (\"Carpipramine\", \"Carpipramine\", \"Melperone\"), trade_name (\"Geodon\", \"Lullan\", \"Cremin\"), fda_approved (\"No\", \"Yes\") | enzyme : name (\"ALA dehydratase\", \"Uroporphyrinogen III synthase\", \"Protoporphyrinogen oxidase\"), id (1, 3, 5), porphyria (\"congenital erythropoietic porphyria\", \"coproporphyria\", \"erythropoietic protoporphyria\"), location (\"Mitochondrion\", \"Cytosol\"), product (\"Protoporphyrin IX\", \"Hydroxymethyl bilane\", \"Coproporphyrinogen III\"), omim (606938, 121300, 121300), chromosome (\"1p34\", \"3p21.1\", \"10q25.2-q26.3\") | enzyme_omim : min_omim (606938, 121300, 121300), product (\"Protoporphyrin IX\", \"Hydroxymethyl bilane\", \"Coproporphyrinogen III\"), name (\"ALA dehydratase\", \"Uroporphyrinogen III synthase\", \"Protoporphyrinogen oxidase\"), avg_omim (606938, 121300, 121300), id (1, 3, 5), max_omim (606938, 121300, 121300), location (\"Mitochondrion\", \"Cytosol\"), total_omim (606938, 121300, 121300), chromosome (\"1p34\", \"3p21.1\", \"10q25.2-q26.3\"), porphyria (\"congenital erythropoietic porphyria\", \"coproporphyria\", \"erythropoietic protoporphyria\") | medicine_enzyme_interaction : enzyme_id (4, 6, 1), interaction_type (\"inhibitor\", \"activitor\"), medicine_id (2, 19, 13)", "schema_without_content": "medicine : id , name , trade_name , fda_approved  | enzyme : name , id , porphyria , location , product , omim , chromosome  | enzyme_omim : min_omim , product , name , avg_omim , id , max_omim , location , total_omim , chromosome , porphyria  | medicine_enzyme_interaction : enzyme_id , interaction_type , medicine_id "}, {"db_id": "medicine_enzyme_interaction", "query": "select max_omim from enzyme_omim", "query_toks": ["SELECT", "max", "(", "OMIM", ")", "FROM", "enzyme"], "query_toks_no_value": ["select", "max", "(", "omim", ")", "from", "enzyme"], "question": "What is the maximum OMIM value in the database?", "question_toks": ["What", "is", "the", "maximum", "OMIM", "value", "in", "the", "database", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 10, false], null]]]], "union": null, "where": []}, "primary_key": {"enzyme": "id"}, "orig_query": "select max(omim) from enzyme", "split_map": {"enzyme": ["max_omim", "min_omim", "avg_omim", "total_omim"]}, "schema_with_content": "medicine : fda_approved (\"No\", \"Yes\"), trade_name (\"Sulpirid\", \"Cremin\", \"Lonasen\"), name (\"Carpipramine\", \"Quetiapine\", \"Melperone\"), id (14, 19, 6) | enzyme : name (\"Protoporphyrinogen oxidase\", \"Uroporphyrinogen III decarboxylase\", \"PBG deaminase\"), porphyria (\"erythropoietic protoporphyria\", \"ALA-Dehydratase deficiency\", \"variegate porphyria\"), chromosome (\"1q22\", \"9q34\", \"3p21.1\"), id (4, 6, 2), omim (121300, 176000, 176000), product (\"Protoporphyrinogen IX\", \"Coproporphyrinogen III\", \"Hydroxymethyl bilane\"), location (\"Mitochondrion\", \"Cytosol\") | enzyme_omim : location (\"Mitochondrion\", \"Cytosol\"), min_omim (121300, 176000, 176000), id (4, 6, 2), chromosome (\"1q22\", \"9q34\", \"3p21.1\"), max_omim (121300, 176000, 176000), total_omim (121300, 176000, 176000), avg_omim (121300, 176000, 176000), name (\"Protoporphyrinogen oxidase\", \"Uroporphyrinogen III decarboxylase\", \"PBG deaminase\"), product (\"Protoporphyrinogen IX\", \"Coproporphyrinogen III\", \"Hydroxymethyl bilane\"), porphyria (\"erythropoietic protoporphyria\", \"ALA-Dehydratase deficiency\", \"variegate porphyria\") | medicine_enzyme_interaction : enzyme_id (4, 5, 1), medicine_id (19, 13, 19), interaction_type (\"inhibitor\", \"activitor\")", "schema_without_content": "medicine : fda_approved , trade_name , name , id  | enzyme : name , porphyria , chromosome , id , omim , product , location  | enzyme_omim : location , min_omim , id , chromosome , max_omim , total_omim , avg_omim , name , product , porphyria  | medicine_enzyme_interaction : enzyme_id , medicine_id , interaction_type "}, {"db_id": "university_basketball", "query": "select avg_enrollment from university_enrollment where founded < 1850", "query_toks": ["SELECT", "avg", "(", "enrollment", ")", "FROM", "university", "WHERE", "founded", "<", "1850"], "query_toks_no_value": ["select", "avg", "(", "enrollment", ")", "from", "university", "where", "founded", "<", "value"], "question": "What are the average enrollment size of the universities that are founded before 1850?", "question_toks": ["What", "are", "the", "average", "enrollment", "size", "of", "the", "universities", "that", "are", "founded", "before", "1850", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 16, false], null], 1850.0, null]]}, "primary_key": {"university": "school_id"}, "orig_query": "select avg(enrollment) from university where founded < 1850", "split_map": {"university": ["max_enrollment", "min_enrollment", "avg_enrollment", "total_enrollment"]}, "schema_with_content": "basketball_match : all_home (\"14\u00e2\u0080\u00932\", \"15\u00e2\u0080\u00931\", \"14\u00e2\u0080\u00933\"), team_name (\"North Carolina\", \"North Carolina\", \"Duke\"), all_games_percent (0.946, 0.824, 0.6), acc_road (\"8\u00e2\u0080\u00930\", \"6\u00e2\u0080\u00932\", \"3\u00e2\u0080\u00935\"), acc_percent (\".813\", \".563\", \".563\"), acc_home (\"6\u00e2\u0080\u00932\", \"7\u00e2\u0080\u00931\"), all_road (\"13\u00e2\u0080\u00930\", \"8\u00e2\u0080\u00932\", \"13\u00e2\u0080\u00930\"), acc_regular_season (\"9\u00e2\u0080\u00937\", \"14\u00e2\u0080\u00932\", \"9\u00e2\u0080\u00937\"), team_id (4, 1, 1), all_games (\"24\u00e2\u0080\u009310\", \"21\u00e2\u0080\u009314\", \"35\u00e2\u0080\u00932\"), school_id (5, 4, 5), all_neutral (\"3\u00e2\u0080\u00933\", \"4\u00e2\u0080\u00933\", \"5\u00e2\u0080\u00933\") | university : school (\"University of Rhode Island\", \"University of Delaware\", \"University of Rhode Island\"), location (\"Stony Brook, NY\", \"Newark, DE\", \"Newark, DE\"), founded (1743.0, 1957.0, 1866.0), affiliation (\"Public\", \"Private/Methodist\"), school_id (3, 3, 1), nickname (\"Seawolves\", \"Rams\", \"Fightin' Blue Hens\"), enrollment (56868.0, 23997.0, 56868.0), primary_conference (\"America East Conference ( D-I )\", \"America East Conference ( D-I )\", \"Atlantic 10 Conference ( D-I )\") | university_enrollment : affiliation (\"Public\", \"Private/Methodist\"), total_enrollment (56868.0, 23997.0, 56868.0), avg_enrollment (56868.0, 23997.0, 56868.0), school (\"University of Rhode Island\", \"University of Delaware\", \"University of Rhode Island\"), founded (1743.0, 1957.0, 1866.0), location (\"Stony Brook, NY\", \"Newark, DE\", \"Newark, DE\"), school_id (3, 3, 1), min_enrollment (56868.0, 23997.0, 56868.0), max_enrollment (56868.0, 23997.0, 56868.0), nickname (\"Seawolves\", \"Rams\", \"Fightin' Blue Hens\"), primary_conference (\"America East Conference ( D-I )\", \"America East Conference ( D-I )\", \"Atlantic 10 Conference ( D-I )\")", "schema_without_content": "basketball_match : all_home , team_name , all_games_percent , acc_road , acc_percent , acc_home , all_road , acc_regular_season , team_id , all_games , school_id , all_neutral  | university : school , location , founded , affiliation , school_id , nickname , enrollment , primary_conference \", \"America East Conference \", \"Atlantic 10 Conference \" | university_enrollment : affiliation , total_enrollment , avg_enrollment , school , founded , location , school_id , min_enrollment , max_enrollment , nickname , primary_conference \", \"America East Conference \", \"Atlantic 10 Conference \""}, {"db_id": "university_basketball", "query": "select avg_enrollment from university_enrollment where founded < 1850", "query_toks": ["SELECT", "avg", "(", "enrollment", ")", "FROM", "university", "WHERE", "founded", "<", "1850"], "query_toks_no_value": ["select", "avg", "(", "enrollment", ")", "from", "university", "where", "founded", "<", "value"], "question": "Return the average enrollment of universities founded before 1850.", "question_toks": ["Return", "the", "average", "enrollment", "of", "universities", "founded", "before", "1850", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 16, false], null], 1850.0, null]]}, "primary_key": {"university": "school_id"}, "orig_query": "select avg(enrollment) from university where founded < 1850", "split_map": {"university": ["max_enrollment", "min_enrollment", "avg_enrollment", "total_enrollment"]}, "schema_with_content": "basketball_match : all_games (\"24\u00e2\u0080\u009310\", \"35\u00e2\u0080\u00932\", \"21\u00e2\u0080\u009314\"), all_games_percent (0.6, 0.946, 0.946), team_id (4, 2, 2), acc_regular_season (\"13\u00e2\u0080\u00933\", \"14\u00e2\u0080\u00932\", \"13\u00e2\u0080\u00933\"), school_id (2, 2, 4), all_home (\"14\u00e2\u0080\u00932\", \"15\u00e2\u0080\u00931\", \"14\u00e2\u0080\u00933\"), all_neutral (\"5\u00e2\u0080\u00933\", \"3\u00e2\u0080\u00933\", \"5\u00e2\u0080\u00933\"), team_name (\"Clemson\", \"North Carolina\", \"Clemson\"), acc_percent (\".625\", \".813\", \".875\"), acc_home (\"6\u00e2\u0080\u00932\", \"7\u00e2\u0080\u00931\"), acc_road (\"8\u00e2\u0080\u00930\", \"6\u00e2\u0080\u00932\", \"3\u00e2\u0080\u00935\"), all_road (\"4\u00e2\u0080\u00938\", \"4\u00e2\u0080\u00938\", \"13\u00e2\u0080\u00930\") | university : school_id (4, 3, 4), affiliation (\"Public\", \"Private/Methodist\"), nickname (\"Rams\", \"Seawolves\", \"Flying Dutchmen\"), enrollment (19067.0, 56868.0, 19095.0), school (\"Lebanon Valley College\", \"University of Rhode Island\", \"University of Rhode Island\"), location (\"New Brunswick, NJ\", \"New Brunswick, NJ\", \"New Brunswick, NJ\"), primary_conference (\"America East Conference ( D-I )\", \"Atlantic 10 Conference ( D-I )\", \"MAC Commonwealth Conference ( D-III )\"), founded (1743.0, 1766.0, 1866.0) | university_enrollment : founded (1743.0, 1766.0, 1866.0), avg_enrollment (19067.0, 56868.0, 19095.0), school (\"Lebanon Valley College\", \"University of Rhode Island\", \"University of Rhode Island\"), min_enrollment (19067.0, 56868.0, 19095.0), affiliation (\"Public\", \"Private/Methodist\"), location (\"New Brunswick, NJ\", \"New Brunswick, NJ\", \"New Brunswick, NJ\"), total_enrollment (19067.0, 56868.0, 19095.0), school_id (4, 3, 4), max_enrollment (19067.0, 56868.0, 19095.0), nickname (\"Rams\", \"Seawolves\", \"Flying Dutchmen\"), primary_conference (\"America East Conference ( D-I )\", \"Atlantic 10 Conference ( D-I )\", \"MAC Commonwealth Conference ( D-III )\")", "schema_without_content": "basketball_match : all_games , all_games_percent , team_id , acc_regular_season , school_id , all_home , all_neutral , team_name , acc_percent , acc_home , acc_road , all_road  | university : school_id , affiliation , nickname , enrollment , school , location , primary_conference \", \"Atlantic 10 Conference \", \"MAC Commonwealth Conference \", founded  | university_enrollment : founded , avg_enrollment , school , min_enrollment , affiliation , location , total_enrollment , school_id , max_enrollment , nickname , primary_conference \", \"Atlantic 10 Conference \", \"MAC Commonwealth Conference \""}, {"db_id": "university_basketball", "query": "select total_enrollment, min_enrollment from university_enrollment", "query_toks": ["SELECT", "sum", "(", "enrollment", ")", ",", "min", "(", "enrollment", ")", "FROM", "university"], "query_toks_no_value": ["select", "sum", "(", "enrollment", ")", ",", "min", "(", "enrollment", ")", "from", "university"], "question": "What is the total and minimum enrollment of all schools?", "question_toks": ["What", "is", "the", "total", "and", "minimum", "enrollment", "of", "all", "schools", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 18, false], null]], [2, [0, [0, 18, false], null]]]], "union": null, "where": []}, "primary_key": {"university": "school_id"}, "orig_query": "select sum(enrollment), min(enrollment) from university", "split_map": {"university": ["max_enrollment", "min_enrollment", "avg_enrollment", "total_enrollment"]}, "schema_with_content": "basketball_match : all_home (\"14\u00e2\u0080\u00932\", \"15\u00e2\u0080\u00931\", \"14\u00e2\u0080\u00933\"), acc_regular_season (\"10\u00e2\u0080\u00936\", \"14\u00e2\u0080\u00932\", \"10\u00e2\u0080\u00936\"), acc_percent (\".875\", \".563\", \".813\"), all_neutral (\"5\u00e2\u0080\u00933\", \"9\u00e2\u0080\u00931\", \"4\u00e2\u0080\u00933\"), acc_home (\"6\u00e2\u0080\u00932\", \"7\u00e2\u0080\u00931\"), all_road (\"4\u00e2\u0080\u00938\", \"6\u00e2\u0080\u00935\", \"6\u00e2\u0080\u00935\"), team_id (3, 4, 4), team_name (\"Duke\", \"Virginia Tech\", \"Clemson\"), all_games (\"35\u00e2\u0080\u00932\", \"24\u00e2\u0080\u009310\", \"28\u00e2\u0080\u00936\"), all_games_percent (0.824, 0.706, 0.6), acc_road (\"8\u00e2\u0080\u00930\", \"6\u00e2\u0080\u00932\", \"3\u00e2\u0080\u00935\"), school_id (5, 1, 4) | university : enrollment (19067.0, 19067.0, 23997.0), primary_conference (\"Colonial Athletic Association ( D-I )\", \"America East Conference ( D-I )\", \"Colonial Athletic Association ( D-I )\"), nickname (\"Rams\", \"Fightin' Blue Hens\", \"Fightin' Blue Hens\"), founded (1743.0, 1892.0, 1957.0), school (\"University of Delaware\", \"University of Delaware\", \"Stony Brook University\"), school_id (3, 4, 4), affiliation (\"Public\", \"Private/Methodist\"), location (\"Kingston, RI\", \"New Brunswick, NJ\", \"Stony Brook, NY\") | university_enrollment : max_enrollment (19067.0, 19067.0, 23997.0), school (\"University of Delaware\", \"University of Delaware\", \"Stony Brook University\"), location (\"Kingston, RI\", \"New Brunswick, NJ\", \"Stony Brook, NY\"), total_enrollment (19067.0, 19067.0, 23997.0), founded (1743.0, 1892.0, 1957.0), avg_enrollment (19067.0, 19067.0, 23997.0), min_enrollment (19067.0, 19067.0, 23997.0), affiliation (\"Public\", \"Private/Methodist\"), school_id (3, 4, 4), nickname (\"Rams\", \"Fightin' Blue Hens\", \"Fightin' Blue Hens\"), primary_conference (\"Colonial Athletic Association ( D-I )\", \"America East Conference ( D-I )\", \"Colonial Athletic Association ( D-I )\")", "schema_without_content": "basketball_match : all_home , acc_regular_season , acc_percent , all_neutral , acc_home , all_road , team_id , team_name , all_games , all_games_percent , acc_road , school_id  | university : enrollment , primary_conference \", \"America East Conference \", \"Colonial Athletic Association \", nickname , founded , school , school_id , affiliation , location  | university_enrollment : max_enrollment , school , location , total_enrollment , founded , avg_enrollment , min_enrollment , affiliation , school_id , nickname , primary_conference \", \"America East Conference \", \"Colonial Athletic Association \""}, {"db_id": "university_basketball", "query": "select total_enrollment, min_enrollment from university_enrollment", "query_toks": ["SELECT", "sum", "(", "enrollment", ")", ",", "min", "(", "enrollment", ")", "FROM", "university"], "query_toks_no_value": ["select", "sum", "(", "enrollment", ")", ",", "min", "(", "enrollment", ")", "from", "university"], "question": "Return the total and minimum enrollments across all schools.", "question_toks": ["Return", "the", "total", "and", "minimum", "enrollments", "across", "all", "schools", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 18, false], null]], [2, [0, [0, 18, false], null]]]], "union": null, "where": []}, "primary_key": {"university": "school_id"}, "orig_query": "select sum(enrollment), min(enrollment) from university", "split_map": {"university": ["max_enrollment", "min_enrollment", "avg_enrollment", "total_enrollment"]}, "schema_with_content": "basketball_match : acc_home (\"6\u00e2\u0080\u00932\", \"7\u00e2\u0080\u00931\"), all_home (\"14\u00e2\u0080\u00932\", \"15\u00e2\u0080\u00931\", \"14\u00e2\u0080\u00933\"), all_neutral (\"9\u00e2\u0080\u00931\", \"5\u00e2\u0080\u00933\", \"4\u00e2\u0080\u00933\"), all_road (\"13\u00e2\u0080\u00930\", \"8\u00e2\u0080\u00932\", \"6\u00e2\u0080\u00935\"), school_id (1, 1, 5), acc_road (\"8\u00e2\u0080\u00930\", \"6\u00e2\u0080\u00932\", \"3\u00e2\u0080\u00935\"), acc_regular_season (\"14\u00e2\u0080\u00932\", \"10\u00e2\u0080\u00936\", \"9\u00e2\u0080\u00937\"), all_games (\"28\u00e2\u0080\u00936\", \"24\u00e2\u0080\u009310\", \"21\u00e2\u0080\u009314\"), team_name (\"Duke\", \"Duke\", \"North Carolina\"), all_games_percent (0.706, 0.6, 0.946), acc_percent (\".563\", \".813\", \".563\"), team_id (4, 1, 4) | university : enrollment (19095.0, 23997.0, 19095.0), primary_conference (\"America East Conference ( D-I )\", \"America East Conference ( D-I )\", \"MAC Commonwealth Conference ( D-III )\"), affiliation (\"Public\", \"Private/Methodist\"), location (\"Kingston, RI\", \"Newark, DE\", \"New Brunswick, NJ\"), founded (1957.0, 1743.0, 1766.0), school_id (2, 5, 3), nickname (\"Seawolves\", \"Flying Dutchmen\", \"Scarlet Knights\"), school (\"Rutgers University\", \"University of Delaware\", \"University of Delaware\") | university_enrollment : avg_enrollment (19095.0, 23997.0, 19095.0), school (\"Rutgers University\", \"University of Delaware\", \"University of Delaware\"), max_enrollment (19095.0, 23997.0, 19095.0), location (\"Kingston, RI\", \"Newark, DE\", \"New Brunswick, NJ\"), affiliation (\"Public\", \"Private/Methodist\"), school_id (2, 5, 3), total_enrollment (19095.0, 23997.0, 19095.0), founded (1957.0, 1743.0, 1766.0), min_enrollment (19095.0, 23997.0, 19095.0), nickname (\"Seawolves\", \"Flying Dutchmen\", \"Scarlet Knights\"), primary_conference (\"America East Conference ( D-I )\", \"America East Conference ( D-I )\", \"MAC Commonwealth Conference ( D-III )\")", "schema_without_content": "basketball_match : acc_home , all_home , all_neutral , all_road , school_id , acc_road , acc_regular_season , all_games , team_name , all_games_percent , acc_percent , team_id  | university : enrollment , primary_conference \", \"America East Conference \", \"MAC Commonwealth Conference \", affiliation , location , founded , school_id , nickname , school  | university_enrollment : avg_enrollment , school , max_enrollment , location , affiliation , school_id , total_enrollment , founded , min_enrollment , nickname , primary_conference \", \"America East Conference \", \"MAC Commonwealth Conference \""}, {"db_id": "university_basketball", "query": "select total_enrollment, affiliation from university_enrollment group by affiliation", "query_toks": ["SELECT", "sum", "(", "enrollment", ")", ",", "affiliation", "FROM", "university", "GROUP", "BY", "affiliation"], "query_toks_no_value": ["select", "sum", "(", "enrollment", ")", ",", "affiliation", "from", "university", "group", "by", "affiliation"], "question": "Find the total student enrollment for different affiliation type schools.", "question_toks": ["Find", "the", "total", "student", "enrollment", "for", "different", "affiliation", "type", "schools", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 18, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}, "primary_key": {"university": "school_id"}, "orig_query": "select sum(enrollment), affiliation from university group by affiliation", "split_map": {"university": ["max_enrollment", "min_enrollment", "avg_enrollment", "total_enrollment"]}, "schema_with_content": "basketball_match : all_neutral (\"5\u00e2\u0080\u00933\", \"3\u00e2\u0080\u00933\", \"3\u00e2\u0080\u00933\"), all_home (\"14\u00e2\u0080\u00932\", \"15\u00e2\u0080\u00931\", \"14\u00e2\u0080\u00933\"), acc_percent (\".813\", \".875\", \".563\"), team_name (\"Clemson\", \"Virginia Tech\", \"Clemson\"), all_games_percent (0.6, 0.824, 0.6), team_id (3, 1, 2), all_road (\"13\u00e2\u0080\u00930\", \"4\u00e2\u0080\u00938\", \"13\u00e2\u0080\u00930\"), acc_home (\"6\u00e2\u0080\u00932\", \"7\u00e2\u0080\u00931\"), school_id (4, 1, 5), acc_road (\"8\u00e2\u0080\u00930\", \"6\u00e2\u0080\u00932\", \"3\u00e2\u0080\u00935\"), acc_regular_season (\"10\u00e2\u0080\u00936\", \"14\u00e2\u0080\u00932\", \"10\u00e2\u0080\u00936\"), all_games (\"24\u00e2\u0080\u009310\", \"24\u00e2\u0080\u009310\", \"21\u00e2\u0080\u009314\") | university : location (\"Annville, PA\", \"Annville, PA\", \"New Brunswick, NJ\"), affiliation (\"Public\", \"Private/Methodist\"), founded (1743.0, 1866.0, 1957.0), primary_conference (\"Colonial Athletic Association ( D-I )\", \"America East Conference ( D-I )\", \"Atlantic 10 Conference ( D-I )\"), nickname (\"Fightin' Blue Hens\", \"Flying Dutchmen\", \"Rams\"), enrollment (56868.0, 19067.0, 56868.0), school_id (4, 4, 4), school (\"University of Rhode Island\", \"Rutgers University\", \"Stony Brook University\") | university_enrollment : school_id (4, 4, 4), school (\"University of Rhode Island\", \"Rutgers University\", \"Stony Brook University\"), min_enrollment (56868.0, 19067.0, 56868.0), total_enrollment (56868.0, 19067.0, 56868.0), max_enrollment (56868.0, 19067.0, 56868.0), avg_enrollment (56868.0, 19067.0, 56868.0), founded (1743.0, 1866.0, 1957.0), location (\"Annville, PA\", \"Annville, PA\", \"New Brunswick, NJ\"), affiliation (\"Public\", \"Private/Methodist\"), nickname (\"Fightin' Blue Hens\", \"Flying Dutchmen\", \"Rams\"), primary_conference (\"Colonial Athletic Association ( D-I )\", \"America East Conference ( D-I )\", \"Atlantic 10 Conference ( D-I )\")", "schema_without_content": "basketball_match : all_neutral , all_home , acc_percent , team_name , all_games_percent , team_id , all_road , acc_home , school_id , acc_road , acc_regular_season , all_games  | university : location , affiliation , founded , primary_conference \", \"America East Conference \", \"Atlantic 10 Conference \", nickname , enrollment , school_id , school  | university_enrollment : school_id , school , min_enrollment , total_enrollment , max_enrollment , avg_enrollment , founded , location , affiliation , nickname , primary_conference \", \"America East Conference \", \"Atlantic 10 Conference \""}, {"db_id": "university_basketball", "query": "select total_enrollment, affiliation from university_enrollment group by affiliation", "query_toks": ["SELECT", "sum", "(", "enrollment", ")", ",", "affiliation", "FROM", "university", "GROUP", "BY", "affiliation"], "query_toks_no_value": ["select", "sum", "(", "enrollment", ")", ",", "affiliation", "from", "university", "group", "by", "affiliation"], "question": "What are the total enrollments of universities of each affiliation type?", "question_toks": ["What", "are", "the", "total", "enrollments", "of", "universities", "of", "each", "affiliation", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 18, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}, "primary_key": {"university": "school_id"}, "orig_query": "select sum(enrollment), affiliation from university group by affiliation", "split_map": {"university": ["max_enrollment", "min_enrollment", "avg_enrollment", "total_enrollment"]}, "schema_with_content": "basketball_match : acc_percent (\".625\", \".563\", \".875\"), all_neutral (\"9\u00e2\u0080\u00931\", \"3\u00e2\u0080\u00933\", \"9\u00e2\u0080\u00931\"), school_id (1, 2, 5), all_games (\"21\u00e2\u0080\u009314\", \"21\u00e2\u0080\u009314\", \"35\u00e2\u0080\u00932\"), acc_road (\"8\u00e2\u0080\u00930\", \"6\u00e2\u0080\u00932\", \"3\u00e2\u0080\u00935\"), team_id (2, 2, 2), team_name (\"Clemson\", \"Virginia Tech\", \"Clemson\"), all_home (\"14\u00e2\u0080\u00932\", \"15\u00e2\u0080\u00931\", \"14\u00e2\u0080\u00933\"), acc_regular_season (\"13\u00e2\u0080\u00933\", \"10\u00e2\u0080\u00936\", \"9\u00e2\u0080\u00937\"), all_games_percent (0.946, 0.6, 0.6), acc_home (\"6\u00e2\u0080\u00932\", \"7\u00e2\u0080\u00931\"), all_road (\"4\u00e2\u0080\u00938\", \"8\u00e2\u0080\u00932\", \"4\u00e2\u0080\u00938\") | university : nickname (\"Scarlet Knights\", \"Seawolves\", \"Scarlet Knights\"), school (\"Stony Brook University\", \"University of Delaware\", \"Stony Brook University\"), school_id (5, 3, 2), primary_conference (\"MAC Commonwealth Conference ( D-III )\", \"America East Conference ( D-I )\", \"America East Conference ( D-I )\"), location (\"Kingston, RI\", \"New Brunswick, NJ\", \"Kingston, RI\"), founded (1892.0, 1766.0, 1766.0), enrollment (23997.0, 19067.0, 2100.0), affiliation (\"Public\", \"Private/Methodist\") | university_enrollment : location (\"Kingston, RI\", \"New Brunswick, NJ\", \"Kingston, RI\"), affiliation (\"Public\", \"Private/Methodist\"), total_enrollment (23997.0, 19067.0, 2100.0), max_enrollment (23997.0, 19067.0, 2100.0), founded (1892.0, 1766.0, 1766.0), min_enrollment (23997.0, 19067.0, 2100.0), avg_enrollment (23997.0, 19067.0, 2100.0), school_id (5, 3, 2), school (\"Stony Brook University\", \"University of Delaware\", \"Stony Brook University\"), nickname (\"Scarlet Knights\", \"Seawolves\", \"Scarlet Knights\"), primary_conference (\"MAC Commonwealth Conference ( D-III )\", \"America East Conference ( D-I )\", \"America East Conference ( D-I )\")", "schema_without_content": "basketball_match : acc_percent , all_neutral , school_id , all_games , acc_road , team_id , team_name , all_home , acc_regular_season , all_games_percent , acc_home , all_road  | university : nickname , school , school_id , primary_conference \", \"America East Conference \", \"America East Conference \", location , founded , enrollment , affiliation  | university_enrollment : location , affiliation , total_enrollment , max_enrollment , founded , min_enrollment , avg_enrollment , school_id , school , nickname , primary_conference \", \"America East Conference \", \"America East Conference \""}, {"db_id": "university_basketball", "query": "select total_enrollment, affiliation from university_enrollment where founded > 1850 group by affiliation", "query_toks": ["SELECT", "sum", "(", "Enrollment", ")", ",", "affiliation", "FROM", "university", "WHERE", "founded", ">", "1850", "GROUP", "BY", "affiliation"], "query_toks_no_value": ["select", "sum", "(", "enrollment", ")", ",", "affiliation", "from", "university", "where", "founded", ">", "value", "group", "by", "affiliation"], "question": "Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type.", "question_toks": ["Find", "the", "total", "number", "of", "students", "enrolled", "in", "the", "colleges", "that", "were", "founded", "after", "the", "year", "of", "1850", "for", "each", "affiliation", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 18, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 16, false], null], 1850.0, null]]}, "primary_key": {"university": "school_id"}, "orig_query": "select sum(enrollment), affiliation from university where founded > 1850 group by affiliation", "split_map": {"university": ["max_enrollment", "min_enrollment", "avg_enrollment", "total_enrollment"]}, "schema_with_content": "basketball_match : all_games (\"28\u00e2\u0080\u00936\", \"35\u00e2\u0080\u00932\", \"28\u00e2\u0080\u00936\"), all_road (\"13\u00e2\u0080\u00930\", \"13\u00e2\u0080\u00930\", \"6\u00e2\u0080\u00935\"), team_id (3, 4, 2), school_id (1, 5, 2), acc_regular_season (\"9\u00e2\u0080\u00937\", \"9\u00e2\u0080\u00937\", \"10\u00e2\u0080\u00936\"), acc_percent (\".563\", \".563\", \".563\"), all_home (\"14\u00e2\u0080\u00932\", \"15\u00e2\u0080\u00931\", \"14\u00e2\u0080\u00933\"), all_games_percent (0.824, 0.946, 0.706), team_name (\"Virginia Tech\", \"North Carolina\", \"North Carolina\"), acc_road (\"8\u00e2\u0080\u00930\", \"6\u00e2\u0080\u00932\", \"3\u00e2\u0080\u00935\"), acc_home (\"6\u00e2\u0080\u00932\", \"7\u00e2\u0080\u00931\"), all_neutral (\"4\u00e2\u0080\u00933\", \"3\u00e2\u0080\u00933\", \"3\u00e2\u0080\u00933\") | university : location (\"Newark, DE\", \"Newark, DE\", \"Stony Brook, NY\"), school_id (4, 5, 1), primary_conference (\"American Athletic Conference ( D-I )\", \"American Athletic Conference ( D-I )\", \"Colonial Athletic Association ( D-I )\"), nickname (\"Scarlet Knights\", \"Seawolves\", \"Rams\"), school (\"University of Rhode Island\", \"Rutgers University\", \"Stony Brook University\"), enrollment (23997.0, 23997.0, 19095.0), founded (1766.0, 1957.0, 1766.0), affiliation (\"Public\", \"Private/Methodist\") | university_enrollment : school (\"University of Rhode Island\", \"Rutgers University\", \"Stony Brook University\"), total_enrollment (23997.0, 23997.0, 19095.0), location (\"Newark, DE\", \"Newark, DE\", \"Stony Brook, NY\"), founded (1766.0, 1957.0, 1766.0), affiliation (\"Public\", \"Private/Methodist\"), min_enrollment (23997.0, 23997.0, 19095.0), max_enrollment (23997.0, 23997.0, 19095.0), avg_enrollment (23997.0, 23997.0, 19095.0), school_id (4, 5, 1), nickname (\"Scarlet Knights\", \"Seawolves\", \"Rams\"), primary_conference (\"American Athletic Conference ( D-I )\", \"American Athletic Conference ( D-I )\", \"Colonial Athletic Association ( D-I )\")", "schema_without_content": "basketball_match : all_games , all_road , team_id , school_id , acc_regular_season , acc_percent , all_home , all_games_percent , team_name , acc_road , acc_home , all_neutral  | university : location , school_id , primary_conference \", \"American Athletic Conference \", \"Colonial Athletic Association \", nickname , school , enrollment , founded , affiliation  | university_enrollment : school , total_enrollment , location , founded , affiliation , min_enrollment , max_enrollment , avg_enrollment , school_id , nickname , primary_conference \", \"American Athletic Conference \", \"Colonial Athletic Association \""}, {"db_id": "university_basketball", "query": "select total_enrollment, affiliation from university_enrollment where founded > 1850 group by affiliation", "query_toks": ["SELECT", "sum", "(", "Enrollment", ")", ",", "affiliation", "FROM", "university", "WHERE", "founded", ">", "1850", "GROUP", "BY", "affiliation"], "query_toks_no_value": ["select", "sum", "(", "enrollment", ")", ",", "affiliation", "from", "university", "where", "founded", ">", "value", "group", "by", "affiliation"], "question": "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?", "question_toks": ["What", "are", "the", "different", "affiliations", ",", "and", "what", "is", "the", "total", "enrollment", "of", "schools", "founded", "after", "1850", "for", "each", "enrollment", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 18, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 16, false], null], 1850.0, null]]}, "primary_key": {"university": "school_id"}, "orig_query": "select sum(enrollment), affiliation from university where founded > 1850 group by affiliation", "split_map": {"university": ["max_enrollment", "min_enrollment", "avg_enrollment", "total_enrollment"]}, "schema_with_content": "basketball_match : all_road (\"13\u00e2\u0080\u00930\", \"6\u00e2\u0080\u00935\", \"8\u00e2\u0080\u00932\"), team_name (\"Clemson\", \"Clemson\", \"Duke\"), acc_regular_season (\"9\u00e2\u0080\u00937\", \"14\u00e2\u0080\u00932\", \"9\u00e2\u0080\u00937\"), all_neutral (\"9\u00e2\u0080\u00931\", \"4\u00e2\u0080\u00933\", \"9\u00e2\u0080\u00931\"), all_home (\"14\u00e2\u0080\u00932\", \"15\u00e2\u0080\u00931\", \"14\u00e2\u0080\u00933\"), all_games (\"24\u00e2\u0080\u009310\", \"35\u00e2\u0080\u00932\", \"24\u00e2\u0080\u009310\"), acc_road (\"8\u00e2\u0080\u00930\", \"6\u00e2\u0080\u00932\", \"3\u00e2\u0080\u00935\"), acc_percent (\".875\", \".813\", \".625\"), all_games_percent (0.6, 0.706, 0.706), team_id (3, 2, 4), school_id (1, 1, 1), acc_home (\"6\u00e2\u0080\u00932\", \"7\u00e2\u0080\u00931\") | university : school (\"Rutgers University\", \"University of Delaware\", \"Stony Brook University\"), location (\"New Brunswick, NJ\", \"New Brunswick, NJ\", \"Stony Brook, NY\"), affiliation (\"Public\", \"Private/Methodist\"), school_id (3, 5, 3), enrollment (23997.0, 23997.0, 2100.0), nickname (\"Scarlet Knights\", \"Seawolves\", \"Scarlet Knights\"), primary_conference (\"Atlantic 10 Conference ( D-I )\", \"MAC Commonwealth Conference ( D-III )\", \"Colonial Athletic Association ( D-I )\"), founded (1766.0, 1892.0, 1866.0) | university_enrollment : avg_enrollment (23997.0, 23997.0, 2100.0), max_enrollment (23997.0, 23997.0, 2100.0), location (\"New Brunswick, NJ\", \"New Brunswick, NJ\", \"Stony Brook, NY\"), school_id (3, 5, 3), school (\"Rutgers University\", \"University of Delaware\", \"Stony Brook University\"), affiliation (\"Public\", \"Private/Methodist\"), founded (1766.0, 1892.0, 1866.0), min_enrollment (23997.0, 23997.0, 2100.0), total_enrollment (23997.0, 23997.0, 2100.0), nickname (\"Scarlet Knights\", \"Seawolves\", \"Scarlet Knights\"), primary_conference (\"Atlantic 10 Conference ( D-I )\", \"MAC Commonwealth Conference ( D-III )\", \"Colonial Athletic Association ( D-I )\")", "schema_without_content": "basketball_match : all_road , team_name , acc_regular_season , all_neutral , all_home , all_games , acc_road , acc_percent , all_games_percent , team_id , school_id , acc_home  | university : school , location , affiliation , school_id , enrollment , nickname , primary_conference \", \"MAC Commonwealth Conference \", \"Colonial Athletic Association \", founded  | university_enrollment : avg_enrollment , max_enrollment , location , school_id , school , affiliation , founded , min_enrollment , total_enrollment , nickname , primary_conference \", \"MAC Commonwealth Conference \", \"Colonial Athletic Association \""}, {"db_id": "university_basketball", "query": "select max_enrollment from university_enrollment", "query_toks": ["SELECT", "max", "(", "Enrollment", ")", "FROM", "university"], "query_toks_no_value": ["select", "max", "(", "enrollment", ")", "from", "university"], "question": "What is the maximum enrollment across all schools?", "question_toks": ["What", "is", "the", "maximum", "enrollment", "across", "all", "schools", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 18, false], null]]]], "union": null, "where": []}, "primary_key": {"university": "school_id"}, "orig_query": "select max(enrollment) from university", "split_map": {"university": ["max_enrollment", "min_enrollment", "avg_enrollment", "total_enrollment"]}, "schema_with_content": "basketball_match : acc_road (\"8\u00e2\u0080\u00930\", \"6\u00e2\u0080\u00932\", \"3\u00e2\u0080\u00935\"), team_id (1, 4, 4), all_games (\"28\u00e2\u0080\u00936\", \"28\u00e2\u0080\u00936\", \"35\u00e2\u0080\u00932\"), all_road (\"13\u00e2\u0080\u00930\", \"8\u00e2\u0080\u00932\", \"8\u00e2\u0080\u00932\"), acc_home (\"6\u00e2\u0080\u00932\", \"7\u00e2\u0080\u00931\"), team_name (\"Clemson\", \"Clemson\", \"Duke\"), all_neutral (\"5\u00e2\u0080\u00933\", \"3\u00e2\u0080\u00933\", \"4\u00e2\u0080\u00933\"), school_id (4, 2, 2), all_home (\"14\u00e2\u0080\u00932\", \"15\u00e2\u0080\u00931\", \"14\u00e2\u0080\u00933\"), acc_percent (\".563\", \".875\", \".563\"), acc_regular_season (\"13\u00e2\u0080\u00933\", \"14\u00e2\u0080\u00932\", \"10\u00e2\u0080\u00936\"), all_games_percent (0.706, 0.6, 0.946) | university : enrollment (19067.0, 2100.0, 56868.0), school_id (4, 1, 2), school (\"Lebanon Valley College\", \"Lebanon Valley College\", \"Stony Brook University\"), nickname (\"Rams\", \"Fightin' Blue Hens\", \"Seawolves\"), founded (1866.0, 1766.0, 1866.0), primary_conference (\"American Athletic Conference ( D-I )\", \"Atlantic 10 Conference ( D-I )\", \"Atlantic 10 Conference ( D-I )\"), affiliation (\"Public\", \"Private/Methodist\"), location (\"Annville, PA\", \"Newark, DE\", \"Newark, DE\") | university_enrollment : school (\"Lebanon Valley College\", \"Lebanon Valley College\", \"Stony Brook University\"), founded (1866.0, 1766.0, 1866.0), school_id (4, 1, 2), location (\"Annville, PA\", \"Newark, DE\", \"Newark, DE\"), avg_enrollment (19067.0, 2100.0, 56868.0), total_enrollment (19067.0, 2100.0, 56868.0), affiliation (\"Public\", \"Private/Methodist\"), min_enrollment (19067.0, 2100.0, 56868.0), max_enrollment (19067.0, 2100.0, 56868.0), nickname (\"Rams\", \"Fightin' Blue Hens\", \"Seawolves\"), primary_conference (\"American Athletic Conference ( D-I )\", \"Atlantic 10 Conference ( D-I )\", \"Atlantic 10 Conference ( D-I )\")", "schema_without_content": "basketball_match : acc_road , team_id , all_games , all_road , acc_home , team_name , all_neutral , school_id , all_home , acc_percent , acc_regular_season , all_games_percent  | university : enrollment , school_id , school , nickname , founded , primary_conference \", \"Atlantic 10 Conference \", \"Atlantic 10 Conference \", affiliation , location  | university_enrollment : school , founded , school_id , location , avg_enrollment , total_enrollment , affiliation , min_enrollment , max_enrollment , nickname , primary_conference \", \"Atlantic 10 Conference \", \"Atlantic 10 Conference \""}, {"db_id": "university_basketball", "query": "select max_enrollment from university_enrollment", "query_toks": ["SELECT", "max", "(", "Enrollment", ")", "FROM", "university"], "query_toks_no_value": ["select", "max", "(", "enrollment", ")", "from", "university"], "question": "Return the maximum enrollment across all schools.", "question_toks": ["Return", "the", "maximum", "enrollment", "across", "all", "schools", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 18, false], null]]]], "union": null, "where": []}, "primary_key": {"university": "school_id"}, "orig_query": "select max(enrollment) from university", "split_map": {"university": ["max_enrollment", "min_enrollment", "avg_enrollment", "total_enrollment"]}, "schema_with_content": "basketball_match : acc_road (\"8\u00e2\u0080\u00930\", \"6\u00e2\u0080\u00932\", \"3\u00e2\u0080\u00935\"), team_name (\"Virginia Tech\", \"Duke\", \"North Carolina\"), all_home (\"14\u00e2\u0080\u00932\", \"15\u00e2\u0080\u00931\", \"14\u00e2\u0080\u00933\"), acc_home (\"6\u00e2\u0080\u00932\", \"7\u00e2\u0080\u00931\"), team_id (3, 2, 1), all_neutral (\"9\u00e2\u0080\u00931\", \"5\u00e2\u0080\u00933\", \"9\u00e2\u0080\u00931\"), acc_regular_season (\"14\u00e2\u0080\u00932\", \"9\u00e2\u0080\u00937\", \"13\u00e2\u0080\u00933\"), acc_percent (\".563\", \".625\", \".875\"), all_games (\"28\u00e2\u0080\u00936\", \"28\u00e2\u0080\u00936\", \"28\u00e2\u0080\u00936\"), all_road (\"6\u00e2\u0080\u00935\", \"13\u00e2\u0080\u00930\", \"8\u00e2\u0080\u00932\"), school_id (1, 5, 4), all_games_percent (0.6, 0.946, 0.946) | university : founded (1866.0, 1743.0, 1766.0), school_id (5, 4, 2), primary_conference (\"Colonial Athletic Association ( D-I )\", \"MAC Commonwealth Conference ( D-III )\", \"Atlantic 10 Conference ( D-I )\"), school (\"University of Delaware\", \"University of Delaware\", \"Stony Brook University\"), enrollment (19067.0, 19095.0, 19067.0), location (\"Kingston, RI\", \"Annville, PA\", \"Annville, PA\"), affiliation (\"Public\", \"Private/Methodist\"), nickname (\"Fightin' Blue Hens\", \"Fightin' Blue Hens\", \"Seawolves\") | university_enrollment : affiliation (\"Public\", \"Private/Methodist\"), location (\"Kingston, RI\", \"Annville, PA\", \"Annville, PA\"), school (\"University of Delaware\", \"University of Delaware\", \"Stony Brook University\"), min_enrollment (19067.0, 19095.0, 19067.0), founded (1866.0, 1743.0, 1766.0), max_enrollment (19067.0, 19095.0, 19067.0), avg_enrollment (19067.0, 19095.0, 19067.0), total_enrollment (19067.0, 19095.0, 19067.0), school_id (5, 4, 2), nickname (\"Fightin' Blue Hens\", \"Fightin' Blue Hens\", \"Seawolves\"), primary_conference (\"Colonial Athletic Association ( D-I )\", \"MAC Commonwealth Conference ( D-III )\", \"Atlantic 10 Conference ( D-I )\")", "schema_without_content": "basketball_match : acc_road , team_name , all_home , acc_home , team_id , all_neutral , acc_regular_season , acc_percent , all_games , all_road , school_id , all_games_percent  | university : founded , school_id , primary_conference \", \"MAC Commonwealth Conference \", \"Atlantic 10 Conference \", school , enrollment , location , affiliation , nickname  | university_enrollment : affiliation , location , school , min_enrollment , founded , max_enrollment , avg_enrollment , total_enrollment , school_id , nickname , primary_conference \", \"MAC Commonwealth Conference \", \"Atlantic 10 Conference \""}, {"db_id": "phone_1", "query": "select max_used_kb, min_used_kb, avg_used_kb from screen_mode_used_kb", "query_toks": ["SELECT", "max", "(", "used_kb", ")", ",", "min", "(", "used_kb", ")", ",", "avg", "(", "used_kb", ")", "FROM", "screen_mode", ";"], "query_toks_no_value": ["select", "max", "(", "used_kb", ")", ",", "min", "(", "used_kb", ")", ",", "avg", "(", "used_kb", ")", "from", "screen_mode"], "question": "List the maximum, minimum and average number of used kb in screen mode.", "question_toks": ["List", "the", "maximum", ",", "minimum", "and", "average", "number", "of", "used", "kb", "in", "screen", "mode", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 12, false], null]], [2, [0, [0, 12, false], null]], [5, [0, [0, 12, false], null]]]], "union": null, "where": []}, "primary_key": {"screen_mode": "graphics_mode"}, "orig_query": "select max(used_kb), min(used_kb), avg(used_kb) from screen_mode", "split_map": {"screen_mode": ["max_used_kb", "min_used_kb", "avg_used_kb", "total_used_kb"]}, "schema_with_content": "chip_model : launch_year (2003.0, 2002.0, 2004.0), model_name (\"X3i\", \"X30 high-end\", \"X30 low-end\"), wifi (\"No\", \"802.11b\"), rom_mib (128.0, 256.0, 64.0), ram_mib (32.0, 64.0), slots (\"1CFII,1SD\", \"1SD\"), bluetooth (\"1.1\", \"1.1\", \"No\") | screen_mode : type (\"Graphics\", \"Text\"), char_cells (\"80 \u00c3\u0097 25\", \"80 \u00c3\u0097 25\", \"80 \u00c3\u0097 25\"), graphics_mode (5.0, 1.0, 0.0), used_kb (10.0, 8.0, 16.0), map (\"6000\u00e2\u0080\u00937FFF\", \"6000\u00e2\u0080\u00937FFF\", \"3000\u00e2\u0080\u00937FFF\"), pixels (\"320 \u00c3\u0097 200\", \"320 \u00c3\u0097 200\", \"320 \u00c3\u0097 256\"), hardware_colours (2.0, 4.0, 8.0) | screen_mode_used_kb : graphics_mode (5.0, 1.0, 0.0), total_used_kb (10.0, 8.0, 16.0), hardware_colours (2.0, 4.0, 8.0), char_cells (\"80 \u00c3\u0097 25\", \"80 \u00c3\u0097 25\", \"80 \u00c3\u0097 25\"), avg_used_kb (10.0, 8.0, 16.0), min_used_kb (10.0, 8.0, 16.0), max_used_kb (10.0, 8.0, 16.0), pixels (\"320 \u00c3\u0097 200\", \"320 \u00c3\u0097 200\", \"320 \u00c3\u0097 256\"), map (\"6000\u00e2\u0080\u00937FFF\", \"6000\u00e2\u0080\u00937FFF\", \"3000\u00e2\u0080\u00937FFF\"), type (\"Graphics\", \"Text\") | phone : company_name (\"LG Electronics\", \"Samsung Electronics Co Ltd\", \"HTC Corporation\"), hardware_model_name (\"Nokia 700\", \"Lumia 920, Lumia 820, Lumia 620\", \"GT-I9100\"), accreditation_level (\"joyn Hot Fixes\", \"joyn\"), date (\"Approved (awarded 23.10.12)\", \"Approved (awarded 19.11.12)\", \"Approved (valid until 14.09.13)\"), accreditation_type (\"Full\", \"Provisional\"), screen_mode (\"3\", \"3\", \"3\"), chip_model (\"X5\", \"X50 Advanced\", \"X3i\")", "schema_without_content": "chip_model : launch_year , model_name , wifi , rom_mib , ram_mib , slots , bluetooth  | screen_mode : type , char_cells , graphics_mode , used_kb , map , pixels , hardware_colours  | screen_mode_used_kb : graphics_mode , total_used_kb , hardware_colours , char_cells , avg_used_kb , min_used_kb , max_used_kb , pixels , map , type  | phone : company_name , hardware_model_name , accreditation_level , date \", \"Approved \", \"Approved \", accreditation_type , screen_mode , chip_model "}, {"db_id": "phone_1", "query": "select avg_ram_mib from chip_model_ram_mib where model_name not in (select chip_model from phone)", "query_toks": ["SELECT", "avg", "(", "RAM_MiB", ")", "FROM", "chip_model", "WHERE", "model_name", "NOT", "IN", "(", "SELECT", "chip_model", "FROM", "phone", ")"], "query_toks_no_value": ["select", "avg", "(", "ram_mib", ")", "from", "chip_model", "where", "model_name", "not", "in", "(", "select", "chip_model", "from", "phone", ")"], "question": "Find the average ram mib size of the chip models that are never used by any phone.", "question_toks": ["Find", "the", "average", "ram", "mib", "size", "of", "the", "chip", "models", "that", "are", "never", "used", "by", "any", "phone", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"chip_model": "model_name"}, "orig_query": "select avg(ram_mib) from chip_model where model_name not in (select chip_model from phone)", "split_map": {"chip_model": ["max_ram_mib", "min_ram_mib", "avg_ram_mib", "total_ram_mib"]}, "schema_with_content": "chip_model : ram_mib (32.0, 64.0), slots (\"1CFII,1SD\", \"1SD\"), model_name (\"X51 low-end\", \"X3i\", \"X50v\"), rom_mib (32.0, 64.0, 48.0), wifi (\"No\", \"802.11b\"), bluetooth (\"1.1\", \"Yes\", \"1.2\"), launch_year (2005.0, 2005.0, 2003.0) | chip_model_ram_mib : min_ram_mib (32.0, 64.0), max_ram_mib (32.0, 64.0), launch_year (2005.0, 2005.0, 2003.0), avg_ram_mib (32.0, 64.0), total_ram_mib (32.0, 64.0), model_name (\"X51 low-end\", \"X3i\", \"X50v\"), rom_mib (32.0, 64.0, 48.0), slots (\"1CFII,1SD\", \"1SD\"), wifi (\"No\", \"802.11b\"), bluetooth (\"1.1\", \"Yes\", \"1.2\") | screen_mode : used_kb (20.0, 10.0, 16.0), map (\"3000\u00e2\u0080\u00937FFF\", \"6000\u00e2\u0080\u00937FFF\", \"6000\u00e2\u0080\u00937FFF\"), graphics_mode (3.0, 1.0, 1.0), pixels (\"320 \u00c3\u0097 256\", \"320 \u00c3\u0097 200\", \"320 \u00c3\u0097 256\"), hardware_colours (2.0, 4.0, 8.0), type (\"Graphics\", \"Text\"), char_cells (\"80 \u00c3\u0097 32\", \"20 \u00c3\u0097 32\", \"40 \u00c3\u0097 32\") | phone : hardware_model_name (\"GT-I9100\", \"GT-I9100\", \"U8815 Asura\"), accreditation_level (\"joyn Hot Fixes\", \"joyn\"), date (\"Approved (awarded 23.10.12)\", \"Approved (awarded 05.12.12)\", \"Approved (awarded 05.12.12)\"), company_name (\"Huawei Technologies Co.Ltd.\", \"Nokia Corporation\", \"HTC Corporation\"), screen_mode (\"2\", \"1\", \"3\"), chip_model (\"X3i\", \"X50 Standard\", \"X3i\"), accreditation_type (\"Full\", \"Provisional\")", "schema_without_content": "chip_model : ram_mib , slots , model_name , rom_mib , wifi , bluetooth , launch_year  | chip_model_ram_mib : min_ram_mib , max_ram_mib , launch_year , avg_ram_mib , total_ram_mib , model_name , rom_mib , slots , wifi , bluetooth  | screen_mode : used_kb , map , graphics_mode , pixels , hardware_colours , type , char_cells  | phone : hardware_model_name , accreditation_level , date \", \"Approved \", \"Approved \", company_name , screen_mode , chip_model , accreditation_type "}, {"db_id": "climbing", "query": "select max_points from climber_points where country = \"United Kingdom\"", "query_toks": ["SELECT", "max", "(", "Points", ")", "FROM", "climber", "WHERE", "Country", "=", "``", "United", "Kingdom", "''"], "query_toks_no_value": ["select", "max", "(", "points", ")", "from", "climber", "where", "country", "=", "value"], "question": "What is the maximum point for climbers whose country is United Kingdom?", "question_toks": ["What", "is", "the", "maximum", "point", "for", "climbers", "whose", "country", "is", "United", "Kingdom", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"United Kingdom\"", null]]}, "primary_key": {"climber": "climber_id"}, "orig_query": "select max(points) from climber where country = \"United Kingdom\"", "split_map": {"climber": ["max_points", "min_points", "avg_points", "total_points"]}, "schema_with_content": "mountain : prominence (850.0, 850.0, 3825.0), country (\"Tanzania\", \"Uganda\", \"DR Congo Uganda\"), name (\"Mount Kenya (Batian)\", \"Mount Kenya (Lenana)\", \"Ngaliema / Mt Stanley (Margherita Pk)\"), mountain_id (1, 6, 5), height (5109.0, 4985.0, 4977.0), range (\"Kilimanjaro\", \"Mount Kenya\", \"Rwenzori\") | climber : name (\"Arseneus Butscher\", \"Mick Horsepole\", \"Jean Claude Castella\"), time (\"1:14.56.4\", \"1:25.02.8\", \"1:16.58.0\"), mountain_id (5, 2, 7), points (5.0, 8.0, 10.0), country (\"West Germany\", \"Switzerland\", \"United Kingdom\"), climber_id (6, 5, 3) | climber_points : avg_points (5.0, 8.0, 10.0), name (\"Arseneus Butscher\", \"Mick Horsepole\", \"Jean Claude Castella\"), time (\"1:14.56.4\", \"1:25.02.8\", \"1:16.58.0\"), max_points (5.0, 8.0, 10.0), min_points (5.0, 8.0, 10.0), country (\"West Germany\", \"Switzerland\", \"United Kingdom\"), total_points (5.0, 8.0, 10.0), climber_id (6, 5, 3), mountain_id (5, 2, 7)", "schema_without_content": "mountain : prominence , country , name \", \"Mount Kenya \", \"Ngaliema / Mt Stanley \", mountain_id , height , range  | climber : name , time , mountain_id , points , country , climber_id  | climber_points : avg_points , name , time , max_points , min_points , country , total_points , climber_id , mountain_id "}, {"db_id": "climbing", "query": "select max_points from climber_points where country = \"United Kingdom\"", "query_toks": ["SELECT", "max", "(", "Points", ")", "FROM", "climber", "WHERE", "Country", "=", "``", "United", "Kingdom", "''"], "query_toks_no_value": ["select", "max", "(", "points", ")", "from", "climber", "where", "country", "=", "value"], "question": "Return the maximum number of points for climbers from the United Kingdom.", "question_toks": ["Return", "the", "maximum", "number", "of", "points", "for", "climbers", "from", "the", "United", "Kingdom", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"United Kingdom\"", null]]}, "primary_key": {"climber": "climber_id"}, "orig_query": "select max(points) from climber where country = \"United Kingdom\"", "split_map": {"climber": ["max_points", "min_points", "avg_points", "total_points"]}, "schema_with_content": "mountain : mountain_id (2, 7, 2), height (5109.0, 4977.0, 4890.0), country (\"DR Congo Uganda\", \"DR Congo Uganda\", \"Uganda\"), range (\"Kilimanjaro\", \"Mount Kenya\", \"Rwenzori\"), prominence (3825.0, 110.0, 5885.0), name (\"Mount Kenya (Lenana)\", \"Mount Kenya (Batian)\", \"Mount Kenya (Lenana)\") | climber : mountain_id (7, 1, 7), country (\"West Germany\", \"Switzerland\", \"United Kingdom\"), points (2.0, 1.0, 8.0), time (\"1:21.35.6\", \"1:25.40.6\", \"1:13.05.6\"), name (\"Hans Luthringhauser\", \"Siegfried Schauzu\", \"Klaus Enders\"), climber_id (3, 2, 4) | climber_points : avg_points (2.0, 1.0, 8.0), time (\"1:21.35.6\", \"1:25.40.6\", \"1:13.05.6\"), total_points (2.0, 1.0, 8.0), climber_id (3, 2, 4), max_points (2.0, 1.0, 8.0), country (\"West Germany\", \"Switzerland\", \"United Kingdom\"), min_points (2.0, 1.0, 8.0), name (\"Hans Luthringhauser\", \"Siegfried Schauzu\", \"Klaus Enders\"), mountain_id (7, 1, 7)", "schema_without_content": "mountain : mountain_id , height , country , range , prominence , name \", \"Mount Kenya \", \"Mount Kenya \" | climber : mountain_id , country , points , time , name , climber_id  | climber_points : avg_points , time , total_points , climber_id , max_points , country , min_points , name , mountain_id "}, {"db_id": "body_builder", "query": "select avg_snatch from body_builder_snatch", "query_toks": ["SELECT", "avg", "(", "Snatch", ")", "FROM", "body_builder"], "query_toks_no_value": ["select", "avg", "(", "snatch", ")", "from", "body_builder"], "question": "What is the average snatch score of body builders?", "question_toks": ["What", "is", "the", "average", "snatch", "score", "of", "body", "builders", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"body_builder": "body_builder_id"}, "orig_query": "select avg(snatch) from body_builder", "split_map": {"body_builder": ["max_snatch", "min_snatch", "avg_snatch", "total_snatch"]}, "schema_with_content": "body_builder : snatch (130.0, 130.0, 142.5), clean_jerk (175.0, 177.5, 162.5), total (292.5, 292.5, 292.5), body_builder_id (5, 5, 2), people_id (5, 5, 2) | body_builder_snatch : total_snatch (130.0, 130.0, 142.5), people_id (5, 5, 2), min_snatch (130.0, 130.0, 142.5), avg_snatch (130.0, 130.0, 142.5), body_builder_id (5, 5, 2), max_snatch (130.0, 130.0, 142.5), clean_jerk (175.0, 177.5, 162.5), total (292.5, 292.5, 292.5) | people : weight (80.0, 92.0, 92.0), height (205.0, 196.0, 182.0), name (\"Ty Conklin\", \"Mark Fayne\", \"Cam Fowler\"), birth_date (\"March 30, 1976\", \"January 1, 1992\", \"March 30, 1976\"), birth_place (\"Glenview, Illinois\", \"Farmington Hills, Michigan\", \"Minnetonka, Minnesota\"), people_id (1, 4, 1)", "schema_without_content": "body_builder : snatch , clean_jerk , total , body_builder_id , people_id  | body_builder_snatch : total_snatch , people_id , min_snatch , avg_snatch , body_builder_id , max_snatch , clean_jerk , total  | people : weight , height , name , birth_date , birth_place , people_id "}, {"db_id": "body_builder", "query": "select min_snatch from body_builder_snatch", "query_toks": ["SELECT", "min", "(", "snatch", ")", "FROM", "body_builder"], "query_toks_no_value": ["select", "min", "(", "snatch", ")", "from", "body_builder"], "question": "What is the minimum snatch score?", "question_toks": ["What", "is", "the", "minimum", "snatch", "score", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"body_builder": "body_builder_id"}, "orig_query": "select min(snatch) from body_builder", "split_map": {"body_builder": ["max_snatch", "min_snatch", "avg_snatch", "total_snatch"]}, "schema_with_content": "body_builder : clean_jerk (175.0, 177.5, 162.5), snatch (130.0, 137.5, 130.0), body_builder_id (5, 1, 3), total (312.5, 312.5, 312.5), people_id (2, 5, 3) | body_builder_snatch : body_builder_id (5, 1, 3), avg_snatch (130.0, 137.5, 130.0), total_snatch (130.0, 137.5, 130.0), people_id (2, 5, 3), max_snatch (130.0, 137.5, 130.0), min_snatch (130.0, 137.5, 130.0), clean_jerk (175.0, 177.5, 162.5), total (312.5, 312.5, 312.5) | people : birth_date (\"July 4, 1990\", \"January 1, 1992\", \"February 13, 1985\"), height (195.0, 205.0, 182.0), weight (90.0, 80.0, 89.0), birth_place (\"Anchorage, Alaska\", \"Nashua, New Hampshire\", \"Nashua, New Hampshire\"), name (\"Jake Gardiner\", \"Cam Fowler\", \"Jack Campbell\"), people_id (4, 3, 3)", "schema_without_content": "body_builder : clean_jerk , snatch , body_builder_id , total , people_id  | body_builder_snatch : body_builder_id , avg_snatch , total_snatch , people_id , max_snatch , min_snatch , clean_jerk , total  | people : birth_date , height , weight , birth_place , name , people_id "}, {"db_id": "election_representative", "query": "select min_vote_percent, max_vote_percent from election_vote_percent", "query_toks": ["SELECT", "min", "(", "Vote_Percent", ")", ",", "max", "(", "Vote_Percent", ")", "FROM", "election"], "query_toks_no_value": ["select", "min", "(", "vote_percent", ")", ",", "max", "(", "vote_percent", ")", "from", "election"], "question": "What are the minimum and maximum vote percents of elections?", "question_toks": ["What", "are", "the", "minimum", "and", "maximum", "vote", "percents", "of", "elections", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"election": "election_id"}, "orig_query": "select min(vote_percent), max(vote_percent) from election", "split_map": {"election": ["max_vote_percent", "min_vote_percent", "avg_vote_percent", "total_vote_percent"]}, "schema_with_content": "election : date (\"1946\", \"1953\", \"1946\"), election_id (1, 3, 2), place (3.0, 1.0, 2.0), representative_id (5, 2, 1), seats (9.0, 6.0, 10.0), votes (12422.0, 12422.0, 13049.0), vote_percent (19.5, 16.0, 16.0) | election_vote_percent : avg_vote_percent (19.5, 16.0, 16.0), votes (12422.0, 12422.0, 13049.0), representative_id (5, 2, 1), total_vote_percent (19.5, 16.0, 16.0), min_vote_percent (19.5, 16.0, 16.0), date (\"1946\", \"1953\", \"1946\"), max_vote_percent (19.5, 16.0, 16.0), election_id (1, 3, 2), seats (9.0, 6.0, 10.0), place (3.0, 1.0, 2.0) | representative : name (\"Dan Quayle\", \"James L. Quinn\", \"Jimmy Quillen\"), state (\"Pennsylvania\", \"New York\", \"Pennsylvania\"), party (\"Republican\", \"Democratic\"), lifespan (\"1868\u00e2\u0080\u00931930\", \"1875\u00e2\u0080\u00931960\", \"1916\u00e2\u0080\u00932003\"), representative_id (1, 4, 7)", "schema_without_content": "election : date , election_id , place , representative_id , seats , votes , vote_percent  | election_vote_percent : avg_vote_percent , votes , representative_id , total_vote_percent , min_vote_percent , date , max_vote_percent , election_id , seats , place  | representative : name , state , party , lifespan , representative_id "}, {"db_id": "apartment_rentals", "query": "select min_bathroom_count, max_bathroom_count from apartments_bathroom_count", "query_toks": ["SELECT", "min", "(", "bathroom_count", ")", ",", "max", "(", "bathroom_count", ")", "FROM", "Apartments"], "query_toks_no_value": ["select", "min", "(", "bathroom_count", ")", ",", "max", "(", "bathroom_count", ")", "from", "apartments"], "question": "What is the minimum and maximum number of bathrooms of all the apartments?", "question_toks": ["What", "is", "the", "minimum", "and", "maximum", "number", "of", "bathrooms", "of", "all", "the", "apartments", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 12, false], null]], [1, [0, [0, 12, false], null]]]], "union": null, "where": []}, "primary_key": {"apartments": "apt_id"}, "orig_query": "select min(bathroom_count), max(bathroom_count) from apartments", "split_map": {"apartments": ["max_bathroom_count", "min_bathroom_count", "avg_bathroom_count", "total_bathroom_count"]}, "schema_with_content": "apartment_buildings : building_id (191, 196, 968), building_description (\"Studio\", \"Flat\", \"Duplex\"), building_short_name (\"Mercedes House\", \"Barclay Tower\", \"Avalon Park\"), building_address (\"354 Otto Villages\nCharliefort, VT 71664\", \"50804 Mason Isle Suite 844\nWest Whitney, ID 66511\", \"101 Queenie Mountains Suite 619\nNew Korbinmouth, KS 88726-1376\"), building_full_name (\"Columbus Square\", \"VIA 57 WEST\", \"The Eugene\"), building_phone (\"(948)040-1064x387\", \"544-148-5565x2847\", \"1-724-982-9507x640\"), building_manager (\"Claude\", \"Emma\", \"Kyle\") | apartments : building_id (808, 673, 225), apt_number (\"Apt. 859\", \"Apt. 411\", \"Suite 088\"), bedroom_count (6, 3, 4), room_count (\"3\", \"6\", \"6\"), apt_type_code (\"Flat\", \"Studio\", \"Duplex\"), bathroom_count (1, 2, 3), apt_id (1, 6, 14) | apartments_bathroom_count : total_bathroom_count (1, 2, 3), max_bathroom_count (1, 2, 3), building_id (808, 673, 225), apt_number (\"Apt. 859\", \"Apt. 411\", \"Suite 088\"), apt_type_code (\"Flat\", \"Studio\", \"Duplex\"), min_bathroom_count (1, 2, 3), apt_id (1, 6, 14), avg_bathroom_count (1, 2, 3), bedroom_count (6, 3, 4), room_count (\"3\", \"6\", \"6\") | apartment_facilities : facility_code (\"Gym\", \"Cable TV\", \"Gym\"), apt_id (1, 3, 15) | guests : gender_code (\"Male\", \"Unknown\", \"Female\"), guest_last_name (\"Roberts\", \"Lehner\", \"Grady\"), guest_first_name (\"Else\", \"Rebeca\", \"Keith\"), date_of_birth (\"1997-01-15 17:37:40\", \"1974-05-12 21:53:58\", \"2001-06-18 20:05:55\"), guest_id (5, 4, 12) | apartment_bookings : booking_start_date (\"2016-05-24 20:09:38\", \"2017-05-13 18:17:20\", \"2017-03-13 16:20:14\"), guest_id (5, 8, 13), apt_booking_id (337, 279, 258), apt_id (4, 9, 7), booking_end_date (\"2018-03-20 17:32:58\", \"2017-10-25 11:08:42\", \"2017-09-29 12:43:50\"), booking_status_code (\"Provisional\", \"Confirmed\") | view_unit_status : available_yn (1, 0), apt_booking_id (343, 889, 575), status_date (\"2015-07-15 11:06:29\", \"1990-11-04 17:57:50\", \"1976-12-18 04:03:51\"), apt_id (9, 9, 5)", "schema_without_content": "apartment_buildings : building_id , building_description , building_short_name , building_address , building_full_name , building_phone 040-1064x387\", \"544-148-5565x2847\", \"1-724-982-9507x640\", building_manager  | apartments : building_id , apt_number , bedroom_count , room_count , apt_type_code , bathroom_count , apt_id  | apartments_bathroom_count : total_bathroom_count , max_bathroom_count , building_id , apt_number , apt_type_code , min_bathroom_count , apt_id , avg_bathroom_count , bedroom_count , room_count  | apartment_facilities : facility_code , apt_id  | guests : gender_code , guest_last_name , guest_first_name , date_of_birth , guest_id  | apartment_bookings : booking_start_date , guest_id , apt_booking_id , apt_id , booking_end_date , booking_status_code  | view_unit_status : available_yn , apt_booking_id , status_date , apt_id "}, {"db_id": "apartment_rentals", "query": "select min_bathroom_count, max_bathroom_count from apartments_bathroom_count", "query_toks": ["SELECT", "min", "(", "bathroom_count", ")", ",", "max", "(", "bathroom_count", ")", "FROM", "Apartments"], "query_toks_no_value": ["select", "min", "(", "bathroom_count", ")", ",", "max", "(", "bathroom_count", ")", "from", "apartments"], "question": "Give me the minimum and maximum bathroom count among all the apartments.", "question_toks": ["Give", "me", "the", "minimum", "and", "maximum", "bathroom", "count", "among", "all", "the", "apartments", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 12, false], null]], [1, [0, [0, 12, false], null]]]], "union": null, "where": []}, "primary_key": {"apartments": "apt_id"}, "orig_query": "select min(bathroom_count), max(bathroom_count) from apartments", "split_map": {"apartments": ["max_bathroom_count", "min_bathroom_count", "avg_bathroom_count", "total_bathroom_count"]}, "schema_with_content": "apartment_buildings : building_full_name (\"Mercedes House\", \"Avalon Park\", \"The Anthem\"), building_manager (\"Ewald\", \"Holly\", \"Olaf\"), building_phone (\"318-398-8140\", \"318-398-8140\", \"681.772.2454\"), building_description (\"Studio\", \"Flat\", \"Duplex\"), building_address (\"6827 Kessler Parkway Suite 908\nAhmedberg, WI 48788\", \"0703 Danika Mountains Apt. 362\nMohrland, AL 56839-5028\", \"101 Queenie Mountains Suite 619\nNew Korbinmouth, KS 88726-1376\"), building_id (624, 968, 133), building_short_name (\"Barclay Tower\", \"Columbus Square\", \"VIA 57 WEST\") | apartments : apt_type_code (\"Flat\", \"Studio\", \"Duplex\"), apt_number (\"Suite 693\", \"Apt. 859\", \"Apt. 411\"), building_id (673, 744, 808), bedroom_count (5, 5, 6), bathroom_count (1, 2, 3), apt_id (11, 5, 2), room_count (\"9\", \"3\", \"9\") | apartments_bathroom_count : min_bathroom_count (1, 2, 3), building_id (673, 744, 808), avg_bathroom_count (1, 2, 3), max_bathroom_count (1, 2, 3), total_bathroom_count (1, 2, 3), apt_number (\"Suite 693\", \"Apt. 859\", \"Apt. 411\"), apt_id (11, 5, 2), apt_type_code (\"Flat\", \"Studio\", \"Duplex\"), bedroom_count (5, 5, 6), room_count (\"9\", \"3\", \"9\") | apartment_facilities : apt_id (1, 1, 15), facility_code (\"Gym\", \"Boardband\", \"Gym\") | guests : guest_last_name (\"DuBuque\", \"DuBuque\", \"Roberts\"), guest_id (5, 7, 11), guest_first_name (\"Else\", \"Kip\", \"Kip\"), gender_code (\"Male\", \"Unknown\", \"Female\"), date_of_birth (\"2007-09-11 19:01:39\", \"2003-07-29 22:08:15\", \"1971-11-02 01:51:56\") | apartment_bookings : booking_end_date (\"2017-09-28 11:08:15\", \"2017-11-12 01:05:09\", \"2017-09-28 11:08:15\"), apt_booking_id (365, 920, 623), booking_start_date (\"2016-06-07 05:05:18\", \"2016-09-28 05:00:50\", \"2017-05-13 18:17:20\"), apt_id (8, 12, 11), booking_status_code (\"Provisional\", \"Confirmed\"), guest_id (3, 5, 14) | view_unit_status : status_date (\"2015-06-19 07:59:01\", \"1980-11-12 13:34:45\", \"2012-11-24 13:39:37\"), apt_id (12, 10, 9), apt_booking_id (497, 279, 258), available_yn (1, 0)", "schema_without_content": "apartment_buildings : building_full_name , building_manager , building_phone , building_description , building_address , building_id , building_short_name  | apartments : apt_type_code , apt_number , building_id , bedroom_count , bathroom_count , apt_id , room_count  | apartments_bathroom_count : min_bathroom_count , building_id , avg_bathroom_count , max_bathroom_count , total_bathroom_count , apt_number , apt_id , apt_type_code , bedroom_count , room_count  | apartment_facilities : apt_id , facility_code  | guests : guest_last_name , guest_id , guest_first_name , gender_code , date_of_birth  | apartment_bookings : booking_end_date , apt_booking_id , booking_start_date , apt_id , booking_status_code , guest_id  | view_unit_status : status_date , apt_id , apt_booking_id , available_yn "}, {"db_id": "apartment_rentals", "query": "select avg_bedroom_count from apartments_bedroom_count", "query_toks": ["SELECT", "avg", "(", "bedroom_count", ")", "FROM", "Apartments"], "query_toks_no_value": ["select", "avg", "(", "bedroom_count", ")", "from", "apartments"], "question": "What is the average number of bedrooms of all apartments?", "question_toks": ["What", "is", "the", "average", "number", "of", "bedrooms", "of", "all", "apartments", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 13, false], null]]]], "union": null, "where": []}, "primary_key": {"apartments": "apt_id"}, "orig_query": "select avg(bedroom_count) from apartments", "split_map": {"apartments": ["max_bedroom_count", "min_bedroom_count", "avg_bedroom_count", "total_bedroom_count"]}, "schema_with_content": "apartment_buildings : building_short_name (\"Peter Cooper Village\", \"Windsor Court\", \"Windsor Court\"), building_address (\"101 Queenie Mountains Suite 619\nNew Korbinmouth, KS 88726-1376\", \"6827 Kessler Parkway Suite 908\nAhmedberg, WI 48788\", \"601 Graham Roads\nPort Luz, VA 29660-6703\"), building_id (556, 644, 196), building_full_name (\"Columbus Square\", \"Silver Towers\", \"Silver Towers\"), building_manager (\"Emma\", \"Kathlyn\", \"Ewald\"), building_description (\"Studio\", \"Flat\", \"Duplex\"), building_phone (\"(609)946-0491\", \"1-326-267-3386x613\", \"1-326-267-3386x613\") | apartments : room_count (\"9\", \"9\", \"6\"), apt_id (12, 7, 1), building_id (734, 191, 790), apt_number (\"Apt. 837\", \"Apt. 908\", \"Apt. 187\"), bedroom_count (6, 4, 3), apt_type_code (\"Flat\", \"Studio\", \"Duplex\"), bathroom_count (1, 2, 3) | apartments_bedroom_count : total_bedroom_count (6, 4, 3), apt_type_code (\"Flat\", \"Studio\", \"Duplex\"), apt_id (12, 7, 1), building_id (734, 191, 790), avg_bedroom_count (6, 4, 3), min_bedroom_count (6, 4, 3), apt_number (\"Apt. 837\", \"Apt. 908\", \"Apt. 187\"), bathroom_count (1, 2, 3), max_bedroom_count (6, 4, 3), room_count (\"9\", \"9\", \"6\") | apartment_facilities : apt_id (1, 9, 9), facility_code (\"Gym\", \"Swimming Pool\", \"Boardband\") | guests : guest_id (8, 10, 9), guest_last_name (\"Bode\", \"Hoeger\", \"Lehner\"), date_of_birth (\"1974-08-20 09:28:05\", \"1974-08-20 09:28:05\", \"2015-02-03 23:34:13\"), guest_first_name (\"Else\", \"Nikki\", \"Lou\"), gender_code (\"Male\", \"Unknown\", \"Female\") | apartment_bookings : booking_end_date (\"2018-02-06 16:57:05\", \"2017-11-12 01:05:09\", \"2017-11-13 13:59:45\"), guest_id (7, 14, 8), apt_id (8, 6, 11), apt_booking_id (337, 807, 920), booking_status_code (\"Provisional\", \"Confirmed\"), booking_start_date (\"2016-09-28 05:00:50\", \"2017-05-13 18:17:20\", \"2017-05-13 18:17:20\") | view_unit_status : apt_booking_id (889, 279, 889), status_date (\"1972-03-23 22:55:53\", \"1985-11-05 11:46:35\", \"2003-07-25 10:13:48\"), apt_id (14, 5, 15), available_yn (1, 0)", "schema_without_content": "apartment_buildings : building_short_name , building_address , building_id , building_full_name , building_manager , building_description , building_phone 946-0491\", \"1-326-267-3386x613\", \"1-326-267-3386x613\" | apartments : room_count , apt_id , building_id , apt_number , bedroom_count , apt_type_code , bathroom_count  | apartments_bedroom_count : total_bedroom_count , apt_type_code , apt_id , building_id , avg_bedroom_count , min_bedroom_count , apt_number , bathroom_count , max_bedroom_count , room_count  | apartment_facilities : apt_id , facility_code  | guests : guest_id , guest_last_name , date_of_birth , guest_first_name , gender_code  | apartment_bookings : booking_end_date , guest_id , apt_id , apt_booking_id , booking_status_code , booking_start_date  | view_unit_status : apt_booking_id , status_date , apt_id , available_yn "}, {"db_id": "apartment_rentals", "query": "select avg_bedroom_count from apartments_bedroom_count", "query_toks": ["SELECT", "avg", "(", "bedroom_count", ")", "FROM", "Apartments"], "query_toks_no_value": ["select", "avg", "(", "bedroom_count", ")", "from", "apartments"], "question": "Find the average number of bedrooms of all the apartments.", "question_toks": ["Find", "the", "average", "number", "of", "bedrooms", "of", "all", "the", "apartments", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 13, false], null]]]], "union": null, "where": []}, "primary_key": {"apartments": "apt_id"}, "orig_query": "select avg(bedroom_count) from apartments", "split_map": {"apartments": ["max_bedroom_count", "min_bedroom_count", "avg_bedroom_count", "total_bedroom_count"]}, "schema_with_content": "apartment_buildings : building_manager (\"Claude\", \"Brenden\", \"Claude\"), building_address (\"012 Arnoldo Mountain\nGerholdland, ID 23342\", \"601 Graham Roads\nPort Luz, VA 29660-6703\", \"0703 Danika Mountains Apt. 362\nMohrland, AL 56839-5028\"), building_full_name (\"VIA 57 WEST\", \"Biltmore Plaza\", \"Windsor Court\"), building_description (\"Studio\", \"Flat\", \"Duplex\"), building_short_name (\"Columbus Square\", \"Silver Towers\", \"Stuyvesant Town\"), building_id (225, 532, 532), building_phone (\"(145)411-6406\", \"544-148-5565x2847\", \"1-667-728-2287x3158\") | apartments : building_id (225, 744, 734), apt_number (\"Apt. 794\", \"Apt. 837\", \"Apt. 940\"), bathroom_count (1, 2, 3), apt_type_code (\"Flat\", \"Studio\", \"Duplex\"), apt_id (1, 1, 4), room_count (\"3\", \"7\", \"5\"), bedroom_count (4, 5, 3) | apartments_bedroom_count : bathroom_count (1, 2, 3), apt_type_code (\"Flat\", \"Studio\", \"Duplex\"), max_bedroom_count (4, 5, 3), apt_number (\"Apt. 794\", \"Apt. 837\", \"Apt. 940\"), avg_bedroom_count (4, 5, 3), total_bedroom_count (4, 5, 3), building_id (225, 744, 734), min_bedroom_count (4, 5, 3), apt_id (1, 1, 4), room_count (\"3\", \"7\", \"5\") | apartment_facilities : apt_id (15, 15, 3), facility_code (\"Swimming Pool\", \"Cable TV\", \"Cable TV\") | guests : guest_last_name (\"Hoeger\", \"Roberts\", \"Runolfsson\"), guest_first_name (\"Else\", \"Kip\", \"Gabe\"), guest_id (4, 4, 12), date_of_birth (\"2007-09-11 19:01:39\", \"2013-02-22 11:26:22\", \"1983-08-26 15:45:08\"), gender_code (\"Male\", \"Unknown\", \"Female\") | apartment_bookings : apt_id (12, 12, 8), booking_status_code (\"Provisional\", \"Confirmed\"), guest_id (12, 5, 14), apt_booking_id (889, 365, 337), booking_end_date (\"2017-10-06 11:15:58\", \"2017-10-25 11:08:42\", \"2017-11-29 12:59:42\"), booking_start_date (\"2016-07-25 02:57:04\", \"2017-07-03 14:15:56\", \"2016-09-26 17:13:49\") | view_unit_status : available_yn (1, 0), status_date (\"2015-07-15 11:06:29\", \"2003-07-25 10:13:48\", \"1985-11-05 11:46:35\"), apt_booking_id (337, 343, 401), apt_id (11, 13, 6)", "schema_without_content": "apartment_buildings : building_manager , building_address , building_full_name , building_description , building_short_name , building_id , building_phone 411-6406\", \"544-148-5565x2847\", \"1-667-728-2287x3158\" | apartments : building_id , apt_number , bathroom_count , apt_type_code , apt_id , room_count , bedroom_count  | apartments_bedroom_count : bathroom_count , apt_type_code , max_bedroom_count , apt_number , avg_bedroom_count , total_bedroom_count , building_id , min_bedroom_count , apt_id , room_count  | apartment_facilities : apt_id , facility_code  | guests : guest_last_name , guest_first_name , guest_id , date_of_birth , gender_code  | apartment_bookings : apt_id , booking_status_code , guest_id , apt_booking_id , booking_end_date , booking_start_date  | view_unit_status : available_yn , status_date , apt_booking_id , apt_id "}, {"db_id": "apartment_rentals", "query": "select avg_room_count from apartments_room_count where apt_type_code = \"Studio\"", "query_toks": ["SELECT", "avg", "(", "room_count", ")", "FROM", "Apartments", "WHERE", "apt_type_code", "=", "``", "Studio", "''"], "query_toks_no_value": ["select", "avg", "(", "room_count", ")", "from", "apartments", "where", "apt_type_code", "=", "value"], "question": "What is the average number of rooms of apartments with type code \"Studio\"?", "question_toks": ["What", "is", "the", "average", "number", "of", "rooms", "of", "apartments", "with", "type", "code", "``", "Studio", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Studio\"", null]]}, "primary_key": {"apartments": "apt_id"}, "orig_query": "select avg(room_count) from apartments where apt_type_code = \"Studio\"", "split_map": {"apartments": ["max_room_count", "min_room_count", "avg_room_count", "total_room_count"]}, "schema_with_content": "apartment_buildings : building_manager (\"Juvenal\", \"Brenden\", \"Darlene\"), building_id (673, 153, 968), building_address (\"959 Ethel Viaduct\nWest Efrainburgh, DE 40074\", \"7950 Casper Vista Apt. 176\nMarquiseberg, CA 70496\", \"6827 Kessler Parkway Suite 908\nAhmedberg, WI 48788\"), building_phone (\"1-326-267-3386x613\", \"1-224-619-0295x13195\", \"1-224-619-0295x13195\"), building_short_name (\"The Eugene\", \"Mercedes House\", \"Avalon Park\"), building_description (\"Studio\", \"Flat\", \"Duplex\"), building_full_name (\"The Clinton\", \"VIA 57 WEST\", \"Silver Towers\") | apartments : apt_type_code (\"Flat\", \"Studio\", \"Duplex\"), building_id (191, 624, 191), apt_id (5, 8, 8), bedroom_count (5, 6, 3), apt_number (\"Apt. 908\", \"Apt. 187\", \"Apt. 411\"), bathroom_count (1, 2, 3), room_count (\"8\", \"7\", \"3\") | apartments_room_count : avg_room_count (\"8\", \"7\", \"3\"), min_room_count (\"8\", \"7\", \"3\"), bedroom_count (5, 6, 3), apt_number (\"Apt. 908\", \"Apt. 187\", \"Apt. 411\"), apt_id (5, 8, 8), total_room_count (\"8\", \"7\", \"3\"), max_room_count (\"8\", \"7\", \"3\"), building_id (191, 624, 191), apt_type_code (\"Flat\", \"Studio\", \"Duplex\"), bathroom_count (1, 2, 3) | apartment_facilities : apt_id (15, 5, 1), facility_code (\"Swimming Pool\", \"Swimming Pool\", \"Gym\") | guests : gender_code (\"Male\", \"Unknown\", \"Female\"), date_of_birth (\"1974-08-20 09:28:05\", \"1983-08-26 15:45:08\", \"1995-11-04 07:09:57\"), guest_first_name (\"Nikki\", \"Kip\", \"Louvenia\"), guest_last_name (\"Jerde\", \"Schowalter\", \"Grady\"), guest_id (7, 11, 1) | apartment_bookings : guest_id (2, 13, 4), booking_status_code (\"Provisional\", \"Confirmed\"), apt_booking_id (577, 924, 401), booking_start_date (\"2016-09-28 05:00:50\", \"2016-07-25 02:57:04\", \"2017-04-07 04:53:27\"), apt_id (10, 10, 8), booking_end_date (\"2017-10-25 11:08:42\", \"2018-03-20 17:32:58\", \"2018-02-19 16:59:08\") | view_unit_status : status_date (\"2012-11-24 13:39:37\", \"1970-09-28 10:24:29\", \"1985-11-05 11:46:35\"), apt_id (11, 14, 10), apt_booking_id (924, 343, 889), available_yn (1, 0)", "schema_without_content": "apartment_buildings : building_manager , building_id , building_address , building_phone , building_short_name , building_description , building_full_name  | apartments : apt_type_code , building_id , apt_id , bedroom_count , apt_number , bathroom_count , room_count  | apartments_room_count : avg_room_count , min_room_count , bedroom_count , apt_number , apt_id , total_room_count , max_room_count , building_id , apt_type_code , bathroom_count  | apartment_facilities : apt_id , facility_code  | guests : gender_code , date_of_birth , guest_first_name , guest_last_name , guest_id  | apartment_bookings : guest_id , booking_status_code , apt_booking_id , booking_start_date , apt_id , booking_end_date  | view_unit_status : status_date , apt_id , apt_booking_id , available_yn "}, {"db_id": "apartment_rentals", "query": "select avg_room_count from apartments_room_count where apt_type_code = \"Studio\"", "query_toks": ["SELECT", "avg", "(", "room_count", ")", "FROM", "Apartments", "WHERE", "apt_type_code", "=", "``", "Studio", "''"], "query_toks_no_value": ["select", "avg", "(", "room_count", ")", "from", "apartments", "where", "apt_type_code", "=", "value"], "question": "Find the average room count of the apartments that have the \"Studio\" type code.", "question_toks": ["Find", "the", "average", "room", "count", "of", "the", "apartments", "that", "have", "the", "``", "Studio", "''", "type", "code", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Studio\"", null]]}, "primary_key": {"apartments": "apt_id"}, "orig_query": "select avg(room_count) from apartments where apt_type_code = \"Studio\"", "split_map": {"apartments": ["max_room_count", "min_room_count", "avg_room_count", "total_room_count"]}, "schema_with_content": "apartment_buildings : building_description (\"Studio\", \"Flat\", \"Duplex\"), building_manager (\"Albert\", \"Kathlyn\", \"Emma\"), building_phone (\"1-667-728-2287x3158\", \"(609)946-0491\", \"(609)946-0491\"), building_short_name (\"Columbus Square\", \"Barclay Tower\", \"Normandie Court\"), building_id (734, 968, 556), building_address (\"0703 Danika Mountains Apt. 362\nMohrland, AL 56839-5028\", \"54686 Christopher Circles Apt. 321\nDaytonland, ID 88081-3991\", \"601 Graham Roads\nPort Luz, VA 29660-6703\"), building_full_name (\"The Clinton\", \"The Eugene\", \"Avalon Park\") | apartments : apt_type_code (\"Flat\", \"Studio\", \"Duplex\"), room_count (\"7\", \"3\", \"9\"), bedroom_count (6, 4, 5), apt_number (\"Apt. 794\", \"Apt. 908\", \"Apt. 837\"), bathroom_count (1, 2, 3), building_id (673, 744, 744), apt_id (5, 1, 8) | apartments_room_count : apt_number (\"Apt. 794\", \"Apt. 908\", \"Apt. 837\"), apt_id (5, 1, 8), bathroom_count (1, 2, 3), avg_room_count (\"7\", \"3\", \"9\"), max_room_count (\"7\", \"3\", \"9\"), bedroom_count (6, 4, 5), min_room_count (\"7\", \"3\", \"9\"), total_room_count (\"7\", \"3\", \"9\"), apt_type_code (\"Flat\", \"Studio\", \"Duplex\"), building_id (673, 744, 744) | apartment_facilities : apt_id (9, 1, 6), facility_code (\"Boardband\", \"Swimming Pool\", \"Boardband\") | guests : guest_id (1, 2, 15), guest_last_name (\"Hoeger\", \"Kautzer\", \"Toy\"), date_of_birth (\"2015-02-03 23:34:13\", \"2001-06-18 20:05:55\", \"1974-08-20 09:28:05\"), gender_code (\"Male\", \"Unknown\", \"Female\"), guest_first_name (\"Josefina\", \"Gregoria\", \"Tamia\") | apartment_bookings : booking_start_date (\"2017-03-13 16:20:14\", \"2017-03-04 02:23:49\", \"2017-05-13 18:17:20\"), guest_id (13, 3, 8), apt_booking_id (497, 575, 807), apt_id (2, 7, 9), booking_end_date (\"2017-10-07 20:47:19\", \"2017-09-30 18:41:04\", \"2018-03-20 17:32:58\"), booking_status_code (\"Provisional\", \"Confirmed\") | view_unit_status : apt_booking_id (497, 924, 279), apt_id (5, 14, 10), available_yn (1, 0), status_date (\"2015-06-19 07:59:01\", \"2001-02-17 20:17:09\", \"2003-08-02 08:36:36\")", "schema_without_content": "apartment_buildings : building_description , building_manager , building_phone 946-0491\", \"946-0491\", building_short_name , building_id , building_address , building_full_name  | apartments : apt_type_code , room_count , bedroom_count , apt_number , bathroom_count , building_id , apt_id  | apartments_room_count : apt_number , apt_id , bathroom_count , avg_room_count , max_room_count , bedroom_count , min_room_count , total_room_count , apt_type_code , building_id  | apartment_facilities : apt_id , facility_code  | guests : guest_id , guest_last_name , date_of_birth , gender_code , guest_first_name  | apartment_bookings : booking_start_date , guest_id , apt_booking_id , apt_id , booking_end_date , booking_status_code  | view_unit_status : apt_booking_id , apt_id , available_yn , status_date "}, {"db_id": "apartment_rentals", "query": "select apt_type_code, max_room_count, min_room_count from apartments_room_count group by apt_type_code", "query_toks": ["SELECT", "apt_type_code", ",", "max", "(", "room_count", ")", ",", "min", "(", "room_count", ")", "FROM", "Apartments", "GROUP", "BY", "apt_type_code"], "query_toks_no_value": ["select", "apt_type_code", ",", "max", "(", "room_count", ")", ",", "min", "(", "room_count", ")", "from", "apartments", "group", "by", "apt_type_code"], "question": "Show each apartment type code, and the maximum and minimum number of rooms for each type.", "question_toks": ["Show", "each", "apartment", "type", "code", ",", "and", "the", "maximum", "and", "minimum", "number", "of", "rooms", "for", "each", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [1, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]]]], "union": null, "where": []}, "primary_key": {"apartments": "apt_id"}, "orig_query": "select apt_type_code, max(room_count), min(room_count) from apartments group by apt_type_code", "split_map": {"apartments": ["max_room_count", "min_room_count", "avg_room_count", "total_room_count"]}, "schema_with_content": "apartment_buildings : building_address (\"1844 Armstrong Stravenue Suite 853\nMyrnatown, CT 13528\", \"354 Otto Villages\nCharliefort, VT 71664\", \"861 Narciso Glens Suite 392\nEast Ottis, ND 73970\"), building_description (\"Studio\", \"Flat\", \"Duplex\"), building_full_name (\"Normandie Court\", \"The Anthem\", \"Normandie Court\"), building_phone (\"1-605-511-1973x25011\", \"(480)480-7401\", \"681.772.2454\"), building_manager (\"Kathlyn\", \"Albert\", \"Emma\"), building_id (790, 808, 153), building_short_name (\"Columbus Square\", \"Barclay Tower\", \"Avalon Park\") | apartments : apt_number (\"Suite 645\", \"Apt. 794\", \"Suite 088\"), building_id (191, 734, 225), apt_type_code (\"Flat\", \"Studio\", \"Duplex\"), apt_id (7, 10, 1), bedroom_count (3, 3, 4), room_count (\"7\", \"8\", \"3\"), bathroom_count (1, 2, 3) | apartments_room_count : avg_room_count (\"7\", \"8\", \"3\"), building_id (191, 734, 225), bathroom_count (1, 2, 3), max_room_count (\"7\", \"8\", \"3\"), total_room_count (\"7\", \"8\", \"3\"), apt_type_code (\"Flat\", \"Studio\", \"Duplex\"), min_room_count (\"7\", \"8\", \"3\"), apt_id (7, 10, 1), bedroom_count (3, 3, 4), apt_number (\"Suite 645\", \"Apt. 794\", \"Suite 088\") | apartment_facilities : facility_code (\"Swimming Pool\", \"Swimming Pool\", \"Gym\"), apt_id (9, 5, 15) | guests : guest_id (1, 12, 11), date_of_birth (\"1995-11-04 07:09:57\", \"2013-02-22 11:26:22\", \"2001-06-18 20:05:55\"), guest_first_name (\"Lou\", \"Lou\", \"Else\"), guest_last_name (\"DuBuque\", \"Mante\", \"Crona\"), gender_code (\"Male\", \"Unknown\", \"Female\") | apartment_bookings : booking_start_date (\"2016-07-25 02:57:04\", \"2017-03-13 16:20:14\", \"2016-04-01 06:28:08\"), booking_status_code (\"Provisional\", \"Confirmed\"), booking_end_date (\"2017-10-06 11:15:58\", \"2017-11-29 12:59:42\", \"2018-02-25 15:15:37\"), guest_id (12, 14, 8), apt_id (15, 12, 10), apt_booking_id (889, 258, 889) | view_unit_status : available_yn (1, 0), status_date (\"2003-08-02 08:36:36\", \"2014-12-10 13:53:21\", \"1976-12-18 04:03:51\"), apt_booking_id (889, 924, 343), apt_id (14, 13, 9)", "schema_without_content": "apartment_buildings : building_address , building_description , building_full_name , building_phone 480-7401\", \"681.772.2454\", building_manager , building_id , building_short_name  | apartments : apt_number , building_id , apt_type_code , apt_id , bedroom_count , room_count , bathroom_count  | apartments_room_count : avg_room_count , building_id , bathroom_count , max_room_count , total_room_count , apt_type_code , min_room_count , apt_id , bedroom_count , apt_number  | apartment_facilities : facility_code , apt_id  | guests : guest_id , date_of_birth , guest_first_name , guest_last_name , gender_code  | apartment_bookings : booking_start_date , booking_status_code , booking_end_date , guest_id , apt_id , apt_booking_id  | view_unit_status : available_yn , status_date , apt_booking_id , apt_id "}, {"db_id": "apartment_rentals", "query": "select apt_type_code, max_room_count, min_room_count from apartments_room_count group by apt_type_code", "query_toks": ["SELECT", "apt_type_code", ",", "max", "(", "room_count", ")", ",", "min", "(", "room_count", ")", "FROM", "Apartments", "GROUP", "BY", "apt_type_code"], "query_toks_no_value": ["select", "apt_type_code", ",", "max", "(", "room_count", ")", ",", "min", "(", "room_count", ")", "from", "apartments", "group", "by", "apt_type_code"], "question": "Return each apartment type code along with the maximum and minimum number of rooms among each type.", "question_toks": ["Return", "each", "apartment", "type", "code", "along", "with", "the", "maximum", "and", "minimum", "number", "of", "rooms", "among", "each", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [1, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]]]], "union": null, "where": []}, "primary_key": {"apartments": "apt_id"}, "orig_query": "select apt_type_code, max(room_count), min(room_count) from apartments group by apt_type_code", "split_map": {"apartments": ["max_room_count", "min_room_count", "avg_room_count", "total_room_count"]}, "schema_with_content": "apartment_buildings : building_description (\"Studio\", \"Flat\", \"Duplex\"), building_manager (\"Sydni\", \"Juvenal\", \"Marie\"), building_full_name (\"VIA 57 WEST\", \"Petersfield\", \"Columbus Square\"), building_phone (\"544-148-5565x2847\", \"(909)086-5221x3455\", \"681.772.2454\"), building_id (532, 673, 790), building_address (\"861 Narciso Glens Suite 392\nEast Ottis, ND 73970\", \"489 Josh Orchard Apt. 998\nSipesview, DE 69053\", \"354 Otto Villages\nCharliefort, VT 71664\"), building_short_name (\"Petersfield\", \"Windsor Court\", \"Silver Towers\") | apartments : building_id (153, 808, 744), bathroom_count (1, 2, 3), apt_number (\"Suite 307\", \"Apt. 794\", \"Apt. 794\"), apt_id (14, 12, 14), room_count (\"7\", \"9\", \"8\"), bedroom_count (3, 6, 4), apt_type_code (\"Flat\", \"Studio\", \"Duplex\") | apartments_room_count : total_room_count (\"7\", \"9\", \"8\"), max_room_count (\"7\", \"9\", \"8\"), bedroom_count (3, 6, 4), apt_type_code (\"Flat\", \"Studio\", \"Duplex\"), apt_id (14, 12, 14), bathroom_count (1, 2, 3), avg_room_count (\"7\", \"9\", \"8\"), min_room_count (\"7\", \"9\", \"8\"), building_id (153, 808, 744), apt_number (\"Suite 307\", \"Apt. 794\", \"Apt. 794\") | apartment_facilities : facility_code (\"Boardband\", \"Swimming Pool\", \"Swimming Pool\"), apt_id (1, 2, 5) | guests : date_of_birth (\"1971-11-02 01:51:56\", \"1997-01-20 17:11:31\", \"2007-09-11 19:01:39\"), guest_id (6, 13, 15), guest_first_name (\"Lou\", \"Lou\", \"Josefina\"), guest_last_name (\"Roberts\", \"Lehner\", \"Schowalter\"), gender_code (\"Male\", \"Unknown\", \"Female\") | apartment_bookings : apt_id (15, 4, 6), guest_id (7, 14, 2), booking_end_date (\"2017-10-06 11:15:58\", \"2018-02-25 15:15:37\", \"2017-10-25 11:08:42\"), booking_status_code (\"Provisional\", \"Confirmed\"), apt_booking_id (920, 365, 497), booking_start_date (\"2017-07-03 14:15:56\", \"2017-03-13 16:20:14\", \"2016-07-25 02:57:04\") | view_unit_status : available_yn (1, 0), status_date (\"1980-11-12 13:34:45\", \"2012-11-24 13:39:37\", \"1976-12-18 04:03:51\"), apt_id (11, 9, 4), apt_booking_id (343, 920, 924)", "schema_without_content": "apartment_buildings : building_description , building_manager , building_full_name , building_phone 086-5221x3455\", \"681.772.2454\", building_id , building_address , building_short_name  | apartments : building_id , bathroom_count , apt_number , apt_id , room_count , bedroom_count , apt_type_code  | apartments_room_count : total_room_count , max_room_count , bedroom_count , apt_type_code , apt_id , bathroom_count , avg_room_count , min_room_count , building_id , apt_number  | apartment_facilities : facility_code , apt_id  | guests : date_of_birth , guest_id , guest_first_name , guest_last_name , gender_code  | apartment_bookings : apt_id , guest_id , booking_end_date , booking_status_code , apt_booking_id , booking_start_date  | view_unit_status : available_yn , status_date , apt_id , apt_booking_id "}, {"db_id": "game_injury", "query": "select max_home_games, min_home_games, avg_home_games from stadium_home_games", "query_toks": ["SELECT", "max", "(", "home_games", ")", ",", "min", "(", "home_games", ")", ",", "avg", "(", "home_games", ")", "FROM", "stadium"], "query_toks_no_value": ["select", "max", "(", "home_games", ")", ",", "min", "(", "home_games", ")", ",", "avg", "(", "home_games", ")", "from", "stadium"], "question": "What are the maximum, minimum and average home games each stadium held?", "question_toks": ["What", "are", "the", "maximum", ",", "minimum", "and", "average", "home", "games", "each", "stadium", "held", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]], [2, [0, [0, 3, false], null]], [5, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"stadium": "id"}, "orig_query": "select max(home_games), min(home_games), avg(home_games) from stadium", "split_map": {"stadium": ["max_home_games", "min_home_games", "avg_home_games", "total_home_games"]}, "schema_with_content": "stadium : name (\"Louisiana Superdome\", \"Lincoln Financial Field\", \"FedExField\"), id (7, 7, 7), home_games (8), capacity_percentage (90.7, 100.0, 100.0), average_attendance (74908.0, 70038.0, 70038.0), total_attendance (550048.0, 580965.0, 580965.0) | stadium_home_games : id (7, 7, 7), min_home_games (8), name (\"Louisiana Superdome\", \"Lincoln Financial Field\", \"FedExField\"), total_home_games (8), max_home_games (8), avg_home_games (8), average_attendance (74908.0, 70038.0, 70038.0), total_attendance (550048.0, 580965.0, 580965.0), capacity_percentage (90.7, 100.0, 100.0) | game : competition (\"League\", \"Cup\", \"Supercup\"), date (\"9 August 2012\", \"9 December 2007\", \"10 July 2008\"), season (2011, 2010, 2009), score (\"1\u00e2\u0080\u00933\", \"2\u00e2\u0080\u00931\", \"1\u00e2\u0080\u00933\"), stadium_id (12, 7, 4), id (19, 20, 14), away_team (\"Pakhtakor\", \"Quruvchi\", \"Bunyodkor\"), home_team (\"Quruvchi\", \"Pakhtakor\", \"Bunyodkor\") | injury_accident : source (\"inter.it\"), injury (\"Sustained a biceps femoris strain in his left leg\", \"Clean-up surgery on his right knee\", \"Sustained posterior thigh strains in his left leg\"), game_id (4, 10, 10), player (\"Esteban Cambiasso\", \"Goran Pandev\", \"Esteban Cambiasso\"), number_of_matches (\"3\", \"1\", \"1\"), id (3, 4, 12)", "schema_without_content": "stadium : name , id , home_games , capacity_percentage , average_attendance , total_attendance  | stadium_home_games : id , min_home_games , name , total_home_games , max_home_games , avg_home_games , average_attendance , total_attendance , capacity_percentage  | game : competition , date , season , score , stadium_id , id , away_team , home_team  | injury_accident : source , injury , game_id , player , number_of_matches , id "}, {"db_id": "soccer_1", "query": "select avg_weight from player_weight", "query_toks": ["SELECT", "avg", "(", "weight", ")", "FROM", "Player"], "query_toks_no_value": ["select", "avg", "(", "weight", ")", "from", "player"], "question": "What is the average weight of all players?", "question_toks": ["What", "is", "the", "average", "weight", "of", "all", "players", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 51, false], null]]]], "union": null, "where": []}, "primary_key": {"player": "id"}, "orig_query": "select avg(weight) from player", "split_map": {"player": ["max_weight", "min_weight", "avg_weight", "total_weight"]}, "schema_with_content": "player_attributes : standing_tackle (25, 58, 57), jumping (29, 85, 40), stamina (45, 78, 38), volleys (50, 26, 40), preferred_foot (\"right\", \"left\", None), gk_reflexes (53, 42, 3), gk_handling (51, 71, 49), short_passing (87, 44, 47), player_api_id (282287, 108808, 41488), dribbling (8, 88, 32), id (168317, 177832, 171455), sliding_tackle (31, 4, 6), vision (46, 87, 74), long_passing (39, 37, 77), agility (34, 53, 22), long_shots (28, 5, 43), potential (97, 53, 87), finishing (20, 74, 9), gk_kicking (14, 39, 55), penalties (36, 94, 68), curve (77, 16, 68), aggression (12, 61, 79), attacking_work_rate (\"high\", \"stoc\", \"medium\"), date (\"2014-03-21 00:00:00\", \"2015-06-12 00:00:00\", \"2015-01-16 00:00:00\"), sprint_speed (90, 56, 51), acceleration (75, 76, 18), ball_control (58, 96, 93), gk_diving (67, 16, 19), free_kick_accuracy (38, 2, 68), strength (44, 13, None), player_fifa_api_id (225951, 2172, 190264), gk_positioning (83, 47, 30), balance (64, 23, 39), defensive_work_rate (\"low\", \"5\", None), heading_accuracy (45, 42, 23), crossing (12, 13, 65), shot_power (95, 66, 83), marking (94, 47, 51), reactions (24, 30, 68), interceptions (79, 91, 22), overall_rating (42, 40, 45), positioning (92, 33, 66) | sqlite_sequence : seq (51958, 1458, 11075), name (\"Player\", \"Player\", \"Country\") | player : id (52, 3663, 10457), height (208.28, 172.72, 162.56), weight (209, 130, 187), player_name (\"Karim Laribi\", \"Steve Finnan\", \"Manuel Silas\"), player_api_id (178584, 70891, 26628), player_fifa_api_id (200389, 173165, 228999), birthday (\"1982-05-03 00:00:00\", \"1992-06-13 00:00:00\", \"1994-06-12 00:00:00\") | player_weight : avg_weight (209, 130, 187), min_weight (209, 130, 187), player_fifa_api_id (200389, 173165, 228999), player_name (\"Karim Laribi\", \"Steve Finnan\", \"Manuel Silas\"), birthday (\"1982-05-03 00:00:00\", \"1992-06-13 00:00:00\", \"1994-06-12 00:00:00\"), player_api_id (178584, 70891, 26628), total_weight (209, 130, 187), max_weight (209, 130, 187), id (52, 3663, 10457), height (208.28, 172.72, 162.56) | league : name (\"Belgium Jupiler League\", \"England Premier League\", \"England Premier League\"), country_id (1729, 19694, 7809), id (1, 21518, 1729) | country : id (19694, 24558, 24558), name (\"Italy\", \"Germany\", \"Netherlands\") | team : team_short_name (\"DOR\", \"MAI\", \"VOL\"), team_api_id (10189, 10233, 9783), team_long_name (\"AJ Auxerre\", \"Excelsior\", \"AC Ajaccio\"), team_fifa_api_id (1790, 1747, 100879), id (43035, 32409, 36248) | team_attributes : buildupplaydribbling (56, 33, None), chancecreationpositioningclass (\"Organised\", \"Free Form\"), chancecreationcrossing (38, 31, 37), chancecreationshooting (46, 44, 71), team_fifa_api_id (1971, 614, 109), buildupplayspeed (65, 71, 43), chancecreationpassingclass (\"Normal\", \"Risky\", \"Safe\"), buildupplaypassing (39, 20, 43), buildupplaypositioningclass (\"Organised\", \"Free Form\"), date (\"2010-02-22 00:00:00\", \"2010-02-22 00:00:00\", \"2010-02-22 00:00:00\"), defencepressureclass (\"Medium\", \"Deep\", \"High\"), defenceaggression (52, 56, 33), chancecreationshootingclass (\"Normal\", \"Lots\", \"Little\"), defenceaggressionclass (\"Press\", \"Double\", \"Contain\"), team_api_id (9875, 7955, 9878), id (421, 690, 1272), chancecreationpassing (55, 77, 43), buildupplaydribblingclass (\"Little\", \"Normal\", \"Lots\"), buildupplaypassingclass (\"Mixed\", \"Long\", \"Short\"), chancecreationcrossingclass (\"Normal\", \"Lots\", \"Little\"), buildupplayspeedclass (\"Balanced\", \"Fast\", \"Slow\"), defenceteamwidthclass (\"Normal\", \"Wide\", \"Narrow\"), defenceteamwidth (49, 69, 51), defencepressure (51, 27, 64), defencedefenderlineclass (\"Cover\", \"Offside Trap\")", "schema_without_content": "player_attributes : standing_tackle , jumping , stamina , volleys , preferred_foot , gk_reflexes , gk_handling , short_passing , player_api_id , dribbling , id , sliding_tackle , vision , long_passing , agility , long_shots , potential , finishing , gk_kicking , penalties , curve , aggression , attacking_work_rate , date , sprint_speed , acceleration , ball_control , gk_diving , free_kick_accuracy , strength , player_fifa_api_id , gk_positioning , balance , defensive_work_rate , heading_accuracy , crossing , shot_power , marking , reactions , interceptions , overall_rating , positioning  | sqlite_sequence : seq , name  | player : id , height , weight , player_name , player_api_id , player_fifa_api_id , birthday  | player_weight : avg_weight , min_weight , player_fifa_api_id , player_name , birthday , player_api_id , total_weight , max_weight , id , height  | league : name , country_id , id  | country : id , name  | team : team_short_name , team_api_id , team_long_name , team_fifa_api_id , id  | team_attributes : buildupplaydribbling , chancecreationpositioningclass , chancecreationcrossing , chancecreationshooting , team_fifa_api_id , buildupplayspeed , chancecreationpassingclass , buildupplaypassing , buildupplaypositioningclass , date , defencepressureclass , defenceaggression , chancecreationshootingclass , defenceaggressionclass , team_api_id , id , chancecreationpassing , buildupplaydribblingclass , buildupplaypassingclass , chancecreationcrossingclass , buildupplayspeedclass , defenceteamwidthclass , defenceteamwidth , defencepressure , defencedefenderlineclass "}, {"db_id": "soccer_1", "query": "select max_weight, min_weight from player_weight", "query_toks": ["SELECT", "max", "(", "weight", ")", ",", "min", "(", "weight", ")", "FROM", "Player"], "query_toks_no_value": ["select", "max", "(", "weight", ")", ",", "min", "(", "weight", ")", "from", "player"], "question": "What is the maximum and minimum height of all players?", "question_toks": ["What", "is", "the", "maximum", "and", "minimum", "height", "of", "all", "players", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 51, false], null]], [2, [0, [0, 51, false], null]]]], "union": null, "where": []}, "primary_key": {"player": "id"}, "orig_query": "select max(weight), min(weight) from player", "split_map": {"player": ["max_weight", "min_weight", "avg_weight", "total_weight"]}, "schema_with_content": "player_attributes : gk_reflexes (35, 94, 22), finishing (78, 26, 36), preferred_foot (\"right\", \"left\", None), id (36286, 109776, 181323), positioning (37, 84, 49), defensive_work_rate (\"0\", \"high\", \"2\"), player_fifa_api_id (224256, 28050, 171247), overall_rating (None, 88, 72), penalties (54, 5, 86), strength (77, 43, 41), sprint_speed (41, 73, 47), acceleration (53, 14, 61), vision (78, 1, 35), gk_positioning (39, 20, 94), long_passing (20, 43, 13), long_shots (14, 10, 62), gk_diving (31, 26, 5), interceptions (26, 71, 54), short_passing (83, 75, 55), marking (26, 69, 93), reactions (34, 47, 40), crossing (61, 34, 71), volleys (18, 11, 24), curve (80, 88, 32), balance (37, 47, 51), free_kick_accuracy (69, 20, 12), heading_accuracy (66, 70, 60), ball_control (76, 66, 93), date (\"2011-08-30 00:00:00\", \"2014-07-18 00:00:00\", \"2014-09-18 00:00:00\"), jumping (35, 59, 34), agility (30, 64, 33), gk_handling (47, 23, 56), gk_kicking (34, 72, 41), potential (57, 96, 92), shot_power (50, 39, 2), sliding_tackle (50, 92, 87), player_api_id (103714, 49897, 186137), aggression (64, 64, 16), dribbling (9, 61, 33), standing_tackle (45, 90, 90), attacking_work_rate (\"le\", None, None), stamina (30, 64, 28) | sqlite_sequence : seq (103916, 51958, 51958), name (\"League\", \"Player\", \"Player_Attributes\") | player : player_api_id (256202, 114044, 177698), player_fifa_api_id (50598, 190885, 205582), player_name (\"Carlos Labrin\", \"Volodymyr Koval\", \"Bura\"), height (160.02, 198.12, 185.42), weight (214, 117, 128), birthday (\"1991-07-31 00:00:00\", \"1992-07-15 00:00:00\", \"1985-12-01 00:00:00\"), id (2859, 213, 10654) | player_weight : player_api_id (256202, 114044, 177698), id (2859, 213, 10654), height (160.02, 198.12, 185.42), total_weight (214, 117, 128), player_fifa_api_id (50598, 190885, 205582), player_name (\"Carlos Labrin\", \"Volodymyr Koval\", \"Bura\"), birthday (\"1991-07-31 00:00:00\", \"1992-07-15 00:00:00\", \"1985-12-01 00:00:00\"), avg_weight (214, 117, 128), min_weight (214, 117, 128), max_weight (214, 117, 128) | league : id (1, 15722, 15722), name (\"England Premier League\", \"Switzerland Super League\", \"Italy Serie A\"), country_id (13274, 1729, 13274) | country : name (\"France\", \"England\", \"Italy\"), id (15722, 21518, 19694) | team : id (39388, 26559, 33855), team_api_id (10179, 8455, 8394), team_fifa_api_id (1742, 682, None), team_long_name (\"Estoril Praia\", \"Roma\", \"UD Almer\u00c3\u00ada\"), team_short_name (\"DAR\", \"BRE\", \"PAD\") | team_attributes : defencepressure (58, 55, 40), defenceteamwidth (34, 64, 39), date (\"2014-09-19 00:00:00\", \"2013-09-20 00:00:00\", \"2012-02-22 00:00:00\"), chancecreationpassing (34, 48, 35), chancecreationshooting (31, 62, 42), id (439, 47, 801), buildupplaydribbling (67, 70, 49), team_fifa_api_id (1793, 1750, 110746), defencepressureclass (\"Medium\", \"Deep\", \"High\"), defenceaggressionclass (\"Press\", \"Double\", \"Contain\"), chancecreationcrossing (36, 41, 64), buildupplaypassing (40, 71, 50), defenceteamwidthclass (\"Normal\", \"Wide\", \"Narrow\"), buildupplayspeed (23, 29, 33), buildupplayspeedclass (\"Balanced\", \"Fast\", \"Slow\"), defenceaggression (57, 27, 34), chancecreationcrossingclass (\"Normal\", \"Lots\", \"Little\"), chancecreationpassingclass (\"Normal\", \"Risky\", \"Safe\"), buildupplaypassingclass (\"Mixed\", \"Long\", \"Short\"), team_api_id (9829, 8371, 8560), chancecreationshootingclass (\"Normal\", \"Lots\", \"Little\"), buildupplaydribblingclass (\"Little\", \"Normal\", \"Lots\"), buildupplaypositioningclass (\"Organised\", \"Free Form\"), chancecreationpositioningclass (\"Organised\", \"Free Form\"), defencedefenderlineclass (\"Cover\", \"Offside Trap\")", "schema_without_content": "player_attributes : gk_reflexes , finishing , preferred_foot , id , positioning , defensive_work_rate , player_fifa_api_id , overall_rating , penalties , strength , sprint_speed , acceleration , vision , gk_positioning , long_passing , long_shots , gk_diving , interceptions , short_passing , marking , reactions , crossing , volleys , curve , balance , free_kick_accuracy , heading_accuracy , ball_control , date , jumping , agility , gk_handling , gk_kicking , potential , shot_power , sliding_tackle , player_api_id , aggression , dribbling , standing_tackle , attacking_work_rate , stamina  | sqlite_sequence : seq , name  | player : player_api_id , player_fifa_api_id , player_name , height , weight , birthday , id  | player_weight : player_api_id , id , height , total_weight , player_fifa_api_id , player_name , birthday , avg_weight , min_weight , max_weight  | league : id , name , country_id  | country : name , id  | team : id , team_api_id , team_fifa_api_id , team_long_name , team_short_name  | team_attributes : defencepressure , defenceteamwidth , date , chancecreationpassing , chancecreationshooting , id , buildupplaydribbling , team_fifa_api_id , defencepressureclass , defenceaggressionclass , chancecreationcrossing , buildupplaypassing , defenceteamwidthclass , buildupplayspeed , buildupplayspeedclass , defenceaggression , chancecreationcrossingclass , chancecreationpassingclass , buildupplaypassingclass , team_api_id , chancecreationshootingclass , buildupplaydribblingclass , buildupplaypositioningclass , chancecreationpositioningclass , defencedefenderlineclass "}, {"db_id": "soccer_1", "query": "select preferred_foot, avg_overall_rating from player_attributes_overall_rating group by preferred_foot", "query_toks": ["SELECT", "preferred_foot", ",", "avg", "(", "overall_rating", ")", "FROM", "Player_Attributes", "GROUP", "BY", "preferred_foot"], "query_toks_no_value": ["select", "preferred_foot", ",", "avg", "(", "overall_rating", ")", "from", "player_attributes", "group", "by", "preferred_foot"], "question": "What is the average rating for right-footed players and left-footed players?", "question_toks": ["What", "is", "the", "average", "rating", "for", "right-footed", "players", "and", "left-footed", "players", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [5, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"player_attributes": "id"}, "orig_query": "select preferred_foot, avg(overall_rating) from player_attributes group by preferred_foot", "split_map": {"player_attributes": ["max_overall_rating", "min_overall_rating", "avg_overall_rating", "total_overall_rating"]}, "schema_with_content": "player_attributes : reactions (57, 77, 83), agility (54, 76, 47), gk_kicking (82, 26, 16), gk_reflexes (46, 5, 61), crossing (93, 39, 89), marking (20, 83, 42), long_shots (74, 81, 7), finishing (5, 30, 63), standing_tackle (89, 26, 23), balance (24, 43, 72), vision (61, 43, 68), stamina (78, 44, 41), preferred_foot (\"right\", \"left\", None), aggression (63, 77, 15), attacking_work_rate (\"stoc\", \"None\", \"le\"), volleys (91, 72, 35), player_api_id (142357, 114503, 36008), acceleration (15, 31, 63), free_kick_accuracy (49, 76, 49), long_passing (81, 39, 83), jumping (28, 45, 80), shot_power (10, 57, 49), ball_control (89, 43, 60), potential (61, 81, 59), player_fifa_api_id (204275, 163226, 190942), penalties (89, 86, 37), id (138384, 118734, 75744), gk_handling (32, 41, 69), defensive_work_rate (\"es\", \"0\", \"_0\"), curve (59, 73, 61), dribbling (50, 81, 56), heading_accuracy (24, 21, 53), short_passing (39, 30, 96), sprint_speed (15, 39, 65), date (\"2014-08-08 00:00:00\", \"2014-08-01 00:00:00\", \"2016-03-10 00:00:00\"), positioning (31, 55, 87), overall_rating (72, 42, 45), interceptions (8, 88, 89), gk_positioning (65, 65, 16), strength (75, 80, 33), sliding_tackle (95, 31, 55), gk_diving (93, 5, 91) | player_attributes_overall_rating : player_api_id (142357, 114503, 36008), id (138384, 118734, 75744), min_overall_rating (72, 42, 45), avg_overall_rating (72, 42, 45), total_overall_rating (72, 42, 45), date (\"2014-08-08 00:00:00\", \"2014-08-01 00:00:00\", \"2016-03-10 00:00:00\"), player_fifa_api_id (204275, 163226, 190942), max_overall_rating (72, 42, 45), potential (61, 81, 59), preferred_foot (\"right\", \"left\", None), attacking_work_rate (\"stoc\", \"None\", \"le\"), defensive_work_rate (\"es\", \"0\", \"_0\"), crossing (93, 39, 89), finishing (5, 30, 63), heading_accuracy (24, 21, 53), short_passing (39, 30, 96), volleys (91, 72, 35), dribbling (50, 81, 56), curve (59, 73, 61), free_kick_accuracy (49, 76, 49), long_passing (81, 39, 83), ball_control (89, 43, 60), acceleration (15, 31, 63), sprint_speed (15, 39, 65), agility (54, 76, 47), reactions (57, 77, 83), balance (24, 43, 72), shot_power (10, 57, 49), jumping (28, 45, 80), stamina (78, 44, 41), strength (75, 80, 33), long_shots (74, 81, 7), aggression (63, 77, 15), interceptions (8, 88, 89), positioning (31, 55, 87), vision (61, 43, 68), penalties (89, 86, 37), marking (20, 83, 42), standing_tackle (89, 26, 23), sliding_tackle (95, 31, 55), gk_diving (93, 5, 91), gk_handling (32, 41, 69), gk_kicking (82, 26, 16), gk_positioning (65, 65, 16), gk_reflexes (46, 5, 61) | sqlite_sequence : name (\"League\", \"League\", \"Player_Attributes\"), seq (51958, 103916, 1458) | player : player_api_id (33768, 25131, 23370), player_fifa_api_id (206269, 227633, 213855), height (170.18, 167.64, 198.12), id (9446, 5115, 3204), player_name (\"Lewis Guy\", \"Peter Kovacs\", \"Cedric Bakambu\"), weight (172, 179, 214), birthday (\"1979-06-29 00:00:00\", \"1995-04-20 00:00:00\", \"1988-04-23 00:00:00\") | league : id (15722, 10257, 13274), name (\"Germany 1. Bundesliga\", \"Spain LIGA BBVA\", \"France Ligue 1\"), country_id (1729, 19694, 17642) | country : name (\"France\", \"Germany\", \"Portugal\"), id (13274, 15722, 4769) | team : team_api_id (10265, 9768, 10214), id (35291, 26559, 26556), team_fifa_api_id (546, 159, 110502), team_long_name (\"Sunderland\", \"St. Mirren\", \"AJ Auxerre\"), team_short_name (\"ARS\", \"NUR\", \"CRY\") | team_attributes : defenceteamwidth (52, 70, 31), chancecreationpositioningclass (\"Organised\", \"Free Form\"), id (213, 1270, 282), defenceaggression (60, 53, 56), defencedefenderlineclass (\"Cover\", \"Offside Trap\"), buildupplaypositioningclass (\"Organised\", \"Free Form\"), chancecreationpassing (48, 33, 36), team_api_id (8025, 10000, 6413), buildupplaypassing (32, 33, 46), team_fifa_api_id (22, 480, 112512), buildupplayspeedclass (\"Balanced\", \"Fast\", \"Slow\"), buildupplaydribblingclass (\"Little\", \"Normal\", \"Lots\"), chancecreationpassingclass (\"Normal\", \"Risky\", \"Safe\"), chancecreationcrossingclass (\"Normal\", \"Lots\", \"Little\"), chancecreationcrossing (68, 26, 57), defenceaggressionclass (\"Press\", \"Double\", \"Contain\"), date (\"2013-09-20 00:00:00\", \"2014-09-19 00:00:00\", \"2015-09-10 00:00:00\"), buildupplaydribbling (45, 24, 67), defencepressureclass (\"Medium\", \"Deep\", \"High\"), buildupplayspeed (38, 45, 63), buildupplaypassingclass (\"Mixed\", \"Long\", \"Short\"), chancecreationshooting (78, 36, 23), defencepressure (38, 52, 65), chancecreationshootingclass (\"Normal\", \"Lots\", \"Little\"), defenceteamwidthclass (\"Normal\", \"Wide\", \"Narrow\")", "schema_without_content": "player_attributes : reactions , agility , gk_kicking , gk_reflexes , crossing , marking , long_shots , finishing , standing_tackle , balance , vision , stamina , preferred_foot , aggression , attacking_work_rate , volleys , player_api_id , acceleration , free_kick_accuracy , long_passing , jumping , shot_power , ball_control , potential , player_fifa_api_id , penalties , id , gk_handling , defensive_work_rate , curve , dribbling , heading_accuracy , short_passing , sprint_speed , date , positioning , overall_rating , interceptions , gk_positioning , strength , sliding_tackle , gk_diving  | player_attributes_overall_rating : player_api_id , id , min_overall_rating , avg_overall_rating , total_overall_rating , date , player_fifa_api_id , max_overall_rating , potential , preferred_foot , attacking_work_rate , defensive_work_rate , crossing , finishing , heading_accuracy , short_passing , volleys , dribbling , curve , free_kick_accuracy , long_passing , ball_control , acceleration , sprint_speed , agility , reactions , balance , shot_power , jumping , stamina , strength , long_shots , aggression , interceptions , positioning , vision , penalties , marking , standing_tackle , sliding_tackle , gk_diving , gk_handling , gk_kicking , gk_positioning , gk_reflexes  | sqlite_sequence : name , seq  | player : player_api_id , player_fifa_api_id , height , id , player_name , weight , birthday  | league : id , name , country_id  | country : name , id  | team : team_api_id , id , team_fifa_api_id , team_long_name , team_short_name  | team_attributes : defenceteamwidth , chancecreationpositioningclass , id , defenceaggression , defencedefenderlineclass , buildupplaypositioningclass , chancecreationpassing , team_api_id , buildupplaypassing , team_fifa_api_id , buildupplayspeedclass , buildupplaydribblingclass , chancecreationpassingclass , chancecreationcrossingclass , chancecreationcrossing , defenceaggressionclass , date , buildupplaydribbling , defencepressureclass , buildupplayspeed , buildupplaypassingclass , chancecreationshooting , defencepressure , chancecreationshootingclass , defenceteamwidthclass "}, {"db_id": "performance_attendance", "query": "select avg_attendance from performance_attendance", "query_toks": ["SELECT", "avg", "(", "Attendance", ")", "FROM", "performance"], "query_toks_no_value": ["select", "avg", "(", "attendance", ")", "from", "performance"], "question": "What is the average number of attendees for performances?", "question_toks": ["What", "is", "the", "average", "number", "of", "attendees", "for", "performances", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"performance": "performance_id"}, "orig_query": "select avg(attendance) from performance", "split_map": {"performance": ["max_attendance", "min_attendance", "avg_attendance", "total_attendance"]}, "schema_with_content": "member : nationality (\"Uruguay\", \"Argentina\", \"United States\"), name (\"Charlie Burke\", \"Wilfredo Ruiz\", \"Corey Allen\"), role (\"Bass\", \"Violin\", \"Prime Violin\"), member_id (\"3\", \"9\", \"5\") | performance : date (\"February 10\", \"February 5\", \"February 11\"), location (\"Bell Centre\", \"Madison Square Garden\", \"Verizon Center\"), attendance (1878, 1820, 1877), host (\"Atlanta Thrashers\", \"Atlanta Thrashers\", \"Montreal Canadiens\"), performance_id (6.0, 3.0, 5.0) | performance_attendance : total_attendance (1878, 1820, 1877), location (\"Bell Centre\", \"Madison Square Garden\", \"Verizon Center\"), min_attendance (1878, 1820, 1877), performance_id (6.0, 3.0, 5.0), avg_attendance (1878, 1820, 1877), max_attendance (1878, 1820, 1877), host (\"Atlanta Thrashers\", \"Atlanta Thrashers\", \"Montreal Canadiens\"), date (\"February 10\", \"February 5\", \"February 11\") | member_attendance : member_id (11, 4, 11), performance_id (1, 2, 2), num_of_pieces (1, 3, 4)", "schema_without_content": "member : nationality , name , role , member_id  | performance : date , location , attendance , host , performance_id  | performance_attendance : total_attendance , location , min_attendance , performance_id , avg_attendance , max_attendance , host , date  | member_attendance : member_id , performance_id , num_of_pieces "}, {"db_id": "college_2", "query": "select total_budget from department_budget where dept_name = 'Marketing' or dept_name = 'Finance'", "query_toks": ["SELECT", "sum", "(", "budget", ")", "FROM", "department", "WHERE", "dept_name", "=", "'Marketing", "'", "OR", "dept_name", "=", "'Finance", "'"], "query_toks_no_value": ["select", "sum", "(", "budget", ")", "from", "department", "where", "dept_name", "=", "value", "or", "dept_name", "=", "value"], "question": "Find the total budgets of the Marketing or Finance department.", "question_toks": ["Find", "the", "total", "budgets", "of", "the", "Marketing", "or", "Finance", "department", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Marketing\"", null], "or", [false, 2, [0, [0, 4, false], null], "\"Finance\"", null]]}, "primary_key": {"department": "dept_name"}, "orig_query": "select sum(budget) from department where dept_name = 'Marketing' or dept_name = 'Finance'", "split_map": {"department": ["max_budget", "min_budget", "avg_budget", "total_budget"]}, "schema_with_content": "classroom : capacity (34, 32, 65), room_number (\"86\", \"119\", \"804\"), building (\"Grace\", \"Taylor\", \"Chandler\") | department : budget (848175.04, 734550.7, 406557.93), dept_name (\"Languages\", \"Athletics\", \"Biology\"), building (\"Candlestick\", \"Mercer\", \"Bronfman\") | department_budget : total_budget (848175.04, 734550.7, 406557.93), max_budget (848175.04, 734550.7, 406557.93), dept_name (\"Languages\", \"Athletics\", \"Biology\"), min_budget (848175.04, 734550.7, 406557.93), building (\"Candlestick\", \"Mercer\", \"Bronfman\"), avg_budget (848175.04, 734550.7, 406557.93) | course : dept_name (\"Math\", \"Biology\", \"Astronomy\"), course_id (\"781\", \"804\", \"482\"), credits (4, 3), title (\"Logic\", \"Marine Mammals\", \"Finite Element Analysis\") | instructor : id (\"97302\", \"43779\", \"64871\"), dept_name (\"Marketing\", \"English\", \"Geology\"), name (\"Gutierrez\", \"Arias\", \"Shuming\"), salary (124651.41, 115469.11, 57807.09) | section : course_id (\"679\", \"852\", \"927\"), room_number (\"717\", \"145\", \"425\"), semester (\"Fall\", \"Spring\"), sec_id (\"1\", \"2\", \"3\"), building (\"Polya\", \"Polya\", \"Bronfman\"), time_slot_id (\"H\", \"L\", \"C\"), year (2003, 2007, 2008) | teaches : semester (\"Spring\", \"Fall\"), year (2008, 2002, 2002), id (\"28400\", \"80759\", \"65931\"), sec_id (\"1\", \"2\", \"3\"), course_id (\"791\", \"631\", \"793\") | student : dept_name (\"Accounting\", \"Astronomy\", \"Geology\"), tot_cred (7, 14, 80), name (\"Hac\", \"Stasko\", \"Almeida\"), id (\"93004\", \"70395\", \"39901\") | takes : course_id (\"426\", \"875\", \"486\"), id (\"93508\", \"29705\", \"78332\"), semester (\"Fall\", \"Spring\"), year (2006, 2010, 2001), sec_id (\"1\", \"2\", \"3\"), grade (\"C+\", \"A+\", \"B-\") | advisor : s_id (\"36019\", \"28252\", \"32119\"), i_id (\"63287\", \"80759\", \"42782\") | time_slot : end_min (50, 45, 30), day (\"M\", \"M\", \"R\"), time_slot_id (\"D\", \"B\", \"F\"), start_hr (11, 13, 10), end_hr (13, 15, 11), start_min (0, 30) | prereq : prereq_id (\"254\", \"947\", \"731\"), course_id (\"258\", \"864\", \"158\")", "schema_without_content": "classroom : capacity , room_number , building  | department : budget , dept_name , building  | department_budget : total_budget , max_budget , dept_name , min_budget , building , avg_budget  | course : dept_name , course_id , credits , title  | instructor : id , dept_name , name , salary  | section : course_id , room_number , semester , sec_id , building , time_slot_id , year  | teaches : semester , year , id , sec_id , course_id  | student : dept_name , tot_cred , name , id  | takes : course_id , id , semester , year , sec_id , grade  | advisor : s_id , i_id  | time_slot : end_min , day , time_slot_id , start_hr , end_hr , start_min  | prereq : prereq_id , course_id "}, {"db_id": "college_2", "query": "select total_budget from department_budget where dept_name = 'Marketing' or dept_name = 'Finance'", "query_toks": ["SELECT", "sum", "(", "budget", ")", "FROM", "department", "WHERE", "dept_name", "=", "'Marketing", "'", "OR", "dept_name", "=", "'Finance", "'"], "query_toks_no_value": ["select", "sum", "(", "budget", ")", "from", "department", "where", "dept_name", "=", "value", "or", "dept_name", "=", "value"], "question": "What is the sum of budgets of the Marketing and Finance departments?", "question_toks": ["What", "is", "the", "sum", "of", "budgets", "of", "the", "Marketing", "and", "Finance", "departments", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Marketing\"", null], "or", [false, 2, [0, [0, 4, false], null], "\"Finance\"", null]]}, "primary_key": {"department": "dept_name"}, "orig_query": "select sum(budget) from department where dept_name = 'Marketing' or dept_name = 'Finance'", "split_map": {"department": ["max_budget", "min_budget", "avg_budget", "total_budget"]}, "schema_with_content": "classroom : capacity (12, 47, 28), room_number (\"105\", \"425\", \"113\"), building (\"Chandler\", \"Rathbone\", \"Polya\") | department : building (\"Chandler\", \"Taylor\", \"Main\"), budget (647610.55, 848175.04, 647610.55), dept_name (\"Mech. Eng.\", \"Languages\", \"Biology\") | department_budget : max_budget (647610.55, 848175.04, 647610.55), dept_name (\"Mech. Eng.\", \"Languages\", \"Biology\"), building (\"Chandler\", \"Taylor\", \"Main\"), total_budget (647610.55, 848175.04, 647610.55), avg_budget (647610.55, 848175.04, 647610.55), min_budget (647610.55, 848175.04, 647610.55) | course : dept_name (\"Finance\", \"Psychology\", \"Psychology\"), credits (4, 3), course_id (\"468\", \"338\", \"445\"), title (\"Strength of Materials\", \"Image Processing\", \"Plastics\") | instructor : dept_name (\"Biology\", \"Pol. Sci.\", \"English\"), id (\"59795\", \"81991\", \"4034\"), name (\"Yin\", \"Romero\", \"Voronina\"), salary (43770.36, 34272.67, 57807.09) | section : building (\"Bronfman\", \"Saucon\", \"Stabler\"), time_slot_id (\"M\", \"G\", \"N\"), year (2010, 2008, 2005), course_id (\"808\", \"791\", \"692\"), sec_id (\"1\", \"2\", \"3\"), room_number (\"804\", \"143\", \"119\"), semester (\"Fall\", \"Spring\") | teaches : year (2001, 2008, 2010), semester (\"Spring\", \"Fall\"), sec_id (\"1\", \"2\", \"3\"), id (\"34175\", \"50330\", \"41930\"), course_id (\"461\", \"702\", \"704\") | student : dept_name (\"Finance\", \"Finance\", \"Statistics\"), name (\"Felling\", \"Abeggl\", \"Fujii\"), id (\"76672\", \"59117\", \"22532\"), tot_cred (16, 39, 14) | takes : id (\"18583\", \"18821\", \"73328\"), semester (\"Fall\", \"Spring\"), grade (\"C-\", \"C \", \"A+\"), sec_id (\"1\", \"2\", \"3\"), year (2005, 2010, 2010), course_id (\"747\", \"137\", \"486\") | advisor : s_id (\"85614\", \"65703\", \"89140\"), i_id (\"4233\", \"6569\", \"43779\") | time_slot : start_min (0, 30), end_hr (8, 8, 15), end_min (50, 45, 30), day (\"W\", \"W\", \"T\"), start_hr (16, 8, 16), time_slot_id (\"B\", \"E\", \"A\") | prereq : prereq_id (\"659\", \"345\", \"319\"), course_id (\"612\", \"403\", \"634\")", "schema_without_content": "classroom : capacity , room_number , building  | department : building , budget , dept_name  | department_budget : max_budget , dept_name , building , total_budget , avg_budget , min_budget  | course : dept_name , credits , course_id , title  | instructor : dept_name , id , name , salary  | section : building , time_slot_id , year , course_id , sec_id , room_number , semester  | teaches : year , semester , sec_id , id , course_id  | student : dept_name , name , id , tot_cred  | takes : id , semester , grade , sec_id , year , course_id  | advisor : s_id , i_id  | time_slot : start_min , end_hr , end_min , day , start_hr , time_slot_id  | prereq : prereq_id , course_id "}, {"db_id": "college_2", "query": "select max_capacity, avg_capacity, building from classroom_capacity group by building", "query_toks": ["SELECT", "max", "(", "capacity", ")", ",", "avg", "(", "capacity", ")", ",", "building", "FROM", "classroom", "GROUP", "BY", "building"], "query_toks_no_value": ["select", "max", "(", "capacity", ")", ",", "avg", "(", "capacity", ")", ",", "building", "from", "classroom", "group", "by", "building"], "question": "Find the maximum and average capacity among rooms in each building.", "question_toks": ["Find", "the", "maximum", "and", "average", "capacity", "among", "rooms", "in", "each", "building", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]], [5, [0, [0, 3, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}, "primary_key": {"classroom": "building"}, "orig_query": "select max(capacity), avg(capacity), building from classroom group by building", "split_map": {"classroom": ["max_capacity", "min_capacity", "avg_capacity", "total_capacity"]}, "schema_with_content": "classroom : building (\"Power\", \"Rathbone\", \"Painter\"), capacity (22, 60, 71), room_number (\"113\", \"972\", \"844\") | classroom_capacity : building (\"Power\", \"Rathbone\", \"Painter\"), avg_capacity (22, 60, 71), room_number (\"113\", \"972\", \"844\"), total_capacity (22, 60, 71), min_capacity (22, 60, 71), max_capacity (22, 60, 71) | department : building (\"Chandler\", \"Linderman\", \"Saucon\"), dept_name (\"Physics\", \"English\", \"History\"), budget (848175.04, 794541.46, 617253.94) | course : course_id (\"436\", \"608\", \"195\"), dept_name (\"Pol. Sci.\", \"Geology\", \"Pol. Sci.\"), title (\"Tort Law\", \"How to Succeed in Business Without Really Trying\", \"Existentialism\"), credits (4, 3) | instructor : id (\"3335\", \"35579\", \"36897\"), name (\"McKinnon\", \"Mird\", \"Ullman \"), salary (54805.11, 106554.73, 66143.25), dept_name (\"English\", \"Statistics\", \"Astronomy\") | section : semester (\"Fall\", \"Spring\"), time_slot_id (\"N\", \"A\", \"K\"), course_id (\"791\", \"735\", \"808\"), room_number (\"547\", \"145\", \"812\"), year (2009, 2002, 2006), building (\"Saucon\", \"Garfield\", \"Power\"), sec_id (\"1\", \"2\", \"3\") | teaches : id (\"65931\", \"28097\", \"36897\"), semester (\"Spring\", \"Fall\"), year (2008, 2007, 2004), sec_id (\"1\", \"2\", \"3\"), course_id (\"571\", \"158\", \"696\") | student : tot_cred (92, 22, 53), dept_name (\"Civil Eng.\", \"Physics\", \"Astronomy\"), name (\"Stylian\", \"Ashmi\", \"Feng\"), id (\"94142\", \"4034\", \"39157\") | takes : semester (\"Fall\", \"Spring\"), year (2009, 2006, 2004), grade (\"A-\", \"A \", \"C+\"), id (\"48165\", \"79329\", \"33107\"), course_id (\"692\", \"735\", \"802\"), sec_id (\"1\", \"2\", \"3\") | advisor : i_id (\"79653\", \"43779\", \"48507\"), s_id (\"53118\", \"11057\", \"72006\") | time_slot : day (\"M\", \"W\", \"M\"), end_min (50, 45, 30), time_slot_id (\"E\", \"A\", \"F\"), start_min (0, 30), end_hr (8, 13, 11), start_hr (14, 10, 8) | prereq : prereq_id (\"864\", \"426\", \"818\"), course_id (\"843\", \"864\", \"958\")", "schema_without_content": "classroom : building , capacity , room_number  | classroom_capacity : building , avg_capacity , room_number , total_capacity , min_capacity , max_capacity  | department : building , dept_name , budget  | course : course_id , dept_name , title , credits  | instructor : id , name , salary , dept_name  | section : semester , time_slot_id , course_id , room_number , year , building , sec_id  | teaches : id , semester , year , sec_id , course_id  | student : tot_cred , dept_name , name , id  | takes : semester , year , grade , id , course_id , sec_id  | advisor : i_id , s_id  | time_slot : day , end_min , time_slot_id , start_min , end_hr , start_hr  | prereq : prereq_id , course_id "}, {"db_id": "college_2", "query": "select max_capacity, avg_capacity, building from classroom_capacity group by building", "query_toks": ["SELECT", "max", "(", "capacity", ")", ",", "avg", "(", "capacity", ")", ",", "building", "FROM", "classroom", "GROUP", "BY", "building"], "query_toks_no_value": ["select", "max", "(", "capacity", ")", ",", "avg", "(", "capacity", ")", ",", "building", "from", "classroom", "group", "by", "building"], "question": "What are the greatest and average capacity for rooms in each building?", "question_toks": ["What", "are", "the", "greatest", "and", "average", "capacity", "for", "rooms", "in", "each", "building", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]], [5, [0, [0, 3, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}, "primary_key": {"classroom": "building"}, "orig_query": "select max(capacity), avg(capacity), building from classroom group by building", "split_map": {"classroom": ["max_capacity", "min_capacity", "avg_capacity", "total_capacity"]}, "schema_with_content": "classroom : building (\"Power\", \"Polya\", \"Grace\"), capacity (97, 28, 22), room_number (\"105\", \"105\", \"812\") | classroom_capacity : building (\"Power\", \"Polya\", \"Grace\"), avg_capacity (97, 28, 22), min_capacity (97, 28, 22), max_capacity (97, 28, 22), total_capacity (97, 28, 22), room_number (\"105\", \"105\", \"812\") | department : budget (794541.46, 699140.86, 276527.61), building (\"Candlestick\", \"Brodhead\", \"Bronfman\"), dept_name (\"Geology\", \"Biology\", \"Languages\") | course : credits (4, 3), title (\"Mechanics\", \"Strength of Materials\", \"Video Gaming\"), course_id (\"482\", \"792\", \"362\"), dept_name (\"Finance\", \"History\", \"Pol. Sci.\") | instructor : salary (59303.62, 103146.87, 35023.18), name (\"Sakurai\", \"Sarkar\", \"Pingr\"), dept_name (\"Elec. Eng.\", \"Languages\", \"Physics\"), id (\"42782\", \"58558\", \"96895\") | section : building (\"Taylor\", \"Power\", \"Drown\"), semester (\"Fall\", \"Spring\"), course_id (\"400\", \"443\", \"692\"), time_slot_id (\"P\", \"J\", \"M\"), sec_id (\"1\", \"2\", \"3\"), year (2001, 2002, 2010), room_number (\"434\", \"700\", \"145\") | teaches : course_id (\"482\", \"258\", \"571\"), year (2002, 2002, 2002), semester (\"Spring\", \"Fall\"), id (\"95709\", \"90376\", \"28400\"), sec_id (\"1\", \"2\", \"3\") | student : name (\"Arena\", \"Gur\", \"Ssu\"), tot_cred (4, 71, 106), dept_name (\"Cybernetics\", \"Geology\", \"Athletics\"), id (\"25256\", \"39612\", \"2178\") | takes : id (\"32245\", \"5925\", \"19050\"), sec_id (\"1\", \"2\", \"3\"), course_id (\"545\", \"445\", \"949\"), grade (\"C \", \"C-\", \"C-\"), semester (\"Fall\", \"Spring\"), year (2003, 2005, 2005) | advisor : i_id (\"64871\", \"57180\", \"64871\"), s_id (\"18636\", \"69521\", \"3639\") | time_slot : start_hr (9, 13, 16), end_min (50, 45, 30), end_hr (9, 12, 16), day (\"R\", \"T\", \"T\"), start_min (0, 30), time_slot_id (\"F\", \"F\", \"B\") | prereq : prereq_id (\"735\", \"857\", \"421\"), course_id (\"629\", \"704\", \"663\")", "schema_without_content": "classroom : building , capacity , room_number  | classroom_capacity : building , avg_capacity , min_capacity , max_capacity , total_capacity , room_number  | department : budget , building , dept_name  | course : credits , title , course_id , dept_name  | instructor : salary , name , dept_name , id  | section : building , semester , course_id , time_slot_id , sec_id , year , room_number  | teaches : course_id , year , semester , id , sec_id  | student : name , tot_cred , dept_name , id  | takes : id , sec_id , course_id , grade , semester , year  | advisor : i_id , s_id  | time_slot : start_hr , end_min , end_hr , day , start_min , time_slot_id  | prereq : prereq_id , course_id "}, {"db_id": "college_2", "query": "select total_credits, dept_name from course_credits group by dept_name", "query_toks": ["SELECT", "sum", "(", "credits", ")", ",", "dept_name", "FROM", "course", "GROUP", "BY", "dept_name"], "query_toks_no_value": ["select", "sum", "(", "credits", ")", ",", "dept_name", "from", "course", "group", "by", "dept_name"], "question": "Find the total credits of courses provided by different department.", "question_toks": ["Find", "the", "total", "credits", "of", "courses", "provided", "by", "different", "department", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"course": "course_id"}, "orig_query": "select sum(credits), dept_name from course group by dept_name", "split_map": {"course": ["max_credits", "min_credits", "avg_credits", "total_credits"]}, "schema_with_content": "classroom : building (\"Nassau\", \"Lambeau\", \"Grace\"), room_number (\"375\", \"812\", \"844\"), capacity (65, 32, 10) | department : budget (699140.86, 406557.93, 942162.76), dept_name (\"Accounting\", \"Psychology\", \"History\"), building (\"Chandler\", \"Chandler\", \"Brodhead\") | course : title (\"RPG Programming\", \"Thermodynamics\", \"Graph Theory\"), credits (4, 3), dept_name (\"Mech. Eng.\", \"Pol. Sci.\", \"Marketing\"), course_id (\"618\", \"762\", \"496\") | course_credits : course_id (\"618\", \"762\", \"496\"), min_credits (4, 3), title (\"RPG Programming\", \"Thermodynamics\", \"Graph Theory\"), total_credits (4, 3), max_credits (4, 3), dept_name (\"Mech. Eng.\", \"Pol. Sci.\", \"Marketing\"), avg_credits (4, 3) | instructor : dept_name (\"Biology\", \"Comp. Sci.\", \"Pol. Sci.\"), id (\"72553\", \"6569\", \"16807\"), salary (117836.5, 61387.56, 34272.67), name (\"Gutierrez\", \"Voronina\", \"Murata\") | section : time_slot_id (\"C\", \"A\", \"D\"), room_number (\"105\", \"145\", \"105\"), building (\"Alumni\", \"Polya\", \"Power\"), course_id (\"158\", \"864\", \"692\"), sec_id (\"1\", \"2\", \"3\"), year (2006, 2010, 2004), semester (\"Fall\", \"Spring\") | teaches : id (\"34175\", \"50330\", \"81991\"), sec_id (\"1\", \"2\", \"3\"), semester (\"Spring\", \"Fall\"), course_id (\"345\", \"626\", \"421\"), year (2004, 2008, 2006) | student : tot_cred (32, 12, 115), dept_name (\"Civil Eng.\", \"Cybernetics\", \"Statistics\"), name (\"Kamez\", \"Gordon\", \"Bullinger\"), id (\"90914\", \"98047\", \"7149\") | takes : year (2004, 2005, 2002), semester (\"Fall\", \"Spring\"), sec_id (\"1\", \"2\", \"3\"), course_id (\"692\", \"445\", \"200\"), id (\"83480\", \"58307\", \"7287\"), grade (\"C+\", \"A-\", \"B \") | advisor : s_id (\"85680\", \"46956\", \"88302\"), i_id (\"16807\", \"63395\", \"3199\") | time_slot : day (\"W\", \"T\", \"M\"), start_min (0, 30), end_min (50, 45, 30), time_slot_id (\"C\", \"F\", \"F\"), end_hr (11, 8, 15), start_hr (9, 13, 8) | prereq : prereq_id (\"818\", \"666\", \"702\"), course_id (\"292\", \"875\", \"544\")", "schema_without_content": "classroom : building , room_number , capacity  | department : budget , dept_name , building  | course : title , credits , dept_name , course_id  | course_credits : course_id , min_credits , title , total_credits , max_credits , dept_name , avg_credits  | instructor : dept_name , id , salary , name  | section : time_slot_id , room_number , building , course_id , sec_id , year , semester  | teaches : id , sec_id , semester , course_id , year  | student : tot_cred , dept_name , name , id  | takes : year , semester , sec_id , course_id , id , grade  | advisor : s_id , i_id  | time_slot : day , start_min , end_min , time_slot_id , end_hr , start_hr  | prereq : prereq_id , course_id "}, {"db_id": "college_2", "query": "select total_credits, dept_name from course_credits group by dept_name", "query_toks": ["SELECT", "sum", "(", "credits", ")", ",", "dept_name", "FROM", "course", "GROUP", "BY", "dept_name"], "query_toks_no_value": ["select", "sum", "(", "credits", ")", ",", "dept_name", "from", "course", "group", "by", "dept_name"], "question": "How many total credits are offered by each department?", "question_toks": ["How", "many", "total", "credits", "are", "offered", "by", "each", "department", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"course": "course_id"}, "orig_query": "select sum(credits), dept_name from course group by dept_name", "split_map": {"course": ["max_credits", "min_credits", "avg_credits", "total_credits"]}, "schema_with_content": "classroom : room_number (\"40\", \"180\", \"700\"), building (\"Bronfman\", \"Garfield\", \"Bronfman\"), capacity (24, 92, 22) | department : dept_name (\"Marketing\", \"Geology\", \"Marketing\"), building (\"Wrigley\", \"Mercer\", \"Bronfman\"), budget (520350.65, 942162.76, 647610.55) | course : course_id (\"656\", \"227\", \"972\"), title (\"Hydraulics\", \"Systems Software\", \"Colloid and Surface Chemistry\"), dept_name (\"Languages\", \"Math\", \"Athletics\"), credits (4, 3) | course_credits : dept_name (\"Languages\", \"Math\", \"Athletics\"), title (\"Hydraulics\", \"Systems Software\", \"Colloid and Surface Chemistry\"), min_credits (4, 3), avg_credits (4, 3), course_id (\"656\", \"227\", \"972\"), max_credits (4, 3), total_credits (4, 3) | instructor : id (\"73623\", \"35579\", \"72553\"), salary (98333.65, 93348.83, 90891.69), dept_name (\"Geology\", \"Biology\", \"Elec. Eng.\"), name (\"Mird\", \"Yazdi\", \"Yin\") | section : year (2003, 2003, 2002), time_slot_id (\"E\", \"H\", \"O\"), course_id (\"237\", \"631\", \"663\"), sec_id (\"1\", \"2\", \"3\"), building (\"Fairchild\", \"Rathbone\", \"Gates\"), semester (\"Fall\", \"Spring\"), room_number (\"547\", \"700\", \"804\") | teaches : id (\"22591\", \"28400\", \"3199\"), sec_id (\"1\", \"2\", \"3\"), course_id (\"338\", \"401\", \"748\"), year (2001, 2010, 2005), semester (\"Spring\", \"Fall\") | student : dept_name (\"Pol. Sci.\", \"Math\", \"Mech. Eng.\"), name (\"Afim\", \"Pang\", \"Lutes\"), id (\"3335\", \"19293\", \"90567\"), tot_cred (1, 56, 99) | takes : course_id (\"793\", \"338\", \"192\"), grade (\"A-\", \"C-\", \"C \"), sec_id (\"1\", \"2\", \"3\"), id (\"34404\", \"49214\", \"27804\"), semester (\"Fall\", \"Spring\"), year (2009, 2009, 2009) | advisor : i_id (\"74426\", \"15347\", \"28097\"), s_id (\"57666\", \"1460\", \"64067\") | time_slot : day (\"R\", \"W\", \"W\"), start_min (0, 30), end_min (50, 45, 30), start_hr (16, 9, 10), time_slot_id (\"B\", \"G\", \"H\"), end_hr (8, 9, 12) | prereq : course_id (\"158\", \"780\", \"544\"), prereq_id (\"774\", \"242\", \"242\")", "schema_without_content": "classroom : room_number , building , capacity  | department : dept_name , building , budget  | course : course_id , title , dept_name , credits  | course_credits : dept_name , title , min_credits , avg_credits , course_id , max_credits , total_credits  | instructor : id , salary , dept_name , name  | section : year , time_slot_id , course_id , sec_id , building , semester , room_number  | teaches : id , sec_id , course_id , year , semester  | student : dept_name , name , id , tot_cred  | takes : course_id , grade , sec_id , id , semester , year  | advisor : i_id , s_id  | time_slot : day , start_min , end_min , start_hr , time_slot_id , end_hr  | prereq : course_id , prereq_id "}, {"db_id": "college_2", "query": "select min_salary, dept_name from instructor_salary group by dept_name having avg(salary)> (select avg(salary)from instructor)", "query_toks": ["SELECT", "min", "(", "salary", ")", ",", "dept_name", "FROM", "instructor", "GROUP", "BY", "dept_name", "HAVING", "avg", "(", "salary", ")", ">", "(", "SELECT", "avg", "(", "salary", ")", "FROM", "instructor", ")"], "query_toks_no_value": ["select", "min", "(", "salary", ")", ",", "dept_name", "from", "instructor", "group", "by", "dept_name", "having", "avg", "(", "salary", ")", ">", "(", "select", "avg", "(", "salary", ")", "from", "instructor", ")"], "question": "Find the minimum salary for the departments whose average salary is above the average payment of all instructors.", "question_toks": ["Find", "the", "minimum", "salary", "for", "the", "departments", "whose", "average", "salary", "is", "above", "the", "average", "payment", "of", "all", "instructors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [5, 14, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]]]], "union": null, "where": []}, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 14, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}, "primary_key": {"instructor": "id"}, "orig_query": "select min(salary), dept_name from instructor group by dept_name having avg(salary) > (select avg(salary) from instructor)", "split_map": {"instructor": ["max_salary", "min_salary", "avg_salary", "total_salary"]}, "schema_with_content": "classroom : building (\"Taylor\", \"Painter\", \"Chandler\"), capacity (59, 11, 65), room_number (\"700\", \"261\", \"804\") | department : budget (106378.69, 210627.58, 573745.09), dept_name (\"Astronomy\", \"Astronomy\", \"Biology\"), building (\"Palmer\", \"Lamberton\", \"Taylor\") | course : credits (4, 3), dept_name (\"History\", \"Comp. Sci.\", \"Astronomy\"), course_id (\"867\", \"318\", \"631\"), title (\"Banking and Finance\", \"Cognitive Psychology\", \"Fiction Writing\") | instructor : dept_name (\"Elec. Eng.\", \"Finance\", \"Biology\"), id (\"37687\", \"42782\", \"77346\"), name (\"Queiroz\", \"Lembr\", \"McKinnon\"), salary (43966.29, 32570.5, 46397.59) | instructor_salary : dept_name (\"Elec. Eng.\", \"Finance\", \"Biology\"), min_salary (43966.29, 32570.5, 46397.59), total_salary (43966.29, 32570.5, 46397.59), avg_salary (43966.29, 32570.5, 46397.59), name (\"Queiroz\", \"Lembr\", \"McKinnon\"), max_salary (43966.29, 32570.5, 46397.59), id (\"37687\", \"42782\", \"77346\") | section : semester (\"Fall\", \"Spring\"), time_slot_id (\"I\", \"E\", \"L\"), building (\"Bronfman\", \"Bronfman\", \"Main\"), room_number (\"547\", \"113\", \"145\"), year (2009, 2010, 2004), course_id (\"603\", \"237\", \"482\"), sec_id (\"1\", \"2\", \"3\") | teaches : semester (\"Spring\", \"Fall\"), id (\"6569\", \"90376\", \"22591\"), year (2004, 2003, 2008), course_id (\"338\", \"991\", \"748\"), sec_id (\"1\", \"2\", \"3\") | student : dept_name (\"Geology\", \"Civil Eng.\", \"Statistics\"), id (\"95631\", \"72186\", \"29707\"), name (\"Rical\", \"Kamez\", \"Kitagawa\"), tot_cred (42, 102, 61) | takes : grade (\"A+\", \"A \", \"A-\"), id (\"27956\", \"41299\", \"41450\"), semester (\"Fall\", \"Spring\"), course_id (\"962\", \"991\", \"694\"), year (2009, 2006, 2009), sec_id (\"1\", \"2\", \"3\") | advisor : s_id (\"54622\", \"13826\", \"85063\"), i_id (\"95709\", \"14365\", \"22591\") | time_slot : start_min (0, 30), time_slot_id (\"E\", \"G\", \"B\"), start_hr (10, 8, 9), day (\"W\", \"T\", \"R\"), end_hr (16, 16, 8), end_min (50, 45, 30) | prereq : prereq_id (\"401\", \"947\", \"792\"), course_id (\"376\", \"376\", \"802\")", "schema_without_content": "classroom : building , capacity , room_number  | department : budget , dept_name , building  | course : credits , dept_name , course_id , title  | instructor : dept_name , id , name , salary  | instructor_salary : dept_name , min_salary , total_salary , avg_salary , name , max_salary , id  | section : semester , time_slot_id , building , room_number , year , course_id , sec_id  | teaches : semester , id , year , course_id , sec_id  | student : dept_name , id , name , tot_cred  | takes : grade , id , semester , course_id , year , sec_id  | advisor : s_id , i_id  | time_slot : start_min , time_slot_id , start_hr , day , end_hr , end_min  | prereq : prereq_id , course_id "}, {"db_id": "college_2", "query": "select min_salary, dept_name from instructor_salary group by dept_name having avg(salary)> (select avg(salary)from instructor)", "query_toks": ["SELECT", "min", "(", "salary", ")", ",", "dept_name", "FROM", "instructor", "GROUP", "BY", "dept_name", "HAVING", "avg", "(", "salary", ")", ">", "(", "SELECT", "avg", "(", "salary", ")", "FROM", "instructor", ")"], "query_toks_no_value": ["select", "min", "(", "salary", ")", ",", "dept_name", "from", "instructor", "group", "by", "dept_name", "having", "avg", "(", "salary", ")", ">", "(", "select", "avg", "(", "salary", ")", "from", "instructor", ")"], "question": "What is the lowest salary in departments with average salary greater than the overall average.", "question_toks": ["What", "is", "the", "lowest", "salary", "in", "departments", "with", "average", "salary", "greater", "than", "the", "overall", "average", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [5, 14, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]]]], "union": null, "where": []}, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 14, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}, "primary_key": {"instructor": "id"}, "orig_query": "select min(salary), dept_name from instructor group by dept_name having avg(salary) > (select avg(salary) from instructor)", "split_map": {"instructor": ["max_salary", "min_salary", "avg_salary", "total_salary"]}, "schema_with_content": "classroom : capacity (34, 97, 15), building (\"Painter\", \"Fairchild\", \"Lambeau\"), room_number (\"105\", \"812\", \"105\") | department : budget (734550.7, 601283.6, 255041.46), dept_name (\"Pol. Sci.\", \"Statistics\", \"Cybernetics\"), building (\"Thompson\", \"Linderman\", \"Mercer\") | course : credits (4, 3), title (\"UNIX System Programmming\", \"Differential Equations\", \"Finite Element Analysis\"), course_id (\"694\", \"324\", \"747\"), dept_name (\"History\", \"Accounting\", \"Biology\") | instructor : name (\"Queiroz\", \"Morris\", \"Vicentino\"), salary (35023.18, 45538.32, 105311.38), id (\"25946\", \"19368\", \"95030\"), dept_name (\"Pol. Sci.\", \"Geology\", \"Pol. Sci.\") | instructor_salary : total_salary (35023.18, 45538.32, 105311.38), max_salary (35023.18, 45538.32, 105311.38), dept_name (\"Pol. Sci.\", \"Geology\", \"Pol. Sci.\"), name (\"Queiroz\", \"Morris\", \"Vicentino\"), id (\"25946\", \"19368\", \"95030\"), avg_salary (35023.18, 45538.32, 105311.38), min_salary (35023.18, 45538.32, 105311.38) | section : room_number (\"143\", \"972\", \"972\"), semester (\"Fall\", \"Spring\"), time_slot_id (\"C\", \"O\", \"G\"), building (\"Rathbone\", \"Taylor\", \"Lamberton\"), year (2006, 2003, 2006), sec_id (\"1\", \"2\", \"3\"), course_id (\"527\", \"612\", \"493\") | teaches : semester (\"Spring\", \"Fall\"), course_id (\"559\", \"603\", \"461\"), sec_id (\"1\", \"2\", \"3\"), year (2001, 2010, 2008), id (\"73623\", \"48570\", \"4233\") | student : name (\"Zuo\", \"Krohn\", \"Kang\"), id (\"58172\", \"17924\", \"82707\"), dept_name (\"Accounting\", \"Geology\", \"Physics\"), tot_cred (18, 33, 97) | takes : grade (\"C+\", \"C+\", \"A+\"), semester (\"Fall\", \"Spring\"), sec_id (\"1\", \"2\", \"3\"), course_id (\"959\", \"482\", \"482\"), id (\"98830\", \"39046\", \"36791\"), year (2009, 2002, 2002) | advisor : s_id (\"13495\", \"53225\", \"19791\"), i_id (\"79081\", \"3199\", \"48570\") | time_slot : end_hr (13, 9, 15), start_min (0, 30), start_hr (8, 13, 14), end_min (50, 45, 30), day (\"F\", \"W\", \"T\"), time_slot_id (\"C\", \"H\", \"F\") | prereq : course_id (\"612\", \"359\", \"559\"), prereq_id (\"761\", \"612\", \"421\")", "schema_without_content": "classroom : capacity , building , room_number  | department : budget , dept_name , building  | course : credits , title , course_id , dept_name  | instructor : name , salary , id , dept_name  | instructor_salary : total_salary , max_salary , dept_name , name , id , avg_salary , min_salary  | section : room_number , semester , time_slot_id , building , year , sec_id , course_id  | teaches : semester , course_id , sec_id , year , id  | student : name , id , dept_name , tot_cred  | takes : grade , semester , sec_id , course_id , id , year  | advisor : s_id , i_id  | time_slot : end_hr , start_min , start_hr , end_min , day , time_slot_id  | prereq : course_id , prereq_id "}, {"db_id": "college_2", "query": "select dept_name, avg_salary from instructor_salary group by dept_name having avg(salary)> 42000", "query_toks": ["SELECT", "dept_name", ",", "AVG", "(", "salary", ")", "FROM", "instructor", "GROUP", "BY", "dept_name", "HAVING", "AVG", "(", "salary", ")", ">", "42000"], "query_toks_no_value": ["select", "dept_name", ",", "avg", "(", "salary", ")", "from", "instructor", "group", "by", "dept_name", "having", "avg", "(", "salary", ")", ">", "value"], "question": "Find the names and average salaries of all departments whose average salary is greater than 42000.", "question_toks": ["Find", "the", "names", "and", "average", "salaries", "of", "all", "departments", "whose", "average", "salary", "is", "greater", "than", "42000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [5, 14, false], null], 42000.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [5, [0, [0, 14, false], null]]]], "union": null, "where": []}, "primary_key": {"instructor": "id"}, "orig_query": "select dept_name, avg(salary) from instructor group by dept_name having avg(salary) > 42000", "split_map": {"instructor": ["max_salary", "min_salary", "avg_salary", "total_salary"]}, "schema_with_content": "classroom : capacity (92, 60, 32), room_number (\"757\", \"425\", \"40\"), building (\"Chandler\", \"Main\", \"Rathbone\") | department : budget (276527.61, 617253.94, 848175.04), building (\"Saucon\", \"Lambeau\", \"Brodhead\"), dept_name (\"Psychology\", \"Pol. Sci.\", \"English\") | course : dept_name (\"Civil Eng.\", \"Biology\", \"History\"), title (\"Accounting\", \"Plastics\", \"Existentialism\"), credits (4, 3), course_id (\"353\", \"133\", \"659\") | instructor : dept_name (\"Athletics\", \"Cybernetics\", \"Athletics\"), salary (57807.09, 77036.18, 79866.95), name (\"Pingr\", \"Romero\", \"Lembr\"), id (\"42782\", \"58558\", \"90376\") | instructor_salary : total_salary (57807.09, 77036.18, 79866.95), dept_name (\"Athletics\", \"Cybernetics\", \"Athletics\"), name (\"Pingr\", \"Romero\", \"Lembr\"), max_salary (57807.09, 77036.18, 79866.95), avg_salary (57807.09, 77036.18, 79866.95), id (\"42782\", \"58558\", \"90376\"), min_salary (57807.09, 77036.18, 79866.95) | section : room_number (\"143\", \"757\", \"808\"), time_slot_id (\"L\", \"K\", \"P\"), year (2007, 2002, 2009), semester (\"Fall\", \"Spring\"), sec_id (\"1\", \"2\", \"3\"), building (\"Fairchild\", \"Garfield\", \"Lambeau\"), course_id (\"991\", \"258\", \"927\") | teaches : id (\"25946\", \"36897\", \"81991\"), course_id (\"415\", \"401\", \"793\"), sec_id (\"1\", \"2\", \"3\"), year (2003, 2004, 2002), semester (\"Spring\", \"Fall\") | student : name (\"Kleinberg\", \"Hamagi\", \"Abraham\"), dept_name (\"Athletics\", \"Cybernetics\", \"Elec. Eng.\"), tot_cred (113, 56, 16), id (\"73165\", \"163\", \"4015\") | takes : course_id (\"158\", \"304\", \"461\"), year (2002, 2010, 2006), id (\"80976\", \"88887\", \"72959\"), grade (\"B \", \"B \", \"A+\"), sec_id (\"1\", \"2\", \"3\"), semester (\"Fall\", \"Spring\") | advisor : i_id (\"97302\", \"28097\", \"78699\"), s_id (\"75231\", \"78314\", \"96246\") | time_slot : start_min (0, 30), end_hr (8, 13, 11), day (\"T\", \"T\", \"R\"), start_hr (9, 10, 13), time_slot_id (\"C\", \"A\", \"G\"), end_min (50, 45, 30) | prereq : prereq_id (\"242\", \"694\", \"769\"), course_id (\"852\", \"629\", \"830\")", "schema_without_content": "classroom : capacity , room_number , building  | department : budget , building , dept_name  | course : dept_name , title , credits , course_id  | instructor : dept_name , salary , name , id  | instructor_salary : total_salary , dept_name , name , max_salary , avg_salary , id , min_salary  | section : room_number , time_slot_id , year , semester , sec_id , building , course_id  | teaches : id , course_id , sec_id , year , semester  | student : name , dept_name , tot_cred , id  | takes : course_id , year , id , grade , sec_id , semester  | advisor : i_id , s_id  | time_slot : start_min , end_hr , day , start_hr , time_slot_id , end_min  | prereq : prereq_id , course_id "}, {"db_id": "college_2", "query": "select dept_name, avg_salary from instructor_salary group by dept_name having avg(salary)> 42000", "query_toks": ["SELECT", "dept_name", ",", "AVG", "(", "salary", ")", "FROM", "instructor", "GROUP", "BY", "dept_name", "HAVING", "AVG", "(", "salary", ")", ">", "42000"], "query_toks_no_value": ["select", "dept_name", ",", "avg", "(", "salary", ")", "from", "instructor", "group", "by", "dept_name", "having", "avg", "(", "salary", ")", ">", "value"], "question": "What are the names and average salaries for departments with average salary higher than 42000?", "question_toks": ["What", "are", "the", "names", "and", "average", "salaries", "for", "departments", "with", "average", "salary", "higher", "than", "42000", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [5, 14, false], null], 42000.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [5, [0, [0, 14, false], null]]]], "union": null, "where": []}, "primary_key": {"instructor": "id"}, "orig_query": "select dept_name, avg(salary) from instructor group by dept_name having avg(salary) > 42000", "split_map": {"instructor": ["max_salary", "min_salary", "avg_salary", "total_salary"]}, "schema_with_content": "classroom : capacity (18, 109, 24), building (\"Garfield\", \"Bronfman\", \"Alumni\"), room_number (\"113\", \"40\", \"180\") | department : dept_name (\"Psychology\", \"Mech. Eng.\", \"Mech. Eng.\"), building (\"Saucon\", \"Bronfman\", \"Bronfman\"), budget (647610.55, 276527.61, 441840.92) | course : course_id (\"795\", \"795\", \"376\"), dept_name (\"Pol. Sci.\", \"Physics\", \"Languages\"), title (\"Music of the 50s\", \"Assembly Language Programming\", \"Corporate Law\"), credits (4, 3) | instructor : id (\"52647\", \"52647\", \"15347\"), salary (103146.87, 119921.41, 45538.32), dept_name (\"Biology\", \"Astronomy\", \"Geology\"), name (\"Jaekel\", \"Bertolino\", \"Bawa\") | instructor_salary : min_salary (103146.87, 119921.41, 45538.32), total_salary (103146.87, 119921.41, 45538.32), dept_name (\"Biology\", \"Astronomy\", \"Geology\"), max_salary (103146.87, 119921.41, 45538.32), avg_salary (103146.87, 119921.41, 45538.32), name (\"Jaekel\", \"Bertolino\", \"Bawa\"), id (\"52647\", \"52647\", \"15347\") | section : year (2008, 2009, 2002), time_slot_id (\"G\", \"H\", \"B\"), semester (\"Fall\", \"Spring\"), building (\"Power\", \"Bronfman\", \"Bronfman\"), sec_id (\"1\", \"2\", \"3\"), room_number (\"717\", \"757\", \"180\"), course_id (\"748\", \"864\", \"482\") | teaches : id (\"22591\", \"63287\", \"36897\"), semester (\"Spring\", \"Fall\"), year (2002, 2002, 2008), sec_id (\"1\", \"2\", \"3\"), course_id (\"581\", \"702\", \"791\") | student : name (\"Vogel\", \"Madden\", \"Liots\"), dept_name (\"Geology\", \"Math\", \"Athletics\"), id (\"898\", \"21692\", \"50873\"), tot_cred (4, 41, 125) | takes : id (\"61065\", \"85746\", \"11453\"), year (2008, 2004, 2010), grade (\"C \", \"B-\", \"B-\"), course_id (\"237\", \"304\", \"408\"), sec_id (\"1\", \"2\", \"3\"), semester (\"Fall\", \"Spring\") | advisor : i_id (\"96895\", \"58558\", \"42782\"), s_id (\"56003\", \"81550\", \"63538\") | time_slot : start_min (0, 30), start_hr (9, 8, 11), day (\"M\", \"W\", \"R\"), time_slot_id (\"A\", \"G\", \"C\"), end_min (50, 45, 30), end_hr (13, 12, 11) | prereq : prereq_id (\"875\", \"401\", \"792\"), course_id (\"947\", \"242\", \"586\")", "schema_without_content": "classroom : capacity , building , room_number  | department : dept_name , building , budget  | course : course_id , dept_name , title , credits  | instructor : id , salary , dept_name , name  | instructor_salary : min_salary , total_salary , dept_name , max_salary , avg_salary , name , id  | section : year , time_slot_id , semester , building , sec_id , room_number , course_id  | teaches : id , semester , year , sec_id , course_id  | student : name , dept_name , id , tot_cred  | takes : id , year , grade , course_id , sec_id , semester  | advisor : i_id , s_id  | time_slot : start_min , start_hr , day , time_slot_id , end_min , end_hr  | prereq : prereq_id , course_id "}, {"db_id": "insurance_and_eClaims", "query": "select total_amount_piad, avg_amount_piad from claim_headers_amount_piad", "query_toks": ["SELECT", "sum", "(", "amount_piad", ")", ",", "avg", "(", "amount_piad", ")", "FROM", "claim_headers"], "query_toks_no_value": ["select", "sum", "(", "amount_piad", ")", ",", "avg", "(", "amount_piad", ")", "from", "claim_headers"], "question": "Find the total and average amount paid in claim headers.", "question_toks": ["Find", "the", "total", "and", "average", "amount", "paid", "in", "claim", "headers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 17, false], null]], [5, [0, [0, 17, false], null]]]], "union": null, "where": []}, "primary_key": {"claim_headers": "claim_header_id"}, "orig_query": "select sum(amount_piad), avg(amount_piad) from claim_headers", "split_map": {"claim_headers": ["max_amount_piad", "min_amount_piad", "avg_amount_piad", "total_amount_piad"]}, "schema_with_content": "customers : customer_details (\"Mr. Randal Lynch III\", \"America Jaskolski\", \"Dayana Robel\"), customer_id (810, 435, 593) | staff : staff_details (\"Alexander\", \"Alexander\", \"Kaci\"), staff_id (634, 822, 987) | policies : start_date (\"2016-07-23 04:08:35\", \"2016-07-23 04:08:35\", \"2017-03-16 18:16:52\"), customer_id (252, 430, 334), policy_id (780, 703, 626), end_date (\"2017-10-07 08:29:25\", \"2018-03-17 10:16:59\", \"2018-03-18 09:17:26\"), policy_type_code (\"Uniformed\", \"Deputy\", \"Normal\") | claim_headers : policy_id (628, 518, 628), claim_header_id (24, 15, 39), amount_piad (132.97, 536.99, 643.82), claim_status_code (\"Settled\", \"Disputed\", \"In Progress\"), claim_type_code (\"Handphone Subsidy\", \"Child Birth\", \"Overtime Meal Subsidy\"), date_of_claim (\"2016-09-29 02:42:22\", \"2017-07-05 02:54:30\", \"2016-04-10 01:36:18\"), date_of_settlement (\"2017-10-20 02:24:21\", \"2017-11-16 04:06:05\", \"2017-10-20 02:24:21\"), amount_claimed (425.98, 818.15, 318.16) | claim_headers_amount_piad : avg_amount_piad (132.97, 536.99, 643.82), claim_status_code (\"Settled\", \"Disputed\", \"In Progress\"), max_amount_piad (132.97, 536.99, 643.82), claim_header_id (24, 15, 39), amount_claimed (425.98, 818.15, 318.16), total_amount_piad (132.97, 536.99, 643.82), date_of_settlement (\"2017-10-20 02:24:21\", \"2017-11-16 04:06:05\", \"2017-10-20 02:24:21\"), min_amount_piad (132.97, 536.99, 643.82), policy_id (628, 518, 628), date_of_claim (\"2016-09-29 02:42:22\", \"2017-07-05 02:54:30\", \"2016-04-10 01:36:18\"), claim_type_code (\"Handphone Subsidy\", \"Child Birth\", \"Overtime Meal Subsidy\") | claims_documents : document_type_code (\"Document\", \"Medical\", \"Photo\"), created_date (7, 7, 7), claim_id (27, 45, 82), created_by_staff_id (718, 718, 803) | claims_processing_stages : claim_status_description (\"Open a new claim\", \"Close a claim\"), claim_status_name (\"Open\", \"Close\"), claim_stage_id (1, 3), next_claim_stage_id (1) | claims_processing : staff_id (427, 822, 718), claim_id (15, 15, 24), claim_outcome_code (\"In progress\", \"Disputed\", \"Settled\"), claim_processing_id (720, 480, 686), claim_stage_id (1, 3)", "schema_without_content": "customers : customer_details , customer_id  | staff : staff_details , staff_id  | policies : start_date , customer_id , policy_id , end_date , policy_type_code  | claim_headers : policy_id , claim_header_id , amount_piad , claim_status_code , claim_type_code , date_of_claim , date_of_settlement , amount_claimed  | claim_headers_amount_piad : avg_amount_piad , claim_status_code , max_amount_piad , claim_header_id , amount_claimed , total_amount_piad , date_of_settlement , min_amount_piad , policy_id , date_of_claim , claim_type_code  | claims_documents : document_type_code , created_date , claim_id , created_by_staff_id  | claims_processing_stages : claim_status_description , claim_status_name , claim_stage_id , next_claim_stage_id  | claims_processing : staff_id , claim_id , claim_outcome_code , claim_processing_id , claim_stage_id "}, {"db_id": "insurance_and_eClaims", "query": "select total_amount_piad, avg_amount_piad from claim_headers_amount_piad", "query_toks": ["SELECT", "sum", "(", "amount_piad", ")", ",", "avg", "(", "amount_piad", ")", "FROM", "claim_headers"], "query_toks_no_value": ["select", "sum", "(", "amount_piad", ")", ",", "avg", "(", "amount_piad", ")", "from", "claim_headers"], "question": "What are the total amount and average amount paid in claim headers?", "question_toks": ["What", "are", "the", "total", "amount", "and", "average", "amount", "paid", "in", "claim", "headers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 17, false], null]], [5, [0, [0, 17, false], null]]]], "union": null, "where": []}, "primary_key": {"claim_headers": "claim_header_id"}, "orig_query": "select sum(amount_piad), avg(amount_piad) from claim_headers", "split_map": {"claim_headers": ["max_amount_piad", "min_amount_piad", "avg_amount_piad", "total_amount_piad"]}, "schema_with_content": "customers : customer_id (857, 252, 380), customer_details (\"Dr. Diana Rath\", \"Mrs. Lilly Graham III\", \"Dayana Robel\") | staff : staff_id (803, 718, 833), staff_details (\"Roman\", \"Kaci\", \"Cathryn\") | policies : policy_type_code (\"Jurisdiction\", \"Jurisdiction\", \"Normal\"), customer_id (588, 588, 435), policy_id (518, 151, 773), end_date (\"2018-01-22 05:24:10\", \"2018-01-18 06:17:36\", \"2018-03-18 09:17:26\"), start_date (\"2016-05-11 14:56:17\", \"2016-07-23 04:08:35\", \"2018-09-05 22:15:23\") | claim_headers : amount_claimed (349.15, 756.27, 867.57), date_of_claim (\"2016-12-30 21:43:21\", \"2016-06-12 23:04:58\", \"2017-05-01 13:34:43\"), claim_status_code (\"Settled\", \"Disputed\", \"In Progress\"), claim_type_code (\"Handphone Subsidy\", \"Child Birth\", \"Overtime Meal Subsidy\"), date_of_settlement (\"2018-01-07 05:28:53\", \"2018-01-07 05:28:53\", \"2017-10-17 07:02:17\"), amount_piad (826, 289.09, 309.2), policy_id (626, 628, 507), claim_header_id (90, 27, 69) | claim_headers_amount_piad : claim_status_code (\"Settled\", \"Disputed\", \"In Progress\"), max_amount_piad (826, 289.09, 309.2), avg_amount_piad (826, 289.09, 309.2), claim_type_code (\"Handphone Subsidy\", \"Child Birth\", \"Overtime Meal Subsidy\"), total_amount_piad (826, 289.09, 309.2), policy_id (626, 628, 507), date_of_claim (\"2016-12-30 21:43:21\", \"2016-06-12 23:04:58\", \"2017-05-01 13:34:43\"), claim_header_id (90, 27, 69), min_amount_piad (826, 289.09, 309.2), date_of_settlement (\"2018-01-07 05:28:53\", \"2018-01-07 05:28:53\", \"2017-10-17 07:02:17\"), amount_claimed (349.15, 756.27, 867.57) | claims_documents : created_by_staff_id (803, 673, 673), created_date (7, 3, 7), claim_id (27, 81, 27), document_type_code (\"Document\", \"Medical\", \"Photo\") | claims_processing_stages : claim_status_name (\"Open\", \"Close\"), next_claim_stage_id (1), claim_stage_id (1, 3), claim_status_description (\"Open a new claim\", \"Close a claim\") | claims_processing : staff_id (589, 510, 986), claim_processing_id (243, 145, 342), claim_outcome_code (\"In progress\", \"Disputed\", \"Settled\"), claim_id (27, 27, 34), claim_stage_id (1, 3)", "schema_without_content": "customers : customer_id , customer_details  | staff : staff_id , staff_details  | policies : policy_type_code , customer_id , policy_id , end_date , start_date  | claim_headers : amount_claimed , date_of_claim , claim_status_code , claim_type_code , date_of_settlement , amount_piad , policy_id , claim_header_id  | claim_headers_amount_piad : claim_status_code , max_amount_piad , avg_amount_piad , claim_type_code , total_amount_piad , policy_id , date_of_claim , claim_header_id , min_amount_piad , date_of_settlement , amount_claimed  | claims_documents : created_by_staff_id , created_date , claim_id , document_type_code  | claims_processing_stages : claim_status_name , next_claim_stage_id , claim_stage_id , claim_status_description  | claims_processing : staff_id , claim_processing_id , claim_outcome_code , claim_id , claim_stage_id "}, {"db_id": "customers_and_invoices", "query": "select order_id, total_product_quantity from order_items_product_quantity group by order_id", "query_toks": ["SELECT", "order_id", ",", "sum", "(", "product_quantity", ")", "FROM", "Order_items", "GROUP", "BY", "order_id"], "query_toks_no_value": ["select", "order_id", ",", "sum", "(", "product_quantity", ")", "from", "order_items", "group", "by", "order_id"], "question": "Show order ids and the total quantity in each order.", "question_toks": ["Show", "order", "ids", "and", "the", "total", "quantity", "in", "each", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 44, false], null]], [4, [0, [0, 46, false], null]]]], "union": null, "where": []}, "primary_key": {"order_items": "order_item_id"}, "orig_query": "select order_id, sum(product_quantity) from order_items group by order_id", "split_map": {"order_items": ["max_product_quantity", "min_product_quantity", "avg_product_quantity", "total_product_quantity"]}, "schema_with_content": "customers : login_name (\"camilla.dubuque\", \"lucy.jast\", \"dthiel\"), state_county_province (\"Oklahoma\", \"Oklahoma\", \"Louisiana\"), customer_id (12, 4, 4), phone_number (\"241.796.1219x37862\", \"1-546-302-5676\", \"241.796.1219x37862\"), town_city (\"North Devonte\", \"Ellaburgh\", \"North Devonte\"), customer_last_name (\"Glover\", \"Glover\", \"Spinka\"), customer_middle_initial (\"B\", \"G\", \"H\"), customer_first_name (\"Meaghan\", \"Devin\", \"Abbey\"), country (\"USA\"), login_password (\"eb32d2933362d38faff7\", \"604f9062a5a0de83ef9d\", \"604f9062a5a0de83ef9d\"), gender (\"1\", \"0\"), email_address (\"philip94@example.org\", \"anastacio45@example.org\", \"destinee06@example.com\") | orders : customer_id (15, 8, 8), order_details (None), order_id (10, 1, 11), date_order_placed (\"2017-12-04 02:59:10\", \"2015-08-06 22:40:40\", \"2017-11-05 15:32:38\") | invoices : invoice_date (\"2018-03-15 21:24:13\", \"2018-03-05 08:47:33\", \"2018-03-05 08:47:33\"), invoice_number (4, 1, 4), order_id (9, 9, 3) | accounts : date_account_opened (\"2014-12-28 07:29:42\", \"2010-06-16 09:35:00\", \"2012-05-04 18:50:32\"), other_account_details (\"Regular\", \"VIP\"), account_name (\"371\", \"323\", \"601\"), account_id (4, 9, 2), customer_id (15, 3, 12) | product_categories : production_type_code (\"Books\", \"Food\", \"Food\"), vat_rating (13.95, 17.9, 11.4), product_type_description (\"Dvd products\", \"Dvd products\", \"Dvd products\") | products : production_type_code (\"DVDs\", \"DVDs\", \"DVDs\"), product_size (\"Medium\", \"Small\", \"Large\"), parent_product_id (1, 2, 1), unit_price (82.96, 985.78, 694.31), product_id (9, 15, 2), product_color (\"Red\", \"Yellow\", \"Black\"), product_name (\"Menus\", \"Harry Potter 1\", \"Coffee Bean\") | financial_transactions : transaction_type (\"Payment\", \"Refund\"), invoice_number (1, 12, 12), transaction_amount (1214.22, 899.87, 1567.64), account_id (14, 14, 9), transaction_date (\"2018-03-15 21:13:57\", \"2018-03-10 13:46:48\", \"2018-03-23 04:56:12\"), transaction_comment (None), other_transaction_details (None), transaction_id (7, 2, 4) | order_items : product_id (12, 10, 15), order_id (12, 2, 1), product_quantity (\"3\", \"1\", \"2\"), order_item_id (14, 4, 15), other_order_item_details (None) | order_items_product_quantity : min_product_quantity (\"3\", \"1\", \"2\"), order_item_id (14, 4, 15), avg_product_quantity (\"3\", \"1\", \"2\"), order_id (12, 2, 1), product_id (12, 10, 15), total_product_quantity (\"3\", \"1\", \"2\"), max_product_quantity (\"3\", \"1\", \"2\"), other_order_item_details (None) | invoice_line_items : product_price (749.6, 559.95, 597.28), product_title (\"prod_name\"), derived_product_cost (295.26, 89.16, 254.08), derived_total_cost (69.82, 83.4, 53.53), invoice_number (10, 15, 1), product_quantity (\"9\", \"4\", \"6\"), product_id (5, 14, 14), order_item_id (6, 11, 11), derived_vat_payable (None)", "schema_without_content": "customers : login_name , state_county_province , customer_id , phone_number , town_city , customer_last_name , customer_middle_initial , customer_first_name , country , login_password , gender , email_address  | orders : customer_id , order_details , order_id , date_order_placed  | invoices : invoice_date , invoice_number , order_id  | accounts : date_account_opened , other_account_details , account_name , account_id , customer_id  | product_categories : production_type_code , vat_rating , product_type_description  | products : production_type_code , product_size , parent_product_id , unit_price , product_id , product_color , product_name  | financial_transactions : transaction_type , invoice_number , transaction_amount , account_id , transaction_date , transaction_comment , other_transaction_details , transaction_id  | order_items : product_id , order_id , product_quantity , order_item_id , other_order_item_details  | order_items_product_quantity : min_product_quantity , order_item_id , avg_product_quantity , order_id , product_id , total_product_quantity , max_product_quantity , other_order_item_details  | invoice_line_items : product_price , product_title , derived_product_cost , derived_total_cost , invoice_number , product_quantity , product_id , order_item_id , derived_vat_payable "}, {"db_id": "customers_and_invoices", "query": "select order_id, total_product_quantity from order_items_product_quantity group by order_id", "query_toks": ["SELECT", "order_id", ",", "sum", "(", "product_quantity", ")", "FROM", "Order_items", "GROUP", "BY", "order_id"], "query_toks_no_value": ["select", "order_id", ",", "sum", "(", "product_quantity", ")", "from", "order_items", "group", "by", "order_id"], "question": "Give the order ids for all orders, as well as the total product quantity in each.", "question_toks": ["Give", "the", "order", "ids", "for", "all", "orders", ",", "as", "well", "as", "the", "total", "product", "quantity", "in", "each", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 44, false], null]], [4, [0, [0, 46, false], null]]]], "union": null, "where": []}, "primary_key": {"order_items": "order_item_id"}, "orig_query": "select order_id, sum(product_quantity) from order_items group by order_id", "split_map": {"order_items": ["max_product_quantity", "min_product_quantity", "avg_product_quantity", "total_product_quantity"]}, "schema_with_content": "customers : customer_id (8, 8, 11), customer_first_name (\"Neoma\", \"Jensen\", \"Jensen\"), login_name (\"shayne.lesch\", \"dthiel\", \"feeney.lauriane\"), country (\"USA\"), phone_number (\"1-344-593-4896x425\", \"1-904-787-7320\", \"(943)219-4234x415\"), state_county_province (\"Idaho\", \"Mississippi\", \"Colorado\"), email_address (\"roosevelt.collier@example.org\", \"michel92@example.org\", \"udeckow@example.com\"), customer_middle_initial (\"M\", \"B\", \"K\"), login_password (\"ce97a3e4539347daab96\", \"ce97a3e4539347daab96\", \"bdbc3c18cf28303c4f6a\"), gender (\"1\", \"0\"), customer_last_name (\"Spinka\", \"Glover\", \"Weimann\"), town_city (\"New Nikolas\", \"South Isabell\", \"New Rachellefort\") | orders : order_id (2, 9, 13), date_order_placed (\"2017-12-04 02:59:10\", \"2015-08-06 22:40:40\", \"2017-11-27 21:50:58\"), order_details (None), customer_id (6, 11, 6) | invoices : invoice_number (14, 11, 11), invoice_date (\"2018-03-20 00:21:41\", \"2018-03-13 07:27:38\", \"2018-03-15 09:38:49\"), order_id (9, 8, 5) | accounts : other_account_details (\"Regular\", \"VIP\"), customer_id (13, 12, 3), account_id (1, 8, 2), account_name (\"601\", \"601\", \"601\"), date_account_opened (\"2012-07-09 23:40:15\", \"2009-06-13 11:41:52\", \"2014-08-11 18:15:14\") | product_categories : vat_rating (17.9, 13.95, 15.84), product_type_description (\"Books\", \"Food\", \"Books\"), production_type_code (\"Food\", \"Electronics\", \"Food\") | products : product_id (1, 8, 4), product_size (\"Medium\", \"Small\", \"Large\"), product_color (\"Red\", \"Yellow\", \"Black\"), parent_product_id (6, 7, 4), production_type_code (\"Electronics\", \"Food\", \"DVDs\"), product_name (\"Beer Menus\", \"Harry Potter 3\", \"Harry Potter 1\"), unit_price (617.95, 558.49, 558.49) | financial_transactions : account_id (8, 12, 11), invoice_number (2, 12, 1), transaction_comment (None), transaction_id (4, 5, 4), transaction_date (\"2018-03-07 04:32:54\", \"2018-03-12 03:06:52\", \"2018-03-14 19:09:07\"), transaction_type (\"Payment\", \"Refund\"), other_transaction_details (None), transaction_amount (1903.41, 1477.57, 1903.41) | order_items : product_id (15, 10, 10), order_id (1, 10, 13), order_item_id (14, 10, 10), product_quantity (\"9\", \"4\", \"3\"), other_order_item_details (None) | order_items_product_quantity : product_id (15, 10, 10), min_product_quantity (\"9\", \"4\", \"3\"), total_product_quantity (\"9\", \"4\", \"3\"), avg_product_quantity (\"9\", \"4\", \"3\"), order_item_id (14, 10, 10), max_product_quantity (\"9\", \"4\", \"3\"), order_id (1, 10, 13), other_order_item_details (None) | invoice_line_items : product_quantity (\"6\", \"2\", \"2\"), product_price (742.37, 884.4, 597.28), product_id (9, 3, 15), derived_total_cost (86.56, 86.56, 51.27), invoice_number (11, 1, 15), order_item_id (11, 3, 15), derived_product_cost (249.19, 88.43, 188.71), derived_vat_payable (None), product_title (\"prod_name\")", "schema_without_content": "customers : customer_id , customer_first_name , login_name , country , phone_number 219-4234x415\", state_county_province , email_address , customer_middle_initial , login_password , gender , customer_last_name , town_city  | orders : order_id , date_order_placed , order_details , customer_id  | invoices : invoice_number , invoice_date , order_id  | accounts : other_account_details , customer_id , account_id , account_name , date_account_opened  | product_categories : vat_rating , product_type_description , production_type_code  | products : product_id , product_size , product_color , parent_product_id , production_type_code , product_name , unit_price  | financial_transactions : account_id , invoice_number , transaction_comment , transaction_id , transaction_date , transaction_type , other_transaction_details , transaction_amount  | order_items : product_id , order_id , order_item_id , product_quantity , other_order_item_details  | order_items_product_quantity : product_id , min_product_quantity , total_product_quantity , avg_product_quantity , order_item_id , max_product_quantity , order_id , other_order_item_details  | invoice_line_items : product_quantity , product_price , product_id , derived_total_cost , invoice_number , order_item_id , derived_product_cost , derived_vat_payable , product_title "}, {"db_id": "wedding", "query": "select min_age, max_age, avg_age from people_age", "query_toks": ["SELECT", "min", "(", "age", ")", ",", "max", "(", "age", ")", ",", "avg", "(", "age", ")", "FROM", "people"], "query_toks_no_value": ["select", "min", "(", "age", ")", ",", "max", "(", "age", ")", ",", "avg", "(", "age", ")", "from", "people"], "question": "Show the minimum, maximum, and average age for all people.", "question_toks": ["Show", "the", "minimum", ",", "maximum", ",", "and", "average", "age", "for", "all", "people", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]], [5, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"people": "people_id"}, "orig_query": "select min(age), max(age), avg(age) from people", "split_map": {"people": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "people : age (36, 30, 34), is_male (\"T\", \"F\"), people_id (12, 7, 12), country (\"Northern Ireland\", \"Australia\", \"Northern Ireland\"), name (\"Summer Duval\", \"Danny Toms\", \"Adam Scott\") | people_age : is_male (\"T\", \"F\"), people_id (12, 7, 12), avg_age (36, 30, 34), name (\"Summer Duval\", \"Danny Toms\", \"Adam Scott\"), max_age (36, 30, 34), country (\"Northern Ireland\", \"Australia\", \"Northern Ireland\"), total_age (36, 30, 34), min_age (36, 30, 34) | church : continuation_of (\"Church of Christ\", \"Church of the Latter Day Saints\", \"Church of Jesus Christ of Latter Day Saints\"), organized_by (\"Warren Parrish\", \"Isaac Russell\", \"Isaac Russell\"), name (\"Church of Jesus Christ, the Bride, the Lamb's Wife\", \"Church of Christ (Parrishite)\", \"True Church of Jesus Christ of Latter Day Saints\"), open_date (1832, 1840, 1832), church_id (3, 5, 7) | wedding : male_id (3, 5, 7), female_id (8, 2, 4), church_id (3, 1, 4), year (2014, 2015, 2016)", "schema_without_content": "people : age , is_male , people_id , country , name  | people_age : is_male , people_id , avg_age , name , max_age , country , total_age , min_age  | church : continuation_of , organized_by , name \", \"True Church of Jesus Christ of Latter Day Saints\", open_date , church_id  | wedding : male_id , female_id , church_id , year "}, {"db_id": "theme_gallery", "query": "select avg_age, min_age from artist_age where country = 'United States'", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", "FROM", "artist", "WHERE", "country", "=", "'United", "States", "'"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", "from", "artist", "where", "country", "=", "value"], "question": "What is the average and minimum age of all artists from United States.", "question_toks": ["What", "is", "the", "average", "and", "minimum", "age", "of", "all", "artists", "from", "United", "States", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [2, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"United States\"", null]]}, "primary_key": {"artist": "artist_id"}, "orig_query": "select avg(age), min(age) from artist where country = 'United States'", "split_map": {"artist": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "artist : age (50, 45, 57), artist_id (1, 5, 3), country (\"Fiji\", \"United States\", \"Zimbabwe\"), year_join (1998, 1981, 1994), name (\"John Daly\", \"Paul Azinger\", \"Larry Nelson\") | artist_age : artist_id (1, 5, 3), country (\"Fiji\", \"United States\", \"Zimbabwe\"), max_age (50, 45, 57), year_join (1998, 1981, 1994), total_age (50, 45, 57), min_age (50, 45, 57), avg_age (50, 45, 57), name (\"John Daly\", \"Paul Azinger\", \"Larry Nelson\") | exhibition : exhibition_id (4, 2, 1), year (2009, 2008, 2008), artist_id (4, 2, 6), ticket_price (29.95, 29.95, 14.95), theme (\"Santa Claus\", \"Summer\", \"Spring\") | exhibition_record : attendance (10908, 2983, 10908), date (\"February 21\", \"February 25\", \"December 5\"), exhibition_id (2, 4, 5)", "schema_without_content": "artist : age , artist_id , country , year_join , name  | artist_age : artist_id , country , max_age , year_join , total_age , min_age , avg_age , name  | exhibition : exhibition_id , year , artist_id , ticket_price , theme  | exhibition_record : attendance , date , exhibition_id "}, {"db_id": "theme_gallery", "query": "select avg_age, min_age from artist_age where country = 'United States'", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", "FROM", "artist", "WHERE", "country", "=", "'United", "States", "'"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", "from", "artist", "where", "country", "=", "value"], "question": "Return the average and minimum ages across artists from the United States.", "question_toks": ["Return", "the", "average", "and", "minimum", "ages", "across", "artists", "from", "the", "United", "States", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [2, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"United States\"", null]]}, "primary_key": {"artist": "artist_id"}, "orig_query": "select avg(age), min(age) from artist where country = 'United States'", "split_map": {"artist": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "artist : country (\"Fiji\", \"United States\", \"Zimbabwe\"), artist_id (5, 6, 5), year_join (1981, 1996, 1994), name (\"Larry Nelson\", \"Vijay Singh\", \"Jeff Sluman\"), age (45, 46, 50) | artist_age : min_age (45, 46, 50), name (\"Larry Nelson\", \"Vijay Singh\", \"Jeff Sluman\"), year_join (1981, 1996, 1994), artist_id (5, 6, 5), total_age (45, 46, 50), avg_age (45, 46, 50), country (\"Fiji\", \"United States\", \"Zimbabwe\"), max_age (45, 46, 50) | exhibition : ticket_price (14.95, 9.95, 16.95), year (2004, 2006, 2004), theme (\"Christmas stocking\", \"Santa Claus and Rudolph the Red-Nosed Reindeer\", \"Spring\"), exhibition_id (5, 3, 2), artist_id (6, 4, 4) | exhibition_record : date (\"December 13\", \"December 2\", \"February 28\"), exhibition_id (2, 2, 2), attendance (1134, 965, 1239)", "schema_without_content": "artist : country , artist_id , year_join , name , age  | artist_age : min_age , name , year_join , artist_id , total_age , avg_age , country , max_age  | exhibition : ticket_price , year , theme , exhibition_id , artist_id  | exhibition_record : date , exhibition_id , attendance "}, {"db_id": "theme_gallery", "query": "select avg_ticket_price, min_ticket_price, max_ticket_price from exhibition_ticket_price where year < 2009", "query_toks": ["SELECT", "avg", "(", "ticket_price", ")", ",", "min", "(", "ticket_price", ")", ",", "max", "(", "ticket_price", ")", "FROM", "exhibition", "WHERE", "YEAR", "<", "2009"], "query_toks_no_value": ["select", "avg", "(", "ticket_price", ")", ",", "min", "(", "ticket_price", ")", ",", "max", "(", "ticket_price", ")", "from", "exhibition", "where", "year", "<", "value"], "question": "Show the average, minimum, and maximum ticket prices for exhibitions for all years before 2009.", "question_toks": ["Show", "the", "average", ",", "minimum", ",", "and", "maximum", "ticket", "prices", "for", "exhibitions", "for", "all", "years", "before", "2009", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 10, false], null]], [2, [0, [0, 10, false], null]], [1, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 7, false], null], 2009.0, null]]}, "primary_key": {"exhibition": "exhibition_id"}, "orig_query": "select avg(ticket_price), min(ticket_price), max(ticket_price) from exhibition where year < 2009", "split_map": {"exhibition": ["max_ticket_price", "min_ticket_price", "avg_ticket_price", "total_ticket_price"]}, "schema_with_content": "artist : country (\"Fiji\", \"United States\", \"Zimbabwe\"), name (\"Larry Nelson\", \"Jeff Sluman\", \"John Daly\"), artist_id (2, 7, 1), age (45, 45, 48), year_join (1994, 1981, 1996) | exhibition : ticket_price (9.95, 16.95, 9.95), theme (\"Santa Claus and Rudolph the Red-Nosed Reindeer\", \"Santa Claus\", \"Christmas Tree\"), artist_id (1, 2, 3), exhibition_id (6, 5, 2), year (2008, 2005, 2004) | exhibition_ticket_price : artist_id (1, 2, 3), min_ticket_price (9.95, 16.95, 9.95), year (2008, 2005, 2004), avg_ticket_price (9.95, 16.95, 9.95), max_ticket_price (9.95, 16.95, 9.95), exhibition_id (6, 5, 2), theme (\"Santa Claus and Rudolph the Red-Nosed Reindeer\", \"Santa Claus\", \"Christmas Tree\"), total_ticket_price (9.95, 16.95, 9.95) | exhibition_record : attendance (24808, 24808, 1134), exhibition_id (3, 1, 2), date (\"February 26\", \"February 26\", \"December 12\")", "schema_without_content": "artist : country , name , artist_id , age , year_join  | exhibition : ticket_price , theme , artist_id , exhibition_id , year  | exhibition_ticket_price : artist_id , min_ticket_price , year , avg_ticket_price , max_ticket_price , exhibition_id , theme , total_ticket_price  | exhibition_record : attendance , exhibition_id , date "}, {"db_id": "theme_gallery", "query": "select avg_ticket_price, min_ticket_price, max_ticket_price from exhibition_ticket_price where year < 2009", "query_toks": ["SELECT", "avg", "(", "ticket_price", ")", ",", "min", "(", "ticket_price", ")", ",", "max", "(", "ticket_price", ")", "FROM", "exhibition", "WHERE", "YEAR", "<", "2009"], "query_toks_no_value": ["select", "avg", "(", "ticket_price", ")", ",", "min", "(", "ticket_price", ")", ",", "max", "(", "ticket_price", ")", "from", "exhibition", "where", "year", "<", "value"], "question": "What are the average, minimum, and maximum ticket prices for exhibitions that happened prior to 2009?", "question_toks": ["What", "are", "the", "average", ",", "minimum", ",", "and", "maximum", "ticket", "prices", "for", "exhibitions", "that", "happened", "prior", "to", "2009", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 10, false], null]], [2, [0, [0, 10, false], null]], [1, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 7, false], null], 2009.0, null]]}, "primary_key": {"exhibition": "exhibition_id"}, "orig_query": "select avg(ticket_price), min(ticket_price), max(ticket_price) from exhibition where year < 2009", "split_map": {"exhibition": ["max_ticket_price", "min_ticket_price", "avg_ticket_price", "total_ticket_price"]}, "schema_with_content": "artist : artist_id (3, 6, 2), year_join (1994, 1994, 1981), name (\"Mark Brooks\", \"Vijay Singh\", \"Paul Azinger\"), age (48, 48, 48), country (\"Fiji\", \"United States\", \"Zimbabwe\") | exhibition : year (2009, 2006, 2009), ticket_price (9.95, 14.95, 9.95), exhibition_id (6, 2, 5), theme (\"Christmas Tree\", \"Christmas stocking\", \"Spring\"), artist_id (1, 2, 4) | exhibition_ticket_price : min_ticket_price (9.95, 14.95, 9.95), max_ticket_price (9.95, 14.95, 9.95), artist_id (1, 2, 4), avg_ticket_price (9.95, 14.95, 9.95), exhibition_id (6, 2, 5), total_ticket_price (9.95, 14.95, 9.95), year (2009, 2006, 2009), theme (\"Christmas Tree\", \"Christmas stocking\", \"Spring\") | exhibition_record : attendance (9089, 9089, 1233), date (\"December 16\", \"December 2\", \"December 9\"), exhibition_id (3, 4, 5)", "schema_without_content": "artist : artist_id , year_join , name , age , country  | exhibition : year , ticket_price , exhibition_id , theme , artist_id  | exhibition_ticket_price : min_ticket_price , max_ticket_price , artist_id , avg_ticket_price , exhibition_id , total_ticket_price , year , theme  | exhibition_record : attendance , date , exhibition_id "}, {"db_id": "epinions_1", "query": "select avg_rating, max_rating from review_rating", "query_toks": ["SELECT", "avg", "(", "rating", ")", ",", "max", "(", "rating", ")", "FROM", "review"], "query_toks_no_value": ["select", "avg", "(", "rating", ")", ",", "max", "(", "rating", ")", "from", "review"], "question": "Find the average and maximum rating of all reviews.", "question_toks": ["Find", "the", "average", "and", "maximum", "rating", "of", "all", "reviews", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]], [1, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"review": "a_id"}, "orig_query": "select avg(rating), max(rating) from review", "split_map": {"review": ["max_rating", "min_rating", "avg_rating", "total_rating"]}, "schema_with_content": "item : title (\"comb\", \"cup\", \"shampoo\"), i_id (4, 1, 1) | review : u_id (1, 2), rank (4, 3, 1), i_id (3, 5, 1), a_id (2, 1, 6), rating (7, 10, 7) | review_rating : a_id (2, 1, 6), max_rating (7, 10, 7), total_rating (7, 10, 7), avg_rating (7, 10, 7), i_id (3, 5, 1), u_id (1, 2), min_rating (7, 10, 7), rank (4, 3, 1) | useracct : name (\"Mark\", \"Helen\", \"Helen\"), u_id (3, 2, 1) | trust : source_u_id (2, 6, 7), trust (4, 1, 1), target_u_id (6, 2, 2)", "schema_without_content": "item : title , i_id  | review : u_id , rank , i_id , a_id , rating  | review_rating : a_id , max_rating , total_rating , avg_rating , i_id , u_id , min_rating , rank  | useracct : name , u_id  | trust : source_u_id , trust , target_u_id "}, {"db_id": "epinions_1", "query": "select min_rank from review_rank", "query_toks": ["SELECT", "min", "(", "rank", ")", "FROM", "review"], "query_toks_no_value": ["select", "min", "(", "rank", ")", "from", "review"], "question": "Find the highest rank of all reviews.", "question_toks": ["Find", "the", "highest", "rank", "of", "all", "reviews", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"review": "a_id"}, "orig_query": "select min(rank) from review", "split_map": {"review": ["max_rank", "min_rank", "avg_rank", "total_rank"]}, "schema_with_content": "item : title (\"avocado\", \"shampoo\", \"orange\"), i_id (6, 6, 7) | review : rank (7, 7, 4), i_id (5, 4, 1), a_id (2, 2, 2), u_id (1, 2), rating (10, 5, 10) | review_rank : max_rank (7, 7, 4), u_id (1, 2), total_rank (7, 7, 4), min_rank (7, 7, 4), a_id (2, 2, 2), rating (10, 5, 10), avg_rank (7, 7, 4), i_id (5, 4, 1) | useracct : u_id (2, 6, 4), name (\"Nancy\", \"Emily\", \"Terry\") | trust : source_u_id (6, 1, 2), target_u_id (2, 5, 3), trust (8, 7, 1)", "schema_without_content": "item : title , i_id  | review : rank , i_id , a_id , u_id , rating  | review_rank : max_rank , u_id , total_rank , min_rank , a_id , rating , avg_rank , i_id  | useracct : u_id , name  | trust : source_u_id , target_u_id , trust "}, {"db_id": "gymnast", "query": "select avg_horizontal_bar_points from gymnast_horizontal_bar_points", "query_toks": ["SELECT", "avg", "(", "Horizontal_Bar_Points", ")", "FROM", "gymnast"], "query_toks_no_value": ["select", "avg", "(", "horizontal_bar_points", ")", "from", "gymnast"], "question": "What is the average horizontal bar points for all gymnasts?", "question_toks": ["What", "is", "the", "average", "horizontal", "bar", "points", "for", "all", "gymnasts", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"gymnast": "gymnast_id"}, "orig_query": "select avg(horizontal_bar_points) from gymnast", "split_map": {"gymnast": ["max_horizontal_bar_points", "min_horizontal_bar_points", "avg_horizontal_bar_points", "total_horizontal_bar_points"]}, "schema_with_content": "gymnast : horizontal_bar_points (9.5, 9.412, 9.5), parallel_bars_points (9.5, 9.5, 9.562), gymnast_id (10, 10, 1), vault_points (9.762, 9.762, 9.762), floor_exercise_points (9.725, 9.725, 9.687), rings_points (9.487, 9.75, 9.625), pommel_horse_points (9.712, 9.712, 9.675), total_points (57.424, 57.649, 57.374) | gymnast_horizontal_bar_points : gymnast_id (10, 10, 1), min_horizontal_bar_points (9.5, 9.412, 9.5), pommel_horse_points (9.712, 9.712, 9.675), total_horizontal_bar_points (9.5, 9.412, 9.5), max_horizontal_bar_points (9.5, 9.412, 9.5), rings_points (9.487, 9.75, 9.625), vault_points (9.762, 9.762, 9.762), parallel_bars_points (9.5, 9.5, 9.562), floor_exercise_points (9.725, 9.725, 9.687), avg_horizontal_bar_points (9.5, 9.412, 9.5), total_points (57.424, 57.649, 57.374) | people : hometown (\"Miami\", \"Santiago de los Caballeros\", \"Bonao\"), height (1.81, 1.71, 1.76), people_id (2, 10, 5), age (20.0, 24.0, 21.0), name (\"Eve Tatiana Cruz Oviedo\", \"Lorraine S\u00c3\u00baarez Carmona\", \"Rosa Clarissa Ort\u00c3\u00adz Melo\")", "schema_without_content": "gymnast : horizontal_bar_points , parallel_bars_points , gymnast_id , vault_points , floor_exercise_points , rings_points , pommel_horse_points , total_points  | gymnast_horizontal_bar_points : gymnast_id , min_horizontal_bar_points , pommel_horse_points , total_horizontal_bar_points , max_horizontal_bar_points , rings_points , vault_points , parallel_bars_points , floor_exercise_points , avg_horizontal_bar_points , total_points  | people : hometown , height , people_id , age , name "}, {"db_id": "gymnast", "query": "select avg_horizontal_bar_points from gymnast_horizontal_bar_points", "query_toks": ["SELECT", "avg", "(", "Horizontal_Bar_Points", ")", "FROM", "gymnast"], "query_toks_no_value": ["select", "avg", "(", "horizontal_bar_points", ")", "from", "gymnast"], "question": "Return the average horizontal bar points across all gymnasts.", "question_toks": ["Return", "the", "average", "horizontal", "bar", "points", "across", "all", "gymnasts", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"gymnast": "gymnast_id"}, "orig_query": "select avg(horizontal_bar_points) from gymnast", "split_map": {"gymnast": ["max_horizontal_bar_points", "min_horizontal_bar_points", "avg_horizontal_bar_points", "total_horizontal_bar_points"]}, "schema_with_content": "gymnast : gymnast_id (7, 6, 7), pommel_horse_points (9.525, 9.325, 9.737), vault_points (9.575, 9.637, 9.55), floor_exercise_points (9.725, 9.65, 9.65), rings_points (9.625, 9.75, 9.75), parallel_bars_points (9.587, 9.725, 9.625), total_points (57.924, 57.924, 57.436), horizontal_bar_points (9.737, 9.5, 9.5) | gymnast_horizontal_bar_points : min_horizontal_bar_points (9.737, 9.5, 9.5), avg_horizontal_bar_points (9.737, 9.5, 9.5), max_horizontal_bar_points (9.737, 9.5, 9.5), gymnast_id (7, 6, 7), floor_exercise_points (9.725, 9.65, 9.65), rings_points (9.625, 9.75, 9.75), pommel_horse_points (9.525, 9.325, 9.737), parallel_bars_points (9.587, 9.725, 9.625), total_horizontal_bar_points (9.737, 9.5, 9.5), vault_points (9.575, 9.637, 9.55), total_points (57.924, 57.924, 57.436) | people : name (\"Endis de los Santos \u00c3\u0081lvarez\", \"Nadia Caba Rodr\u00c3\u00adguez\", \"Nadia Caba Rodr\u00c3\u00adguez\"), people_id (2, 1, 6), age (19.0, 20.0, 20.0), hometown (\"Miami\", \"Miami\", \"Miami\"), height (1.72, 1.72, 1.71)", "schema_without_content": "gymnast : gymnast_id , pommel_horse_points , vault_points , floor_exercise_points , rings_points , parallel_bars_points , total_points , horizontal_bar_points  | gymnast_horizontal_bar_points : min_horizontal_bar_points , avg_horizontal_bar_points , max_horizontal_bar_points , gymnast_id , floor_exercise_points , rings_points , pommel_horse_points , parallel_bars_points , total_horizontal_bar_points , vault_points , total_points  | people : name , people_id , age , hometown , height "}, {"db_id": "small_bank_1", "query": "select total_balance from checking_balance", "query_toks": ["SELECT", "sum", "(", "balance", ")", "FROM", "checking"], "query_toks_no_value": ["select", "sum", "(", "balance", ")", "from", "checking"], "question": "What is the total checking balance in all accounts?", "question_toks": ["What", "is", "the", "total", "checking", "balance", "in", "all", "accounts", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"checking": "custid"}, "orig_query": "select sum(balance) from checking", "split_map": {"checking": ["max_balance", "min_balance", "avg_balance", "total_balance"]}, "schema_with_content": "accounts : name (\"Porter\", \"Weeks\", \"O'mahony\"), custid (3, 1, 1) | savings : balance (230000.0, 230000.0, 230000.0), custid (5, 6, 3) | checking : balance (7000.0, 7000.0, 77.0), custid (2, 2, 3) | checking_balance : custid (2, 2, 3), avg_balance (7000.0, 7000.0, 77.0), max_balance (7000.0, 7000.0, 77.0), total_balance (7000.0, 7000.0, 77.0), min_balance (7000.0, 7000.0, 77.0)", "schema_without_content": "accounts : name , custid  | savings : balance , custid  | checking : balance , custid  | checking_balance : custid , avg_balance , max_balance , total_balance , min_balance "}, {"db_id": "small_bank_1", "query": "select total_balance from checking_balance", "query_toks": ["SELECT", "sum", "(", "balance", ")", "FROM", "checking"], "query_toks_no_value": ["select", "sum", "(", "balance", ")", "from", "checking"], "question": "Find the total balance across checking accounts.", "question_toks": ["Find", "the", "total", "balance", "across", "checking", "accounts", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"checking": "custid"}, "orig_query": "select sum(balance) from checking", "split_map": {"checking": ["max_balance", "min_balance", "avg_balance", "total_balance"]}, "schema_with_content": "accounts : name (\"O'mahony\", \"O'mahony\", \"Porter\"), custid (2, 2, 2) | savings : balance (80000.0, 999999999.0, 60.0), custid (6, 4, 2) | checking : custid (1, 6, 2), balance (77.0, 10000.0, 10000.0) | checking_balance : total_balance (77.0, 10000.0, 10000.0), avg_balance (77.0, 10000.0, 10000.0), min_balance (77.0, 10000.0, 10000.0), max_balance (77.0, 10000.0, 10000.0), custid (1, 6, 2)", "schema_without_content": "accounts : name , custid  | savings : balance , custid  | checking : custid , balance  | checking_balance : total_balance , avg_balance , min_balance , max_balance , custid "}, {"db_id": "small_bank_1", "query": "select avg_balance from checking_balance", "query_toks": ["SELECT", "avg", "(", "balance", ")", "FROM", "checking"], "query_toks_no_value": ["select", "avg", "(", "balance", ")", "from", "checking"], "question": "Find the average checking balance.", "question_toks": ["Find", "the", "average", "checking", "balance", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"checking": "custid"}, "orig_query": "select avg(balance) from checking", "split_map": {"checking": ["max_balance", "min_balance", "avg_balance", "total_balance"]}, "schema_with_content": "accounts : custid (4, 7, 2), name (\"O'mahony\", \"Wesley\", \"Brown\") | savings : custid (5, 5, 1), balance (999999999.0, 200000.0, 240.0) | checking : balance (10000.0, 7000.0, 3000.0), custid (4, 1, 5) | checking_balance : avg_balance (10000.0, 7000.0, 3000.0), custid (4, 1, 5), total_balance (10000.0, 7000.0, 3000.0), min_balance (10000.0, 7000.0, 3000.0), max_balance (10000.0, 7000.0, 3000.0)", "schema_without_content": "accounts : custid , name  | savings : custid , balance  | checking : balance , custid  | checking_balance : avg_balance , custid , total_balance , min_balance , max_balance "}, {"db_id": "small_bank_1", "query": "select avg_balance from checking_balance", "query_toks": ["SELECT", "avg", "(", "balance", ")", "FROM", "checking"], "query_toks_no_value": ["select", "avg", "(", "balance", ")", "from", "checking"], "question": "What is the average balance in checking accounts?", "question_toks": ["What", "is", "the", "average", "balance", "in", "checking", "accounts", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"checking": "custid"}, "orig_query": "select avg(balance) from checking", "split_map": {"checking": ["max_balance", "min_balance", "avg_balance", "total_balance"]}, "schema_with_content": "accounts : name (\"O'mahony\", \"Porter\", \"Granger\"), custid (6, 6, 7) | savings : custid (3, 6, 6), balance (80000.0, 60.0, 230000.0) | checking : balance (2000.0, 77.0, 2000.0), custid (3, 7, 5) | checking_balance : total_balance (2000.0, 77.0, 2000.0), min_balance (2000.0, 77.0, 2000.0), max_balance (2000.0, 77.0, 2000.0), avg_balance (2000.0, 77.0, 2000.0), custid (3, 7, 5)", "schema_without_content": "accounts : name , custid  | savings : custid , balance  | checking : balance , custid  | checking_balance : total_balance , min_balance , max_balance , avg_balance , custid "}, {"db_id": "browser_web", "query": "select max_market_share, min_market_share, avg_market_share from browser_market_share", "query_toks": ["SELECT", "max", "(", "market_share", ")", ",", "min", "(", "market_share", ")", ",", "avg", "(", "market_share", ")", "FROM", "browser"], "query_toks_no_value": ["select", "max", "(", "market_share", ")", ",", "min", "(", "market_share", ")", ",", "avg", "(", "market_share", ")", "from", "browser"], "question": "What is the maximum, minimum and average market share of the listed browsers?", "question_toks": ["What", "is", "the", "maximum", ",", "minimum", "and", "average", "market", "share", "of", "the", "listed", "browsers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 8, false], null]], [2, [0, [0, 8, false], null]], [5, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"browser": "id"}, "orig_query": "select max(market_share), min(market_share), avg(market_share) from browser", "split_map": {"browser": ["max_market_share", "min_market_share", "avg_market_share", "total_market_share"]}, "schema_with_content": "web_client_accelerator : id (14, 8, 14), operating_system (\"Appliance (Linux)\", \"Android, Linux, Mac and Windows devices\", \"Windows, except NT and 95\"), connection (\"Broadband, Satellite, Wireless, Fiber, DSL\", \"Dial-up, Broadband, DSL, ISDN, Satellite, Wireless\", \"Dial-up, Broadband, DSL, ISDN, Satellite, Wireless\"), name (\"Fasterfox\", \"CACHEbox\", \"Freewire\"), client (\"user\", \"All\", \"End user, ISP\") | browser : name (\"Internet Explorer\", \"Internet Explorer\", \"Opera\"), id (2, 2, 3), market_share (8.54, 18.11, 8.54) | browser_market_share : total_market_share (8.54, 18.11, 8.54), max_market_share (8.54, 18.11, 8.54), avg_market_share (8.54, 18.11, 8.54), id (2, 2, 3), name (\"Internet Explorer\", \"Internet Explorer\", \"Opera\"), min_market_share (8.54, 18.11, 8.54) | accelerator_compatible_browser : accelerator_id (2, 1, 9), compatible_since_year (2005, 2008, 2010), browser_id (3, 1, 4)", "schema_without_content": "web_client_accelerator : id , operating_system \", \"Android, Linux, Mac and Windows devices\", \"Windows, except NT and 95\", connection , name , client  | browser : name , id , market_share  | browser_market_share : total_market_share , max_market_share , avg_market_share , id , name , min_market_share  | accelerator_compatible_browser : accelerator_id , compatible_since_year , browser_id "}, {"db_id": "school_finance", "query": "select total_enrollment, avg_enrollment from school_enrollment", "query_toks": ["SELECT", "sum", "(", "enrollment", ")", ",", "avg", "(", "enrollment", ")", "FROM", "school"], "query_toks_no_value": ["select", "sum", "(", "enrollment", ")", ",", "avg", "(", "enrollment", ")", "from", "school"], "question": "What are the total and average enrollment of all schools?", "question_toks": ["What", "are", "the", "total", "and", "average", "enrollment", "of", "all", "schools", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]], [5, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"school": "school_id"}, "orig_query": "select sum(enrollment), avg(enrollment) from school", "split_map": {"school": ["max_enrollment", "min_enrollment", "avg_enrollment", "total_enrollment"]}, "schema_with_content": "school : school_name (\"New Prairie 1\", \"LaVille\", \"Bremen\"), ihsaa_football_class (\"AA\", \"AAA\", \"AA\"), school_id (\"8\", \"3\", \"6\"), mascot (\"Jimmies\", \"Cavaliers\", \"Lions\"), ihsaa_class (\"AA\", \"A\", \"AAA\"), location (\"Walkerton\", \"Bremen\", \"Bremen\"), county (\"50 Marshall\", \"20 Elkhart\", \"20 Elkhart\"), enrollment (852, 601, 852) | school_enrollment : max_enrollment (852, 601, 852), school_id (\"8\", \"3\", \"6\"), avg_enrollment (852, 601, 852), total_enrollment (852, 601, 852), location (\"Walkerton\", \"Bremen\", \"Bremen\"), mascot (\"Jimmies\", \"Cavaliers\", \"Lions\"), school_name (\"New Prairie 1\", \"LaVille\", \"Bremen\"), min_enrollment (852, 601, 852), ihsaa_class (\"AA\", \"A\", \"AAA\"), ihsaa_football_class (\"AA\", \"AAA\", \"AA\"), county (\"50 Marshall\", \"20 Elkhart\", \"20 Elkhart\") | budget : school_id (1, 5, 5), invested (8335, 5840, 8335), budgeted (3666, 6803, 74849), year (2005, 2006, 2006), total_budget_percent_budgeted (2.0, 2.4, 1.3), total_budget_percent_invested (2.0, 2.2, 2.7), budget_invested_percent (\"127.6\", \"127.6\", \"122.5\") | endowment : donator_name (\"San Crist\u00c3\u00b3bal\", \"Monte Plata\", \"Com. Dom. En Estados Unidos\"), endowment_id (11, 8, 10), school_id (5, 8, 1), amount (9.51, 9.05, 8.85)", "schema_without_content": "school : school_name , ihsaa_football_class , school_id , mascot , ihsaa_class , location , county , enrollment  | school_enrollment : max_enrollment , school_id , avg_enrollment , total_enrollment , location , mascot , school_name , min_enrollment , ihsaa_class , ihsaa_football_class , county  | budget : school_id , invested , budgeted , year , total_budget_percent_budgeted , total_budget_percent_invested , budget_invested_percent  | endowment : donator_name , endowment_id , school_id , amount "}, {"db_id": "school_finance", "query": "select avg_enrollment, max_enrollment, min_enrollment from school_enrollment", "query_toks": ["SELECT", "avg", "(", "enrollment", ")", ",", "max", "(", "enrollment", ")", ",", "min", "(", "enrollment", ")", "FROM", "school"], "query_toks_no_value": ["select", "avg", "(", "enrollment", ")", ",", "max", "(", "enrollment", ")", ",", "min", "(", "enrollment", ")", "from", "school"], "question": "Show the average, maximum, minimum enrollment of all schools.", "question_toks": ["Show", "the", "average", ",", "maximum", ",", "minimum", "enrollment", "of", "all", "schools", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]], [2, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"school": "school_id"}, "orig_query": "select avg(enrollment), max(enrollment), min(enrollment) from school", "split_map": {"school": ["max_enrollment", "min_enrollment", "avg_enrollment", "total_enrollment"]}, "schema_with_content": "school : mascot (\"Falcons\", \"Redskins\", \"Jimmies\"), school_id (\"4\", \"1\", \"4\"), county (\"71 St. Joseph\", \"75 Starke\", \"71 St. Joseph\"), ihsaa_class (\"AA\", \"A\", \"AAA\"), school_name (\"Culver Community\", \"Knox Community\", \"Glenn\"), ihsaa_football_class (\"AA\", \"AAA\", \"AA\"), location (\"Knox\", \"Bremen\", \"Bourbon\"), enrollment (852, 287, 601) | school_enrollment : mascot (\"Falcons\", \"Redskins\", \"Jimmies\"), school_id (\"4\", \"1\", \"4\"), total_enrollment (852, 287, 601), school_name (\"Culver Community\", \"Knox Community\", \"Glenn\"), min_enrollment (852, 287, 601), max_enrollment (852, 287, 601), location (\"Knox\", \"Bremen\", \"Bourbon\"), avg_enrollment (852, 287, 601), ihsaa_class (\"AA\", \"A\", \"AAA\"), ihsaa_football_class (\"AA\", \"AAA\", \"AA\"), county (\"71 St. Joseph\", \"75 Starke\", \"71 St. Joseph\") | budget : invested (95542, 140102, 2134), budgeted (4979, 4979, 61283), year (1999, 1999, 2002), budget_invested_percent (\"228.8\", \"228.6\", \"122.5\"), total_budget_percent_budgeted (2.0, 2.4, 1.3), total_budget_percent_invested (2.0, 2.2, 2.7), school_id (2, 4, 1) | endowment : school_id (8, 2, 8), donator_name (\"San Jos\u00c3\u00a9 de Ocoa\", \"Distrito Nacional\", \"La Vega\"), amount (8.99, 8.85, 9.05), endowment_id (3, 4, 2)", "schema_without_content": "school : mascot , school_id , county , ihsaa_class , school_name , ihsaa_football_class , location , enrollment  | school_enrollment : mascot , school_id , total_enrollment , school_name , min_enrollment , max_enrollment , location , avg_enrollment , ihsaa_class , ihsaa_football_class , county  | budget : invested , budgeted , year , budget_invested_percent , total_budget_percent_budgeted , total_budget_percent_invested , school_id  | endowment : school_id , donator_name , amount , endowment_id "}, {"db_id": "school_finance", "query": "select county, count(*), total_enrollment from school_enrollment group by county", "query_toks": ["SELECT", "county", ",", "count", "(", "*", ")", ",", "sum", "(", "enrollment", ")", "FROM", "school", "GROUP", "BY", "county"], "query_toks_no_value": ["select", "county", ",", "count", "(", "*", ")", ",", "sum", "(", "enrollment", ")", "from", "school", "group", "by", "county"], "question": "Show each county along with the number of schools and total enrollment in each county.", "question_toks": ["Show", "each", "county", "along", "with", "the", "number", "of", "schools", "and", "total", "enrollment", "in", "each", "county", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]], [4, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"school": "school_id"}, "orig_query": "select county, count(*), sum(enrollment) from school group by county", "split_map": {"school": ["max_enrollment", "min_enrollment", "avg_enrollment", "total_enrollment"]}, "schema_with_content": "school : ihsaa_football_class (\"AAAA\", \"AAA\", \"AA\"), mascot (\"Cougars\", \"Trojans\", \"Redskins\"), county (\"50 Marshall\", \"75 Starke\", \"75 Starke\"), school_id (\"3\", \"8\", \"5\"), ihsaa_class (\"AA\", \"A\", \"AAA\"), location (\"Bourbon\", \"Walkerton\", \"Elkhart\"), school_name (\"Glenn\", \"Bremen\", \"Jimtown\"), enrollment (287, 287, 379) | school_enrollment : total_enrollment (287, 287, 379), avg_enrollment (287, 287, 379), school_name (\"Glenn\", \"Bremen\", \"Jimtown\"), mascot (\"Cougars\", \"Trojans\", \"Redskins\"), max_enrollment (287, 287, 379), location (\"Bourbon\", \"Walkerton\", \"Elkhart\"), school_id (\"3\", \"8\", \"5\"), min_enrollment (287, 287, 379), ihsaa_class (\"AA\", \"A\", \"AAA\"), ihsaa_football_class (\"AAAA\", \"AAA\", \"AA\"), county (\"50 Marshall\", \"75 Starke\", \"75 Starke\") | budget : budget_invested_percent (\"127.6\", \"71.3\", \"122.5\"), total_budget_percent_budgeted (2.0, 2.4, 1.3), school_id (4, 3, 4), year (2006, 2003, 2000), invested (8335, 8335, 5840), budgeted (4979, 113531, 6803), total_budget_percent_invested (2.0, 2.2, 2.7) | endowment : amount (9.51, 9.73, 9.05), school_id (7, 6, 2), endowment_id (7, 4, 8), donator_name (\"La Vega\", \"Distrito Nacional\", \"La Vega\")", "schema_without_content": "school : ihsaa_football_class , mascot , county , school_id , ihsaa_class , location , school_name , enrollment  | school_enrollment : total_enrollment , avg_enrollment , school_name , mascot , max_enrollment , location , school_id , min_enrollment , ihsaa_class , ihsaa_football_class , county  | budget : budget_invested_percent , total_budget_percent_budgeted , school_id , year , invested , budgeted , total_budget_percent_invested  | endowment : amount , school_id , endowment_id , donator_name "}, {"db_id": "school_finance", "query": "select donator_name, total_amount from endowment_amount group by donator_name order by sum(amount)desc", "query_toks": ["SELECT", "donator_name", ",", "sum", "(", "amount", ")", "FROM", "endowment", "GROUP", "BY", "donator_name", "ORDER", "BY", "sum", "(", "amount", ")", "DESC"], "query_toks_no_value": ["select", "donator_name", ",", "sum", "(", "amount", ")", "from", "endowment", "group", "by", "donator_name", "order", "by", "sum", "(", "amount", ")", "desc"], "question": "List each donator name and the amount of endowment in descending order of the amount of endowment.", "question_toks": ["List", "each", "donator", "name", "and", "the", "amount", "of", "endowment", "in", "descending", "order", "of", "the", "amount", "of", "endowment", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [4, 19, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [4, [0, [0, 19, false], null]]]], "union": null, "where": []}, "primary_key": {"endowment": "endowment_id"}, "orig_query": "select donator_name, sum(amount) from endowment group by donator_name order by sum(amount) desc", "split_map": {"endowment": ["max_amount", "min_amount", "avg_amount", "total_amount"]}, "schema_with_content": "school : location (\"Knox\", \"Walkerton\", \"New Carlisle\"), enrollment (379, 620, 379), ihsaa_football_class (\"AAAA\", \"AA\", \"AAA\"), ihsaa_class (\"AA\", \"A\", \"AAA\"), school_name (\"LaVille\", \"Glenn\", \"Jimtown\"), county (\"71 St. Joseph\", \"20 Elkhart\", \"46 LaPorte 71 St. Joseph\"), mascot (\"Redskins\", \"Redskins\", \"Cougars\"), school_id (\"3\", \"2\", \"2\") | budget : year (2006, 2001, 2003), budget_invested_percent (\"228.8\", \"42.9\", \"127.6\"), total_budget_percent_budgeted (2.0, 2.4, 1.3), total_budget_percent_invested (2.0, 2.2, 2.7), invested (2134, 95542, 2134), school_id (2, 2, 3), budgeted (113531, 113531, 119527) | endowment : donator_name (\"San Jos\u00c3\u00a9 de Ocoa\", \"Com. Dom. En Estados Unidos\", \"Distrito Nacional\"), school_id (1, 7, 6), amount (9.55, 8.33, 8.53), endowment_id (11, 4, 9) | endowment_amount : school_id (1, 7, 6), avg_amount (9.55, 8.33, 8.53), max_amount (9.55, 8.33, 8.53), min_amount (9.55, 8.33, 8.53), total_amount (9.55, 8.33, 8.53), endowment_id (11, 4, 9), donator_name (\"San Jos\u00c3\u00a9 de Ocoa\", \"Com. Dom. En Estados Unidos\", \"Distrito Nacional\")", "schema_without_content": "school : location , enrollment , ihsaa_football_class , ihsaa_class , school_name , county , mascot , school_id  | budget : year , budget_invested_percent , total_budget_percent_budgeted , total_budget_percent_invested , invested , school_id , budgeted  | endowment : donator_name , school_id , amount , endowment_id  | endowment_amount : school_id , avg_amount , max_amount , min_amount , total_amount , endowment_id , donator_name "}, {"db_id": "protein_institute", "query": "select avg_floors, max_floors, min_floors from building_floors", "query_toks": ["SELECT", "avg", "(", "floors", ")", ",", "max", "(", "floors", ")", ",", "min", "(", "floors", ")", "FROM", "building"], "query_toks_no_value": ["select", "avg", "(", "floors", ")", ",", "max", "(", "floors", ")", ",", "min", "(", "floors", ")", "from", "building"], "question": "What are the average, maximum, and minimum number of floors for all buildings?", "question_toks": ["What", "are", "the", "average", ",", "maximum", ",", "and", "minimum", "number", "of", "floors", "for", "all", "buildings", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]], [1, [0, [0, 6, false], null]], [2, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"building": "building_id"}, "orig_query": "select avg(floors), max(floors), min(floors) from building", "split_map": {"building": ["max_floors", "min_floors", "avg_floors", "total_floors"]}, "schema_with_content": "building : building_id (\"5\", \"6\", \"6\"), name (\"100 North Tampa\", \"Bank of America Tower\", \"One Tampa City Center\"), floors (36, 10, 17), height_feet (579, 537, 579), years_as_tallest (\"1926\u00e2\u0080\u00931966\", \"1915\u00e2\u0080\u00931926\", \"1972\u00e2\u0080\u00931981\"), street_address (\"905 Franklin Street\", \"905 Franklin Street\", \"400 North Tampa Street\") | building_floors : years_as_tallest (\"1926\u00e2\u0080\u00931966\", \"1915\u00e2\u0080\u00931926\", \"1972\u00e2\u0080\u00931981\"), max_floors (36, 10, 17), street_address (\"905 Franklin Street\", \"905 Franklin Street\", \"400 North Tampa Street\"), name (\"100 North Tampa\", \"Bank of America Tower\", \"One Tampa City Center\"), min_floors (36, 10, 17), total_floors (36, 10, 17), building_id (\"5\", \"6\", \"6\"), avg_floors (36, 10, 17), height_feet (579, 537, 579) | institution : building_id (\"3\", \"4\", \"2\"), type (\"Private\", \"Public\", \"Tribal\"), founded (1866.0, 1890.0, 1883.0), team (\"Warriors\", \"Tigers\", \"Vikings\"), enrollment (1035, 3102, 1035), primary_conference (\"CalPac\", \"CalPac\", \"CalPac\"), institution_id (\"4\", \"0\", \"10\"), institution (\"Point University\", \"Edward Waters College\", \"Valley City State University\"), location (\"West Point, Georgia\", \"Babson Park, Florida\", \"Jamestown, North Dakota\") | protein : common_name (\"purple sea urchin\", \"body louse\", \"Tropical Clawed Frog\"), divergence_from_human_lineage (937.5, 371.2, 782.7), accession_number (\"XP_783370.2\", \"XP_002942331.1\", \"XP_783370.2\"), sequence_length (1878.0, 1584.0, 1878.0), institution_id (\"3\", \"9\", \"9\"), protein_name (\"uncharacterized protein C20orf117-like\", \"Centromeric protein E, putative\", \"Centromeric protein E, putative\"), sequence_identity_to_human_protein (\"47%\", \"39%\", \"36%\")", "schema_without_content": "building : building_id , name , floors , height_feet , years_as_tallest , street_address  | building_floors : years_as_tallest , max_floors , street_address , name , min_floors , total_floors , building_id , avg_floors , height_feet  | institution : building_id , type , founded , team , enrollment , primary_conference , institution_id , institution , location  | protein : common_name , divergence_from_human_lineage , accession_number , sequence_length , institution_id , protein_name , sequence_identity_to_human_protein "}, {"db_id": "protein_institute", "query": "select type, count(*), total_enrollment from institution_enrollment group by type", "query_toks": ["SELECT", "TYPE", ",", "count", "(", "*", ")", ",", "sum", "(", "enrollment", ")", "FROM", "institution", "GROUP", "BY", "TYPE"], "query_toks_no_value": ["select", "type", ",", "count", "(", "*", ")", ",", "sum", "(", "enrollment", ")", "from", "institution", "group", "by", "type"], "question": "Show institution types, along with the number of institutions and total enrollment for each type.", "question_toks": ["Show", "institution", "types", ",", "along", "with", "the", "number", "of", "institutions", "and", "total", "enrollment", "for", "each", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]], [4, [0, [0, 12, false], null]]]], "union": null, "where": []}, "primary_key": {"institution": "institution_id"}, "orig_query": "select type, count(*), sum(enrollment) from institution group by type", "split_map": {"institution": ["max_enrollment", "min_enrollment", "avg_enrollment", "total_enrollment"]}, "schema_with_content": "building : floors (42, 22, 12), building_id (\"6\", \"0\", \"1\"), name (\"Park Tower\", \"One Tampa City Center\", \"Bank of America Tower\"), years_as_tallest (\"1926\u00e2\u0080\u00931966\", \"1981\u00e2\u0080\u00931986\", \"1915\u00e2\u0080\u00931926\"), street_address (\"100 North Tampa Street\", \"201 North Franklin Street\", \"315 John F. Kennedy Boulevard\"), height_feet (579, 145, 145) | institution : location (\"Belleville, Illinois\", \"Madison, South Dakota\", \"Madison, South Dakota\"), building_id (\"4\", \"4\", \"3\"), primary_conference (\"none\", \"none\", \"Gulf Coast (GCAC)\"), institution (\"Menlo College\", \"Point University\", \"Lindenwood University\u00e2\u0080\u0093Belleville\"), institution_id (\"9\", \"4\", \"5\"), team (\"Jimmies\", \"Vikings\", \"Comets\"), founded (1883.0, 1889.0, 1889.0), type (\"Private\", \"Public\", \"Tribal\"), enrollment (3102, 650, 616) | institution_enrollment : type (\"Private\", \"Public\", \"Tribal\"), institution (\"Menlo College\", \"Point University\", \"Lindenwood University\u00e2\u0080\u0093Belleville\"), founded (1883.0, 1889.0, 1889.0), min_enrollment (3102, 650, 616), location (\"Belleville, Illinois\", \"Madison, South Dakota\", \"Madison, South Dakota\"), max_enrollment (3102, 650, 616), avg_enrollment (3102, 650, 616), institution_id (\"9\", \"4\", \"5\"), total_enrollment (3102, 650, 616), team (\"Jimmies\", \"Vikings\", \"Comets\"), primary_conference (\"none\", \"none\", \"Gulf Coast (GCAC)\"), building_id (\"4\", \"4\", \"3\") | protein : sequence_length (1584.0, 2030.0, 1878.0), sequence_identity_to_human_protein (\"36%\", \"30%\", \"36%\"), institution_id (\"1\", \"3\", \"5\"), protein_name (\"conserved hypothetical protein\", \"uncharacterized protein LOC578090\", \"Centromeric protein E, putative\"), common_name (\"body louse\", \"porkworm\", \"purple sea urchin\"), accession_number (\"XP_002429877.1\", \"XP_783370.2\", \"XP_003380263.1\"), divergence_from_human_lineage (782.7, 371.2, 742.9)", "schema_without_content": "building : floors , building_id , name , years_as_tallest , street_address , height_feet  | institution : location , building_id , primary_conference \", institution , institution_id , team , founded , type , enrollment  | institution_enrollment : type , institution , founded , min_enrollment , location , max_enrollment , avg_enrollment , institution_id , total_enrollment , team , primary_conference \", building_id  | protein : sequence_length , sequence_identity_to_human_protein , institution_id , protein_name , common_name , accession_number , divergence_from_human_lineage "}, {"db_id": "cinema", "query": "select avg_capacity, min_capacity, max_capacity from cinema_capacity where openning_year >= 2011", "query_toks": ["SELECT", "avg", "(", "capacity", ")", ",", "min", "(", "capacity", ")", ",", "max", "(", "capacity", ")", "FROM", "cinema", "WHERE", "openning_year", ">", "=", "2011"], "query_toks_no_value": ["select", "avg", "(", "capacity", ")", ",", "min", "(", "capacity", ")", ",", "max", "(", "capacity", ")", "from", "cinema", "where", "openning_year", ">", "=", "value"], "question": "Show the average, minimum, and maximum capacity for all the cinemas opened in year 2011 or later.", "question_toks": ["Show", "the", "average", ",", "minimum", ",", "and", "maximum", "capacity", "for", "all", "the", "cinemas", "opened", "in", "year", "2011", "or", "later", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 11, false], null]], [2, [0, [0, 11, false], null]], [1, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 5, [0, [0, 10, false], null], 2011.0, null]]}, "primary_key": {"cinema": "cinema_id"}, "orig_query": "select avg(capacity), min(capacity), max(capacity) from cinema where openning_year >= 2011", "split_map": {"cinema": ["max_capacity", "min_capacity", "avg_capacity", "total_capacity"]}, "schema_with_content": "film : original_air_date (\"October 19\u00e2\u0080\u009323, 1992\", \"October 12\u00e2\u0080\u009316, 1992\", \"October 5\u00e2\u0080\u00939, 1992\"), production_code (\"50251\u00e2\u0080\u009350255\", \"50231\u00e2\u0080\u009350235\", \"50231\u00e2\u0080\u009350235\"), rank_in_series (27, 30, 28), directed_by (\"Bill Schreiner\", \"Jesus Salvador Trevi\u00c3\u00b1o\"), number_in_season (3, 3, 2), title (\"The Case of the Piggy Banker\", \"The Case of the Piggy Banker\", \"The Case: Off the Record\"), film_id (2, 3, 2) | cinema : capacity (1100, 208, 305), cinema_id (9, 10, 2), openning_year (2010, 2010, 2012), name (\"Glenough\", \"Glenmore\", \"Oriel\"), location (\"County Cork\", \"County Cork\", \"County Wicklow\") | cinema_capacity : avg_capacity (1100, 208, 305), min_capacity (1100, 208, 305), cinema_id (9, 10, 2), total_capacity (1100, 208, 305), name (\"Glenough\", \"Glenmore\", \"Oriel\"), openning_year (2010, 2010, 2012), max_capacity (1100, 208, 305), location (\"County Cork\", \"County Cork\", \"County Wicklow\") | schedule : price (15.99, 9.99, 12.99), cinema_id (2, 10, 1), date (\"2 Aug\", \"19 May\", \"21 Jun\"), show_times_per_day (4, 3, 2), film_id (5, 4, 2)", "schema_without_content": "film : original_air_date , production_code , rank_in_series , directed_by , number_in_season , title , film_id  | cinema : capacity , cinema_id , openning_year , name , location  | cinema_capacity : avg_capacity , min_capacity , cinema_id , total_capacity , name , openning_year , max_capacity , location  | schedule : price , cinema_id , date , show_times_per_day , film_id "}, {"db_id": "products_for_hire", "query": "select customer_id, total_amount_paid from payments_amount_paid group by customer_id order by sum(amount_paid)desc limit 1", "query_toks": ["SELECT", "customer_id", ",", "sum", "(", "amount_paid", ")", "FROM", "Payments", "GROUP", "BY", "customer_id", "ORDER", "BY", "sum", "(", "amount_paid", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "customer_id", ",", "sum", "(", "amount_paid", ")", "from", "payments", "group", "by", "customer_id", "order", "by", "sum", "(", "amount_paid", ")", "desc", "limit", "value"], "question": "What is the maximum total amount paid by a customer? List the customer id and amount.", "question_toks": ["What", "is", "the", "maximum", "total", "amount", "paid", "by", "a", "customer", "?", "List", "the", "customer", "id", "and", "amount", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 30, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [4, 35, false], null]]], "select": [false, [[0, [0, [0, 30, false], null]], [4, [0, [0, 35, false], null]]]], "union": null, "where": []}, "primary_key": {"payments": "payment_id"}, "orig_query": "select customer_id, sum(amount_paid) from payments group by customer_id order by sum(amount_paid) desc limit 1", "split_map": {"payments": ["max_amount_paid", "min_amount_paid", "avg_amount_paid", "total_amount_paid"]}, "schema_with_content": "discount_coupons : date_issued (\"2017-09-17 23:31:36\", \"2017-08-16 03:16:48\", \"2017-10-22 06:03:39\"), coupon_amount (175.94, 547.39, 399.89), coupon_id (5, 5, 8) | customers : coupon_id (2, 7, 2), first_name (\"Maximilian\", \"Rosalee\", \"Rosalee\"), gender_mf (\"0\", \"1\"), date_last_hire (\"2018-03-12 09:23:41\", \"2018-02-27 18:55:26\", \"2018-03-04 08:59:40\"), date_became_customer (\"2016-06-17 14:11:50\", \"2016-05-25 01:12:49\", \"2016-02-03 16:58:11\"), good_or_bad_customer (\"good\", \"bad\"), last_name (\"Strosin\", \"Kessler\", \"Kessler\"), customer_id (6, 12, 10) | bookings : customer_id (8, 10, 10), amount_outstanding (56.02, 28.22, 32.99), returned_damaged_yn (\"1\", \"0\"), booking_start_date (\"2017-07-15 06:28:54\", \"2016-05-06 03:50:49\", \"2017-05-24 16:16:29\"), amount_of_refund (181.19, 192.02, 183.68), booking_id (12, 10, 14), booking_status_code (\"Provisional\", \"Confirmed\"), amount_payable (374.59, 386.92, 306.26), booking_end_date (\"2018-02-19 21:53:31\", \"2017-10-11 03:00:15\", \"2017-12-02 00:37:00\"), amount_of_discount (79.34, 49.26, 24.19), count_hired (\"152\", \"914\", \"298\") | products_for_hire : daily_hire_cost (39.73, 18.5, 18.5), product_description (\"Anna Karenina\", \"War and Peace\", \"Twilight\"), product_name (\"Book collection C\", \"Book collection B\", \"Book collection C\"), product_type_code (\"Cutlery\", \"Din_Plates\"), product_id (4, 4, 3) | payments : payment_type_code (\"Direct Debit\", \"Direct Debit\", \"Direct Debit\"), customer_id (14, 7, 5), amount_paid_in_full_yn (\"1\", \"0\"), payment_date (\"2018-03-12 23:23:56\", \"2018-03-03 13:39:44\", \"2018-02-27 10:50:39\"), payment_id (3, 10, 6), amount_paid (505.23, 668.4, 464.06), booking_id (6, 15, 13), amount_due (785.73, 259.18, 686.85) | payments_amount_paid : booking_id (6, 15, 13), payment_date (\"2018-03-12 23:23:56\", \"2018-03-03 13:39:44\", \"2018-02-27 10:50:39\"), avg_amount_paid (505.23, 668.4, 464.06), amount_due (785.73, 259.18, 686.85), payment_id (3, 10, 6), total_amount_paid (505.23, 668.4, 464.06), payment_type_code (\"Direct Debit\", \"Direct Debit\", \"Direct Debit\"), customer_id (14, 7, 5), amount_paid_in_full_yn (\"1\", \"0\"), max_amount_paid (505.23, 668.4, 464.06), min_amount_paid (505.23, 668.4, 464.06) | products_booked : booking_id (10, 11, 14), product_id (1, 5, 3), booked_amount (151.68, 123.43, 351.38), booked_count (5, 6, 6), returned_yn (\"1\"), returned_late_yn (\"1\", \"0\") | view_product_availability : status_date (\"2018-03-22 00:16:58\", \"2018-03-22 00:16:58\", \"2018-03-25 10:20:15\"), product_id (2, 5, 2), available_yn (\"1\", \"0\"), booking_id (5, 11)", "schema_without_content": "discount_coupons : date_issued , coupon_amount , coupon_id  | customers : coupon_id , first_name , gender_mf , date_last_hire , date_became_customer , good_or_bad_customer , last_name , customer_id  | bookings : customer_id , amount_outstanding , returned_damaged_yn , booking_start_date , amount_of_refund , booking_id , booking_status_code , amount_payable , booking_end_date , amount_of_discount , count_hired  | products_for_hire : daily_hire_cost , product_description , product_name , product_type_code , product_id  | payments : payment_type_code , customer_id , amount_paid_in_full_yn , payment_date , payment_id , amount_paid , booking_id , amount_due  | payments_amount_paid : booking_id , payment_date , avg_amount_paid , amount_due , payment_id , total_amount_paid , payment_type_code , customer_id , amount_paid_in_full_yn , max_amount_paid , min_amount_paid  | products_booked : booking_id , product_id , booked_amount , booked_count , returned_yn , returned_late_yn  | view_product_availability : status_date , product_id , available_yn , booking_id "}, {"db_id": "products_for_hire", "query": "select avg_amount_due from payments_amount_due", "query_toks": ["SELECT", "avg", "(", "amount_due", ")", "FROM", "payments"], "query_toks_no_value": ["select", "avg", "(", "amount_due", ")", "from", "payments"], "question": "What is the average amount due for all the payments?", "question_toks": ["What", "is", "the", "average", "amount", "due", "for", "all", "the", "payments", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 34, false], null]]]], "union": null, "where": []}, "primary_key": {"payments": "payment_id"}, "orig_query": "select avg(amount_due) from payments", "split_map": {"payments": ["max_amount_due", "min_amount_due", "avg_amount_due", "total_amount_due"]}, "schema_with_content": "discount_coupons : coupon_amount (501.3, 501.3, 607.62), date_issued (\"2018-03-22 01:10:03\", \"2017-07-02 06:49:42\", \"2017-10-22 06:03:39\"), coupon_id (3, 3, 13) | customers : good_or_bad_customer (\"good\", \"bad\"), first_name (\"Bridget\", \"Elinore\", \"Ericka\"), last_name (\"Little\", \"Murphy\", \"Breitenberg\"), gender_mf (\"0\", \"1\"), date_became_customer (\"2017-02-28 14:40:25\", \"2015-05-05 20:29:01\", \"2015-04-06 21:18:37\"), customer_id (1, 15, 3), coupon_id (6, 6, 11), date_last_hire (\"2018-02-19 06:04:01\", \"2018-03-04 21:30:23\", \"2018-03-18 17:35:43\") | bookings : amount_outstanding (38.87, 66.01, 36.79), booking_end_date (\"2018-02-01 09:30:50\", \"2018-03-07 17:39:04\", \"2018-01-01 10:19:20\"), returned_damaged_yn (\"1\", \"0\"), amount_of_discount (39.16, 39.16, 71.45), count_hired (\"843\", \"729\", \"914\"), amount_of_refund (192.02, 130.87, 191.31), amount_payable (322.87, 272.08, 374.59), booking_start_date (\"2017-06-05 17:56:01\", \"2017-04-04 11:02:43\", \"2016-11-06 20:54:26\"), customer_id (7, 3, 3), booking_status_code (\"Provisional\", \"Confirmed\"), booking_id (10, 15, 1) | products_for_hire : product_type_code (\"Cutlery\", \"Din_Plates\"), daily_hire_cost (15.62, 39.58, 26.15), product_description (\"One Hundred Years of Solitude\", \"The Great Gatsby\", \"One Hundred Years of Solitude\"), product_id (4, 2, 1), product_name (\"Book collection C\", \"DVD collection B\", \"DVD collection A\") | payments : amount_paid_in_full_yn (\"1\", \"0\"), amount_paid (305.65, 334.2, 135.7), payment_id (2, 15, 3), customer_id (9, 15, 12), payment_type_code (\"Credit Card\", \"Check\", \"Credit Card\"), booking_id (13, 9, 1), amount_due (369.52, 678.29, 410.1), payment_date (\"2018-03-03 03:07:00\", \"2018-03-03 13:39:44\", \"2018-03-03 13:39:44\") | payments_amount_due : min_amount_due (369.52, 678.29, 410.1), payment_type_code (\"Credit Card\", \"Check\", \"Credit Card\"), payment_id (2, 15, 3), avg_amount_due (369.52, 678.29, 410.1), booking_id (13, 9, 1), amount_paid_in_full_yn (\"1\", \"0\"), total_amount_due (369.52, 678.29, 410.1), payment_date (\"2018-03-03 03:07:00\", \"2018-03-03 13:39:44\", \"2018-03-03 13:39:44\"), max_amount_due (369.52, 678.29, 410.1), customer_id (9, 15, 12), amount_paid (305.65, 334.2, 135.7) | products_booked : booked_amount (189.16, 344.38, 236.13), returned_late_yn (\"1\", \"0\"), returned_yn (\"1\"), product_id (4, 1, 4), booked_count (5, 6, 9), booking_id (15, 15, 11) | view_product_availability : available_yn (\"1\", \"0\"), product_id (2, 3, 5), status_date (\"2018-03-25 10:20:15\", \"2018-03-22 00:16:58\", \"2018-03-22 00:16:58\"), booking_id (5, 11)", "schema_without_content": "discount_coupons : coupon_amount , date_issued , coupon_id  | customers : good_or_bad_customer , first_name , last_name , gender_mf , date_became_customer , customer_id , coupon_id , date_last_hire  | bookings : amount_outstanding , booking_end_date , returned_damaged_yn , amount_of_discount , count_hired , amount_of_refund , amount_payable , booking_start_date , customer_id , booking_status_code , booking_id  | products_for_hire : product_type_code , daily_hire_cost , product_description , product_id , product_name  | payments : amount_paid_in_full_yn , amount_paid , payment_id , customer_id , payment_type_code , booking_id , amount_due , payment_date  | payments_amount_due : min_amount_due , payment_type_code , payment_id , avg_amount_due , booking_id , amount_paid_in_full_yn , total_amount_due , payment_date , max_amount_due , customer_id , amount_paid  | products_booked : booked_amount , returned_late_yn , returned_yn , product_id , booked_count , booking_id  | view_product_availability : available_yn , product_id , status_date , booking_id "}, {"db_id": "products_for_hire", "query": "select max_booked_count, min_booked_count, avg_booked_count from products_booked_booked_count", "query_toks": ["SELECT", "max", "(", "booked_count", ")", ",", "min", "(", "booked_count", ")", ",", "avg", "(", "booked_count", ")", "FROM", "products_booked"], "query_toks_no_value": ["select", "max", "(", "booked_count", ")", ",", "min", "(", "booked_count", ")", ",", "avg", "(", "booked_count", ")", "from", "products_booked"], "question": "What are the maximum, minimum, and average booked count for the products booked?", "question_toks": ["What", "are", "the", "maximum", ",", "minimum", ",", "and", "average", "booked", "count", "for", "the", "products", "booked", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 40, false], null]], [2, [0, [0, 40, false], null]], [5, [0, [0, 40, false], null]]]], "union": null, "where": []}, "primary_key": {"products_booked": "booking_id"}, "orig_query": "select max(booked_count), min(booked_count), avg(booked_count) from products_booked", "split_map": {"products_booked": ["max_booked_count", "min_booked_count", "avg_booked_count", "total_booked_count"]}, "schema_with_content": "discount_coupons : coupon_id (8, 7, 3), coupon_amount (245.36, 686.25, 685.96), date_issued (\"2018-02-20 09:40:56\", \"2018-02-10 21:18:23\", \"2018-02-20 09:40:56\") | customers : gender_mf (\"0\", \"1\"), customer_id (5, 15, 6), last_name (\"Jacobs\", \"Jacobs\", \"Jacobs\"), date_last_hire (\"2018-02-19 06:04:01\", \"2018-02-04 08:56:55\", \"2018-02-25 04:40:15\"), first_name (\"Bridget\", \"German\", \"Jailyn\"), coupon_id (1, 1, 2), date_became_customer (\"2016-05-25 01:12:49\", \"2016-04-20 21:04:35\", \"2016-02-03 16:58:11\"), good_or_bad_customer (\"good\", \"bad\") | bookings : booking_status_code (\"Provisional\", \"Confirmed\"), returned_damaged_yn (\"1\", \"0\"), booking_end_date (\"2017-08-30 04:33:23\", \"2018-01-01 10:19:20\", \"2017-10-11 03:00:15\"), amount_payable (306.26, 281.09, 303.3), amount_of_refund (181.19, 145.63, 181.19), amount_outstanding (22.97, 73.88, 64.01), booking_id (5, 11, 5), count_hired (\"729\", \"331\", \"152\"), amount_of_discount (24.19, 45.06, 26.37), booking_start_date (\"2016-04-25 11:04:18\", \"2017-04-04 11:02:43\", \"2016-04-25 11:04:18\"), customer_id (15, 10, 3) | products_for_hire : product_type_code (\"Cutlery\", \"Din_Plates\"), daily_hire_cost (18.5, 15.62, 39.73), product_id (5, 2, 2), product_description (\"One Hundred Years of Solitude\", \"Anna Karenina\", \"Anna Karenina\"), product_name (\"DVD collection B\", \"Book collection A\", \"Book collection C\") | payments : booking_id (3, 14, 5), payment_date (\"2018-03-22 02:28:11\", \"2018-03-22 15:00:23\", \"2018-03-23 20:36:04\"), payment_type_code (\"Direct Debit\", \"Direct Debit\", \"Direct Debit\"), customer_id (10, 1, 11), amount_due (678.29, 482.26, 410.1), amount_paid (307.14, 668.4, 175.54), amount_paid_in_full_yn (\"1\", \"0\"), payment_id (15, 9, 7) | products_booked : booked_count (4, 3, 1), booked_amount (351.38, 110.2, 398.68), returned_yn (\"1\"), product_id (3, 2, 2), returned_late_yn (\"1\", \"0\"), booking_id (10, 4, 4) | products_booked_booked_count : max_booked_count (4, 3, 1), product_id (3, 2, 2), min_booked_count (4, 3, 1), avg_booked_count (4, 3, 1), returned_late_yn (\"1\", \"0\"), returned_yn (\"1\"), total_booked_count (4, 3, 1), booking_id (10, 4, 4), booked_amount (351.38, 110.2, 398.68) | view_product_availability : status_date (\"2018-03-18 05:25:55\", \"2018-03-22 00:16:58\", \"2018-03-25 10:20:15\"), product_id (5, 5, 3), available_yn (\"1\", \"0\"), booking_id (5, 11)", "schema_without_content": "discount_coupons : coupon_id , coupon_amount , date_issued  | customers : gender_mf , customer_id , last_name , date_last_hire , first_name , coupon_id , date_became_customer , good_or_bad_customer  | bookings : booking_status_code , returned_damaged_yn , booking_end_date , amount_payable , amount_of_refund , amount_outstanding , booking_id , count_hired , amount_of_discount , booking_start_date , customer_id  | products_for_hire : product_type_code , daily_hire_cost , product_id , product_description , product_name  | payments : booking_id , payment_date , payment_type_code , customer_id , amount_due , amount_paid , amount_paid_in_full_yn , payment_id  | products_booked : booked_count , booked_amount , returned_yn , product_id , returned_late_yn , booking_id  | products_booked_booked_count : max_booked_count , product_id , min_booked_count , avg_booked_count , returned_late_yn , returned_yn , total_booked_count , booking_id , booked_amount  | view_product_availability : status_date , product_id , available_yn , booking_id "}, {"db_id": "gas_company", "query": "select min_market_value, max_market_value, avg_market_value from company_market_value", "query_toks": ["SELECT", "min", "(", "market_value", ")", ",", "max", "(", "market_value", ")", ",", "avg", "(", "market_value", ")", "FROM", "company"], "query_toks_no_value": ["select", "min", "(", "market_value", ")", ",", "max", "(", "market_value", ")", ",", "avg", "(", "market_value", ")", "from", "company"], "question": "Show minimum, maximum, and average market value for all companies.", "question_toks": ["Show", "minimum", ",", "maximum", ",", "and", "average", "market", "value", "for", "all", "companies", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 9, false], null]], [1, [0, [0, 9, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"company": "company_id"}, "orig_query": "select min(market_value), max(market_value), avg(market_value) from company", "split_map": {"company": ["max_market_value", "min_market_value", "avg_market_value", "total_market_value"]}, "schema_with_content": "company : headquarters (\"China\", \"Netherlands\", \"Netherlands\"), sales_billion (143.7, 87.6, 147.3), rank (3, 9, 4), company_id (10, 1, 3), company (\"PetroChina\", \"HSBC\", \"General Electric\"), market_value (180.0, 213.7, 202.2), assets_billion (331.1, 717.2, 2039.1), profits_billion (16.2, 20.6, 41.1), main_industry (\"Oil and gas\", \"Conglomerate\", \"Banking\") | company_market_value : total_market_value (180.0, 213.7, 202.2), sales_billion (143.7, 87.6, 147.3), min_market_value (180.0, 213.7, 202.2), headquarters (\"China\", \"Netherlands\", \"Netherlands\"), avg_market_value (180.0, 213.7, 202.2), profits_billion (16.2, 20.6, 41.1), main_industry (\"Oil and gas\", \"Conglomerate\", \"Banking\"), rank (3, 9, 4), company_id (10, 1, 3), assets_billion (331.1, 717.2, 2039.1), company (\"PetroChina\", \"HSBC\", \"General Electric\"), max_market_value (180.0, 213.7, 202.2) | gas_station : manager_name (\"Bryan Taylor\", \"Bryan Taylor\", \"Tom Whit\"), vice_manager_name (\"James Colin \", \"Steve Parsons\", \"JameMarloe\"), station_id (1, 4, 3), representative_name (\"Chris Pyatt\", \"Dave Edwards Roger \", \"Dave Edwards Roger \"), location (\"Maindy Hill\", \"Hennry Hill\", \"Herne Hill\"), open_year (2006, 1999, 2007) | station_company : rank_of_the_year (9, 3, 3), company_id (3, 1, 6), station_id (4, 11, 6)", "schema_without_content": "company : headquarters , sales_billion , rank , company_id , company , market_value , assets_billion , profits_billion , main_industry  | company_market_value : total_market_value , sales_billion , min_market_value , headquarters , avg_market_value , profits_billion , main_industry , rank , company_id , assets_billion , company , max_market_value  | gas_station : manager_name , vice_manager_name , station_id , representative_name , location , open_year  | station_company : rank_of_the_year , company_id , station_id "}, {"db_id": "gas_company", "query": "select min_market_value, max_market_value, avg_market_value from company_market_value", "query_toks": ["SELECT", "min", "(", "market_value", ")", ",", "max", "(", "market_value", ")", ",", "avg", "(", "market_value", ")", "FROM", "company"], "query_toks_no_value": ["select", "min", "(", "market_value", ")", ",", "max", "(", "market_value", ")", ",", "avg", "(", "market_value", ")", "from", "company"], "question": "What is the minimum, maximum, and average market value for every company?", "question_toks": ["What", "is", "the", "minimum", ",", "maximum", ",", "and", "average", "market", "value", "for", "every", "company", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 9, false], null]], [1, [0, [0, 9, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"company": "company_id"}, "orig_query": "select min(market_value), max(market_value), avg(market_value) from company", "split_map": {"company": ["max_market_value", "min_market_value", "avg_market_value", "total_market_value"]}, "schema_with_content": "company : company (\"Industrial and Commercial Bank of China\", \"BP\", \"Royal Dutch Shell\"), headquarters (\"China\", \"USA\", \"Netherlands\"), rank (3, 1, 3), market_value (213.7, 180.0, 213.7), assets_billion (340.5, 304.7, 319.4), company_id (5, 6, 10), profits_billion (16.2, 16.2, 10.3), main_industry (\"Oil and gas\", \"Conglomerate\", \"Banking\"), sales_billion (145.9, 87.6, 470.2) | company_market_value : avg_market_value (213.7, 180.0, 213.7), company_id (5, 6, 10), main_industry (\"Oil and gas\", \"Conglomerate\", \"Banking\"), assets_billion (340.5, 304.7, 319.4), rank (3, 1, 3), profits_billion (16.2, 16.2, 10.3), max_market_value (213.7, 180.0, 213.7), min_market_value (213.7, 180.0, 213.7), total_market_value (213.7, 180.0, 213.7), company (\"Industrial and Commercial Bank of China\", \"BP\", \"Royal Dutch Shell\"), headquarters (\"China\", \"USA\", \"Netherlands\"), sales_billion (145.9, 87.6, 470.2) | gas_station : location (\"Maindy Hill\", \"Reading\", \"Newport Rd\"), vice_manager_name (\"Russell Brown\", \"James Holland-Leader\", \"Russell Brown\"), open_year (2004, 2008, 2000), representative_name (\"Rob Jefferies \", \"Ray Hughes\", \"Dave Edwards Roger \"), station_id (5, 5, 4), manager_name (\"Simon Cope Derek Marloe\", \"Tom Whit\", \"Tom Whit\") | station_company : rank_of_the_year (4, 13, 4), company_id (6, 1, 6), station_id (7, 4, 10)", "schema_without_content": "company : company , headquarters , rank , market_value , assets_billion , company_id , profits_billion , main_industry , sales_billion  | company_market_value : avg_market_value , company_id , main_industry , assets_billion , rank , profits_billion , max_market_value , min_market_value , total_market_value , company , headquarters , sales_billion  | gas_station : location , vice_manager_name , open_year , representative_name , station_id , manager_name  | station_company : rank_of_the_year , company_id , station_id "}, {"db_id": "gas_company", "query": "select main_industry, total_market_value from company_market_value group by main_industry", "query_toks": ["SELECT", "main_industry", ",", "sum", "(", "market_value", ")", "FROM", "company", "GROUP", "BY", "main_industry"], "query_toks_no_value": ["select", "main_industry", ",", "sum", "(", "market_value", ")", "from", "company", "group", "by", "main_industry"], "question": "Show all main industry and total market value in each industry.", "question_toks": ["Show", "all", "main", "industry", "and", "total", "market", "value", "in", "each", "industry", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [4, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"company": "company_id"}, "orig_query": "select main_industry, sum(market_value) from company group by main_industry", "split_map": {"company": ["max_market_value", "min_market_value", "avg_market_value", "total_market_value"]}, "schema_with_content": "company : headquarters (\"USA\", \"Netherlands\", \"UK\"), rank (7, 10, 11), sales_billion (87.6, 470.2, 82.6), market_value (213.7, 294.7, 237.4), company_id (5, 4, 4), profits_billion (30.9, 10.3, 14.2), assets_billion (1313.9, 717.2, 331.1), company (\"HSBC\", \"Petrobras\", \"Berkshire Hathaway\"), main_industry (\"Oil and gas\", \"Conglomerate\", \"Banking\") | company_market_value : company (\"HSBC\", \"Petrobras\", \"Berkshire Hathaway\"), profits_billion (30.9, 10.3, 14.2), sales_billion (87.6, 470.2, 82.6), total_market_value (213.7, 294.7, 237.4), rank (7, 10, 11), avg_market_value (213.7, 294.7, 237.4), headquarters (\"USA\", \"Netherlands\", \"UK\"), assets_billion (1313.9, 717.2, 331.1), main_industry (\"Oil and gas\", \"Conglomerate\", \"Banking\"), company_id (5, 4, 4), max_market_value (213.7, 294.7, 237.4), min_market_value (213.7, 294.7, 237.4) | gas_station : station_id (9, 8, 3), location (\"Channel Hill\", \"Maindy Hill\", \"Jane Ave\"), vice_manager_name (\"James Colin \", \"Simon Gaywood\", \"Martin Garnham\"), representative_name (\"Courtney Rowe\", \"Courtney Rowe\", \"Tim Read\"), open_year (2003, 2002, 2006), manager_name (\"Jon Rowe\", \"Tony Bristow\", \"SimonMarloe\") | station_company : station_id (6, 7, 6), company_id (10, 9, 3), rank_of_the_year (9, 3, 4)", "schema_without_content": "company : headquarters , rank , sales_billion , market_value , company_id , profits_billion , assets_billion , company , main_industry  | company_market_value : company , profits_billion , sales_billion , total_market_value , rank , avg_market_value , headquarters , assets_billion , main_industry , company_id , max_market_value , min_market_value  | gas_station : station_id , location , vice_manager_name , representative_name , open_year , manager_name  | station_company : station_id , company_id , rank_of_the_year "}, {"db_id": "gas_company", "query": "select main_industry, total_market_value from company_market_value group by main_industry", "query_toks": ["SELECT", "main_industry", ",", "sum", "(", "market_value", ")", "FROM", "company", "GROUP", "BY", "main_industry"], "query_toks_no_value": ["select", "main_industry", ",", "sum", "(", "market_value", ")", "from", "company", "group", "by", "main_industry"], "question": "What are the main indstries and total market value for each industry?", "question_toks": ["What", "are", "the", "main", "indstries", "and", "total", "market", "value", "for", "each", "industry", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [4, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"company": "company_id"}, "orig_query": "select main_industry, sum(market_value) from company group by main_industry", "split_map": {"company": ["max_market_value", "min_market_value", "avg_market_value", "total_market_value"]}, "schema_with_content": "company : market_value (213.7, 147.4, 147.4), profits_billion (25.7, 25.7, 14.2), company (\"Royal Dutch Shell\", \"General Electric\", \"Berkshire Hathaway\"), rank (3, 7, 5), sales_billion (102.0, 433.5, 375.5), main_industry (\"Oil and gas\", \"Conglomerate\", \"Banking\"), company_id (9, 6, 8), assets_billion (717.2, 292.5, 340.5), headquarters (\"Brazil\", \"Netherlands\", \"Brazil\") | company_market_value : max_market_value (213.7, 147.4, 147.4), rank (3, 7, 5), total_market_value (213.7, 147.4, 147.4), main_industry (\"Oil and gas\", \"Conglomerate\", \"Banking\"), min_market_value (213.7, 147.4, 147.4), company (\"Royal Dutch Shell\", \"General Electric\", \"Berkshire Hathaway\"), headquarters (\"Brazil\", \"Netherlands\", \"Brazil\"), assets_billion (717.2, 292.5, 340.5), company_id (9, 6, 8), profits_billion (25.7, 25.7, 14.2), avg_market_value (213.7, 147.4, 147.4), sales_billion (102.0, 433.5, 375.5) | gas_station : station_id (7, 6, 7), representative_name (\"Rob Jefferies \", \"Dave Edwards Roger \", \"Simon Gaywood\"), location (\"Hennry Hill\", \"Herne Ave\", \"Channel Hill\"), manager_name (\"Colin Denman\", \"BryanDenman\", \"BryanDenman\"), vice_manager_name (\"Martin Freeman\", \"Russell Brown\", \"Martin Freeman\"), open_year (2008, 2000, 2000) | station_company : station_id (1, 11, 6), company_id (6, 9, 3), rank_of_the_year (13, 2, 1)", "schema_without_content": "company : market_value , profits_billion , company , rank , sales_billion , main_industry , company_id , assets_billion , headquarters  | company_market_value : max_market_value , rank , total_market_value , main_industry , min_market_value , company , headquarters , assets_billion , company_id , profits_billion , avg_market_value , sales_billion  | gas_station : station_id , representative_name , location , manager_name , vice_manager_name , open_year  | station_company : station_id , company_id , rank_of_the_year "}, {"db_id": "entrepreneur", "query": "select avg_money_requested from entrepreneur_money_requested", "query_toks": ["SELECT", "avg", "(", "Money_Requested", ")", "FROM", "entrepreneur"], "query_toks_no_value": ["select", "avg", "(", "money_requested", ")", "from", "entrepreneur"], "question": "What is the average money requested by all entrepreneurs?", "question_toks": ["What", "is", "the", "average", "money", "requested", "by", "all", "entrepreneurs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, "primary_key": {"entrepreneur": "entrepreneur_id"}, "orig_query": "select avg(money_requested) from entrepreneur", "split_map": {"entrepreneur": ["max_money_requested", "min_money_requested", "avg_money_requested", "total_money_requested"]}, "schema_with_content": "entrepreneur : people_id (6, 5, 2), company (\"Le Beanock\", \"Mycorrhizal Systems\", \"IV Cam\"), money_requested (54000.0, 54000.0, 54000.0), entrepreneur_id (4, 2, 6), investor (\"Simon Woodroffe\", \"Simon Woodroffe\", \"Simon Woodroffe\") | entrepreneur_money_requested : max_money_requested (54000.0, 54000.0, 54000.0), min_money_requested (54000.0, 54000.0, 54000.0), total_money_requested (54000.0, 54000.0, 54000.0), entrepreneur_id (4, 2, 6), company (\"Le Beanock\", \"Mycorrhizal Systems\", \"IV Cam\"), people_id (6, 5, 2), avg_money_requested (54000.0, 54000.0, 54000.0), investor (\"Simon Woodroffe\", \"Simon Woodroffe\", \"Simon Woodroffe\") | people : name (\"Marco Gerini\", \"Goran Fiorentini\", \"Alberto Angelini\"), weight (45.0, 80.0, 67.0), people_id (6, 8, 7), height (1.95, 1.95, 1.83), date_of_birth (\"1977-04-28\", \"1972-02-06\", \"1977-04-28\")", "schema_without_content": "entrepreneur : people_id , company , money_requested , entrepreneur_id , investor  | entrepreneur_money_requested : max_money_requested , min_money_requested , total_money_requested , entrepreneur_id , company , people_id , avg_money_requested , investor  | people : name , weight , people_id , height , date_of_birth "}, {"db_id": "entrepreneur", "query": "select avg_money_requested from entrepreneur_money_requested", "query_toks": ["SELECT", "avg", "(", "Money_Requested", ")", "FROM", "entrepreneur"], "query_toks_no_value": ["select", "avg", "(", "money_requested", ")", "from", "entrepreneur"], "question": "Return the average money requested across all entrepreneurs.", "question_toks": ["Return", "the", "average", "money", "requested", "across", "all", "entrepreneurs", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, "primary_key": {"entrepreneur": "entrepreneur_id"}, "orig_query": "select avg(money_requested) from entrepreneur", "split_map": {"entrepreneur": ["max_money_requested", "min_money_requested", "avg_money_requested", "total_money_requested"]}, "schema_with_content": "entrepreneur : investor (\"Simon Woodroffe\", \"Duncan Bannatyne\", \"Simon Woodroffe\"), company (\"Le Beanock\", \"IV Cam\", \"Grails Ltd\"), entrepreneur_id (1, 6, 3), people_id (6, 6, 6), money_requested (110000.0, 120000.0, 120000.0) | entrepreneur_money_requested : entrepreneur_id (1, 6, 3), max_money_requested (110000.0, 120000.0, 120000.0), min_money_requested (110000.0, 120000.0, 120000.0), total_money_requested (110000.0, 120000.0, 120000.0), people_id (6, 6, 6), avg_money_requested (110000.0, 120000.0, 120000.0), company (\"Le Beanock\", \"IV Cam\", \"Grails Ltd\"), investor (\"Simon Woodroffe\", \"Duncan Bannatyne\", \"Simon Woodroffe\") | people : weight (58.0, 89.0, 45.0), people_id (3, 6, 5), name (\"Alberto Angelini\", \"Alberto Angelini\", \"Marco Gerini\"), date_of_birth (\"1975-08-27\", \"1975-08-27\", \"1977-04-28\"), height (1.95, 1.82, 1.9)", "schema_without_content": "entrepreneur : investor , company , entrepreneur_id , people_id , money_requested  | entrepreneur_money_requested : entrepreneur_id , max_money_requested , min_money_requested , total_money_requested , people_id , avg_money_requested , company , investor  | people : weight , people_id , name , date_of_birth , height "}, {"db_id": "perpetrator", "query": "select avg_injured from perpetrator_injured", "query_toks": ["SELECT", "avg", "(", "Injured", ")", "FROM", "perpetrator"], "query_toks_no_value": ["select", "avg", "(", "injured", ")", "from", "perpetrator"], "question": "What is the average number of people injured by all perpetrators?", "question_toks": ["What", "is", "the", "average", "number", "of", "people", "injured", "by", "all", "perpetrators", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"perpetrator": "perpetrator_id"}, "orig_query": "select avg(injured) from perpetrator", "split_map": {"perpetrator": ["max_injured", "min_injured", "avg_injured", "total_injured"]}, "schema_with_content": "perpetrator : injured (37, 80, 37), location (\"Uiryeong\", \"Kaio\", \"Kaio\"), date (\"05.21 May 21\", \"09.20 Sep. 20\", \"04.00 April\"), people_id (8, 6, 8), year (1938.0, 1994.0, 1950.0), country (\"South Korea\", \"China\", \"India\"), killed (30, 30, 30), perpetrator_id (3, 1, 2) | perpetrator_injured : killed (30, 30, 30), avg_injured (37, 80, 37), people_id (8, 6, 8), max_injured (37, 80, 37), date (\"05.21 May 21\", \"09.20 Sep. 20\", \"04.00 April\"), total_injured (37, 80, 37), perpetrator_id (3, 1, 2), country (\"South Korea\", \"China\", \"India\"), min_injured (37, 80, 37), year (1938.0, 1994.0, 1950.0), location (\"Uiryeong\", \"Kaio\", \"Kaio\") | people : height (6.6, 6.8, 6.8), weight (215.0, 215.0, 205.0), people_id (1, 5, 11), home town (\"San Antonio, TX\", \"Baton Rouge, LA\", \"Denton, TX\"), name (\"Ovie Dotson\", \"Mike Murphy\", \"Mike Murphy\")", "schema_without_content": "perpetrator : injured , location , date , people_id , year , country , killed , perpetrator_id  | perpetrator_injured : killed , avg_injured , people_id , max_injured , date , total_injured , perpetrator_id , country , min_injured , year , location  | people : height , weight , people_id , home town , name "}, {"db_id": "perpetrator", "query": "select max_year from perpetrator_year", "query_toks": ["SELECT", "max", "(", "YEAR", ")", "FROM", "perpetrator", ";"], "query_toks_no_value": ["select", "max", "(", "year", ")", "from", "perpetrator"], "question": "In which year did the most recent crime happen?", "question_toks": ["In", "which", "year", "did", "the", "most", "recent", "crime", "happen", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 4, false], null]]]], "union": null, "where": []}, "primary_key": {"perpetrator": "perpetrator_id"}, "orig_query": "select max(year) from perpetrator", "split_map": {"perpetrator": ["max_year", "min_year", "avg_year", "total_year"]}, "schema_with_content": "perpetrator : year (1938.0, 1994.0, 1994.0), injured (16, 80, 37), killed (56, 22, 22), date (\"09.20 Sep. 20\", \"11.18 Nov. 18\", \"04.00 April\"), country (\"China\", \"Japan\", \"South Korea\"), people_id (3, 8, 3), location (\"Kaio\", \"Zhaodong\", \"Uiryeong\"), perpetrator_id (5, 3, 3) | perpetrator_year : date (\"09.20 Sep. 20\", \"11.18 Nov. 18\", \"04.00 April\"), perpetrator_id (5, 3, 3), total_year (1938.0, 1994.0, 1994.0), people_id (3, 8, 3), max_year (1938.0, 1994.0, 1994.0), avg_year (1938.0, 1994.0, 1994.0), min_year (1938.0, 1994.0, 1994.0), location (\"Kaio\", \"Zhaodong\", \"Uiryeong\"), country (\"China\", \"Japan\", \"South Korea\"), killed (56, 22, 22), injured (16, 80, 37) | people : name (\"Gary Goodner\", \"John Moore\", \"Tyrone Brayan\"), people_id (5, 3, 5), height (6.7, 6.4, 6.6), home town (\"Indianapolis, IN\", \"Austin, TX\", \"Placentia, CA\"), weight (190.0, 190.0, 185.0)", "schema_without_content": "perpetrator : year , injured , killed , date , country , people_id , location , perpetrator_id  | perpetrator_year : date , perpetrator_id , total_year , people_id , max_year , avg_year , min_year , location , country , killed , injured  | people : name , people_id , height , home town , weight "}, {"db_id": "csu_1", "query": "select avg_campusfee from csu_fees_campusfee where year = 1996", "query_toks": ["SELECT", "avg", "(", "campusfee", ")", "FROM", "csu_fees", "WHERE", "YEAR", "=", "1996"], "query_toks_no_value": ["select", "avg", "(", "campusfee", ")", "from", "csu_fees", "where", "year", "=", "value"], "question": "Find the average fee on a CSU campus in 1996", "question_toks": ["Find", "the", "average", "fee", "on", "a", "CSU", "campus", "in", "1996"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], 1996.0, null]]}, "primary_key": {"csu_fees": "campus"}, "orig_query": "select avg(campusfee) from csu_fees where year = 1996", "split_map": {"csu_fees": ["max_campusfee", "min_campusfee", "avg_campusfee", "total_campusfee"]}, "schema_with_content": "campuses : campus (\"Humboldt State University\", \"California  Maritime Academy\", \"California State University-Northridge\"), county (\"Sonoma\", \"Santa Clara\", \"San Bernardino\"), id (16, 20, 8), year (1958, 2002, 1960), location (\"Turlock\", \"Vallejo\", \"Hayward\") | csu_fees : campus (6, 2, 18), year (1996, 2003), campusfee (1951, 1751, 2110) | csu_fees_campusfee : max_campusfee (1951, 1751, 2110), avg_campusfee (1951, 1751, 2110), year (1996, 2003), campus (6, 2, 18), total_campusfee (1951, 1751, 2110), min_campusfee (1951, 1751, 2110) | degrees : year (2002, 2002, 1997), degrees (3734, 3207, 91), campus (13, 8, 8) | discipline_enrollments : graduate (36, 1288, 119), discipline (5, 1, 10), year (2004), campus (1, 17, 5), undergraduate (674, 355, 152) | enrollments : fte_ay (4840, 7255, 8187), totalenrollment_ay (21257, 637, 2085), year (1936, 2001, 1962), campus (6, 4, 3) | faculty : campus (4, 8, 1), faculty (1173.3, 694.6, 151.4), year (2002, 2003, 2004)", "schema_without_content": "campuses : campus , county , id , year , location  | csu_fees : campus , year , campusfee  | csu_fees_campusfee : max_campusfee , avg_campusfee , year , campus , total_campusfee , min_campusfee  | degrees : year , degrees , campus  | discipline_enrollments : graduate , discipline , year , campus , undergraduate  | enrollments : fte_ay , totalenrollment_ay , year , campus  | faculty : campus , faculty , year "}, {"db_id": "csu_1", "query": "select avg_campusfee from csu_fees_campusfee where year = 1996", "query_toks": ["SELECT", "avg", "(", "campusfee", ")", "FROM", "csu_fees", "WHERE", "YEAR", "=", "1996"], "query_toks_no_value": ["select", "avg", "(", "campusfee", ")", "from", "csu_fees", "where", "year", "=", "value"], "question": "What is the average fee for a CSU campus in the year of 1996?", "question_toks": ["What", "is", "the", "average", "fee", "for", "a", "CSU", "campus", "in", "the", "year", "of", "1996", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], 1996.0, null]]}, "primary_key": {"csu_fees": "campus"}, "orig_query": "select avg(campusfee) from csu_fees where year = 1996", "split_map": {"csu_fees": ["max_campusfee", "min_campusfee", "avg_campusfee", "total_campusfee"]}, "schema_with_content": "campuses : year (1958, 1960, 1994), campus (\"California State University-Northridge\", \"California State University-Bakersfield\", \"California State University-Stanislaus\"), id (21, 6, 21), location (\"Camarillo\", \"Sacramento\", \"Sacramento\"), county (\"Ventura\", \"Alameida\", \"Solano\") | csu_fees : campusfee (1950, 1751, 1903), year (1996, 2003), campus (18, 19, 2) | csu_fees_campusfee : campus (18, 19, 2), total_campusfee (1950, 1751, 1903), avg_campusfee (1950, 1751, 1903), max_campusfee (1950, 1751, 1903), min_campusfee (1950, 1751, 1903), year (1996, 2003) | degrees : degrees (2373, 1446, 2331), campus (6, 8, 23), year (2003, 1994, 2003) | discipline_enrollments : undergraduate (429, 548, 457), year (2004), campus (6, 18, 6), discipline (15, 2, 4), graduate (27, 69, 301) | enrollments : campus (19, 18, 13), year (1952, 1958, 1998), fte_ay (13909, 8315, 19337), totalenrollment_ay (404, 26590, 20191) | faculty : faculty (1083.3, 694.6, 809.1), campus (14, 17, 13), year (2002, 2003, 2004)", "schema_without_content": "campuses : year , campus , id , location , county  | csu_fees : campusfee , year , campus  | csu_fees_campusfee : campus , total_campusfee , avg_campusfee , max_campusfee , min_campusfee , year  | degrees : degrees , campus , year  | discipline_enrollments : undergraduate , year , campus , discipline , graduate  | enrollments : campus , year , fte_ay , totalenrollment_ay  | faculty : faculty , campus , year "}, {"db_id": "csu_1", "query": "select avg_campusfee from csu_fees_campusfee where year = 2005", "query_toks": ["SELECT", "avg", "(", "campusfee", ")", "FROM", "csu_fees", "WHERE", "YEAR", "=", "2005"], "query_toks_no_value": ["select", "avg", "(", "campusfee", ")", "from", "csu_fees", "where", "year", "=", "value"], "question": "What is the average fee on a CSU campus in 2005?", "question_toks": ["What", "is", "the", "average", "fee", "on", "a", "CSU", "campus", "in", "2005", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], 2005.0, null]]}, "primary_key": {"csu_fees": "campus"}, "orig_query": "select avg(campusfee) from csu_fees where year = 2005", "split_map": {"csu_fees": ["max_campusfee", "min_campusfee", "avg_campusfee", "total_campusfee"]}, "schema_with_content": "campuses : campus (\"California State Polytechnic University-Pomona\", \"San Jose State University\", \"California State University-Los Angeles\"), year (1899, 1938, 1958), id (22, 12, 11), county (\"Monterey\", \"Butte\", \"San Bernardino\"), location (\"Northridge\", \"Arcata\", \"Los Angeles\") | csu_fees : campus (22, 13, 19), campusfee (1884, 1884, 2042), year (1996, 2003) | csu_fees_campusfee : year (1996, 2003), max_campusfee (1884, 1884, 2042), avg_campusfee (1884, 1884, 2042), campus (22, 13, 19), min_campusfee (1884, 1884, 2042), total_campusfee (1884, 1884, 2042) | degrees : campus (4, 19, 22), year (1991, 1999, 2000), degrees (1140, 4352, 2257) | discipline_enrollments : year (2004), graduate (44, 127, 928), undergraduate (1100, 65, 1013), campus (21, 15, 6), discipline (10, 1, 2) | enrollments : year (2000, 1983, 1988), totalenrollment_ay (24792, 5844, 6207), campus (14, 22, 4), fte_ay (16843, 3075, 20884) | faculty : faculty (742.8, 156.4, 1027.6), campus (1, 14, 18), year (2002, 2003, 2004)", "schema_without_content": "campuses : campus , year , id , county , location  | csu_fees : campus , campusfee , year  | csu_fees_campusfee : year , max_campusfee , avg_campusfee , campus , min_campusfee , total_campusfee  | degrees : campus , year , degrees  | discipline_enrollments : year , graduate , undergraduate , campus , discipline  | enrollments : year , totalenrollment_ay , campus , fte_ay  | faculty : faculty , campus , year "}, {"db_id": "csu_1", "query": "select avg_campusfee from csu_fees_campusfee where year = 2005", "query_toks": ["SELECT", "avg", "(", "campusfee", ")", "FROM", "csu_fees", "WHERE", "YEAR", "=", "2005"], "query_toks_no_value": ["select", "avg", "(", "campusfee", ")", "from", "csu_fees", "where", "year", "=", "value"], "question": "What is the average fee for a CSU campus in the year of 2005?", "question_toks": ["What", "is", "the", "average", "fee", "for", "a", "CSU", "campus", "in", "the", "year", "of", "2005", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], 2005.0, null]]}, "primary_key": {"csu_fees": "campus"}, "orig_query": "select avg(campusfee) from csu_fees where year = 2005", "split_map": {"csu_fees": ["max_campusfee", "min_campusfee", "avg_campusfee", "total_campusfee"]}, "schema_with_content": "campuses : location (\"San Francisco\", \"San Luis Obispo\", \"San Bernardino\"), id (8, 23, 16), county (\"Kern\", \"San Francisco\", \"Santa Clara\"), campus (\"California State University-Stanislaus\", \"California State University-Dominguez Hills\", \"Sonoma State University\"), year (1957, 1899, 1913) | csu_fees : campusfee (1751, 1915, 1818), campus (5, 5, 9), year (1996, 2003) | csu_fees_campusfee : max_campusfee (1751, 1915, 1818), avg_campusfee (1751, 1915, 1818), campus (5, 5, 9), min_campusfee (1751, 1915, 1818), year (1996, 2003), total_campusfee (1751, 1915, 1818) | degrees : degrees (1376, 2861, 816), year (1991, 1991, 1994), campus (7, 19, 23) | discipline_enrollments : graduate (741, 146, 30), year (2004), undergraduate (1743, 3041, 6986), discipline (1, 2, 11), campus (17, 4, 12) | enrollments : year (2002, 1938, 1985), fte_ay (19590, 3117, 6422), campus (11, 8, 16), totalenrollment_ay (8424, 4914, 2471) | faculty : campus (11, 14, 3), year (2002, 2003, 2004), faculty (290.4, 742.8, 78.1)", "schema_without_content": "campuses : location , id , county , campus , year  | csu_fees : campusfee , campus , year  | csu_fees_campusfee : max_campusfee , avg_campusfee , campus , min_campusfee , year , total_campusfee  | degrees : degrees , year , campus  | discipline_enrollments : graduate , year , undergraduate , discipline , campus  | enrollments : year , fte_ay , campus , totalenrollment_ay  | faculty : campus , year , faculty "}, {"db_id": "candidate_poll", "query": "select avg_height, (weight)from people_height where sex = 'M'", "query_toks": ["SELECT", "avg", "(", "height", ")", ",", "avg", "(", "weight", ")", "FROM", "people", "WHERE", "sex", "=", "'M", "'"], "query_toks_no_value": ["select", "avg", "(", "height", ")", ",", "avg", "(", "weight", ")", "from", "people", "where", "sex", "=", "value"], "question": "Find the average height and weight for all males (sex is M).", "question_toks": ["Find", "the", "average", "height", "and", "weight", "for", "all", "males", "(", "sex", "is", "M", ")", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 13, false], null]], [5, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"M\"", null]]}, "primary_key": {"people": "people_id"}, "orig_query": "select avg(height), avg(weight) from people where sex = 'M'", "split_map": {"people": ["max_height", "min_height", "avg_height", "total_height"]}, "schema_with_content": "candidate : oppose_rate (0.32, 0.32, 0.32), support_rate (0.25, 0.33, 0.33), consider_rate (0.27, 0.34, 0.42), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), candidate_id (1, 6, 1), unsure_rate (0.9, 0.4, 0.3), date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), people_id (9, 7, 4) | people : weight (89.0, 89.0, 89.0), height (194.0, 197.0, 202.0), date_of_birth (\"05.05.1972\", \"06.10.1976\", \"05.05.1972\"), people_id (7, 9, 4), name (\"Dominique Daquin\", \"Philippe Bar\u00c3\u00a7a-Cysique\", \"St\u00c3\u00a9phane Antiga\"), sex (\"M\", \"F\") | people_height : max_height (194.0, 197.0, 202.0), name (\"Dominique Daquin\", \"Philippe Bar\u00c3\u00a7a-Cysique\", \"St\u00c3\u00a9phane Antiga\"), min_height (194.0, 197.0, 202.0), avg_height (194.0, 197.0, 202.0), date_of_birth (\"05.05.1972\", \"06.10.1976\", \"05.05.1972\"), total_height (194.0, 197.0, 202.0), sex (\"M\", \"F\"), people_id (7, 9, 4), weight (89.0, 89.0, 89.0)", "schema_without_content": "candidate : oppose_rate , support_rate , consider_rate , poll_source , candidate_id , unsure_rate , date , people_id  | people : weight , height , date_of_birth , people_id , name , sex  | people_height : max_height , name , min_height , avg_height , date_of_birth , total_height , sex , people_id , weight "}, {"db_id": "candidate_poll", "query": "select (height), avg_weight from people_weight where sex = 'M'", "query_toks": ["SELECT", "avg", "(", "height", ")", ",", "avg", "(", "weight", ")", "FROM", "people", "WHERE", "sex", "=", "'M", "'"], "query_toks_no_value": ["select", "avg", "(", "height", ")", ",", "avg", "(", "weight", ")", "from", "people", "where", "sex", "=", "value"], "question": "Find the average height and weight for all males (sex is M).", "question_toks": ["Find", "the", "average", "height", "and", "weight", "for", "all", "males", "(", "sex", "is", "M", ")", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 13, false], null]], [5, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"M\"", null]]}, "primary_key": {"people": "people_id"}, "orig_query": "select avg(height), avg(weight) from people where sex = 'M'", "split_map": {"people": ["max_weight", "min_weight", "avg_weight", "total_weight"]}, "schema_with_content": "candidate : oppose_rate (0.45, 0.32, 0.44), unsure_rate (0.9, 0.3, 0.2), people_id (7, 7, 9), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), support_rate (0.18, 0.24, 0.25), candidate_id (3, 1, 3), consider_rate (0.34, 0.2, 0.3) | people : people_id (6, 6, 1), name (\"Frantz Granvorka\", \"Dominique Daquin\", \"Frantz Granvorka\"), date_of_birth (\"03.02.1976\", \"10.03.1976\", \"06.10.1976\"), height (188.0, 197.0, 197.0), weight (94.0, 83.0, 92.0), sex (\"M\", \"F\") | people_weight : people_id (6, 6, 1), sex (\"M\", \"F\"), total_weight (94.0, 83.0, 92.0), name (\"Frantz Granvorka\", \"Dominique Daquin\", \"Frantz Granvorka\"), min_weight (94.0, 83.0, 92.0), avg_weight (94.0, 83.0, 92.0), date_of_birth (\"03.02.1976\", \"10.03.1976\", \"06.10.1976\"), height (188.0, 197.0, 197.0), max_weight (94.0, 83.0, 92.0)", "schema_without_content": "candidate : oppose_rate , unsure_rate , people_id , poll_source , date , support_rate , candidate_id , consider_rate  | people : people_id , name , date_of_birth , height , weight , sex  | people_weight : people_id , sex , total_weight , name , min_weight , avg_weight , date_of_birth , height , max_weight "}, {"db_id": "candidate_poll", "query": "select avg_height, (weight)from people_height where sex = 'M'", "query_toks": ["SELECT", "avg", "(", "height", ")", ",", "avg", "(", "weight", ")", "FROM", "people", "WHERE", "sex", "=", "'M", "'"], "query_toks_no_value": ["select", "avg", "(", "height", ")", ",", "avg", "(", "weight", ")", "from", "people", "where", "sex", "=", "value"], "question": "What are the average height and weight across males (sex is M)?", "question_toks": ["What", "are", "the", "average", "height", "and", "weight", "across", "males", "(", "sex", "is", "M", ")", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 13, false], null]], [5, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"M\"", null]]}, "primary_key": {"people": "people_id"}, "orig_query": "select avg(height), avg(weight) from people where sex = 'M'", "split_map": {"people": ["max_height", "min_height", "avg_height", "total_height"]}, "schema_with_content": "candidate : date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), oppose_rate (0.44, 0.45, 0.32), support_rate (0.18, 0.25, 0.25), consider_rate (0.2, 0.42, 0.34), unsure_rate (0.3, 0.3, 0.9), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), candidate_id (3, 5, 1), people_id (9, 3, 4) | people : name (\"St\u00c3\u00a9phane Antiga\", \"Frantz Granvorka\", \"Vincent Montm\u00c3\u00a9at\"), weight (94.0, 89.0, 83.0), sex (\"M\", \"F\"), date_of_birth (\"01.09.1977\", \"22.04.1977\", \"22.04.1977\"), height (200.0, 196.0, 195.0), people_id (8, 2, 4) | people_height : max_height (200.0, 196.0, 195.0), min_height (200.0, 196.0, 195.0), date_of_birth (\"01.09.1977\", \"22.04.1977\", \"22.04.1977\"), people_id (8, 2, 4), avg_height (200.0, 196.0, 195.0), sex (\"M\", \"F\"), name (\"St\u00c3\u00a9phane Antiga\", \"Frantz Granvorka\", \"Vincent Montm\u00c3\u00a9at\"), total_height (200.0, 196.0, 195.0), weight (94.0, 89.0, 83.0)", "schema_without_content": "candidate : date , oppose_rate , support_rate , consider_rate , unsure_rate , poll_source , candidate_id , people_id  | people : name , weight , sex , date_of_birth , height , people_id  | people_height : max_height , min_height , date_of_birth , people_id , avg_height , sex , name , total_height , weight "}, {"db_id": "candidate_poll", "query": "select (height), avg_weight from people_weight where sex = 'M'", "query_toks": ["SELECT", "avg", "(", "height", ")", ",", "avg", "(", "weight", ")", "FROM", "people", "WHERE", "sex", "=", "'M", "'"], "query_toks_no_value": ["select", "avg", "(", "height", ")", ",", "avg", "(", "weight", ")", "from", "people", "where", "sex", "=", "value"], "question": "What are the average height and weight across males (sex is M)?", "question_toks": ["What", "are", "the", "average", "height", "and", "weight", "across", "males", "(", "sex", "is", "M", ")", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 13, false], null]], [5, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"M\"", null]]}, "primary_key": {"people": "people_id"}, "orig_query": "select avg(height), avg(weight) from people where sex = 'M'", "split_map": {"people": ["max_weight", "min_weight", "avg_weight", "total_weight"]}, "schema_with_content": "candidate : candidate_id (1, 4, 5), support_rate (0.24, 0.24, 0.24), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), unsure_rate (0.2, 0.2, 0.3), people_id (7, 3, 7), date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), oppose_rate (0.32, 0.43, 0.45), consider_rate (0.2, 0.3, 0.2) | people : date_of_birth (\"28.09.1981\", \"05.05.1972\", \"01.09.1977\"), weight (88.0, 88.0, 89.0), name (\"Laurent Capet\", \"Dominique Daquin\", \"Hubert Henno\"), height (197.0, 197.0, 197.0), people_id (7, 9, 4), sex (\"M\", \"F\") | people_weight : height (197.0, 197.0, 197.0), people_id (7, 9, 4), total_weight (88.0, 88.0, 89.0), avg_weight (88.0, 88.0, 89.0), date_of_birth (\"28.09.1981\", \"05.05.1972\", \"01.09.1977\"), min_weight (88.0, 88.0, 89.0), max_weight (88.0, 88.0, 89.0), sex (\"M\", \"F\"), name (\"Laurent Capet\", \"Dominique Daquin\", \"Hubert Henno\")", "schema_without_content": "candidate : candidate_id , support_rate , poll_source , unsure_rate , people_id , date , oppose_rate , consider_rate  | people : date_of_birth , weight , name , height , people_id , sex  | people_weight : height , people_id , total_weight , avg_weight , date_of_birth , min_weight , max_weight , sex , name "}, {"db_id": "candidate_poll", "query": "select avg_weight, min_weight, sex from people_weight group by sex", "query_toks": ["SELECT", "avg", "(", "weight", ")", ",", "min", "(", "weight", ")", ",", "sex", "FROM", "people", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "avg", "(", "weight", ")", ",", "min", "(", "weight", ")", ",", "sex", "from", "people", "group", "by", "sex"], "question": "Find the average and minimum weight for each gender.", "question_toks": ["Find", "the", "average", "and", "minimum", "weight", "for", "each", "gender", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}, "primary_key": {"people": "people_id"}, "orig_query": "select avg(weight), min(weight), sex from people group by sex", "split_map": {"people": ["max_weight", "min_weight", "avg_weight", "total_weight"]}, "schema_with_content": "candidate : date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), support_rate (0.24, 0.18, 0.18), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), unsure_rate (0.3, 0.4, 0.2), oppose_rate (0.45, 0.43, 0.43), people_id (6, 3, 9), candidate_id (1, 3, 2), consider_rate (0.2, 0.3, 0.42) | people : date_of_birth (\"05.05.1972\", \"05.05.1972\", \"10.11.1972\"), name (\"Vincent Montm\u00c3\u00a9at\", \"Laurent Capet\", \"Philippe Bar\u00c3\u00a7a-Cysique\"), people_id (6, 7, 1), height (197.0, 195.0, 200.0), sex (\"M\", \"F\"), weight (85.0, 94.0, 85.0) | people_weight : date_of_birth (\"05.05.1972\", \"05.05.1972\", \"10.11.1972\"), max_weight (85.0, 94.0, 85.0), name (\"Vincent Montm\u00c3\u00a9at\", \"Laurent Capet\", \"Philippe Bar\u00c3\u00a7a-Cysique\"), people_id (6, 7, 1), total_weight (85.0, 94.0, 85.0), sex (\"M\", \"F\"), avg_weight (85.0, 94.0, 85.0), min_weight (85.0, 94.0, 85.0), height (197.0, 195.0, 200.0)", "schema_without_content": "candidate : date , support_rate , poll_source , unsure_rate , oppose_rate , people_id , candidate_id , consider_rate  | people : date_of_birth , name , people_id , height , sex , weight  | people_weight : date_of_birth , max_weight , name , people_id , total_weight , sex , avg_weight , min_weight , height "}, {"db_id": "candidate_poll", "query": "select avg_weight, min_weight, sex from people_weight group by sex", "query_toks": ["SELECT", "avg", "(", "weight", ")", ",", "min", "(", "weight", ")", ",", "sex", "FROM", "people", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "avg", "(", "weight", ")", ",", "min", "(", "weight", ")", ",", "sex", "from", "people", "group", "by", "sex"], "question": "What are the average and minimum weights for people of each sex?", "question_toks": ["What", "are", "the", "average", "and", "minimum", "weights", "for", "people", "of", "each", "sex", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}, "primary_key": {"people": "people_id"}, "orig_query": "select avg(weight), min(weight), sex from people group by sex", "split_map": {"people": ["max_weight", "min_weight", "avg_weight", "total_weight"]}, "schema_with_content": "candidate : unsure_rate (0.9, 0.9, 0.3), candidate_id (1, 6, 5), support_rate (0.33, 0.24, 0.17), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), people_id (4, 9, 4), oppose_rate (0.45, 0.44, 0.32), consider_rate (0.2, 0.2, 0.2), date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\") | people : height (197.0, 200.0, 202.0), people_id (9, 5, 8), name (\"Frantz Granvorka\", \"Guillaume Samica\", \"St\u00c3\u00a9phane Antiga\"), weight (85.0, 83.0, 90.0), sex (\"M\", \"F\"), date_of_birth (\"28.09.1981\", \"10.03.1976\", \"22.04.1977\") | people_weight : height (197.0, 200.0, 202.0), date_of_birth (\"28.09.1981\", \"10.03.1976\", \"22.04.1977\"), max_weight (85.0, 83.0, 90.0), min_weight (85.0, 83.0, 90.0), sex (\"M\", \"F\"), total_weight (85.0, 83.0, 90.0), avg_weight (85.0, 83.0, 90.0), name (\"Frantz Granvorka\", \"Guillaume Samica\", \"St\u00c3\u00a9phane Antiga\"), people_id (9, 5, 8)", "schema_without_content": "candidate : unsure_rate , candidate_id , support_rate , poll_source , people_id , oppose_rate , consider_rate , date  | people : height , people_id , name , weight , sex , date_of_birth  | people_weight : height , date_of_birth , max_weight , min_weight , sex , total_weight , avg_weight , name , people_id "}, {"db_id": "candidate_poll", "query": "select max_support_rate, min(consider_rate), min(oppose_rate)from candidate_support_rate", "query_toks": ["SELECT", "max", "(", "support_rate", ")", ",", "min", "(", "consider_rate", ")", ",", "min", "(", "oppose_rate", ")", "FROM", "candidate"], "query_toks_no_value": ["select", "max", "(", "support_rate", ")", ",", "min", "(", "consider_rate", ")", ",", "min", "(", "oppose_rate", ")", "from", "candidate"], "question": "find the highest support percentage, lowest consider rate and oppose rate of all candidates.", "question_toks": ["find", "the", "highest", "support", "percentage", ",", "lowest", "consider", "rate", "and", "oppose", "rate", "of", "all", "candidates", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]], [2, [0, [0, 6, false], null]], [2, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"candidate": "candidate_id"}, "orig_query": "select max(support_rate), min(consider_rate), min(oppose_rate) from candidate", "split_map": {"candidate": ["max_support_rate", "min_support_rate", "avg_support_rate", "total_support_rate"]}, "schema_with_content": "candidate : date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), unsure_rate (0.9, 0.3, 0.9), people_id (4, 3, 3), support_rate (0.24, 0.18, 0.24), candidate_id (6, 2, 1), consider_rate (0.34, 0.3, 0.2), oppose_rate (0.45, 0.32, 0.45), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\") | candidate_support_rate : people_id (4, 3, 3), min_support_rate (0.24, 0.18, 0.24), max_support_rate (0.24, 0.18, 0.24), total_support_rate (0.24, 0.18, 0.24), avg_support_rate (0.24, 0.18, 0.24), candidate_id (6, 2, 1), date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), consider_rate (0.34, 0.3, 0.2), oppose_rate (0.45, 0.32, 0.45), unsure_rate (0.9, 0.3, 0.9) | people : date_of_birth (\"22.04.1977\", \"28.09.1981\", \"05.05.1972\"), name (\"Guillaume Samica\", \"Guillaume Samica\", \"Laurent Capet\"), height (193.0, 196.0, 193.0), weight (83.0, 90.0, 89.0), people_id (5, 7, 9), sex (\"M\", \"F\")", "schema_without_content": "candidate : date , unsure_rate , people_id , support_rate , candidate_id , consider_rate , oppose_rate , poll_source  | candidate_support_rate : people_id , min_support_rate , max_support_rate , total_support_rate , avg_support_rate , candidate_id , date , poll_source , consider_rate , oppose_rate , unsure_rate  | people : date_of_birth , name , height , weight , people_id , sex "}, {"db_id": "candidate_poll", "query": "select max(support_rate), min_consider_rate, (oppose_rate)from candidate_consider_rate", "query_toks": ["SELECT", "max", "(", "support_rate", ")", ",", "min", "(", "consider_rate", ")", ",", "min", "(", "oppose_rate", ")", "FROM", "candidate"], "query_toks_no_value": ["select", "max", "(", "support_rate", ")", ",", "min", "(", "consider_rate", ")", ",", "min", "(", "oppose_rate", ")", "from", "candidate"], "question": "find the highest support percentage, lowest consider rate and oppose rate of all candidates.", "question_toks": ["find", "the", "highest", "support", "percentage", ",", "lowest", "consider", "rate", "and", "oppose", "rate", "of", "all", "candidates", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]], [2, [0, [0, 6, false], null]], [2, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"candidate": "candidate_id"}, "orig_query": "select max(support_rate), min(consider_rate), min(oppose_rate) from candidate", "split_map": {"candidate": ["max_consider_rate", "min_consider_rate", "avg_consider_rate", "total_consider_rate"]}, "schema_with_content": "candidate : support_rate (0.18, 0.25, 0.24), candidate_id (6, 5, 1), people_id (9, 9, 1), unsure_rate (0.2, 0.3, 0.9), date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), oppose_rate (0.45, 0.43, 0.45), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), consider_rate (0.34, 0.34, 0.3) | candidate_consider_rate : people_id (9, 9, 1), avg_consider_rate (0.34, 0.34, 0.3), total_consider_rate (0.34, 0.34, 0.3), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), max_consider_rate (0.34, 0.34, 0.3), support_rate (0.18, 0.25, 0.24), candidate_id (6, 5, 1), date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), min_consider_rate (0.34, 0.34, 0.3), oppose_rate (0.45, 0.43, 0.45), unsure_rate (0.2, 0.3, 0.9) | people : people_id (3, 2, 7), name (\"Laurent Capet\", \"Vincent Montm\u00c3\u00a9at\", \"Lo\u00c3\u00afc De Kergret\"), height (202.0, 188.0, 188.0), date_of_birth (\"22.04.1977\", \"10.03.1976\", \"10.11.1972\"), sex (\"M\", \"F\"), weight (89.0, 90.0, 92.0)", "schema_without_content": "candidate : support_rate , candidate_id , people_id , unsure_rate , date , oppose_rate , poll_source , consider_rate  | candidate_consider_rate : people_id , avg_consider_rate , total_consider_rate , poll_source , max_consider_rate , support_rate , candidate_id , date , min_consider_rate , oppose_rate , unsure_rate  | people : people_id , name , height , date_of_birth , sex , weight "}, {"db_id": "candidate_poll", "query": "select max(support_rate), (consider_rate), min_oppose_rate from candidate_oppose_rate", "query_toks": ["SELECT", "max", "(", "support_rate", ")", ",", "min", "(", "consider_rate", ")", ",", "min", "(", "oppose_rate", ")", "FROM", "candidate"], "query_toks_no_value": ["select", "max", "(", "support_rate", ")", ",", "min", "(", "consider_rate", ")", ",", "min", "(", "oppose_rate", ")", "from", "candidate"], "question": "find the highest support percentage, lowest consider rate and oppose rate of all candidates.", "question_toks": ["find", "the", "highest", "support", "percentage", ",", "lowest", "consider", "rate", "and", "oppose", "rate", "of", "all", "candidates", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]], [2, [0, [0, 6, false], null]], [2, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"candidate": "candidate_id"}, "orig_query": "select max(support_rate), min(consider_rate), min(oppose_rate) from candidate", "split_map": {"candidate": ["max_oppose_rate", "min_oppose_rate", "avg_oppose_rate", "total_oppose_rate"]}, "schema_with_content": "candidate : consider_rate (0.3, 0.3, 0.42), oppose_rate (0.45, 0.32, 0.43), candidate_id (4, 4, 1), support_rate (0.17, 0.33, 0.17), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), people_id (3, 6, 4), date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), unsure_rate (0.4, 0.4, 0.2) | candidate_oppose_rate : support_rate (0.17, 0.33, 0.17), date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), max_oppose_rate (0.45, 0.32, 0.43), total_oppose_rate (0.45, 0.32, 0.43), people_id (3, 6, 4), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), avg_oppose_rate (0.45, 0.32, 0.43), min_oppose_rate (0.45, 0.32, 0.43), candidate_id (4, 4, 1), consider_rate (0.3, 0.3, 0.42), unsure_rate (0.4, 0.4, 0.2) | people : height (200.0, 196.0, 200.0), weight (89.0, 90.0, 85.0), date_of_birth (\"06.10.1976\", \"05.05.1972\", \"22.04.1977\"), people_id (6, 7, 6), name (\"Hubert Henno\", \"Guillaume Samica\", \"St\u00c3\u00a9phane Antiga\"), sex (\"M\", \"F\")", "schema_without_content": "candidate : consider_rate , oppose_rate , candidate_id , support_rate , poll_source , people_id , date , unsure_rate  | candidate_oppose_rate : support_rate , date , max_oppose_rate , total_oppose_rate , people_id , poll_source , avg_oppose_rate , min_oppose_rate , candidate_id , consider_rate , unsure_rate  | people : height , weight , date_of_birth , people_id , name , sex "}, {"db_id": "candidate_poll", "query": "select max_support_rate, min(consider_rate), min(oppose_rate)from candidate_support_rate", "query_toks": ["SELECT", "max", "(", "support_rate", ")", ",", "min", "(", "consider_rate", ")", ",", "min", "(", "oppose_rate", ")", "FROM", "candidate"], "query_toks_no_value": ["select", "max", "(", "support_rate", ")", ",", "min", "(", "consider_rate", ")", ",", "min", "(", "oppose_rate", ")", "from", "candidate"], "question": "Return the maximum support rate, minimum consider rate, and minimum oppose rate across all candidates?", "question_toks": ["Return", "the", "maximum", "support", "rate", ",", "minimum", "consider", "rate", ",", "and", "minimum", "oppose", "rate", "across", "all", "candidates", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]], [2, [0, [0, 6, false], null]], [2, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"candidate": "candidate_id"}, "orig_query": "select max(support_rate), min(consider_rate), min(oppose_rate) from candidate", "split_map": {"candidate": ["max_support_rate", "min_support_rate", "avg_support_rate", "total_support_rate"]}, "schema_with_content": "candidate : candidate_id (1, 1, 2), consider_rate (0.42, 0.42, 0.3), date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), oppose_rate (0.43, 0.32, 0.45), support_rate (0.24, 0.25, 0.17), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), unsure_rate (0.9, 0.2, 0.4), people_id (3, 4, 6) | candidate_support_rate : people_id (3, 4, 6), date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), min_support_rate (0.24, 0.25, 0.17), total_support_rate (0.24, 0.25, 0.17), max_support_rate (0.24, 0.25, 0.17), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), avg_support_rate (0.24, 0.25, 0.17), candidate_id (1, 1, 2), consider_rate (0.42, 0.42, 0.3), oppose_rate (0.43, 0.32, 0.45), unsure_rate (0.9, 0.2, 0.4) | people : sex (\"M\", \"F\"), date_of_birth (\"22.04.1977\", \"22.04.1977\", \"10.03.1976\"), people_id (6, 4, 1), name (\"Hubert Henno\", \"Vincent Montm\u00c3\u00a9at\", \"Hubert Henno\"), height (202.0, 193.0, 197.0), weight (92.0, 83.0, 88.0)", "schema_without_content": "candidate : candidate_id , consider_rate , date , oppose_rate , support_rate , poll_source , unsure_rate , people_id  | candidate_support_rate : people_id , date , min_support_rate , total_support_rate , max_support_rate , poll_source , avg_support_rate , candidate_id , consider_rate , oppose_rate , unsure_rate  | people : sex , date_of_birth , people_id , name , height , weight "}, {"db_id": "candidate_poll", "query": "select max(support_rate), min_consider_rate, (oppose_rate)from candidate_consider_rate", "query_toks": ["SELECT", "max", "(", "support_rate", ")", ",", "min", "(", "consider_rate", ")", ",", "min", "(", "oppose_rate", ")", "FROM", "candidate"], "query_toks_no_value": ["select", "max", "(", "support_rate", ")", ",", "min", "(", "consider_rate", ")", ",", "min", "(", "oppose_rate", ")", "from", "candidate"], "question": "Return the maximum support rate, minimum consider rate, and minimum oppose rate across all candidates?", "question_toks": ["Return", "the", "maximum", "support", "rate", ",", "minimum", "consider", "rate", ",", "and", "minimum", "oppose", "rate", "across", "all", "candidates", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]], [2, [0, [0, 6, false], null]], [2, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"candidate": "candidate_id"}, "orig_query": "select max(support_rate), min(consider_rate), min(oppose_rate) from candidate", "split_map": {"candidate": ["max_consider_rate", "min_consider_rate", "avg_consider_rate", "total_consider_rate"]}, "schema_with_content": "candidate : people_id (1, 1, 9), unsure_rate (0.4, 0.3, 0.3), consider_rate (0.42, 0.42, 0.27), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), candidate_id (4, 2, 3), support_rate (0.18, 0.33, 0.25), date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), oppose_rate (0.32, 0.45, 0.32) | candidate_consider_rate : date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), avg_consider_rate (0.42, 0.42, 0.27), max_consider_rate (0.42, 0.42, 0.27), total_consider_rate (0.42, 0.42, 0.27), min_consider_rate (0.42, 0.42, 0.27), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), candidate_id (4, 2, 3), support_rate (0.18, 0.33, 0.25), people_id (1, 1, 9), oppose_rate (0.32, 0.45, 0.32), unsure_rate (0.4, 0.3, 0.3) | people : sex (\"M\", \"F\"), weight (83.0, 90.0, 82.0), name (\"St\u00c3\u00a9phane Antiga\", \"St\u00c3\u00a9phane Antiga\", \"Dominique Daquin\"), height (194.0, 194.0, 188.0), date_of_birth (\"22.04.1977\", \"10.11.1972\", \"05.05.1972\"), people_id (3, 3, 8)", "schema_without_content": "candidate : people_id , unsure_rate , consider_rate , poll_source , candidate_id , support_rate , date , oppose_rate  | candidate_consider_rate : date , avg_consider_rate , max_consider_rate , total_consider_rate , min_consider_rate , poll_source , candidate_id , support_rate , people_id , oppose_rate , unsure_rate  | people : sex , weight , name , height , date_of_birth , people_id "}, {"db_id": "candidate_poll", "query": "select max(support_rate), (consider_rate), min_oppose_rate from candidate_oppose_rate", "query_toks": ["SELECT", "max", "(", "support_rate", ")", ",", "min", "(", "consider_rate", ")", ",", "min", "(", "oppose_rate", ")", "FROM", "candidate"], "query_toks_no_value": ["select", "max", "(", "support_rate", ")", ",", "min", "(", "consider_rate", ")", ",", "min", "(", "oppose_rate", ")", "from", "candidate"], "question": "Return the maximum support rate, minimum consider rate, and minimum oppose rate across all candidates?", "question_toks": ["Return", "the", "maximum", "support", "rate", ",", "minimum", "consider", "rate", ",", "and", "minimum", "oppose", "rate", "across", "all", "candidates", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]], [2, [0, [0, 6, false], null]], [2, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"candidate": "candidate_id"}, "orig_query": "select max(support_rate), min(consider_rate), min(oppose_rate) from candidate", "split_map": {"candidate": ["max_oppose_rate", "min_oppose_rate", "avg_oppose_rate", "total_oppose_rate"]}, "schema_with_content": "candidate : unsure_rate (0.3, 0.3, 0.2), consider_rate (0.2, 0.27, 0.42), people_id (7, 6, 9), oppose_rate (0.45, 0.32, 0.43), support_rate (0.25, 0.33, 0.17), date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), candidate_id (4, 1, 4) | candidate_oppose_rate : date (\"Feb 12\u00e2\u0080\u009315, 2007\", \"Feb 13\u00e2\u0080\u009314, 2007\", \"Nov 9\u00e2\u0080\u009310, 2006\"), min_oppose_rate (0.45, 0.32, 0.43), candidate_id (4, 1, 4), poll_source (\"WNBC/Marist Poll\", \"FOX News/Opinion Dynamics Poll\", \"Newsweek Poll\"), support_rate (0.25, 0.33, 0.17), people_id (7, 6, 9), consider_rate (0.2, 0.27, 0.42), max_oppose_rate (0.45, 0.32, 0.43), avg_oppose_rate (0.45, 0.32, 0.43), total_oppose_rate (0.45, 0.32, 0.43), unsure_rate (0.3, 0.3, 0.2) | people : weight (94.0, 92.0, 90.0), name (\"Laurent Capet\", \"Vincent Montm\u00c3\u00a9at\", \"Philippe Bar\u00c3\u00a7a-Cysique\"), people_id (9, 6, 8), sex (\"M\", \"F\"), height (196.0, 202.0, 202.0), date_of_birth (\"20.08.1970\", \"10.03.1976\", \"05.05.1972\")", "schema_without_content": "candidate : unsure_rate , consider_rate , people_id , oppose_rate , support_rate , date , poll_source , candidate_id  | candidate_oppose_rate : date , min_oppose_rate , candidate_id , poll_source , support_rate , people_id , consider_rate , max_oppose_rate , avg_oppose_rate , total_oppose_rate , unsure_rate  | people : weight , name , people_id , sex , height , date_of_birth "}, {"db_id": "county_public_safety", "query": "select min_crime_rate, max_crime_rate from county_public_safety_crime_rate", "query_toks": ["SELECT", "min", "(", "Crime_rate", ")", ",", "max", "(", "Crime_rate", ")", "FROM", "county_public_safety"], "query_toks_no_value": ["select", "min", "(", "crime_rate", ")", ",", "max", "(", "crime_rate", ")", "from", "county_public_safety"], "question": "What are the minimum and maximum crime rate of counties?", "question_toks": ["What", "are", "the", "minimum", "and", "maximum", "crime", "rate", "of", "counties", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 7, false], null]], [1, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"county_public_safety": "county_id"}, "orig_query": "select min(crime_rate), max(crime_rate) from county_public_safety", "split_map": {"county_public_safety": ["max_crime_rate", "min_crime_rate", "avg_crime_rate", "total_crime_rate"]}, "schema_with_content": "county_public_safety : residents_per_officer (803, 808, 770), police_officers (187, 11, 40), population (73066, 204320, 7821), county_id (3, 5, 3), name (\"Chilliwack\", \"Abbotsford\", \"Chilliwack\"), crime_rate (49.0, 118.0, 150.0), police_force (\"Abbotsford Police Department\", \"RCMP\", \"Central Saanich Police\"), location (\"East\", \"West\", \"North\"), case_burden (100, 140, 137) | county_public_safety_crime_rate : population (73066, 204320, 7821), police_officers (187, 11, 40), max_crime_rate (49.0, 118.0, 150.0), avg_crime_rate (49.0, 118.0, 150.0), total_crime_rate (49.0, 118.0, 150.0), min_crime_rate (49.0, 118.0, 150.0), name (\"Chilliwack\", \"Abbotsford\", \"Chilliwack\"), residents_per_officer (803, 808, 770), county_id (3, 5, 3), case_burden (100, 140, 137), police_force (\"Abbotsford Police Department\", \"RCMP\", \"Central Saanich Police\"), location (\"East\", \"West\", \"North\") | city : hispanic (99.0, 99.3, 98.5), county_id (4, 3, 2), white (53.5, 61.2, 64.3), city_id (10, 12, 13), black (4.1, 11.0, 7.4), multiracial (11.7, 11.2, 11.2), asian (0.3, 0.0, 0.2), name (\"Aguas Buenas\", \"Camuy\", \"Aguada\"), amerindian (1.0, 0.2, 1.0)", "schema_without_content": "county_public_safety : residents_per_officer , police_officers , population , county_id , name , crime_rate , police_force , location , case_burden  | county_public_safety_crime_rate : population , police_officers , max_crime_rate , avg_crime_rate , total_crime_rate , min_crime_rate , name , residents_per_officer , county_id , case_burden , police_force , location  | city : hispanic , county_id , white , city_id , black , multiracial , asian , name , amerindian "}, {"db_id": "county_public_safety", "query": "select min_crime_rate, max_crime_rate from county_public_safety_crime_rate", "query_toks": ["SELECT", "min", "(", "Crime_rate", ")", ",", "max", "(", "Crime_rate", ")", "FROM", "county_public_safety"], "query_toks_no_value": ["select", "min", "(", "crime_rate", ")", ",", "max", "(", "crime_rate", ")", "from", "county_public_safety"], "question": "Return the minimum and maximum crime rates across all counties.", "question_toks": ["Return", "the", "minimum", "and", "maximum", "crime", "rates", "across", "all", "counties", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 7, false], null]], [1, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"county_public_safety": "county_id"}, "orig_query": "select min(crime_rate), max(crime_rate) from county_public_safety", "split_map": {"county_public_safety": ["max_crime_rate", "min_crime_rate", "avg_crime_rate", "total_crime_rate"]}, "schema_with_content": "county_public_safety : police_force (\"Abbotsford Police Department\", \"RCMP\", \"Central Saanich Police\"), location (\"East\", \"West\", \"North\"), case_burden (140, 81, 81), residents_per_officer (711, 685, 808), county_id (2, 6, 6), population (7821, 16821, 16821), police_officers (11, 21, 187), crime_rate (49.0, 123.0, 49.0), name (\"Chilliwack\", \"Burnaby\", \"Campbell River\") | county_public_safety_crime_rate : name (\"Chilliwack\", \"Burnaby\", \"Campbell River\"), county_id (2, 6, 6), max_crime_rate (49.0, 123.0, 49.0), population (7821, 16821, 16821), case_burden (140, 81, 81), min_crime_rate (49.0, 123.0, 49.0), total_crime_rate (49.0, 123.0, 49.0), avg_crime_rate (49.0, 123.0, 49.0), police_officers (11, 21, 187), residents_per_officer (711, 685, 808), police_force (\"Abbotsford Police Department\", \"RCMP\", \"Central Saanich Police\"), location (\"East\", \"West\", \"North\") | city : asian (0.0, 0.1, 0.4), black (7.3, 6.1, 22.8), name (\"Barceloneta\", \"Arroyo\", \"Cata\u00c3\u00b1o\"), hispanic (99.6, 99.0, 99.6), multiracial (12.1, 10.1, 14.2), city_id (5, 7, 14), white (82.0, 78.3, 76.1), county_id (6, 5, 3), amerindian (0.9, 1.0, 0.9)", "schema_without_content": "county_public_safety : police_force , location , case_burden , residents_per_officer , county_id , population , police_officers , crime_rate , name  | county_public_safety_crime_rate : name , county_id , max_crime_rate , population , case_burden , min_crime_rate , total_crime_rate , avg_crime_rate , police_officers , residents_per_officer , police_force , location  | city : asian , black , name , hispanic , multiracial , city_id , white , county_id , amerindian "}, {"db_id": "inn_1", "query": "select total_beds from rooms_beds where bedtype = 'King'", "query_toks": ["SELECT", "sum", "(", "beds", ")", "FROM", "Rooms", "WHERE", "bedtype", "=", "'King", "'", ";"], "query_toks_no_value": ["select", "sum", "(", "beds", ")", "from", "rooms", "where", "bedtype", "=", "value"], "question": "How many king beds are there?", "question_toks": ["How", "many", "king", "beds", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"King\"", null]]}, "primary_key": {"rooms": "roomid"}, "orig_query": "select sum(beds) from rooms where bedtype = 'King'", "split_map": {"rooms": ["max_beds", "min_beds", "avg_beds", "total_beds"]}, "schema_with_content": "rooms : decor (\"modern\", \"traditional\", \"rustic\"), baseprice (100, 100, 150), maxoccupancy (2, 4), beds (1, 2), roomid (\"AOB\", \"TAA\", \"IBS\"), roomname (\"Recluse and defiance\", \"Harbinger but bequest\", \"Abscond or bolster\"), bedtype (\"King\", \"Queen\", \"Double\") | rooms_beds : roomid (\"AOB\", \"TAA\", \"IBS\"), min_beds (1, 2), avg_beds (1, 2), total_beds (1, 2), max_beds (1, 2), roomname (\"Recluse and defiance\", \"Harbinger but bequest\", \"Abscond or bolster\"), bedtype (\"King\", \"Queen\", \"Double\"), maxoccupancy (2, 4), baseprice (100, 100, 150), decor (\"modern\", \"traditional\", \"rustic\") | reservations : checkout (\"30-MAR-10\", \"07-JUL-10\", \"04-JAN-11\"), kids (0, 3, 2), checkin (\"22-JUL-10\", \"28-AUG-10\", \"30-APR-10\"), lastname (\"TEHNEY\", \"MAKI\", \"ENGELSON\"), adults (2, 1, 3), code (44836, 30186, 30937), firstname (\"JULI\", \"HUNG\", \"WOODROW\"), rate (156.25, 156.25, 112.5), room (\"IBD\", \"AOB\", \"IBS\")", "schema_without_content": "rooms : decor , baseprice , maxoccupancy , beds , roomid , roomname , bedtype  | rooms_beds : roomid , min_beds , avg_beds , total_beds , max_beds , roomname , bedtype , maxoccupancy , baseprice , decor  | reservations : checkout , kids , checkin , lastname , adults , code , firstname , rate , room "}, {"db_id": "inn_1", "query": "select total_beds from rooms_beds where bedtype = 'King'", "query_toks": ["SELECT", "sum", "(", "beds", ")", "FROM", "Rooms", "WHERE", "bedtype", "=", "'King", "'", ";"], "query_toks_no_value": ["select", "sum", "(", "beds", ")", "from", "rooms", "where", "bedtype", "=", "value"], "question": "Find the total number of king beds available.", "question_toks": ["Find", "the", "total", "number", "of", "king", "beds", "available", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"King\"", null]]}, "primary_key": {"rooms": "roomid"}, "orig_query": "select sum(beds) from rooms where bedtype = 'King'", "split_map": {"rooms": ["max_beds", "min_beds", "avg_beds", "total_beds"]}, "schema_with_content": "rooms : maxoccupancy (2, 4), roomid (\"TAA\", \"RTE\", \"IBD\"), bedtype (\"King\", \"Queen\", \"Double\"), beds (1, 2), roomname (\"Convoke and sanguine\", \"Convoke and sanguine\", \"Abscond or bolster\"), decor (\"modern\", \"traditional\", \"rustic\"), baseprice (175, 150, 100) | rooms_beds : avg_beds (1, 2), roomname (\"Convoke and sanguine\", \"Convoke and sanguine\", \"Abscond or bolster\"), max_beds (1, 2), min_beds (1, 2), total_beds (1, 2), roomid (\"TAA\", \"RTE\", \"IBD\"), bedtype (\"King\", \"Queen\", \"Double\"), maxoccupancy (2, 4), baseprice (175, 150, 100), decor (\"modern\", \"traditional\", \"rustic\") | reservations : checkin (\"01-JUN-10\", \"20-SEP-10\", \"03-AUG-10\"), firstname (\"MARCELINA\", \"ADAM\", \"ALYSIA\"), kids (2, 0, 2), checkout (\"23-DEC-10\", \"08-DEC-10\", \"19-AUG-10\"), lastname (\"CARRUTH\", \"ACHTER\", \"NOBLIN\"), adults (4, 4, 3), room (\"TAA\", \"AOB\", \"IBD\"), rate (63.75, 156.25, 67.5), code (64503, 52470, 95600)", "schema_without_content": "rooms : maxoccupancy , roomid , bedtype , beds , roomname , decor , baseprice  | rooms_beds : avg_beds , roomname , max_beds , min_beds , total_beds , roomid , bedtype , maxoccupancy , baseprice , decor  | reservations : checkin , firstname , kids , checkout , lastname , adults , room , rate , code "}, {"db_id": "inn_1", "query": "select bedtype, avg_baseprice from rooms_baseprice group by bedtype", "query_toks": ["SELECT", "bedType", ",", "avg", "(", "basePrice", ")", "FROM", "Rooms", "GROUP", "BY", "bedType", ";"], "query_toks_no_value": ["select", "bedtype", ",", "avg", "(", "baseprice", ")", "from", "rooms", "group", "by", "bedtype"], "question": "What is the average base price of different bed type? List bed type and average base price.", "question_toks": ["What", "is", "the", "average", "base", "price", "of", "different", "bed", "type", "?", "List", "bed", "type", "and", "average", "base", "price", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [5, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"rooms": "roomid"}, "orig_query": "select bedtype, avg(baseprice) from rooms group by bedtype", "split_map": {"rooms": ["max_baseprice", "min_baseprice", "avg_baseprice", "total_baseprice"]}, "schema_with_content": "rooms : bedtype (\"King\", \"Queen\", \"Double\"), roomid (\"IBS\", \"IBD\", \"IBS\"), beds (1, 2), decor (\"modern\", \"traditional\", \"rustic\"), baseprice (250, 75, 75), maxoccupancy (2, 4), roomname (\"Harbinger but bequest\", \"Convoke and sanguine\", \"Immutable before decorum\") | rooms_baseprice : total_baseprice (250, 75, 75), avg_baseprice (250, 75, 75), maxoccupancy (2, 4), bedtype (\"King\", \"Queen\", \"Double\"), roomname (\"Harbinger but bequest\", \"Convoke and sanguine\", \"Immutable before decorum\"), roomid (\"IBS\", \"IBD\", \"IBS\"), min_baseprice (250, 75, 75), max_baseprice (250, 75, 75), beds (1, 2), decor (\"modern\", \"traditional\", \"rustic\") | reservations : lastname (\"YOKUM\", \"PANARELLO\", \"MCCLENNINGHAM\"), checkin (\"06-JUL-10\", \"13-JAN-10\", \"15-FEB-10\"), adults (4, 4, 1), kids (1, 0, 0), rate (135.0, 157.5, 212.5), room (\"AOB\", \"FNA\", \"IBD\"), checkout (\"06-DEC-10\", \"12-JAN-10\", \"08-NOV-10\"), code (94074, 12138, 82503), firstname (\"FLORIDA\", \"LANNY\", \"FLORIDA\")", "schema_without_content": "rooms : bedtype , roomid , beds , decor , baseprice , maxoccupancy , roomname  | rooms_baseprice : total_baseprice , avg_baseprice , maxoccupancy , bedtype , roomname , roomid , min_baseprice , max_baseprice , beds , decor  | reservations : lastname , checkin , adults , kids , rate , room , checkout , code , firstname "}, {"db_id": "inn_1", "query": "select bedtype, avg_baseprice from rooms_baseprice group by bedtype", "query_toks": ["SELECT", "bedType", ",", "avg", "(", "basePrice", ")", "FROM", "Rooms", "GROUP", "BY", "bedType", ";"], "query_toks_no_value": ["select", "bedtype", ",", "avg", "(", "baseprice", ")", "from", "rooms", "group", "by", "bedtype"], "question": "For each bed type, find the average base price of different bed type.", "question_toks": ["For", "each", "bed", "type", ",", "find", "the", "average", "base", "price", "of", "different", "bed", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [5, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"rooms": "roomid"}, "orig_query": "select bedtype, avg(baseprice) from rooms group by bedtype", "split_map": {"rooms": ["max_baseprice", "min_baseprice", "avg_baseprice", "total_baseprice"]}, "schema_with_content": "rooms : baseprice (175, 125, 100), bedtype (\"King\", \"Queen\", \"Double\"), maxoccupancy (2, 4), roomid (\"RND\", \"MWC\", \"IBS\"), beds (1, 2), roomname (\"Immutable before decorum\", \"Frugal not apropos\", \"Frugal not apropos\"), decor (\"modern\", \"traditional\", \"rustic\") | rooms_baseprice : bedtype (\"King\", \"Queen\", \"Double\"), total_baseprice (175, 125, 100), avg_baseprice (175, 125, 100), max_baseprice (175, 125, 100), beds (1, 2), roomname (\"Immutable before decorum\", \"Frugal not apropos\", \"Frugal not apropos\"), min_baseprice (175, 125, 100), roomid (\"RND\", \"MWC\", \"IBS\"), maxoccupancy (2, 4), decor (\"modern\", \"traditional\", \"rustic\") | reservations : code (28198, 49467, 84497), adults (3, 2, 1), firstname (\"DIONNA\", \"EMERY\", \"VALENTIN\"), checkin (\"01-AUG-10\", \"14-JUL-10\", \"13-APR-10\"), lastname (\"BEALLE\", \"KEPKE\", \"GOODHUE\"), room (\"AOB\", \"AOB\", \"CAS\"), kids (1, 0, 3), checkout (\"11-MAR-10\", \"15-FEB-10\", \"15-MAY-10\"), rate (135.0, 172.5, 225.0)", "schema_without_content": "rooms : baseprice , bedtype , maxoccupancy , roomid , beds , roomname , decor  | rooms_baseprice : bedtype , total_baseprice , avg_baseprice , max_baseprice , beds , roomname , min_baseprice , roomid , maxoccupancy , decor  | reservations : code , adults , firstname , checkin , lastname , room , kids , checkout , rate "}, {"db_id": "inn_1", "query": "select total_maxoccupancy from rooms_maxoccupancy where decor = 'modern'", "query_toks": ["SELECT", "sum", "(", "maxOccupancy", ")", "FROM", "Rooms", "WHERE", "decor", "=", "'modern", "'", ";"], "query_toks_no_value": ["select", "sum", "(", "maxoccupancy", ")", "from", "rooms", "where", "decor", "=", "value"], "question": "What is the total number of people who could stay in the modern rooms in this inn?", "question_toks": ["What", "is", "the", "total", "number", "of", "people", "who", "could", "stay", "in", "the", "modern", "rooms", "in", "this", "inn", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"modern\"", null]]}, "primary_key": {"rooms": "roomid"}, "orig_query": "select sum(maxoccupancy) from rooms where decor = 'modern'", "split_map": {"rooms": ["max_maxoccupancy", "min_maxoccupancy", "avg_maxoccupancy", "total_maxoccupancy"]}, "schema_with_content": "rooms : decor (\"modern\", \"traditional\", \"rustic\"), maxoccupancy (2, 4), bedtype (\"King\", \"Queen\", \"Double\"), baseprice (75, 75, 100), roomid (\"MWC\", \"AOB\", \"HBB\"), beds (1, 2), roomname (\"Convoke and sanguine\", \"Convoke and sanguine\", \"Frugal not apropos\") | rooms_maxoccupancy : beds (1, 2), avg_maxoccupancy (2, 4), max_maxoccupancy (2, 4), roomid (\"MWC\", \"AOB\", \"HBB\"), min_maxoccupancy (2, 4), total_maxoccupancy (2, 4), bedtype (\"King\", \"Queen\", \"Double\"), roomname (\"Convoke and sanguine\", \"Convoke and sanguine\", \"Frugal not apropos\"), baseprice (75, 75, 100), decor (\"modern\", \"traditional\", \"rustic\") | reservations : kids (0, 3, 0), checkout (\"06-DEC-10\", \"21-APR-10\", \"30-MAR-10\"), room (\"IBS\", \"IBD\", \"RTE\"), lastname (\"WENRICH\", \"CALLICUTT\", \"YAPLE\"), code (97996, 63746, 16933), adults (3, 1, 1), firstname (\"NEVADA\", \"DARIUS\", \"FRANCISCO\"), rate (201.25, 135.0, 67.5), checkin (\"27-JUN-10\", \"16-AUG-10\", \"31-AUG-10\")", "schema_without_content": "rooms : decor , maxoccupancy , bedtype , baseprice , roomid , beds , roomname  | rooms_maxoccupancy : beds , avg_maxoccupancy , max_maxoccupancy , roomid , min_maxoccupancy , total_maxoccupancy , bedtype , roomname , baseprice , decor  | reservations : kids , checkout , room , lastname , code , adults , firstname , rate , checkin "}, {"db_id": "inn_1", "query": "select total_maxoccupancy from rooms_maxoccupancy where decor = 'modern'", "query_toks": ["SELECT", "sum", "(", "maxOccupancy", ")", "FROM", "Rooms", "WHERE", "decor", "=", "'modern", "'", ";"], "query_toks_no_value": ["select", "sum", "(", "maxoccupancy", ")", "from", "rooms", "where", "decor", "=", "value"], "question": "How many people in total can stay in the modern rooms of this inn?", "question_toks": ["How", "many", "people", "in", "total", "can", "stay", "in", "the", "modern", "rooms", "of", "this", "inn", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"modern\"", null]]}, "primary_key": {"rooms": "roomid"}, "orig_query": "select sum(maxoccupancy) from rooms where decor = 'modern'", "split_map": {"rooms": ["max_maxoccupancy", "min_maxoccupancy", "avg_maxoccupancy", "total_maxoccupancy"]}, "schema_with_content": "rooms : roomid (\"FNA\", \"HBB\", \"AOB\"), maxoccupancy (2, 4), bedtype (\"King\", \"Queen\", \"Double\"), baseprice (175, 150, 125), decor (\"modern\", \"traditional\", \"rustic\"), roomname (\"Harbinger but bequest\", \"Mendicant with cryptic\", \"Thrift and accolade\"), beds (1, 2) | rooms_maxoccupancy : roomid (\"FNA\", \"HBB\", \"AOB\"), min_maxoccupancy (2, 4), avg_maxoccupancy (2, 4), roomname (\"Harbinger but bequest\", \"Mendicant with cryptic\", \"Thrift and accolade\"), beds (1, 2), max_maxoccupancy (2, 4), total_maxoccupancy (2, 4), bedtype (\"King\", \"Queen\", \"Double\"), baseprice (175, 150, 125), decor (\"modern\", \"traditional\", \"rustic\") | reservations : rate (115.0, 201.25, 201.25), checkin (\"15-JAN-10\", \"17-OCT-10\", \"21-NOV-10\"), firstname (\"ALEIDA\", \"ELSIE\", \"ADAM\"), room (\"RND\", \"TAA\", \"IBD\"), adults (2, 1, 3), code (13058, 98711, 91895), kids (3, 2, 3), checkout (\"17-SEP-10\", \"09-SEP-10\", \"19-JAN-10\"), lastname (\"JENQUIN\", \"WHITTEN\", \"ABRAHAMS\")", "schema_without_content": "rooms : roomid , maxoccupancy , bedtype , baseprice , decor , roomname , beds  | rooms_maxoccupancy : roomid , min_maxoccupancy , avg_maxoccupancy , roomname , beds , max_maxoccupancy , total_maxoccupancy , bedtype , baseprice , decor  | reservations : rate , checkin , firstname , room , adults , code , kids , checkout , lastname "}, {"db_id": "inn_1", "query": "select decor, avg_baseprice, min_baseprice from rooms_baseprice group by decor", "query_toks": ["SELECT", "decor", ",", "avg", "(", "basePrice", ")", ",", "min", "(", "basePrice", ")", "FROM", "Rooms", "GROUP", "BY", "decor", ";"], "query_toks_no_value": ["select", "decor", ",", "avg", "(", "baseprice", ")", ",", "min", "(", "baseprice", ")", "from", "rooms", "group", "by", "decor"], "question": "Find the average and minimum price of the rooms in different decor.", "question_toks": ["Find", "the", "average", "and", "minimum", "price", "of", "the", "rooms", "in", "different", "decor", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [5, [0, [0, 6, false], null]], [2, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"rooms": "roomid"}, "orig_query": "select decor, avg(baseprice), min(baseprice) from rooms group by decor", "split_map": {"rooms": ["max_baseprice", "min_baseprice", "avg_baseprice", "total_baseprice"]}, "schema_with_content": "rooms : baseprice (175, 125, 250), maxoccupancy (2, 4), beds (1, 2), roomid (\"RND\", \"TAA\", \"AOB\"), bedtype (\"King\", \"Queen\", \"Double\"), decor (\"modern\", \"traditional\", \"rustic\"), roomname (\"Frugal not apropos\", \"Immutable before decorum\", \"Mendicant with cryptic\") | rooms_baseprice : max_baseprice (175, 125, 250), min_baseprice (175, 125, 250), avg_baseprice (175, 125, 250), total_baseprice (175, 125, 250), beds (1, 2), roomid (\"RND\", \"TAA\", \"AOB\"), bedtype (\"King\", \"Queen\", \"Double\"), maxoccupancy (2, 4), roomname (\"Frugal not apropos\", \"Immutable before decorum\", \"Mendicant with cryptic\"), decor (\"modern\", \"traditional\", \"rustic\") | reservations : firstname (\"MARGARITO\", \"CASSAUNDRA\", \"GENE\"), checkin (\"19-JUN-10\", \"18-APR-10\", \"25-SEP-10\"), kids (0, 2, 3), adults (2, 1, 3), room (\"CAS\", \"AOB\", \"MWC\"), rate (85.0, 212.5, 175.0), lastname (\"VIPPERMAN\", \"BRAND\", \"TOODLE\"), code (30723, 10489, 14001), checkout (\"04-JUN-10\", \"05-FEB-10\", \"03-MAY-10\")", "schema_without_content": "rooms : baseprice , maxoccupancy , beds , roomid , bedtype , decor , roomname  | rooms_baseprice : max_baseprice , min_baseprice , avg_baseprice , total_baseprice , beds , roomid , bedtype , maxoccupancy , roomname , decor  | reservations : firstname , checkin , kids , adults , room , rate , lastname , code , checkout "}, {"db_id": "inn_1", "query": "select decor, avg_baseprice, min_baseprice from rooms_baseprice group by decor", "query_toks": ["SELECT", "decor", ",", "avg", "(", "basePrice", ")", ",", "min", "(", "basePrice", ")", "FROM", "Rooms", "GROUP", "BY", "decor", ";"], "query_toks_no_value": ["select", "decor", ",", "avg", "(", "baseprice", ")", ",", "min", "(", "baseprice", ")", "from", "rooms", "group", "by", "decor"], "question": "What is the average minimum and price of the rooms for each different decor.", "question_toks": ["What", "is", "the", "average", "minimum", "and", "price", "of", "the", "rooms", "for", "each", "different", "decor", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [5, [0, [0, 6, false], null]], [2, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"rooms": "roomid"}, "orig_query": "select decor, avg(baseprice), min(baseprice) from rooms group by decor", "split_map": {"rooms": ["max_baseprice", "min_baseprice", "avg_baseprice", "total_baseprice"]}, "schema_with_content": "rooms : roomname (\"Harbinger but bequest\", \"Mendicant with cryptic\", \"Thrift and accolade\"), decor (\"modern\", \"traditional\", \"rustic\"), roomid (\"RTE\", \"RTE\", \"TAA\"), baseprice (175, 250, 100), maxoccupancy (2, 4), bedtype (\"King\", \"Queen\", \"Double\"), beds (1, 2) | rooms_baseprice : avg_baseprice (175, 250, 100), beds (1, 2), total_baseprice (175, 250, 100), maxoccupancy (2, 4), max_baseprice (175, 250, 100), roomname (\"Harbinger but bequest\", \"Mendicant with cryptic\", \"Thrift and accolade\"), roomid (\"RTE\", \"RTE\", \"TAA\"), min_baseprice (175, 250, 100), bedtype (\"King\", \"Queen\", \"Double\"), decor (\"modern\", \"traditional\", \"rustic\") | reservations : checkin (\"27-DEC-10\", \"19-JUL-10\", \"09-JUN-10\"), rate (156.25, 143.75, 125.0), adults (1, 4, 1), firstname (\"DANILO\", \"MACY\", \"MARCIA\"), kids (0, 1, 2), room (\"TAA\", \"AOB\", \"RND\"), code (93984, 17480, 10500), checkout (\"23-MAR-10\", \"25-MAR-10\", \"29-JAN-10\"), lastname (\"COVERT\", \"BOUGIE\", \"SWARTWOOD\")", "schema_without_content": "rooms : roomname , decor , roomid , baseprice , maxoccupancy , bedtype , beds  | rooms_baseprice : avg_baseprice , beds , total_baseprice , maxoccupancy , max_baseprice , roomname , roomid , min_baseprice , bedtype , decor  | reservations : checkin , rate , adults , firstname , kids , room , code , checkout , lastname "}, {"db_id": "inn_1", "query": "select bedtype, avg_baseprice from rooms_baseprice group by bedtype", "query_toks": ["SELECT", "bedType", ",", "avg", "(", "basePrice", ")", "FROM", "Rooms", "GROUP", "BY", "bedType", ";"], "query_toks_no_value": ["select", "bedtype", ",", "avg", "(", "baseprice", ")", "from", "rooms", "group", "by", "bedtype"], "question": "For each bed type, find the average room price.", "question_toks": ["For", "each", "bed", "type", ",", "find", "the", "average", "room", "price", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [5, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"rooms": "roomid"}, "orig_query": "select bedtype, avg(baseprice) from rooms group by bedtype", "split_map": {"rooms": ["max_baseprice", "min_baseprice", "avg_baseprice", "total_baseprice"]}, "schema_with_content": "rooms : beds (1, 2), maxoccupancy (2, 4), baseprice (150, 250, 250), roomid (\"RTE\", \"FNA\", \"HBB\"), bedtype (\"King\", \"Queen\", \"Double\"), decor (\"modern\", \"traditional\", \"rustic\"), roomname (\"Interim but salutary\", \"Convoke and sanguine\", \"Immutable before decorum\") | rooms_baseprice : roomid (\"RTE\", \"FNA\", \"HBB\"), avg_baseprice (150, 250, 250), total_baseprice (150, 250, 250), beds (1, 2), min_baseprice (150, 250, 250), maxoccupancy (2, 4), roomname (\"Interim but salutary\", \"Convoke and sanguine\", \"Immutable before decorum\"), max_baseprice (150, 250, 250), bedtype (\"King\", \"Queen\", \"Double\"), decor (\"modern\", \"traditional\", \"rustic\") | reservations : firstname (\"RODERICK\", \"JENI\", \"JOHNNIE\"), checkout (\"04-APR-10\", \"09-MAY-10\", \"10-MAR-10\"), checkin (\"13-AUG-10\", \"31-MAR-10\", \"13-MAR-10\"), lastname (\"DOMINGUEZ\", \"BEGEN\", \"PICHARD\"), code (20463, 75853, 48532), adults (4, 4, 3), room (\"CAS\", \"IBD\", \"MWC\"), kids (0, 0, 1), rate (172.5, 115.0, 90.0)", "schema_without_content": "rooms : beds , maxoccupancy , baseprice , roomid , bedtype , decor , roomname  | rooms_baseprice : roomid , avg_baseprice , total_baseprice , beds , min_baseprice , maxoccupancy , roomname , max_baseprice , bedtype , decor  | reservations : firstname , checkout , checkin , lastname , code , adults , room , kids , rate "}, {"db_id": "inn_1", "query": "select bedtype, avg_baseprice from rooms_baseprice group by bedtype", "query_toks": ["SELECT", "bedType", ",", "avg", "(", "basePrice", ")", "FROM", "Rooms", "GROUP", "BY", "bedType", ";"], "query_toks_no_value": ["select", "bedtype", ",", "avg", "(", "baseprice", ")", "from", "rooms", "group", "by", "bedtype"], "question": "What is the average base price of rooms, for each bed type?", "question_toks": ["What", "is", "the", "average", "base", "price", "of", "rooms", ",", "for", "each", "bed", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [5, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"rooms": "roomid"}, "orig_query": "select bedtype, avg(baseprice) from rooms group by bedtype", "split_map": {"rooms": ["max_baseprice", "min_baseprice", "avg_baseprice", "total_baseprice"]}, "schema_with_content": "rooms : baseprice (75, 150, 175), roomid (\"AOB\", \"IBS\", \"MWC\"), bedtype (\"King\", \"Queen\", \"Double\"), beds (1, 2), maxoccupancy (2, 4), decor (\"modern\", \"traditional\", \"rustic\"), roomname (\"Recluse and defiance\", \"Riddle to exculpate\", \"Abscond or bolster\") | rooms_baseprice : max_baseprice (75, 150, 175), beds (1, 2), min_baseprice (75, 150, 175), roomname (\"Recluse and defiance\", \"Riddle to exculpate\", \"Abscond or bolster\"), maxoccupancy (2, 4), total_baseprice (75, 150, 175), avg_baseprice (75, 150, 175), bedtype (\"King\", \"Queen\", \"Double\"), roomid (\"AOB\", \"IBS\", \"MWC\"), decor (\"modern\", \"traditional\", \"rustic\") | reservations : code (52597, 49482, 19394), rate (143.75, 127.5, 125.0), checkout (\"06-JAN-10\", \"09-OCT-10\", \"11-APR-10\"), kids (3, 1, 1), room (\"RTE\", \"HBB\", \"IBD\"), lastname (\"BURBANK\", \"WINNEN\", \"SAMPLES\"), checkin (\"15-AUG-10\", \"22-NOV-10\", \"26-SEP-10\"), firstname (\"DORIAN\", \"CATHRYN\", \"NEVADA\"), adults (4, 3, 2)", "schema_without_content": "rooms : baseprice , roomid , bedtype , beds , maxoccupancy , decor , roomname  | rooms_baseprice : max_baseprice , beds , min_baseprice , roomname , maxoccupancy , total_baseprice , avg_baseprice , bedtype , roomid , decor  | reservations : code , rate , checkout , kids , room , lastname , checkin , firstname , adults "}, {"db_id": "party_host", "query": "select avg_number_of_hosts from party_number_of_hosts", "query_toks": ["SELECT", "avg", "(", "Number_of_hosts", ")", "FROM", "party"], "query_toks_no_value": ["select", "avg", "(", "number_of_hosts", ")", "from", "party"], "question": "What is the average number of hosts for parties?", "question_toks": ["What", "is", "the", "average", "number", "of", "hosts", "for", "parties", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"party": "party_id"}, "orig_query": "select avg(number_of_hosts) from party", "split_map": {"party": ["max_number_of_hosts", "min_number_of_hosts", "avg_number_of_hosts", "total_number_of_hosts"]}, "schema_with_content": "party : party_id (5, 5, 7), party_theme (\"Teqnology\", \"Hardcore Resurrection\", \"Hardcore Resurrection\"), first_year (\"2002\", \"2001\", \"1999\"), location (\"Hemkade 48 Zaandam, Heineken Music Hall Amsterdam\", \"RAI Amsterdam\", \"Hemkade 48 Zaandam, Heineken Music Hall Amsterdam\"), last_year (\"2010\", \"2010\", \"2001\"), number_of_hosts (18, 6, 18) | party_number_of_hosts : total_number_of_hosts (18, 6, 18), last_year (\"2010\", \"2010\", \"2001\"), party_theme (\"Teqnology\", \"Hardcore Resurrection\", \"Hardcore Resurrection\"), location (\"Hemkade 48 Zaandam, Heineken Music Hall Amsterdam\", \"RAI Amsterdam\", \"Hemkade 48 Zaandam, Heineken Music Hall Amsterdam\"), first_year (\"2002\", \"2001\", \"1999\"), avg_number_of_hosts (18, 6, 18), max_number_of_hosts (18, 6, 18), party_id (5, 5, 7), min_number_of_hosts (18, 6, 18) | host : age (\"37\", \"43\", \"60\"), nationality (\"United States\", \"Hungary\", \"Argentina\"), host_id (1, 1, 2), name (\"Lloyd Daniels\", \"Lloyd Daniels\", \"Antonio Davis\") | party_host : is_main_in_charge (\"T\", \"F\"), party_id (1, 4, 8), host_id (1, 3, 10)", "schema_without_content": "party : party_id , party_theme , first_year , location , last_year , number_of_hosts  | party_number_of_hosts : total_number_of_hosts , last_year , party_theme , location , first_year , avg_number_of_hosts , max_number_of_hosts , party_id , min_number_of_hosts  | host : age , nationality , host_id , name  | party_host : is_main_in_charge , party_id , host_id "}, {"db_id": "party_host", "query": "select avg_number_of_hosts from party_number_of_hosts", "query_toks": ["SELECT", "avg", "(", "Number_of_hosts", ")", "FROM", "party"], "query_toks_no_value": ["select", "avg", "(", "number_of_hosts", ")", "from", "party"], "question": "Compute the average number of hosts for parties.", "question_toks": ["Compute", "the", "average", "number", "of", "hosts", "for", "parties", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"party": "party_id"}, "orig_query": "select avg(number_of_hosts) from party", "split_map": {"party": ["max_number_of_hosts", "min_number_of_hosts", "avg_number_of_hosts", "total_number_of_hosts"]}, "schema_with_content": "party : party_theme (\"Houseqlassics\", \"Hardcore Resurrection\", \"Qlubtempo\"), number_of_hosts (18, 4, 18), first_year (\"2004\", \"2004\", \"1999\"), location (\"Various locations\", \"Heineken Music Hall Amsterdam\", \"Hemkade 48 Zaandam\"), party_id (3, 7, 4), last_year (\"2004\", \"2002\", \"2003\") | party_number_of_hosts : max_number_of_hosts (18, 4, 18), party_id (3, 7, 4), last_year (\"2004\", \"2002\", \"2003\"), min_number_of_hosts (18, 4, 18), avg_number_of_hosts (18, 4, 18), party_theme (\"Houseqlassics\", \"Hardcore Resurrection\", \"Qlubtempo\"), first_year (\"2004\", \"2004\", \"1999\"), location (\"Various locations\", \"Heineken Music Hall Amsterdam\", \"Hemkade 48 Zaandam\"), total_number_of_hosts (18, 4, 18) | host : nationality (\"United States\", \"Hungary\", \"Argentina\"), age (\"60\", \"40\", \"26\"), host_id (2, 10, 1), name (\"Antonio Davis\", \"Austin Daye\", \"Lloyd Daniels\") | party_host : party_id (2, 6, 2), host_id (10, 7, 2), is_main_in_charge (\"T\", \"F\")", "schema_without_content": "party : party_theme , number_of_hosts , first_year , location , party_id , last_year  | party_number_of_hosts : max_number_of_hosts , party_id , last_year , min_number_of_hosts , avg_number_of_hosts , party_theme , first_year , location , total_number_of_hosts  | host : nationality , age , host_id , name  | party_host : party_id , host_id , is_main_in_charge "}, {"db_id": "storm_record", "query": "select avg_damage_millions_usd, max_damage_millions_usd from storm_damage_millions_usd where max_speed > 1000", "query_toks": ["SELECT", "avg", "(", "damage_millions_USD", ")", ",", "max", "(", "damage_millions_USD", ")", "FROM", "storm", "WHERE", "max_speed", ">", "1000"], "query_toks_no_value": ["select", "avg", "(", "damage_millions_usd", ")", ",", "max", "(", "damage_millions_usd", ")", "from", "storm", "where", "max_speed", ">", "value"], "question": "Show the average and maximum damage for all storms with max speed higher than 1000.", "question_toks": ["Show", "the", "average", "and", "maximum", "damage", "for", "all", "storms", "with", "max", "speed", "higher", "than", "1000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], 1000.0, null]]}, "primary_key": {"storm": "storm_id"}, "orig_query": "select avg(damage_millions_usd), max(damage_millions_usd) from storm where max_speed > 1000", "split_map": {"storm": ["max_damage_millions_usd", "min_damage_millions_usd", "avg_damage_millions_usd", "total_damage_millions_usd"]}, "schema_with_content": "storm : number_deaths (52, 2, 71), max_speed (961, 977, 977), dates_active (\"May19 \u00e2\u0080\u0093October26\", \"August3\u00e2\u0080\u0093August10\", \"August26\u00e2\u0080\u0093September2\"), damage_millions_usd (29.3, 10.75, 13.0), storm_id (2, 9, 7), name (\"One\", \"Seven\", \"Seven\") | storm_damage_millions_usd : avg_damage_millions_usd (29.3, 10.75, 13.0), min_damage_millions_usd (29.3, 10.75, 13.0), storm_id (2, 9, 7), total_damage_millions_usd (29.3, 10.75, 13.0), max_speed (961, 977, 977), name (\"One\", \"Seven\", \"Seven\"), dates_active (\"May19 \u00e2\u0080\u0093October26\", \"August3\u00e2\u0080\u0093August10\", \"August26\u00e2\u0080\u0093September2\"), max_damage_millions_usd (29.3, 10.75, 13.0), number_deaths (52, 2, 71) | region : region_id (2, 4, 5), region_name (\"Antarctica\", \"Cyprus\", \"Czech Republic\"), region_code (\"AG\", \"AL\", \"AO\") | affected_region : number_city_affected (30.0, 12.0, 10.0), region_id (12, 3, 3), storm_id (5, 1, 3)", "schema_without_content": "storm : number_deaths , max_speed , dates_active , damage_millions_usd , storm_id , name  | storm_damage_millions_usd : avg_damage_millions_usd , min_damage_millions_usd , storm_id , total_damage_millions_usd , max_speed , name , dates_active , max_damage_millions_usd , number_deaths  | region : region_id , region_name , region_code  | affected_region : number_city_affected , region_id , storm_id "}, {"db_id": "storm_record", "query": "select avg_damage_millions_usd, max_damage_millions_usd from storm_damage_millions_usd where max_speed > 1000", "query_toks": ["SELECT", "avg", "(", "damage_millions_USD", ")", ",", "max", "(", "damage_millions_USD", ")", "FROM", "storm", "WHERE", "max_speed", ">", "1000"], "query_toks_no_value": ["select", "avg", "(", "damage_millions_usd", ")", ",", "max", "(", "damage_millions_usd", ")", "from", "storm", "where", "max_speed", ">", "value"], "question": "What is the average and maximum damage in millions for storms that had a max speed over 1000?", "question_toks": ["What", "is", "the", "average", "and", "maximum", "damage", "in", "millions", "for", "storms", "that", "had", "a", "max", "speed", "over", "1000", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], 1000.0, null]]}, "primary_key": {"storm": "storm_id"}, "orig_query": "select avg(damage_millions_usd), max(damage_millions_usd) from storm where max_speed > 1000", "split_map": {"storm": ["max_damage_millions_usd", "min_damage_millions_usd", "avg_damage_millions_usd", "total_damage_millions_usd"]}, "schema_with_content": "storm : storm_id (4, 6, 2), dates_active (\"August5\u00e2\u0080\u0093August14\", \"May19\u00e2\u0080\u0093May25\", \"May19 \u00e2\u0080\u0093October26\"), max_speed (972, 961, 995), damage_millions_usd (4.05, 1.49, 1.49), name (\"One\", \"Five\", \"Six\"), number_deaths (52, 0, 71) | storm_damage_millions_usd : storm_id (4, 6, 2), dates_active (\"August5\u00e2\u0080\u0093August14\", \"May19\u00e2\u0080\u0093May25\", \"May19 \u00e2\u0080\u0093October26\"), max_speed (972, 961, 995), total_damage_millions_usd (4.05, 1.49, 1.49), name (\"One\", \"Five\", \"Six\"), max_damage_millions_usd (4.05, 1.49, 1.49), avg_damage_millions_usd (4.05, 1.49, 1.49), min_damage_millions_usd (4.05, 1.49, 1.49), number_deaths (52, 0, 71) | region : region_name (\"Angola\", \"Afghanistan\", \"Algeria\"), region_id (4, 7, 7), region_code (\"CZ\", \"AI\", \"DZ\") | affected_region : number_city_affected (12.0, 12.0, 12.0), region_id (2, 12, 1), storm_id (4, 4, 5)", "schema_without_content": "storm : storm_id , dates_active , max_speed , damage_millions_usd , name , number_deaths  | storm_damage_millions_usd : storm_id , dates_active , max_speed , total_damage_millions_usd , name , max_damage_millions_usd , avg_damage_millions_usd , min_damage_millions_usd , number_deaths  | region : region_name , region_id , region_code  | affected_region : number_city_affected , region_id , storm_id "}, {"db_id": "storm_record", "query": "select total_number_deaths, (damage_millions_usd)from storm_number_deaths where max_speed > (select avg(max_speed)from storm)", "query_toks": ["SELECT", "sum", "(", "number_deaths", ")", ",", "sum", "(", "damage_millions_USD", ")", "FROM", "storm", "WHERE", "max_speed", ">", "(", "SELECT", "avg", "(", "max_speed", ")", "FROM", "storm", ")"], "query_toks_no_value": ["select", "sum", "(", "number_deaths", ")", ",", "sum", "(", "damage_millions_usd", ")", "from", "storm", "where", "max_speed", ">", "(", "select", "avg", "(", "max_speed", ")", "from", "storm", ")"], "question": "What is the total number of deaths and damage for all storms with a max speed greater than the average?", "question_toks": ["What", "is", "the", "total", "number", "of", "deaths", "and", "damage", "for", "all", "storms", "with", "a", "max", "speed", "greater", "than", "the", "average", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 6, false], null]], [4, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"storm": "storm_id"}, "orig_query": "select sum(number_deaths), sum(damage_millions_usd) from storm where max_speed > (select avg(max_speed) from storm)", "split_map": {"storm": ["max_number_deaths", "min_number_deaths", "avg_number_deaths", "total_number_deaths"]}, "schema_with_content": "storm : name (\"Six\", \"Two\", \"Seven\"), max_speed (983, 983, 977), dates_active (\"September7\u00e2\u0080\u0093September17\", \"May19\u00e2\u0080\u0093May25\", \"September18\u00e2\u0080\u0093September25\"), number_deaths (2, 3, 3), damage_millions_usd (1.49, 10.75, 13.0), storm_id (9, 8, 8) | storm_number_deaths : dates_active (\"September7\u00e2\u0080\u0093September17\", \"May19\u00e2\u0080\u0093May25\", \"September18\u00e2\u0080\u0093September25\"), min_number_deaths (2, 3, 3), name (\"Six\", \"Two\", \"Seven\"), max_number_deaths (2, 3, 3), avg_number_deaths (2, 3, 3), storm_id (9, 8, 8), damage_millions_usd (1.49, 10.75, 13.0), max_speed (983, 983, 977), total_number_deaths (2, 3, 3) | region : region_name (\"Albania\", \"Denmark\", \"American Samoa\"), region_code (\"CY\", \"AD\", \"DK\"), region_id (13, 3, 13) | affected_region : storm_id (5, 1, 4), number_city_affected (10.0, 12.0, 37.0), region_id (2, 2, 3)", "schema_without_content": "storm : name , max_speed , dates_active , number_deaths , damage_millions_usd , storm_id  | storm_number_deaths : dates_active , min_number_deaths , name , max_number_deaths , avg_number_deaths , storm_id , damage_millions_usd , max_speed , total_number_deaths  | region : region_name , region_code , region_id  | affected_region : storm_id , number_city_affected , region_id "}, {"db_id": "storm_record", "query": "select (number_deaths), total_damage_millions_usd from storm_damage_millions_usd where max_speed > (select avg(max_speed)from storm)", "query_toks": ["SELECT", "sum", "(", "number_deaths", ")", ",", "sum", "(", "damage_millions_USD", ")", "FROM", "storm", "WHERE", "max_speed", ">", "(", "SELECT", "avg", "(", "max_speed", ")", "FROM", "storm", ")"], "query_toks_no_value": ["select", "sum", "(", "number_deaths", ")", ",", "sum", "(", "damage_millions_usd", ")", "from", "storm", "where", "max_speed", ">", "(", "select", "avg", "(", "max_speed", ")", "from", "storm", ")"], "question": "What is the total number of deaths and damage for all storms with a max speed greater than the average?", "question_toks": ["What", "is", "the", "total", "number", "of", "deaths", "and", "damage", "for", "all", "storms", "with", "a", "max", "speed", "greater", "than", "the", "average", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 6, false], null]], [4, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"storm": "storm_id"}, "orig_query": "select sum(number_deaths), sum(damage_millions_usd) from storm where max_speed > (select avg(max_speed) from storm)", "split_map": {"storm": ["max_damage_millions_usd", "min_damage_millions_usd", "avg_damage_millions_usd", "total_damage_millions_usd"]}, "schema_with_content": "storm : damage_millions_usd (10.75, 1.49, 4.05), name (\"Seven\", \"Five\", \"Seven\"), max_speed (961, 988, 983), dates_active (\"September7\u00e2\u0080\u0093September17\", \"May19\u00e2\u0080\u0093May25\", \"August26\u00e2\u0080\u0093September2\"), storm_id (2, 3, 3), number_deaths (52, 71, 3) | storm_damage_millions_usd : dates_active (\"September7\u00e2\u0080\u0093September17\", \"May19\u00e2\u0080\u0093May25\", \"August26\u00e2\u0080\u0093September2\"), total_damage_millions_usd (10.75, 1.49, 4.05), max_damage_millions_usd (10.75, 1.49, 4.05), max_speed (961, 988, 983), name (\"Seven\", \"Five\", \"Seven\"), avg_damage_millions_usd (10.75, 1.49, 4.05), storm_id (2, 3, 3), min_damage_millions_usd (10.75, 1.49, 4.05), number_deaths (52, 71, 3) | region : region_id (7, 6, 8), region_code (\"AI\", \"AG\", \"AI\"), region_name (\"Antigua and Barbuda\", \"Algeria\", \"Algeria\") | affected_region : storm_id (1, 4, 4), region_id (3, 2, 12), number_city_affected (15.0, 30.0, 12.0)", "schema_without_content": "storm : damage_millions_usd , name , max_speed , dates_active , storm_id , number_deaths  | storm_damage_millions_usd : dates_active , total_damage_millions_usd , max_damage_millions_usd , max_speed , name , avg_damage_millions_usd , storm_id , min_damage_millions_usd , number_deaths  | region : region_id , region_code , region_name  | affected_region : storm_id , region_id , number_city_affected "}, {"db_id": "storm_record", "query": "select total_number_deaths, (damage_millions_usd)from storm_number_deaths where max_speed > (select avg(max_speed)from storm)", "query_toks": ["SELECT", "sum", "(", "number_deaths", ")", ",", "sum", "(", "damage_millions_USD", ")", "FROM", "storm", "WHERE", "max_speed", ">", "(", "SELECT", "avg", "(", "max_speed", ")", "FROM", "storm", ")"], "query_toks_no_value": ["select", "sum", "(", "number_deaths", ")", ",", "sum", "(", "damage_millions_usd", ")", "from", "storm", "where", "max_speed", ">", "(", "select", "avg", "(", "max_speed", ")", "from", "storm", ")"], "question": "Return the total number of deaths and total damange in millions for storms that had a max speed greater than the average.", "question_toks": ["Return", "the", "total", "number", "of", "deaths", "and", "total", "damange", "in", "millions", "for", "storms", "that", "had", "a", "max", "speed", "greater", "than", "the", "average", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 6, false], null]], [4, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"storm": "storm_id"}, "orig_query": "select sum(number_deaths), sum(damage_millions_usd) from storm where max_speed > (select avg(max_speed) from storm)", "split_map": {"storm": ["max_number_deaths", "min_number_deaths", "avg_number_deaths", "total_number_deaths"]}, "schema_with_content": "storm : damage_millions_usd (29.3, 0.039, 1.49), dates_active (\"September22\u00e2\u0080\u0093September28\", \"August26\u00e2\u0080\u0093September2\", \"September18\u00e2\u0080\u0093September25\"), number_deaths (3, 52, 3), name (\"Eight\", \"Eight\", \"Five\"), max_speed (1007, 1007, 972), storm_id (7, 1, 6) | storm_number_deaths : min_number_deaths (3, 52, 3), max_speed (1007, 1007, 972), storm_id (7, 1, 6), name (\"Eight\", \"Eight\", \"Five\"), damage_millions_usd (29.3, 0.039, 1.49), total_number_deaths (3, 52, 3), dates_active (\"September22\u00e2\u0080\u0093September28\", \"August26\u00e2\u0080\u0093September2\", \"September18\u00e2\u0080\u0093September25\"), max_number_deaths (3, 52, 3), avg_number_deaths (3, 52, 3) | region : region_id (2, 6, 8), region_name (\"Albania\", \"Cyprus\", \"Antigua and Barbuda\"), region_code (\"AO\", \"DZ\", \"AL\") | affected_region : storm_id (4, 1, 5), region_id (12, 2, 2), number_city_affected (12.0, 22.0, 12.0)", "schema_without_content": "storm : damage_millions_usd , dates_active , number_deaths , name , max_speed , storm_id  | storm_number_deaths : min_number_deaths , max_speed , storm_id , name , damage_millions_usd , total_number_deaths , dates_active , max_number_deaths , avg_number_deaths  | region : region_id , region_name , region_code  | affected_region : storm_id , region_id , number_city_affected "}, {"db_id": "storm_record", "query": "select (number_deaths), total_damage_millions_usd from storm_damage_millions_usd where max_speed > (select avg(max_speed)from storm)", "query_toks": ["SELECT", "sum", "(", "number_deaths", ")", ",", "sum", "(", "damage_millions_USD", ")", "FROM", "storm", "WHERE", "max_speed", ">", "(", "SELECT", "avg", "(", "max_speed", ")", "FROM", "storm", ")"], "query_toks_no_value": ["select", "sum", "(", "number_deaths", ")", ",", "sum", "(", "damage_millions_usd", ")", "from", "storm", "where", "max_speed", ">", "(", "select", "avg", "(", "max_speed", ")", "from", "storm", ")"], "question": "Return the total number of deaths and total damange in millions for storms that had a max speed greater than the average.", "question_toks": ["Return", "the", "total", "number", "of", "deaths", "and", "total", "damange", "in", "millions", "for", "storms", "that", "had", "a", "max", "speed", "greater", "than", "the", "average", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 6, false], null]], [4, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"storm": "storm_id"}, "orig_query": "select sum(number_deaths), sum(damage_millions_usd) from storm where max_speed > (select avg(max_speed) from storm)", "split_map": {"storm": ["max_damage_millions_usd", "min_damage_millions_usd", "avg_damage_millions_usd", "total_damage_millions_usd"]}, "schema_with_content": "storm : storm_id (2, 10, 1), number_deaths (52, 0, 2), name (\"Five\", \"Three\", \"9 cyclones\"), max_speed (972, 977, 1002), dates_active (\"August26\u00e2\u0080\u0093September2\", \"September18\u00e2\u0080\u0093September25\", \"September7\u00e2\u0080\u0093September17\"), damage_millions_usd (1.49, 13.0, 13.0) | storm_damage_millions_usd : min_damage_millions_usd (1.49, 13.0, 13.0), dates_active (\"August26\u00e2\u0080\u0093September2\", \"September18\u00e2\u0080\u0093September25\", \"September7\u00e2\u0080\u0093September17\"), max_damage_millions_usd (1.49, 13.0, 13.0), total_damage_millions_usd (1.49, 13.0, 13.0), max_speed (972, 977, 1002), avg_damage_millions_usd (1.49, 13.0, 13.0), name (\"Five\", \"Three\", \"9 cyclones\"), storm_id (2, 10, 1), number_deaths (52, 0, 2) | region : region_id (13, 10, 5), region_name (\"Anguilla\", \"Czech Republic\", \"American Samoa\"), region_code (\"CZ\", \"AD\", \"AL\") | affected_region : storm_id (1, 5, 4), region_id (2, 2, 2), number_city_affected (12.0, 37.0, 10.0)", "schema_without_content": "storm : storm_id , number_deaths , name , max_speed , dates_active , damage_millions_usd  | storm_damage_millions_usd : min_damage_millions_usd , dates_active , max_damage_millions_usd , total_damage_millions_usd , max_speed , avg_damage_millions_usd , name , storm_id , number_deaths  | region : region_id , region_name , region_code  | affected_region : storm_id , region_id , number_city_affected "}, {"db_id": "election", "query": "select avg_population from county_population", "query_toks": ["SELECT", "avg", "(", "Population", ")", "FROM", "county"], "query_toks_no_value": ["select", "avg", "(", "population", ")", "from", "county"], "question": "Show the average population of all counties.", "question_toks": ["Show", "the", "average", "population", "of", "all", "counties", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"county": "county_id"}, "orig_query": "select avg(population) from county", "split_map": {"county": ["max_population", "min_population", "avg_population", "total_population"]}, "schema_with_content": "county : county_id (2, 4, 3), county_name (\"Colony\", \"Baltimore County\", \"Manning\"), zip_code (\"D11\", \"D11\", \"D21\"), population (79000.0, 13300.0, 21000.0) | county_population : county_id (2, 4, 3), avg_population (79000.0, 13300.0, 21000.0), min_population (79000.0, 13300.0, 21000.0), county_name (\"Colony\", \"Baltimore County\", \"Manning\"), max_population (79000.0, 13300.0, 21000.0), total_population (79000.0, 13300.0, 21000.0), zip_code (\"D11\", \"D11\", \"D21\") | party : us_senate (\"Charles Schumer\", \"(no election)\", \"Hillary Rodham Clinton\"), party (\"Democratic\", \"Liberal\", \"Liberal\"), comptroller (\"Carl McCall\", \"Alan Hevesi\", \"John Faso\"), attorney_general (\"Eliot Spitzer\", \"Andrew Cuomo\", \"Jeanine Pirro\"), lieutenant_governor (\"Jonathan Reiter\", \"Jonathan Reiter\", \"David Paterson\"), year (1998.0, 2002.0, 2006.0), party_id (7, 5, 4), governor (\"Carl McCall\", \"Peter Vallone\", \"Eliot Spitzer\") | election : first_elected (2003.0, 2006.0, 1994.0), election_id (3, 3, 8), party (7, 1, 7), district (3, 1, 1), delegate (\"Turner, Frank S. Frank S. Turner\", \"Guzzone, Guy Guy Guzzone\", \"Bates, Gail H. Gail H. Bates\"), committee (\"Ways and Means\", \"Economic Matters\", \"Environmental Matters\"), counties_represented (\"09.1 9A\", \"09.1 9A\", \"12.2 12B\")", "schema_without_content": "county : county_id , county_name , zip_code , population  | county_population : county_id , avg_population , min_population , county_name , max_population , total_population , zip_code  | party : us_senate \", \"Hillary Rodham Clinton\", party , comptroller , attorney_general , lieutenant_governor , year , party_id , governor  | election : first_elected , election_id , party , district , delegate , committee , counties_represented "}, {"db_id": "election", "query": "select avg_population from county_population", "query_toks": ["SELECT", "avg", "(", "Population", ")", "FROM", "county"], "query_toks_no_value": ["select", "avg", "(", "population", ")", "from", "county"], "question": "On average how large is the population of the counties?", "question_toks": ["On", "average", "how", "large", "is", "the", "population", "of", "the", "counties", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"county": "county_id"}, "orig_query": "select avg(population) from county", "split_map": {"county": ["max_population", "min_population", "avg_population", "total_population"]}, "schema_with_content": "county : population (13300.0, 90000.0, 87200.0), zip_code (\"D02\", \"D09\", \"D02\"), county_id (2, 2, 5), county_name (\"Mansfield\", \"Baltimore County\", \"Howard\") | county_population : county_name (\"Mansfield\", \"Baltimore County\", \"Howard\"), county_id (2, 2, 5), max_population (13300.0, 90000.0, 87200.0), min_population (13300.0, 90000.0, 87200.0), avg_population (13300.0, 90000.0, 87200.0), total_population (13300.0, 90000.0, 87200.0), zip_code (\"D02\", \"D09\", \"D02\") | party : party (\"Working Families\", \"Democratic\", \"Democratic\"), party_id (1, 6, 6), comptroller (\"Carl McCall\", \"Alan Hevesi\", \"John Faso\"), governor (\"Tom Golisano\", \"Eliot Spitzer\", \"Peter Vallone\"), us_senate (\"Charles Schumer\", \"(no election)\", \"Hillary Rodham Clinton\"), attorney_general (\"Eliot Spitzer\", \"Andrew Cuomo\", \"Jeanine Pirro\"), year (1998.0, 2002.0, 2006.0), lieutenant_governor (\"Dennis Mehiel\", \"Mary Donohue\", \"Jonathan Reiter\") | election : delegate (\"Turner, Frank S. Frank S. Turner\", \"Guzzone, Guy Guy Guzzone\", \"Guzzone, Guy Guy Guzzone\"), committee (\"Economic Matters\", \"Environmental Matters\", \"Economic Matters\"), election_id (2, 2, 5), counties_represented (\"12.1 12A\", \"12.1 12A\", \"12.2 12B\"), party (3, 1, 1), first_elected (2006.0, 2006.0, 2006.0), district (1, 1, 1)", "schema_without_content": "county : population , zip_code , county_id , county_name  | county_population : county_name , county_id , max_population , min_population , avg_population , total_population , zip_code  | party : party , party_id , comptroller , governor , us_senate \", \"Hillary Rodham Clinton\", attorney_general , year , lieutenant_governor  | election : delegate , committee , election_id , counties_represented , party , first_elected , district "}, {"db_id": "election", "query": "select max_population, min_population from county_population", "query_toks": ["SELECT", "max", "(", "Population", ")", ",", "min", "(", "Population", ")", "FROM", "county"], "query_toks_no_value": ["select", "max", "(", "population", ")", ",", "min", "(", "population", ")", "from", "county"], "question": "Return the maximum and minimum population among all counties.", "question_toks": ["Return", "the", "maximum", "and", "minimum", "population", "among", "all", "counties", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]], [2, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"county": "county_id"}, "orig_query": "select max(population), min(population) from county", "split_map": {"county": ["max_population", "min_population", "avg_population", "total_population"]}, "schema_with_content": "county : zip_code (\"D11\", \"D21\", \"D21\"), population (13300.0, 13300.0, 13300.0), county_name (\"Howard\", \"Baltimore County\", \"Manning\"), county_id (5, 1, 1) | county_population : min_population (13300.0, 13300.0, 13300.0), county_name (\"Howard\", \"Baltimore County\", \"Manning\"), total_population (13300.0, 13300.0, 13300.0), county_id (5, 1, 1), avg_population (13300.0, 13300.0, 13300.0), max_population (13300.0, 13300.0, 13300.0), zip_code (\"D11\", \"D21\", \"D21\") | party : us_senate (\"Charles Schumer\", \"(no election)\", \"Hillary Rodham Clinton\"), year (1998.0, 2002.0, 2006.0), comptroller (\"Carl McCall\", \"Alan Hevesi\", \"John Faso\"), attorney_general (\"Eliot Spitzer\", \"Andrew Cuomo\", \"Jeanine Pirro\"), party_id (7, 5, 3), lieutenant_governor (\"David Paterson\", \"Jonathan Reiter\", \"Jonathan Reiter\"), party (\"Independence\", \"Working Families\", \"Independence\"), governor (\"Peter Vallone\", \"Eliot Spitzer\", \"Eliot Spitzer\") | election : delegate (\"Turner, Frank S. Frank S. Turner\", \"Malone, James E. Jr. James E. Malone, Jr.\", \"Guzzone, Guy Guy Guzzone\"), committee (\"Environmental Matters\", \"Ways and Means\", \"Economic Matters\"), party (3, 3, 2), first_elected (2006.0, 1994.0, 2006.0), election_id (4, 1, 3), district (2, 4, 4), counties_represented (\"12.2 12B\", \"12.2 12B\", \"13\")", "schema_without_content": "county : zip_code , population , county_name , county_id  | county_population : min_population , county_name , total_population , county_id , avg_population , max_population , zip_code  | party : us_senate \", \"Hillary Rodham Clinton\", year , comptroller , attorney_general , party_id , lieutenant_governor , party , governor  | election : delegate , committee , party , first_elected , election_id , district , counties_represented "}, {"db_id": "election", "query": "select max_population, min_population from county_population", "query_toks": ["SELECT", "max", "(", "Population", ")", ",", "min", "(", "Population", ")", "FROM", "county"], "query_toks_no_value": ["select", "max", "(", "population", ")", ",", "min", "(", "population", ")", "from", "county"], "question": "What are the maximum and minimum population of the counties?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "population", "of", "the", "counties", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]], [2, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"county": "county_id"}, "orig_query": "select max(population), min(population) from county", "split_map": {"county": ["max_population", "min_population", "avg_population", "total_population"]}, "schema_with_content": "county : zip_code (\"D08\", \"D11\", \"D21\"), county_id (5, 5, 3), county_name (\"Mansfield\", \"Colony\", \"Mansfield\"), population (87200.0, 87200.0, 21000.0) | county_population : county_name (\"Mansfield\", \"Colony\", \"Mansfield\"), avg_population (87200.0, 87200.0, 21000.0), max_population (87200.0, 87200.0, 21000.0), total_population (87200.0, 87200.0, 21000.0), min_population (87200.0, 87200.0, 21000.0), county_id (5, 5, 3), zip_code (\"D08\", \"D11\", \"D21\") | party : comptroller (\"Carl McCall\", \"Alan Hevesi\", \"John Faso\"), party (\"Working Families\", \"Democratic\", \"Independence\"), lieutenant_governor (\"Sandra Frankel\", \"Jonathan Reiter\", \"Dennis Mehiel\"), governor (\"Peter Vallone\", \"Carl McCall\", \"Tom Golisano\"), party_id (1, 6, 3), year (1998.0, 2002.0, 2006.0), attorney_general (\"Eliot Spitzer\", \"Andrew Cuomo\", \"Jeanine Pirro\"), us_senate (\"Charles Schumer\", \"(no election)\", \"Hillary Rodham Clinton\") | election : counties_represented (\"09.1 9A\", \"13\", \"12.2 12B\"), party (4, 1, 2), election_id (1, 2, 5), first_elected (1994.0, 2002.0, 1994.0), committee (\"Environmental Matters\", \"Environmental Matters (Vice-Chair)\", \"Health and Government Operations\"), delegate (\"Turner, Frank S. Frank S. Turner\", \"Turner, Frank S. Frank S. Turner\", \"DeBoy, Steven J. Sr. Steven J. DeBoy, Sr.\"), district (3, 3, 4)", "schema_without_content": "county : zip_code , county_id , county_name , population  | county_population : county_name , avg_population , max_population , total_population , min_population , county_id , zip_code  | party : comptroller , party , lieutenant_governor , governor , party_id , year , attorney_general , us_senate \", \"Hillary Rodham Clinton\" | election : counties_represented , party , election_id , first_elected , committee \", \"Health and Government Operations\", delegate , district "}, {"db_id": "news_report", "query": "select avg_years_working from journalist_years_working", "query_toks": ["SELECT", "avg", "(", "Years_working", ")", "FROM", "journalist"], "query_toks_no_value": ["select", "avg", "(", "years_working", ")", "from", "journalist"], "question": "What is the average number of years spent working as a journalist?", "question_toks": ["What", "is", "the", "average", "number", "of", "years", "spent", "working", "as", "a", "journalist", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 10, false], null]]]], "union": null, "where": []}, "primary_key": {"journalist": "journalist_id"}, "orig_query": "select avg(years_working) from journalist", "split_map": {"journalist": ["max_years_working", "min_years_working", "avg_years_working", "total_years_working"]}, "schema_with_content": "event : date (\"11 October 2007\", \"7 October 2010\", \"11 October 2007\"), event_attendance (225, 1675, 225), event_id (4, 3, 2), name (\"Global Awarding\", \"Global Awarding\", \"Olympia Games Openning\"), venue (\"Marathon\", \"Motagua\", \"Hispano\") | journalist : journalist_id (5, 1, 8), age (\"25\", \"37\", \"43\"), nationality (\"England\", \"Wales\", \"Northern Ireland\"), name (\"Tom Briggs\", \"John Meaney\", \"George Gilchrist\"), years_working (3, 7, 9) | journalist_years_working : avg_years_working (3, 7, 9), name (\"Tom Briggs\", \"John Meaney\", \"George Gilchrist\"), journalist_id (5, 1, 8), max_years_working (3, 7, 9), nationality (\"England\", \"Wales\", \"Northern Ireland\"), total_years_working (3, 7, 9), age (\"25\", \"37\", \"43\"), min_years_working (3, 7, 9) | news_report : journalist_id (1, 6, 11), event_id (3, 4, 5), work_type (\"Screening\", \"Music\", \"Host\")", "schema_without_content": "event : date , event_attendance , event_id , name , venue  | journalist : journalist_id , age , nationality , name , years_working  | journalist_years_working : avg_years_working , name , journalist_id , max_years_working , nationality , total_years_working , age , min_years_working  | news_report : journalist_id , event_id , work_type "}, {"db_id": "news_report", "query": "select avg_event_attendance, max_event_attendance from event_event_attendance", "query_toks": ["SELECT", "avg", "(", "Event_Attendance", ")", ",", "max", "(", "Event_Attendance", ")", "FROM", "event"], "query_toks_no_value": ["select", "avg", "(", "event_attendance", ")", ",", "max", "(", "event_attendance", ")", "from", "event"], "question": "what are the average and maximum attendances of all events?", "question_toks": ["what", "are", "the", "average", "and", "maximum", "attendances", "of", "all", "events", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"event": "event_id"}, "orig_query": "select avg(event_attendance), max(event_attendance) from event", "split_map": {"event": ["max_event_attendance", "min_event_attendance", "avg_event_attendance", "total_event_attendance"]}, "schema_with_content": "event : venue (\"Victoria\", \"Victoria\", \"Marathon\"), event_attendance (2356, 225, 6650), event_id (2, 4, 2), date (\"11 October 2007\", \"7 October 2010\", \"9 April 2014\"), name (\"Special Exhibition\", \"Global Awarding\", \"Special Exhibition\") | event_event_attendance : venue (\"Victoria\", \"Victoria\", \"Marathon\"), max_event_attendance (2356, 225, 6650), name (\"Special Exhibition\", \"Global Awarding\", \"Special Exhibition\"), event_id (2, 4, 2), min_event_attendance (2356, 225, 6650), avg_event_attendance (2356, 225, 6650), date (\"11 October 2007\", \"7 October 2010\", \"9 April 2014\"), total_event_attendance (2356, 225, 6650) | journalist : nationality (\"England\", \"Wales\", \"Northern Ireland\"), years_working (3, 9, 5), name (\"Tony Waddington\", \"Fred Keenor\", \"Jack Meaney\"), journalist_id (1, 1, 9), age (\"43\", \"34\", \"25\") | news_report : journalist_id (6, 1, 8), work_type (\"Screening\", \"Music\", \"Host\"), event_id (4, 1, 5)", "schema_without_content": "event : venue , event_attendance , event_id , date , name  | event_event_attendance : venue , max_event_attendance , name , event_id , min_event_attendance , avg_event_attendance , date , total_event_attendance  | journalist : nationality , years_working , name , journalist_id , age  | news_report : journalist_id , work_type , event_id "}, {"db_id": "sakila_1", "query": "select total_amount from payment_amount", "query_toks": ["SELECT", "sum", "(", "amount", ")", "FROM", "payment"], "query_toks_no_value": ["select", "sum", "(", "amount", ")", "from", "payment"], "question": "What is the total amount of all payments?", "question_toks": ["What", "is", "the", "total", "amount", "of", "all", "payments", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 65, false], null]]]], "union": null, "where": []}, "primary_key": {"payment": "payment_id"}, "orig_query": "select sum(amount) from payment", "split_map": {"payment": ["max_amount", "min_amount", "avg_amount", "total_amount"]}, "schema_with_content": "actor : actor_id (64, 168, 128), last_name (\"STALLONE\", \"DUNST\", \"CHAPLIN\"), last_update (\"2006-02-15 04:34:33\"), first_name (\"EWAN\", \"MORGAN\", \"GENE\") | address : city_id (271, 40, 296), address_id (423, 322, 115), last_update (\"2006-02-15 04:45:30\"), postal_code (\"36490\", \"27796\", \"22025\"), address2 (None, \"\"), address (\"1666 Qomsheh Drive\", \"1158 Mandi Bahauddin Parkway\", \"1741 Hoshiarpur Boulevard\"), district (\"Miranda\", \"Usak\", \"Hanoi\"), phone (\"9099941466\", \"407752414682\", \"541327526474\") | category : category_id (1, 6, 5), name (\"Children\", \"Foreign\", \"Animation\"), last_update (\"2006-02-15 04:46:27\") | city : last_update (\"2006-02-15 04:45:25\"), city_id (461, 499, 471), country_id (92, 15, 106), city (\"Ziguinchor\", \"San Lorenzo\", \"Xiangfan\") | country : country (\"Tuvalu\", \"Kazakstan\", \"Pakistan\"), last_update (\"2006-02-15 04:44:00\"), country_id (72, 80, 95) | customer : active (1, 0), customer_id (560, 409, 402), last_update (\"2006-02-15 04:57:20\"), last_name (\"GONZALEZ\", \"FERGUSON\", \"BROWN\"), store_id (1, 2), first_name (\"EDITH\", \"LILLIE\", \"VICTORIA\"), address_id (389, 522, 543), create_date (\"2006-02-14 22:04:36\", \"2006-02-14 22:04:37\"), email (\"RONALD.WEINER@sakilacustomer.org\", \"IRMA.PEARSON@sakilacustomer.org\", \"GLENN.PULLEN@sakilacustomer.org\") | film : replacement_cost (13.99, 26.99, 23.99), description (\"A Beautiful Drama of a Robot And a Lumberjack who must Discover a Technical Writer in A Shark Tank\", \"A Insightful Documentary of a Waitress And a Butler who must Vanquish a Composer in Australia\", \"A Thrilling Display of a Husband And a Butler who must Reach a Pastry Chef in California\"), title (\"MINE TITANS\", \"GARDEN ISLAND\", \"CONNECTION MICROCOSMOS\"), length (115, 46, 184), language_id (1), rental_duration (6, 5, 5), rating (\"G\", \"R\", \"PG-13\"), rental_rate (0.99, 4.99, 2.99), last_update (\"2006-02-15 05:03:42\"), special_features (\"Deleted Scenes,Behind the Scenes\", \"Commentaries,Deleted Scenes\", \"Commentaries,Deleted Scenes,Behind the Scenes\"), release_year (2006), film_id (379, 550, 960), original_language_id (None) | film_actor : actor_id (39, 65, 155), film_id (238, 729, 670), last_update (\"2006-02-15 05:05:03\") | film_category : category_id (15, 13, 7), last_update (\"2006-02-15 05:07:09\"), film_id (227, 866, 641) | film_text : title (), film_id (), description () | inventory : inventory_id (246, 2032, 4524), film_id (78, 634, 791), store_id (1, 2), last_update (\"2006-02-15 05:09:17\") | language : name (), language_id (), last_update () | payment : payment_id (2663, 7050, 403), customer_id (131, 105, 172), staff_id (1, 2), payment_date (\"2005-08-01 06:09:37\", \"2005-06-21 13:37:18\", \"2005-06-16 23:44:13\"), last_update (\"2006-02-15 22:16:49\", \"2006-02-15 22:13:00\", \"2006-02-15 22:20:02\"), rental_id (11659, 10507, 13887), amount (7.98, 7.99, 11.99) | payment_amount : staff_id (1, 2), payment_id (2663, 7050, 403), rental_id (11659, 10507, 13887), customer_id (131, 105, 172), total_amount (7.98, 7.99, 11.99), avg_amount (7.98, 7.99, 11.99), max_amount (7.98, 7.99, 11.99), min_amount (7.98, 7.99, 11.99), payment_date (\"2005-08-01 06:09:37\", \"2005-06-21 13:37:18\", \"2005-06-16 23:44:13\"), last_update (\"2006-02-15 22:16:49\", \"2006-02-15 22:13:00\", \"2006-02-15 22:20:02\") | rental : inventory_id (3721, 1404, 535), customer_id (319, 454, 22), rental_id (1654, 9926, 3532), rental_date (\"2005-08-22 00:57:43\", \"2005-08-18 17:52:51\", \"2005-05-31 06:42:30\"), return_date (\"2005-08-01 19:52:18\", \"2005-08-27 06:11:48\", \"2005-05-31 18:17:03\"), last_update (\"2006-02-15 21:30:53\", \"2006-02-23 04:12:08\"), staff_id (1, 2) | staff : first_name (), picture (), address_id (), username (), store_id (), last_update (), password (), staff_id (), email (), active (), last_name () | store : store_id (), address_id (), last_update (), manager_staff_id ()", "schema_without_content": "actor : actor_id , last_name , last_update , first_name  | address : city_id , address_id , last_update , postal_code , address2 , address , district , phone  | category : category_id , name , last_update  | city : last_update , city_id , country_id , city  | country : country , last_update , country_id  | customer : active , customer_id , last_update , last_name , store_id , first_name , address_id , create_date , email  | film : replacement_cost , description , title , length , language_id , rental_duration , rating , rental_rate , last_update , special_features , release_year , film_id , original_language_id  | film_actor : actor_id , film_id , last_update  | film_category : category_id , last_update , film_id  | film_text : title , film_id , description  | inventory : inventory_id , film_id , store_id , last_update  | language : name , language_id , last_update  | payment : payment_id , customer_id , staff_id , payment_date , last_update , rental_id , amount  | payment_amount : staff_id , payment_id , rental_id , customer_id , total_amount , avg_amount , max_amount , min_amount , payment_date , last_update  | rental : inventory_id , customer_id , rental_id , rental_date , return_date , last_update , staff_id  | staff : first_name , picture , address_id , username , store_id , last_update , password , staff_id , email , active , last_name  | store : store_id , address_id , last_update , manager_staff_id "}, {"db_id": "sakila_1", "query": "select total_amount from payment_amount", "query_toks": ["SELECT", "sum", "(", "amount", ")", "FROM", "payment"], "query_toks_no_value": ["select", "sum", "(", "amount", ")", "from", "payment"], "question": "Return the sum of all payment amounts.", "question_toks": ["Return", "the", "sum", "of", "all", "payment", "amounts", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 65, false], null]]]], "union": null, "where": []}, "primary_key": {"payment": "payment_id"}, "orig_query": "select sum(amount) from payment", "split_map": {"payment": ["max_amount", "min_amount", "avg_amount", "total_amount"]}, "schema_with_content": "actor : actor_id (135, 83, 27), first_name (\"JESSICA\", \"HENRY\", \"WHOOPI\"), last_update (\"2006-02-15 04:34:33\"), last_name (\"MCCONAUGHEY\", \"MIRANDA\", \"WALKEN\") | address : city_id (287, 351, 66), address_id (171, 468, 419), address2 (None, \"\"), phone (\"275595571388\", \"746251338300\", \"342709348083\"), address (\"319 Springs Loop\", \"319 Plock Parkway\", \"1031 Daugavpils Parkway\"), last_update (\"2006-02-15 04:45:30\"), postal_code (\"27796\", \"75834\", \"64308\"), district (\"Haiphong\", \"Perak\", \"Manab\") | category : last_update (\"2006-02-15 04:46:27\"), category_id (1, 14, 16), name (\"Documentary\", \"Travel\", \"Sports\") | city : city_id (100, 44, 383), last_update (\"2006-02-15 04:45:25\"), city (\"Bucuresti\", \"Kamyin\", \"London\"), country_id (63, 34, 77) | country : country (\"Nepal\", \"Bangladesh\", \"Cameroon\"), country_id (83, 3, 31), last_update (\"2006-02-15 04:44:00\") | customer : customer_id (451, 71, 183), create_date (\"2006-02-14 22:04:36\", \"2006-02-14 22:04:37\"), last_update (\"2006-02-15 04:57:20\"), active (1, 0), first_name (\"FREDDIE\", \"DARRELL\", \"PEGGY\"), last_name (\"CRUZ\", \"KINDER\", \"KNIGHT\"), store_id (1, 2), email (\"BRENT.HARKINS@sakilacustomer.org\", \"KURT.EMMONS@sakilacustomer.org\", \"CLYDE.TOBIAS@sakilacustomer.org\"), address_id (244, 377, 546) | film : special_features (\"Trailers,Commentaries\", \"Trailers,Commentaries,Behind the Scenes\", \"Commentaries,Deleted Scenes\"), length (108, 145, 59), original_language_id (None), replacement_cost (12.99, 29.99, 13.99), rental_duration (4, 7, 7), description (\"A Fanciful Panorama of a Boy And a Woman who must Vanquish a Database Administrator in The Outback\", \"A Unbelieveable Character Study of a Dog And a Mad Cow who must Kill a Monkey in Berlin\", \"A Amazing Epistle of a Woman And a Squirrel who must Fight a Hunter in A Baloon\"), language_id (1), last_update (\"2006-02-15 05:03:42\"), title (\"CONTACT ANONYMOUS\", \"SLUMS DUCK\", \"PURPLE MOVIE\"), rating (\"PG\", \"PG\", \"G\"), release_year (2006), film_id (175, 246, 680), rental_rate (0.99, 4.99, 2.99) | film_actor : actor_id (106, 140, 130), film_id (462, 753, 59), last_update (\"2006-02-15 05:05:03\") | film_category : category_id (4, 14, 1), film_id (992, 434, 669), last_update (\"2006-02-15 05:07:09\") | film_text : description (), title (), film_id () | inventory : store_id (1, 2), film_id (268, 124, 544), inventory_id (2734, 1055, 2330), last_update (\"2006-02-15 05:09:17\") | language : language_id (), last_update (), name () | payment : customer_id (269, 530, 526), amount (10.99, 11.99, 6.99), payment_id (1111, 11575, 12871), staff_id (1, 2), rental_id (9693, 7315, 8191), last_update (\"2006-02-15 22:14:27\", \"2006-02-15 22:14:44\", \"2006-02-15 22:22:26\"), payment_date (\"2005-06-15 14:38:15\", \"2005-07-31 14:49:04\", \"2005-08-02 14:29:43\") | payment_amount : payment_id (1111, 11575, 12871), rental_id (9693, 7315, 8191), customer_id (269, 530, 526), min_amount (10.99, 11.99, 6.99), avg_amount (10.99, 11.99, 6.99), total_amount (10.99, 11.99, 6.99), max_amount (10.99, 11.99, 6.99), staff_id (1, 2), payment_date (\"2005-06-15 14:38:15\", \"2005-07-31 14:49:04\", \"2005-08-02 14:29:43\"), last_update (\"2006-02-15 22:14:27\", \"2006-02-15 22:14:44\", \"2006-02-15 22:22:26\") | rental : rental_id (11611, 12288, 13822), inventory_id (2409, 3662, 4054), staff_id (1, 2), return_date (\"2005-08-27 05:57:54\", \"2005-07-21 00:53:37\", \"2005-06-23 05:49:57\"), last_update (\"2006-02-15 21:30:53\", \"2006-02-23 04:12:08\"), customer_id (157, 157, 508), rental_date (\"2005-06-19 13:56:51\", \"2005-07-29 20:56:14\", \"2005-08-01 06:06:49\") | staff : first_name (), email (), password (), store_id (), staff_id (), address_id (), last_name (), picture (), username (), last_update (), active () | store : address_id (), last_update (), manager_staff_id (), store_id ()", "schema_without_content": "actor : actor_id , first_name , last_update , last_name  | address : city_id , address_id , address2 , phone , address , last_update , postal_code , district  | category : last_update , category_id , name  | city : city_id , last_update , city , country_id  | country : country , country_id , last_update  | customer : customer_id , create_date , last_update , active , first_name , last_name , store_id , email , address_id  | film : special_features , length , original_language_id , replacement_cost , rental_duration , description , language_id , last_update , title , rating , release_year , film_id , rental_rate  | film_actor : actor_id , film_id , last_update  | film_category : category_id , film_id , last_update  | film_text : description , title , film_id  | inventory : store_id , film_id , inventory_id , last_update  | language : language_id , last_update , name  | payment : customer_id , amount , payment_id , staff_id , rental_id , last_update , payment_date  | payment_amount : payment_id , rental_id , customer_id , min_amount , avg_amount , total_amount , max_amount , staff_id , payment_date , last_update  | rental : rental_id , inventory_id , staff_id , return_date , last_update , customer_id , rental_date  | staff : first_name , email , password , store_id , staff_id , address_id , last_name , picture , username , last_update , active  | store : address_id , last_update , manager_staff_id , store_id "}, {"db_id": "loan_1", "query": "select total_no_of_customers from bank_no_of_customers", "query_toks": ["SELECT", "sum", "(", "no_of_customers", ")", "FROM", "bank"], "query_toks_no_value": ["select", "sum", "(", "no_of_customers", ")", "from", "bank"], "question": "How many customers are there?", "question_toks": ["How", "many", "customers", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"bank": "branch_id"}, "orig_query": "select sum(no_of_customers) from bank", "split_map": {"bank": ["max_no_of_customers", "min_no_of_customers", "avg_no_of_customers", "total_no_of_customers"]}, "schema_with_content": "bank : state (\"New York\", \"Utah\", \"Texas\"), city (\"New York City\", \"Salt Lake City\", \"Austin\"), bname (\"broadway\", \"broadway\", \"downtown\"), branch_id (1, 3, 1), no_of_customers (123, 123, 367) | bank_no_of_customers : bname (\"broadway\", \"broadway\", \"downtown\"), max_no_of_customers (123, 123, 367), branch_id (1, 3, 1), min_no_of_customers (123, 123, 367), avg_no_of_customers (123, 123, 367), total_no_of_customers (123, 123, 367), city (\"New York City\", \"Salt Lake City\", \"Austin\"), state (\"New York\", \"Utah\", \"Texas\") | customer : cust_id (\"1\", \"2\", \"3\"), no_of_loans (2, 1, 0), acc_type (\"saving\", \"checking\"), credit_score (30, 20, 210), branch_id (2, 1, 3), acc_bal (2000, 1000, 800000), cust_name (\"Mary\", \"Jack\", \"Owen\"), state (\"Utah\", \"Texas\", \"New York\") | loan : loan_id (\"1\", \"2\", \"3\"), branch_id (\"1\", \"2\", \"3\"), amount (2050, 3000, 5000), loan_type (\"Mortgages\", \"Auto\", \"Business\"), cust_id (\"1\", \"3\")", "schema_without_content": "bank : state , city , bname , branch_id , no_of_customers  | bank_no_of_customers : bname , max_no_of_customers , branch_id , min_no_of_customers , avg_no_of_customers , total_no_of_customers , city , state  | customer : cust_id , no_of_loans , acc_type , credit_score , branch_id , acc_bal , cust_name , state  | loan : loan_id , branch_id , amount , loan_type , cust_id "}, {"db_id": "loan_1", "query": "select total_no_of_customers from bank_no_of_customers", "query_toks": ["SELECT", "sum", "(", "no_of_customers", ")", "FROM", "bank"], "query_toks_no_value": ["select", "sum", "(", "no_of_customers", ")", "from", "bank"], "question": "What is the total number of customers across banks?", "question_toks": ["What", "is", "the", "total", "number", "of", "customers", "across", "banks", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"bank": "branch_id"}, "orig_query": "select sum(no_of_customers) from bank", "split_map": {"bank": ["max_no_of_customers", "min_no_of_customers", "avg_no_of_customers", "total_no_of_customers"]}, "schema_with_content": "bank : branch_id (1, 1, 3), state (\"New York\", \"Utah\", \"Texas\"), bname (\"broadway\", \"morningside\", \"downtown\"), no_of_customers (453, 453, 367), city (\"New York City\", \"Salt Lake City\", \"Austin\") | bank_no_of_customers : max_no_of_customers (453, 453, 367), min_no_of_customers (453, 453, 367), avg_no_of_customers (453, 453, 367), bname (\"broadway\", \"morningside\", \"downtown\"), total_no_of_customers (453, 453, 367), branch_id (1, 1, 3), city (\"New York City\", \"Salt Lake City\", \"Austin\"), state (\"New York\", \"Utah\", \"Texas\") | customer : no_of_loans (2, 1, 0), acc_type (\"saving\", \"checking\"), state (\"Utah\", \"Texas\", \"New York\"), branch_id (2, 1, 3), acc_bal (2000, 1000, 800000), credit_score (30, 20, 210), cust_id (\"1\", \"2\", \"3\"), cust_name (\"Mary\", \"Jack\", \"Owen\") | loan : branch_id (\"1\", \"2\", \"3\"), loan_id (\"1\", \"2\", \"3\"), cust_id (\"1\", \"3\"), loan_type (\"Mortgages\", \"Auto\", \"Business\"), amount (2050, 3000, 5000)", "schema_without_content": "bank : branch_id , state , bname , no_of_customers , city  | bank_no_of_customers : max_no_of_customers , min_no_of_customers , avg_no_of_customers , bname , total_no_of_customers , branch_id , city , state  | customer : no_of_loans , acc_type , state , branch_id , acc_bal , credit_score , cust_id , cust_name  | loan : branch_id , loan_id , cust_id , loan_type , amount "}, {"db_id": "loan_1", "query": "select total_no_of_customers from bank_no_of_customers where city = 'New York City'", "query_toks": ["SELECT", "sum", "(", "no_of_customers", ")", "FROM", "bank", "WHERE", "city", "=", "'New", "York", "City", "'"], "query_toks_no_value": ["select", "sum", "(", "no_of_customers", ")", "from", "bank", "where", "city", "=", "value"], "question": "Find the number of customers in the banks at New York City.", "question_toks": ["Find", "the", "number", "of", "customers", "in", "the", "banks", "at", "New", "York", "City", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"New York City\"", null]]}, "primary_key": {"bank": "branch_id"}, "orig_query": "select sum(no_of_customers) from bank where city = 'New York City'", "split_map": {"bank": ["max_no_of_customers", "min_no_of_customers", "avg_no_of_customers", "total_no_of_customers"]}, "schema_with_content": "bank : no_of_customers (453, 123, 203), city (\"New York City\", \"Salt Lake City\", \"Austin\"), branch_id (2, 3, 4), bname (\"broadway\", \"downtown\", \"high\"), state (\"New York\", \"Utah\", \"Texas\") | bank_no_of_customers : min_no_of_customers (453, 123, 203), total_no_of_customers (453, 123, 203), branch_id (2, 3, 4), avg_no_of_customers (453, 123, 203), max_no_of_customers (453, 123, 203), bname (\"broadway\", \"downtown\", \"high\"), city (\"New York City\", \"Salt Lake City\", \"Austin\"), state (\"New York\", \"Utah\", \"Texas\") | customer : cust_name (\"Mary\", \"Jack\", \"Owen\"), credit_score (30, 20, 210), acc_bal (2000, 1000, 800000), state (\"Utah\", \"Texas\", \"New York\"), no_of_loans (2, 1, 0), cust_id (\"1\", \"2\", \"3\"), acc_type (\"saving\", \"checking\"), branch_id (2, 1, 3) | loan : cust_id (\"1\", \"3\"), loan_id (\"1\", \"2\", \"3\"), branch_id (\"1\", \"2\", \"3\"), loan_type (\"Mortgages\", \"Auto\", \"Business\"), amount (2050, 3000, 5000)", "schema_without_content": "bank : no_of_customers , city , branch_id , bname , state  | bank_no_of_customers : min_no_of_customers , total_no_of_customers , branch_id , avg_no_of_customers , max_no_of_customers , bname , city , state  | customer : cust_name , credit_score , acc_bal , state , no_of_loans , cust_id , acc_type , branch_id  | loan : cust_id , loan_id , branch_id , loan_type , amount "}, {"db_id": "loan_1", "query": "select total_no_of_customers from bank_no_of_customers where city = 'New York City'", "query_toks": ["SELECT", "sum", "(", "no_of_customers", ")", "FROM", "bank", "WHERE", "city", "=", "'New", "York", "City", "'"], "query_toks_no_value": ["select", "sum", "(", "no_of_customers", ")", "from", "bank", "where", "city", "=", "value"], "question": "What is the total number of customers who use banks in New York City?", "question_toks": ["What", "is", "the", "total", "number", "of", "customers", "who", "use", "banks", "in", "New", "York", "City", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"New York City\"", null]]}, "primary_key": {"bank": "branch_id"}, "orig_query": "select sum(no_of_customers) from bank where city = 'New York City'", "split_map": {"bank": ["max_no_of_customers", "min_no_of_customers", "avg_no_of_customers", "total_no_of_customers"]}, "schema_with_content": "bank : branch_id (3, 3, 1), city (\"New York City\", \"Salt Lake City\", \"Austin\"), bname (\"downtown\", \"morningside\", \"broadway\"), state (\"New York\", \"Utah\", \"Texas\"), no_of_customers (367, 453, 367) | bank_no_of_customers : max_no_of_customers (367, 453, 367), bname (\"downtown\", \"morningside\", \"broadway\"), min_no_of_customers (367, 453, 367), branch_id (3, 3, 1), total_no_of_customers (367, 453, 367), avg_no_of_customers (367, 453, 367), city (\"New York City\", \"Salt Lake City\", \"Austin\"), state (\"New York\", \"Utah\", \"Texas\") | customer : cust_name (\"Mary\", \"Jack\", \"Owen\"), cust_id (\"1\", \"2\", \"3\"), credit_score (30, 20, 210), acc_type (\"saving\", \"checking\"), acc_bal (2000, 1000, 800000), state (\"Utah\", \"Texas\", \"New York\"), no_of_loans (2, 1, 0), branch_id (2, 1, 3) | loan : loan_type (\"Mortgages\", \"Auto\", \"Business\"), amount (2050, 3000, 5000), branch_id (\"1\", \"2\", \"3\"), cust_id (\"1\", \"3\"), loan_id (\"1\", \"2\", \"3\")", "schema_without_content": "bank : branch_id , city , bname , state , no_of_customers  | bank_no_of_customers : max_no_of_customers , bname , min_no_of_customers , branch_id , total_no_of_customers , avg_no_of_customers , city , state  | customer : cust_name , cust_id , credit_score , acc_type , acc_bal , state , no_of_loans , branch_id  | loan : loan_type , amount , branch_id , cust_id , loan_id "}, {"db_id": "loan_1", "query": "select avg_no_of_customers from bank_no_of_customers where state = 'Utah'", "query_toks": ["SELECT", "avg", "(", "no_of_customers", ")", "FROM", "bank", "WHERE", "state", "=", "'Utah", "'"], "query_toks_no_value": ["select", "avg", "(", "no_of_customers", ")", "from", "bank", "where", "state", "=", "value"], "question": "Find the average number of customers in all banks of Utah state.", "question_toks": ["Find", "the", "average", "number", "of", "customers", "in", "all", "banks", "of", "Utah", "state", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Utah\"", null]]}, "primary_key": {"bank": "branch_id"}, "orig_query": "select avg(no_of_customers) from bank where state = 'Utah'", "split_map": {"bank": ["max_no_of_customers", "min_no_of_customers", "avg_no_of_customers", "total_no_of_customers"]}, "schema_with_content": "bank : branch_id (2, 3, 3), bname (\"high\", \"downtown\", \"downtown\"), city (\"New York City\", \"Salt Lake City\", \"Austin\"), no_of_customers (453, 123, 203), state (\"New York\", \"Utah\", \"Texas\") | bank_no_of_customers : avg_no_of_customers (453, 123, 203), max_no_of_customers (453, 123, 203), bname (\"high\", \"downtown\", \"downtown\"), total_no_of_customers (453, 123, 203), min_no_of_customers (453, 123, 203), branch_id (2, 3, 3), city (\"New York City\", \"Salt Lake City\", \"Austin\"), state (\"New York\", \"Utah\", \"Texas\") | customer : branch_id (2, 1, 3), acc_bal (2000, 1000, 800000), cust_name (\"Mary\", \"Jack\", \"Owen\"), credit_score (30, 20, 210), no_of_loans (2, 1, 0), cust_id (\"1\", \"2\", \"3\"), state (\"Utah\", \"Texas\", \"New York\"), acc_type (\"saving\", \"checking\") | loan : branch_id (\"1\", \"2\", \"3\"), loan_id (\"1\", \"2\", \"3\"), loan_type (\"Mortgages\", \"Auto\", \"Business\"), cust_id (\"1\", \"3\"), amount (2050, 3000, 5000)", "schema_without_content": "bank : branch_id , bname , city , no_of_customers , state  | bank_no_of_customers : avg_no_of_customers , max_no_of_customers , bname , total_no_of_customers , min_no_of_customers , branch_id , city , state  | customer : branch_id , acc_bal , cust_name , credit_score , no_of_loans , cust_id , state , acc_type  | loan : branch_id , loan_id , loan_type , cust_id , amount "}, {"db_id": "loan_1", "query": "select avg_no_of_customers from bank_no_of_customers where state = 'Utah'", "query_toks": ["SELECT", "avg", "(", "no_of_customers", ")", "FROM", "bank", "WHERE", "state", "=", "'Utah", "'"], "query_toks_no_value": ["select", "avg", "(", "no_of_customers", ")", "from", "bank", "where", "state", "=", "value"], "question": "What is the average number of customers across banks in the state of Utah?", "question_toks": ["What", "is", "the", "average", "number", "of", "customers", "across", "banks", "in", "the", "state", "of", "Utah", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Utah\"", null]]}, "primary_key": {"bank": "branch_id"}, "orig_query": "select avg(no_of_customers) from bank where state = 'Utah'", "split_map": {"bank": ["max_no_of_customers", "min_no_of_customers", "avg_no_of_customers", "total_no_of_customers"]}, "schema_with_content": "bank : no_of_customers (203, 453, 123), state (\"New York\", \"Utah\", \"Texas\"), city (\"New York City\", \"Salt Lake City\", \"Austin\"), bname (\"broadway\", \"morningside\", \"downtown\"), branch_id (4, 1, 1) | bank_no_of_customers : total_no_of_customers (203, 453, 123), bname (\"broadway\", \"morningside\", \"downtown\"), max_no_of_customers (203, 453, 123), avg_no_of_customers (203, 453, 123), min_no_of_customers (203, 453, 123), branch_id (4, 1, 1), city (\"New York City\", \"Salt Lake City\", \"Austin\"), state (\"New York\", \"Utah\", \"Texas\") | customer : state (\"Utah\", \"Texas\", \"New York\"), no_of_loans (2, 1, 0), acc_bal (2000, 1000, 800000), cust_id (\"1\", \"2\", \"3\"), credit_score (30, 20, 210), branch_id (2, 1, 3), acc_type (\"saving\", \"checking\"), cust_name (\"Mary\", \"Jack\", \"Owen\") | loan : amount (2050, 3000, 5000), branch_id (\"1\", \"2\", \"3\"), loan_type (\"Mortgages\", \"Auto\", \"Business\"), loan_id (\"1\", \"2\", \"3\"), cust_id (\"1\", \"3\")", "schema_without_content": "bank : no_of_customers , state , city , bname , branch_id  | bank_no_of_customers : total_no_of_customers , bname , max_no_of_customers , avg_no_of_customers , min_no_of_customers , branch_id , city , state  | customer : state , no_of_loans , acc_bal , cust_id , credit_score , branch_id , acc_type , cust_name  | loan : amount , branch_id , loan_type , loan_id , cust_id "}, {"db_id": "loan_1", "query": "select avg_no_of_customers from bank_no_of_customers", "query_toks": ["SELECT", "avg", "(", "no_of_customers", ")", "FROM", "bank"], "query_toks_no_value": ["select", "avg", "(", "no_of_customers", ")", "from", "bank"], "question": "Find the average number of customers cross all banks.", "question_toks": ["Find", "the", "average", "number", "of", "customers", "cross", "all", "banks", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"bank": "branch_id"}, "orig_query": "select avg(no_of_customers) from bank", "split_map": {"bank": ["max_no_of_customers", "min_no_of_customers", "avg_no_of_customers", "total_no_of_customers"]}, "schema_with_content": "bank : branch_id (1, 3, 1), city (\"New York City\", \"Salt Lake City\", \"Austin\"), bname (\"morningside\", \"downtown\", \"high\"), state (\"New York\", \"Utah\", \"Texas\"), no_of_customers (123, 203, 453) | bank_no_of_customers : branch_id (1, 3, 1), min_no_of_customers (123, 203, 453), bname (\"morningside\", \"downtown\", \"high\"), avg_no_of_customers (123, 203, 453), total_no_of_customers (123, 203, 453), max_no_of_customers (123, 203, 453), city (\"New York City\", \"Salt Lake City\", \"Austin\"), state (\"New York\", \"Utah\", \"Texas\") | customer : cust_id (\"1\", \"2\", \"3\"), branch_id (2, 1, 3), no_of_loans (2, 1, 0), credit_score (30, 20, 210), acc_type (\"saving\", \"checking\"), state (\"Utah\", \"Texas\", \"New York\"), acc_bal (2000, 1000, 800000), cust_name (\"Mary\", \"Jack\", \"Owen\") | loan : loan_id (\"1\", \"2\", \"3\"), branch_id (\"1\", \"2\", \"3\"), loan_type (\"Mortgages\", \"Auto\", \"Business\"), amount (2050, 3000, 5000), cust_id (\"1\", \"3\")", "schema_without_content": "bank : branch_id , city , bname , state , no_of_customers  | bank_no_of_customers : branch_id , min_no_of_customers , bname , avg_no_of_customers , total_no_of_customers , max_no_of_customers , city , state  | customer : cust_id , branch_id , no_of_loans , credit_score , acc_type , state , acc_bal , cust_name  | loan : loan_id , branch_id , loan_type , amount , cust_id "}, {"db_id": "loan_1", "query": "select avg_no_of_customers from bank_no_of_customers", "query_toks": ["SELECT", "avg", "(", "no_of_customers", ")", "FROM", "bank"], "query_toks_no_value": ["select", "avg", "(", "no_of_customers", ")", "from", "bank"], "question": "What is the average number of bank customers?", "question_toks": ["What", "is", "the", "average", "number", "of", "bank", "customers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"bank": "branch_id"}, "orig_query": "select avg(no_of_customers) from bank", "split_map": {"bank": ["max_no_of_customers", "min_no_of_customers", "avg_no_of_customers", "total_no_of_customers"]}, "schema_with_content": "bank : no_of_customers (203, 203, 453), branch_id (1, 1, 4), state (\"New York\", \"Utah\", \"Texas\"), city (\"New York City\", \"Salt Lake City\", \"Austin\"), bname (\"downtown\", \"downtown\", \"broadway\") | bank_no_of_customers : bname (\"downtown\", \"downtown\", \"broadway\"), total_no_of_customers (203, 203, 453), min_no_of_customers (203, 203, 453), max_no_of_customers (203, 203, 453), avg_no_of_customers (203, 203, 453), branch_id (1, 1, 4), city (\"New York City\", \"Salt Lake City\", \"Austin\"), state (\"New York\", \"Utah\", \"Texas\") | customer : credit_score (30, 20, 210), state (\"Utah\", \"Texas\", \"New York\"), cust_id (\"1\", \"2\", \"3\"), acc_type (\"saving\", \"checking\"), cust_name (\"Mary\", \"Jack\", \"Owen\"), branch_id (2, 1, 3), acc_bal (2000, 1000, 800000), no_of_loans (2, 1, 0) | loan : cust_id (\"1\", \"3\"), amount (2050, 3000, 5000), loan_id (\"1\", \"2\", \"3\"), loan_type (\"Mortgages\", \"Auto\", \"Business\"), branch_id (\"1\", \"2\", \"3\")", "schema_without_content": "bank : no_of_customers , branch_id , state , city , bname  | bank_no_of_customers : bname , total_no_of_customers , min_no_of_customers , max_no_of_customers , avg_no_of_customers , branch_id , city , state  | customer : credit_score , state , cust_id , acc_type , cust_name , branch_id , acc_bal , no_of_loans  | loan : cust_id , amount , loan_id , loan_type , branch_id "}, {"db_id": "loan_1", "query": "select total_acc_bal from customer_acc_bal where state = 'Utah' or state = 'Texas'", "query_toks": ["SELECT", "sum", "(", "acc_bal", ")", "FROM", "customer", "WHERE", "state", "=", "'Utah", "'", "OR", "state", "=", "'Texas", "'"], "query_toks_no_value": ["select", "sum", "(", "acc_bal", ")", "from", "customer", "where", "state", "=", "value", "or", "state", "=", "value"], "question": "Find the total account balance of each customer from Utah or Texas.", "question_toks": ["Find", "the", "total", "account", "balance", "of", "each", "customer", "from", "Utah", "or", "Texas", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"Utah\"", null], "or", [false, 2, [0, [0, 13, false], null], "\"Texas\"", null]]}, "primary_key": {"customer": "cust_id"}, "orig_query": "select sum(acc_bal) from customer where state = 'Utah' or state = 'Texas'", "split_map": {"customer": ["max_acc_bal", "min_acc_bal", "avg_acc_bal", "total_acc_bal"]}, "schema_with_content": "bank : state (\"New York\", \"Utah\", \"Texas\"), city (\"New York City\", \"Salt Lake City\", \"Austin\"), no_of_customers (123, 203, 453), bname (\"morningside\", \"downtown\", \"morningside\"), branch_id (1, 1, 1) | customer : branch_id (2, 1, 3), no_of_loans (2, 1, 0), credit_score (30, 20, 210), acc_bal (2000, 1000, 800000), cust_id (\"1\", \"2\", \"3\"), state (\"Utah\", \"Texas\", \"New York\"), cust_name (\"Mary\", \"Jack\", \"Owen\"), acc_type (\"saving\", \"checking\") | customer_acc_bal : avg_acc_bal (2000, 1000, 800000), cust_name (\"Mary\", \"Jack\", \"Owen\"), acc_type (\"saving\", \"checking\"), total_acc_bal (2000, 1000, 800000), max_acc_bal (2000, 1000, 800000), min_acc_bal (2000, 1000, 800000), cust_id (\"1\", \"2\", \"3\"), no_of_loans (2, 1, 0), credit_score (30, 20, 210), branch_id (2, 1, 3), state (\"Utah\", \"Texas\", \"New York\") | loan : amount (2050, 3000, 5000), loan_id (\"1\", \"2\", \"3\"), branch_id (\"1\", \"2\", \"3\"), loan_type (\"Mortgages\", \"Auto\", \"Business\"), cust_id (\"1\", \"3\")", "schema_without_content": "bank : state , city , no_of_customers , bname , branch_id  | customer : branch_id , no_of_loans , credit_score , acc_bal , cust_id , state , cust_name , acc_type  | customer_acc_bal : avg_acc_bal , cust_name , acc_type , total_acc_bal , max_acc_bal , min_acc_bal , cust_id , no_of_loans , credit_score , branch_id , state  | loan : amount , loan_id , branch_id , loan_type , cust_id "}, {"db_id": "loan_1", "query": "select total_acc_bal from customer_acc_bal where state = 'Utah' or state = 'Texas'", "query_toks": ["SELECT", "sum", "(", "acc_bal", ")", "FROM", "customer", "WHERE", "state", "=", "'Utah", "'", "OR", "state", "=", "'Texas", "'"], "query_toks_no_value": ["select", "sum", "(", "acc_bal", ")", "from", "customer", "where", "state", "=", "value", "or", "state", "=", "value"], "question": "What are the total account balances for each customer from Utah or Texas?", "question_toks": ["What", "are", "the", "total", "account", "balances", "for", "each", "customer", "from", "Utah", "or", "Texas", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"Utah\"", null], "or", [false, 2, [0, [0, 13, false], null], "\"Texas\"", null]]}, "primary_key": {"customer": "cust_id"}, "orig_query": "select sum(acc_bal) from customer where state = 'Utah' or state = 'Texas'", "split_map": {"customer": ["max_acc_bal", "min_acc_bal", "avg_acc_bal", "total_acc_bal"]}, "schema_with_content": "bank : branch_id (2, 1, 2), city (\"New York City\", \"Salt Lake City\", \"Austin\"), no_of_customers (123, 123, 367), bname (\"downtown\", \"morningside\", \"morningside\"), state (\"New York\", \"Utah\", \"Texas\") | customer : acc_bal (2000, 1000, 800000), acc_type (\"saving\", \"checking\"), no_of_loans (2, 1, 0), cust_name (\"Mary\", \"Jack\", \"Owen\"), state (\"Utah\", \"Texas\", \"New York\"), cust_id (\"1\", \"2\", \"3\"), credit_score (30, 20, 210), branch_id (2, 1, 3) | customer_acc_bal : total_acc_bal (2000, 1000, 800000), cust_name (\"Mary\", \"Jack\", \"Owen\"), avg_acc_bal (2000, 1000, 800000), cust_id (\"1\", \"2\", \"3\"), acc_type (\"saving\", \"checking\"), min_acc_bal (2000, 1000, 800000), max_acc_bal (2000, 1000, 800000), no_of_loans (2, 1, 0), credit_score (30, 20, 210), branch_id (2, 1, 3), state (\"Utah\", \"Texas\", \"New York\") | loan : branch_id (\"1\", \"2\", \"3\"), loan_type (\"Mortgages\", \"Auto\", \"Business\"), cust_id (\"1\", \"3\"), amount (2050, 3000, 5000), loan_id (\"1\", \"2\", \"3\")", "schema_without_content": "bank : branch_id , city , no_of_customers , bname , state  | customer : acc_bal , acc_type , no_of_loans , cust_name , state , cust_id , credit_score , branch_id  | customer_acc_bal : total_acc_bal , cust_name , avg_acc_bal , cust_id , acc_type , min_acc_bal , max_acc_bal , no_of_loans , credit_score , branch_id , state  | loan : branch_id , loan_type , cust_id , amount , loan_id "}, {"db_id": "loan_1", "query": "select avg_acc_bal, acc_type from customer_acc_bal where credit_score < 50 group by acc_type", "query_toks": ["SELECT", "avg", "(", "acc_bal", ")", ",", "acc_type", "FROM", "customer", "WHERE", "credit_score", "<", "50", "GROUP", "BY", "acc_type"], "query_toks_no_value": ["select", "avg", "(", "acc_bal", ")", ",", "acc_type", "from", "customer", "where", "credit_score", "<", "value", "group", "by", "acc_type"], "question": "For each account type, find the average account balance of customers with credit score lower than 50.", "question_toks": ["For", "each", "account", "type", ",", "find", "the", "average", "account", "balance", "of", "customers", "with", "credit", "score", "lower", "than", "50", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 11, false], null], 50.0, null]]}, "primary_key": {"customer": "cust_id"}, "orig_query": "select avg(acc_bal), acc_type from customer where credit_score < 50 group by acc_type", "split_map": {"customer": ["max_acc_bal", "min_acc_bal", "avg_acc_bal", "total_acc_bal"]}, "schema_with_content": "bank : bname (\"morningside\", \"high\", \"morningside\"), city (\"New York City\", \"Salt Lake City\", \"Austin\"), branch_id (1, 2, 4), no_of_customers (453, 123, 203), state (\"New York\", \"Utah\", \"Texas\") | customer : no_of_loans (2, 1, 0), cust_name (\"Mary\", \"Jack\", \"Owen\"), state (\"Utah\", \"Texas\", \"New York\"), acc_type (\"saving\", \"checking\"), branch_id (2, 1, 3), acc_bal (2000, 1000, 800000), credit_score (30, 20, 210), cust_id (\"1\", \"2\", \"3\") | customer_acc_bal : min_acc_bal (2000, 1000, 800000), cust_name (\"Mary\", \"Jack\", \"Owen\"), total_acc_bal (2000, 1000, 800000), acc_type (\"saving\", \"checking\"), max_acc_bal (2000, 1000, 800000), cust_id (\"1\", \"2\", \"3\"), avg_acc_bal (2000, 1000, 800000), no_of_loans (2, 1, 0), credit_score (30, 20, 210), branch_id (2, 1, 3), state (\"Utah\", \"Texas\", \"New York\") | loan : cust_id (\"1\", \"3\"), branch_id (\"1\", \"2\", \"3\"), loan_id (\"1\", \"2\", \"3\"), amount (2050, 3000, 5000), loan_type (\"Mortgages\", \"Auto\", \"Business\")", "schema_without_content": "bank : bname , city , branch_id , no_of_customers , state  | customer : no_of_loans , cust_name , state , acc_type , branch_id , acc_bal , credit_score , cust_id  | customer_acc_bal : min_acc_bal , cust_name , total_acc_bal , acc_type , max_acc_bal , cust_id , avg_acc_bal , no_of_loans , credit_score , branch_id , state  | loan : cust_id , branch_id , loan_id , amount , loan_type "}, {"db_id": "loan_1", "query": "select avg_acc_bal, acc_type from customer_acc_bal where credit_score < 50 group by acc_type", "query_toks": ["SELECT", "avg", "(", "acc_bal", ")", ",", "acc_type", "FROM", "customer", "WHERE", "credit_score", "<", "50", "GROUP", "BY", "acc_type"], "query_toks_no_value": ["select", "avg", "(", "acc_bal", ")", ",", "acc_type", "from", "customer", "where", "credit_score", "<", "value", "group", "by", "acc_type"], "question": "What is the average account balance of customers with credit score below 50 for the different account types?", "question_toks": ["What", "is", "the", "average", "account", "balance", "of", "customers", "with", "credit", "score", "below", "50", "for", "the", "different", "account", "types", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 11, false], null], 50.0, null]]}, "primary_key": {"customer": "cust_id"}, "orig_query": "select avg(acc_bal), acc_type from customer where credit_score < 50 group by acc_type", "split_map": {"customer": ["max_acc_bal", "min_acc_bal", "avg_acc_bal", "total_acc_bal"]}, "schema_with_content": "bank : branch_id (2, 2, 4), no_of_customers (453, 123, 367), bname (\"broadway\", \"morningside\", \"downtown\"), city (\"New York City\", \"Salt Lake City\", \"Austin\"), state (\"New York\", \"Utah\", \"Texas\") | customer : state (\"Utah\", \"Texas\", \"New York\"), no_of_loans (2, 1, 0), cust_name (\"Mary\", \"Jack\", \"Owen\"), cust_id (\"1\", \"2\", \"3\"), acc_type (\"saving\", \"checking\"), branch_id (2, 1, 3), credit_score (30, 20, 210), acc_bal (2000, 1000, 800000) | customer_acc_bal : cust_id (\"1\", \"2\", \"3\"), avg_acc_bal (2000, 1000, 800000), max_acc_bal (2000, 1000, 800000), min_acc_bal (2000, 1000, 800000), cust_name (\"Mary\", \"Jack\", \"Owen\"), acc_type (\"saving\", \"checking\"), total_acc_bal (2000, 1000, 800000), no_of_loans (2, 1, 0), credit_score (30, 20, 210), branch_id (2, 1, 3), state (\"Utah\", \"Texas\", \"New York\") | loan : branch_id (\"1\", \"2\", \"3\"), loan_id (\"1\", \"2\", \"3\"), cust_id (\"1\", \"3\"), amount (2050, 3000, 5000), loan_type (\"Mortgages\", \"Auto\", \"Business\")", "schema_without_content": "bank : branch_id , no_of_customers , bname , city , state  | customer : state , no_of_loans , cust_name , cust_id , acc_type , branch_id , credit_score , acc_bal  | customer_acc_bal : cust_id , avg_acc_bal , max_acc_bal , min_acc_bal , cust_name , acc_type , total_acc_bal , no_of_loans , credit_score , branch_id , state  | loan : branch_id , loan_id , cust_id , amount , loan_type "}, {"db_id": "loan_1", "query": "select total_acc_bal, state from customer_acc_bal where credit_score > 100 group by state", "query_toks": ["SELECT", "sum", "(", "acc_bal", ")", ",", "state", "FROM", "customer", "WHERE", "credit_score", ">", "100", "GROUP", "BY", "state"], "query_toks_no_value": ["select", "sum", "(", "acc_bal", ")", ",", "state", "from", "customer", "where", "credit_score", ">", "value", "group", "by", "state"], "question": "For each state, find the total account balance of customers whose credit score is above 100.", "question_toks": ["For", "each", "state", ",", "find", "the", "total", "account", "balance", "of", "customers", "whose", "credit", "score", "is", "above", "100", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 9, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 100.0, null]]}, "primary_key": {"customer": "cust_id"}, "orig_query": "select sum(acc_bal), state from customer where credit_score > 100 group by state", "split_map": {"customer": ["max_acc_bal", "min_acc_bal", "avg_acc_bal", "total_acc_bal"]}, "schema_with_content": "bank : bname (\"downtown\", \"morningside\", \"broadway\"), state (\"New York\", \"Utah\", \"Texas\"), city (\"New York City\", \"Salt Lake City\", \"Austin\"), branch_id (4, 2, 2), no_of_customers (123, 203, 203) | customer : cust_name (\"Mary\", \"Jack\", \"Owen\"), cust_id (\"1\", \"2\", \"3\"), acc_bal (2000, 1000, 800000), no_of_loans (2, 1, 0), acc_type (\"saving\", \"checking\"), branch_id (2, 1, 3), credit_score (30, 20, 210), state (\"Utah\", \"Texas\", \"New York\") | customer_acc_bal : cust_name (\"Mary\", \"Jack\", \"Owen\"), min_acc_bal (2000, 1000, 800000), acc_type (\"saving\", \"checking\"), total_acc_bal (2000, 1000, 800000), cust_id (\"1\", \"2\", \"3\"), max_acc_bal (2000, 1000, 800000), avg_acc_bal (2000, 1000, 800000), no_of_loans (2, 1, 0), credit_score (30, 20, 210), branch_id (2, 1, 3), state (\"Utah\", \"Texas\", \"New York\") | loan : branch_id (\"1\", \"2\", \"3\"), loan_id (\"1\", \"2\", \"3\"), cust_id (\"1\", \"3\"), amount (2050, 3000, 5000), loan_type (\"Mortgages\", \"Auto\", \"Business\")", "schema_without_content": "bank : bname , state , city , branch_id , no_of_customers  | customer : cust_name , cust_id , acc_bal , no_of_loans , acc_type , branch_id , credit_score , state  | customer_acc_bal : cust_name , min_acc_bal , acc_type , total_acc_bal , cust_id , max_acc_bal , avg_acc_bal , no_of_loans , credit_score , branch_id , state  | loan : branch_id , loan_id , cust_id , amount , loan_type "}, {"db_id": "loan_1", "query": "select total_acc_bal, state from customer_acc_bal where credit_score > 100 group by state", "query_toks": ["SELECT", "sum", "(", "acc_bal", ")", ",", "state", "FROM", "customer", "WHERE", "credit_score", ">", "100", "GROUP", "BY", "state"], "query_toks_no_value": ["select", "sum", "(", "acc_bal", ")", ",", "state", "from", "customer", "where", "credit_score", ">", "value", "group", "by", "state"], "question": "What is the total account balance for customers with a credit score of above 100 for the different states?", "question_toks": ["What", "is", "the", "total", "account", "balance", "for", "customers", "with", "a", "credit", "score", "of", "above", "100", "for", "the", "different", "states", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 9, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 100.0, null]]}, "primary_key": {"customer": "cust_id"}, "orig_query": "select sum(acc_bal), state from customer where credit_score > 100 group by state", "split_map": {"customer": ["max_acc_bal", "min_acc_bal", "avg_acc_bal", "total_acc_bal"]}, "schema_with_content": "bank : no_of_customers (203, 203, 123), city (\"New York City\", \"Salt Lake City\", \"Austin\"), state (\"New York\", \"Utah\", \"Texas\"), bname (\"high\", \"broadway\", \"broadway\"), branch_id (4, 4, 2) | customer : cust_id (\"1\", \"2\", \"3\"), acc_bal (2000, 1000, 800000), cust_name (\"Mary\", \"Jack\", \"Owen\"), no_of_loans (2, 1, 0), acc_type (\"saving\", \"checking\"), state (\"Utah\", \"Texas\", \"New York\"), credit_score (30, 20, 210), branch_id (2, 1, 3) | customer_acc_bal : cust_id (\"1\", \"2\", \"3\"), min_acc_bal (2000, 1000, 800000), total_acc_bal (2000, 1000, 800000), max_acc_bal (2000, 1000, 800000), avg_acc_bal (2000, 1000, 800000), acc_type (\"saving\", \"checking\"), cust_name (\"Mary\", \"Jack\", \"Owen\"), no_of_loans (2, 1, 0), credit_score (30, 20, 210), branch_id (2, 1, 3), state (\"Utah\", \"Texas\", \"New York\") | loan : loan_id (\"1\", \"2\", \"3\"), branch_id (\"1\", \"2\", \"3\"), amount (2050, 3000, 5000), loan_type (\"Mortgages\", \"Auto\", \"Business\"), cust_id (\"1\", \"3\")", "schema_without_content": "bank : no_of_customers , city , state , bname , branch_id  | customer : cust_id , acc_bal , cust_name , no_of_loans , acc_type , state , credit_score , branch_id  | customer_acc_bal : cust_id , min_acc_bal , total_acc_bal , max_acc_bal , avg_acc_bal , acc_type , cust_name , no_of_loans , credit_score , branch_id , state  | loan : loan_id , branch_id , amount , loan_type , cust_id "}, {"db_id": "loan_1", "query": "select avg_credit_score from customer_credit_score where cust_id in (select cust_id from loan)", "query_toks": ["SELECT", "avg", "(", "credit_score", ")", "FROM", "customer", "WHERE", "cust_id", "IN", "(", "SELECT", "cust_id", "FROM", "loan", ")"], "query_toks_no_value": ["select", "avg", "(", "credit_score", ")", "from", "customer", "where", "cust_id", "in", "(", "select", "cust_id", "from", "loan", ")"], "question": "Find the average credit score of the customers who have some loan.", "question_toks": ["Find", "the", "average", "credit", "score", "of", "the", "customers", "who", "have", "some", "loan", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"customer": "cust_id"}, "orig_query": "select avg(credit_score) from customer where cust_id in (select cust_id from loan)", "split_map": {"customer": ["max_credit_score", "min_credit_score", "avg_credit_score", "total_credit_score"]}, "schema_with_content": "bank : branch_id (2, 4, 2), state (\"New York\", \"Utah\", \"Texas\"), bname (\"broadway\", \"high\", \"downtown\"), no_of_customers (367, 453, 203), city (\"New York City\", \"Salt Lake City\", \"Austin\") | customer : credit_score (30, 20, 210), state (\"Utah\", \"Texas\", \"New York\"), branch_id (2, 1, 3), no_of_loans (2, 1, 0), acc_bal (2000, 1000, 800000), cust_name (\"Mary\", \"Jack\", \"Owen\"), cust_id (\"1\", \"2\", \"3\"), acc_type (\"saving\", \"checking\") | customer_credit_score : total_credit_score (30, 20, 210), no_of_loans (2, 1, 0), max_credit_score (30, 20, 210), acc_type (\"saving\", \"checking\"), cust_id (\"1\", \"2\", \"3\"), avg_credit_score (30, 20, 210), min_credit_score (30, 20, 210), cust_name (\"Mary\", \"Jack\", \"Owen\"), acc_bal (2000, 1000, 800000), branch_id (2, 1, 3), state (\"Utah\", \"Texas\", \"New York\") | loan : loan_type (\"Mortgages\", \"Auto\", \"Business\"), loan_id (\"1\", \"2\", \"3\"), branch_id (\"1\", \"2\", \"3\"), cust_id (\"1\", \"3\"), amount (2050, 3000, 5000)", "schema_without_content": "bank : branch_id , state , bname , no_of_customers , city  | customer : credit_score , state , branch_id , no_of_loans , acc_bal , cust_name , cust_id , acc_type  | customer_credit_score : total_credit_score , no_of_loans , max_credit_score , acc_type , cust_id , avg_credit_score , min_credit_score , cust_name , acc_bal , branch_id , state  | loan : loan_type , loan_id , branch_id , cust_id , amount "}, {"db_id": "loan_1", "query": "select avg_credit_score from customer_credit_score where cust_id in (select cust_id from loan)", "query_toks": ["SELECT", "avg", "(", "credit_score", ")", "FROM", "customer", "WHERE", "cust_id", "IN", "(", "SELECT", "cust_id", "FROM", "loan", ")"], "query_toks_no_value": ["select", "avg", "(", "credit_score", ")", "from", "customer", "where", "cust_id", "in", "(", "select", "cust_id", "from", "loan", ")"], "question": "What is the average credit score for customers who have taken a loan?", "question_toks": ["What", "is", "the", "average", "credit", "score", "for", "customers", "who", "have", "taken", "a", "loan", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"customer": "cust_id"}, "orig_query": "select avg(credit_score) from customer where cust_id in (select cust_id from loan)", "split_map": {"customer": ["max_credit_score", "min_credit_score", "avg_credit_score", "total_credit_score"]}, "schema_with_content": "bank : city (\"New York City\", \"Salt Lake City\", \"Austin\"), branch_id (2, 2, 1), state (\"New York\", \"Utah\", \"Texas\"), bname (\"broadway\", \"high\", \"high\"), no_of_customers (453, 123, 367) | customer : credit_score (30, 20, 210), cust_name (\"Mary\", \"Jack\", \"Owen\"), no_of_loans (2, 1, 0), cust_id (\"1\", \"2\", \"3\"), acc_bal (2000, 1000, 800000), branch_id (2, 1, 3), state (\"Utah\", \"Texas\", \"New York\"), acc_type (\"saving\", \"checking\") | customer_credit_score : no_of_loans (2, 1, 0), cust_name (\"Mary\", \"Jack\", \"Owen\"), total_credit_score (30, 20, 210), min_credit_score (30, 20, 210), acc_bal (2000, 1000, 800000), acc_type (\"saving\", \"checking\"), cust_id (\"1\", \"2\", \"3\"), max_credit_score (30, 20, 210), avg_credit_score (30, 20, 210), branch_id (2, 1, 3), state (\"Utah\", \"Texas\", \"New York\") | loan : loan_id (\"1\", \"2\", \"3\"), loan_type (\"Mortgages\", \"Auto\", \"Business\"), amount (2050, 3000, 5000), cust_id (\"1\", \"3\"), branch_id (\"1\", \"2\", \"3\")", "schema_without_content": "bank : city , branch_id , state , bname , no_of_customers  | customer : credit_score , cust_name , no_of_loans , cust_id , acc_bal , branch_id , state , acc_type  | customer_credit_score : no_of_loans , cust_name , total_credit_score , min_credit_score , acc_bal , acc_type , cust_id , max_credit_score , avg_credit_score , branch_id , state  | loan : loan_id , loan_type , amount , cust_id , branch_id "}, {"db_id": "loan_1", "query": "select avg_credit_score from customer_credit_score where cust_id not in (select cust_id from loan)", "query_toks": ["SELECT", "avg", "(", "credit_score", ")", "FROM", "customer", "WHERE", "cust_id", "NOT", "IN", "(", "SELECT", "cust_id", "FROM", "loan", ")"], "query_toks_no_value": ["select", "avg", "(", "credit_score", ")", "from", "customer", "where", "cust_id", "not", "in", "(", "select", "cust_id", "from", "loan", ")"], "question": "Find the average credit score of the customers who do not have any loan.", "question_toks": ["Find", "the", "average", "credit", "score", "of", "the", "customers", "who", "do", "not", "have", "any", "loan", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 11, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"customer": "cust_id"}, "orig_query": "select avg(credit_score) from customer where cust_id not in (select cust_id from loan)", "split_map": {"customer": ["max_credit_score", "min_credit_score", "avg_credit_score", "total_credit_score"]}, "schema_with_content": "bank : bname (\"morningside\", \"morningside\", \"downtown\"), state (\"New York\", \"Utah\", \"Texas\"), no_of_customers (453, 367, 453), city (\"New York City\", \"Salt Lake City\", \"Austin\"), branch_id (3, 3, 3) | customer : acc_type (\"saving\", \"checking\"), cust_id (\"1\", \"2\", \"3\"), cust_name (\"Mary\", \"Jack\", \"Owen\"), acc_bal (2000, 1000, 800000), credit_score (30, 20, 210), state (\"Utah\", \"Texas\", \"New York\"), no_of_loans (2, 1, 0), branch_id (2, 1, 3) | customer_credit_score : no_of_loans (2, 1, 0), acc_bal (2000, 1000, 800000), total_credit_score (30, 20, 210), min_credit_score (30, 20, 210), avg_credit_score (30, 20, 210), cust_name (\"Mary\", \"Jack\", \"Owen\"), cust_id (\"1\", \"2\", \"3\"), max_credit_score (30, 20, 210), acc_type (\"saving\", \"checking\"), branch_id (2, 1, 3), state (\"Utah\", \"Texas\", \"New York\") | loan : amount (2050, 3000, 5000), branch_id (\"1\", \"2\", \"3\"), loan_type (\"Mortgages\", \"Auto\", \"Business\"), cust_id (\"1\", \"3\"), loan_id (\"1\", \"2\", \"3\")", "schema_without_content": "bank : bname , state , no_of_customers , city , branch_id  | customer : acc_type , cust_id , cust_name , acc_bal , credit_score , state , no_of_loans , branch_id  | customer_credit_score : no_of_loans , acc_bal , total_credit_score , min_credit_score , avg_credit_score , cust_name , cust_id , max_credit_score , acc_type , branch_id , state  | loan : amount , branch_id , loan_type , cust_id , loan_id "}, {"db_id": "loan_1", "query": "select avg_credit_score from customer_credit_score where cust_id not in (select cust_id from loan)", "query_toks": ["SELECT", "avg", "(", "credit_score", ")", "FROM", "customer", "WHERE", "cust_id", "NOT", "IN", "(", "SELECT", "cust_id", "FROM", "loan", ")"], "query_toks_no_value": ["select", "avg", "(", "credit_score", ")", "from", "customer", "where", "cust_id", "not", "in", "(", "select", "cust_id", "from", "loan", ")"], "question": "What is the average credit score for customers who have never taken a loan?", "question_toks": ["What", "is", "the", "average", "credit", "score", "for", "customers", "who", "have", "never", "taken", "a", "loan", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 11, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"customer": "cust_id"}, "orig_query": "select avg(credit_score) from customer where cust_id not in (select cust_id from loan)", "split_map": {"customer": ["max_credit_score", "min_credit_score", "avg_credit_score", "total_credit_score"]}, "schema_with_content": "bank : branch_id (1, 1, 2), no_of_customers (453, 367, 123), bname (\"high\", \"morningside\", \"broadway\"), city (\"New York City\", \"Salt Lake City\", \"Austin\"), state (\"New York\", \"Utah\", \"Texas\") | customer : branch_id (2, 1, 3), state (\"Utah\", \"Texas\", \"New York\"), cust_id (\"1\", \"2\", \"3\"), cust_name (\"Mary\", \"Jack\", \"Owen\"), acc_type (\"saving\", \"checking\"), no_of_loans (2, 1, 0), credit_score (30, 20, 210), acc_bal (2000, 1000, 800000) | customer_credit_score : acc_type (\"saving\", \"checking\"), min_credit_score (30, 20, 210), no_of_loans (2, 1, 0), acc_bal (2000, 1000, 800000), cust_id (\"1\", \"2\", \"3\"), avg_credit_score (30, 20, 210), max_credit_score (30, 20, 210), total_credit_score (30, 20, 210), cust_name (\"Mary\", \"Jack\", \"Owen\"), branch_id (2, 1, 3), state (\"Utah\", \"Texas\", \"New York\") | loan : cust_id (\"1\", \"3\"), branch_id (\"1\", \"2\", \"3\"), amount (2050, 3000, 5000), loan_type (\"Mortgages\", \"Auto\", \"Business\"), loan_id (\"1\", \"2\", \"3\")", "schema_without_content": "bank : branch_id , no_of_customers , bname , city , state  | customer : branch_id , state , cust_id , cust_name , acc_type , no_of_loans , credit_score , acc_bal  | customer_credit_score : acc_type , min_credit_score , no_of_loans , acc_bal , cust_id , avg_credit_score , max_credit_score , total_credit_score , cust_name , branch_id , state  | loan : cust_id , branch_id , amount , loan_type , loan_id "}, {"db_id": "station_weather", "query": "select avg_high_temperature, day_of_week from weekly_weather_high_temperature group by day_of_week", "query_toks": ["SELECT", "avg", "(", "high_temperature", ")", ",", "day_of_week", "FROM", "weekly_weather", "GROUP", "BY", "day_of_week"], "query_toks_no_value": ["select", "avg", "(", "high_temperature", ")", ",", "day_of_week", "from", "weekly_weather", "group", "by", "day_of_week"], "question": "What is the average high temperature for each day of week?", "question_toks": ["What", "is", "the", "average", "high", "temperature", "for", "each", "day", "of", "week", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 16, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}, "primary_key": {"weekly_weather": "station_id"}, "orig_query": "select avg(high_temperature), day_of_week from weekly_weather group by day_of_week", "split_map": {"weekly_weather": ["max_high_temperature", "min_high_temperature", "avg_high_temperature", "total_high_temperature"]}, "schema_with_content": "train : interval (\"Daily\"), train_number (16381, 16127, 16381), time (\"04:55\", \"11:15\", \"11:15\"), name (\"Guruvayur Express\", \"Guruvayur Express\", \"Island Express\"), id (1, 1, 9), origin (\"Mumbai\", \"Bangalore\", \"Bangalore\"), destination (\"Kanniyakumari\", \"Chennai\", \"Madurai\") | station : id (10, 7, 4), local_authority (\"Broxbourne\", \"Watford\", \"Broxbourne\"), services (\"Metropolitan line\", \"Greater Anglia\", \"Metropolitan line\"), network_name (\"Cheshunt\", \"Chorleywood\", \"Bushey\") | route : station_id (8, 6, 2), train_id (9, 10, 5) | weekly_weather : day_of_week (\"Tuesday\", \"Wednesday\", \"Monday\"), high_temperature (49, 57, 50), station_id (3, 3, 4), low_temperature (46, 50, 49), precipitation (50.0, 60.0, 70.0), wind_speed_mph (12, 7, 13) | weekly_weather_high_temperature : station_id (3, 3, 4), min_high_temperature (49, 57, 50), max_high_temperature (49, 57, 50), avg_high_temperature (49, 57, 50), day_of_week (\"Tuesday\", \"Wednesday\", \"Monday\"), total_high_temperature (49, 57, 50), low_temperature (46, 50, 49), precipitation (50.0, 60.0, 70.0), wind_speed_mph (12, 7, 13)", "schema_without_content": "train : interval , train_number , time , name , id , origin , destination  | station : id , local_authority , services , network_name  | route : station_id , train_id  | weekly_weather : day_of_week , high_temperature , station_id , low_temperature , precipitation , wind_speed_mph  | weekly_weather_high_temperature : station_id , min_high_temperature , max_high_temperature , avg_high_temperature , day_of_week , total_high_temperature , low_temperature , precipitation , wind_speed_mph "}, {"db_id": "station_weather", "query": "select min_low_temperature, max(wind_speed_mph)from weekly_weather_low_temperature", "query_toks": ["SELECT", "min", "(", "low_temperature", ")", ",", "max", "(", "wind_speed_mph", ")", "FROM", "weekly_weather"], "query_toks_no_value": ["select", "min", "(", "low_temperature", ")", ",", "max", "(", "wind_speed_mph", ")", "from", "weekly_weather"], "question": "show the lowest low temperature and highest wind speed in miles per hour.", "question_toks": ["show", "the", "lowest", "low", "temperature", "and", "highest", "wind", "speed", "in", "miles", "per", "hour", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 17, false], null]], [1, [0, [0, 19, false], null]]]], "union": null, "where": []}, "primary_key": {"weekly_weather": "station_id"}, "orig_query": "select min(low_temperature), max(wind_speed_mph) from weekly_weather", "split_map": {"weekly_weather": ["max_low_temperature", "min_low_temperature", "avg_low_temperature", "total_low_temperature"]}, "schema_with_content": "train : train_number (56700, 56701, 16526), time (\"11:35\", \"17:15\", \"22:10\"), origin (\"Madurai\", \"Bangalore\", \"Kanniyakumari\"), interval (\"Daily\"), id (4, 7, 11), name (\"Jayanthi Janatha Express\", \"Ananthapuri Express\", \"Madurai Fast Passenger\"), destination (\"Mangalore\", \"Kanniyakumari\", \"Bangalore\") | station : id (9, 7, 8), services (\"London Overground\", \"London Overground and London Midland\", \"Metropolitan line\"), local_authority (\"Thurrock\", \"Three Rivers\", \"Broxbourne\"), network_name (\"Broxbourne\", \"Chafford Hundred\", \"Croxley\") | route : train_id (10, 10, 1), station_id (8, 7, 1) | weekly_weather : low_temperature (46, 50, 49), wind_speed_mph (17, 10, 10), precipitation (80.0, 20.0, 20.0), high_temperature (60, 58, 54), day_of_week (\"Thursday\", \"Tuesday\", \"Monday\"), station_id (3, 2, 2) | weekly_weather_low_temperature : high_temperature (60, 58, 54), total_low_temperature (46, 50, 49), day_of_week (\"Thursday\", \"Tuesday\", \"Monday\"), station_id (3, 2, 2), max_low_temperature (46, 50, 49), avg_low_temperature (46, 50, 49), min_low_temperature (46, 50, 49), precipitation (80.0, 20.0, 20.0), wind_speed_mph (17, 10, 10)", "schema_without_content": "train : train_number , time , origin , interval , id , name , destination  | station : id , services , local_authority , network_name  | route : train_id , station_id  | weekly_weather : low_temperature , wind_speed_mph , precipitation , high_temperature , day_of_week , station_id  | weekly_weather_low_temperature : high_temperature , total_low_temperature , day_of_week , station_id , max_low_temperature , avg_low_temperature , min_low_temperature , precipitation , wind_speed_mph "}, {"db_id": "station_weather", "query": "select min(low_temperature), max_wind_speed_mph from weekly_weather_wind_speed_mph", "query_toks": ["SELECT", "min", "(", "low_temperature", ")", ",", "max", "(", "wind_speed_mph", ")", "FROM", "weekly_weather"], "query_toks_no_value": ["select", "min", "(", "low_temperature", ")", ",", "max", "(", "wind_speed_mph", ")", "from", "weekly_weather"], "question": "show the lowest low temperature and highest wind speed in miles per hour.", "question_toks": ["show", "the", "lowest", "low", "temperature", "and", "highest", "wind", "speed", "in", "miles", "per", "hour", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 17, false], null]], [1, [0, [0, 19, false], null]]]], "union": null, "where": []}, "primary_key": {"weekly_weather": "station_id"}, "orig_query": "select min(low_temperature), max(wind_speed_mph) from weekly_weather", "split_map": {"weekly_weather": ["max_wind_speed_mph", "min_wind_speed_mph", "avg_wind_speed_mph", "total_wind_speed_mph"]}, "schema_with_content": "train : origin (\"Trivandrum\", \"Kanniyakumari\", \"Mumbai\"), destination (\"Madurai\", \"Madurai\", \"Kanniyakumari\"), time (\"4:49\", \"11:15\", \"11:15\"), interval (\"Daily\"), train_number (16525, 16650, 16723), name (\"Quilon Fast Passenger\", \"Ananthapuri Express\", \"Quilon Fast Passenger\"), id (3, 10, 1) | station : network_name (\"Chalfont & Latimer\", \"Chalfont & Latimer\", \"Bushey\"), id (7, 1, 4), services (\"London Overground and London Midland\", \"Greater Anglia\", \"London Overground and London Midland\"), local_authority (\"Chiltern\", \"Three Rivers\", \"Watford\") | route : train_id (5, 7, 7), station_id (1, 3, 4) | weekly_weather : day_of_week (\"Saturday\", \"Monday\", \"Tuesday\"), high_temperature (66, 49, 57), low_temperature (52, 46, 55), wind_speed_mph (13, 14, 17), station_id (4, 4, 4), precipitation (30.0, 90.0, 30.0) | weekly_weather_wind_speed_mph : high_temperature (66, 49, 57), total_wind_speed_mph (13, 14, 17), max_wind_speed_mph (13, 14, 17), station_id (4, 4, 4), min_wind_speed_mph (13, 14, 17), day_of_week (\"Saturday\", \"Monday\", \"Tuesday\"), low_temperature (52, 46, 55), precipitation (30.0, 90.0, 30.0), avg_wind_speed_mph (13, 14, 17)", "schema_without_content": "train : origin , destination , time , interval , train_number , name , id  | station : network_name , id , services , local_authority  | route : train_id , station_id  | weekly_weather : day_of_week , high_temperature , low_temperature , wind_speed_mph , station_id , precipitation  | weekly_weather_wind_speed_mph : high_temperature , total_wind_speed_mph , max_wind_speed_mph , station_id , min_wind_speed_mph , day_of_week , low_temperature , precipitation , avg_wind_speed_mph "}, {"db_id": "college_1", "query": "select total_crs_credit, dept_code from course_crs_credit group by dept_code", "query_toks": ["SELECT", "sum", "(", "crs_credit", ")", ",", "dept_code", "FROM", "course", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "sum", "(", "crs_credit", ")", ",", "dept_code", "from", "course", "group", "by", "dept_code"], "question": "What is the total credit does each department offer?", "question_toks": ["What", "is", "the", "total", "credit", "does", "each", "department", "offer", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"course": "crs_code"}, "orig_query": "select sum(crs_credit), dept_code from course group by dept_code", "split_map": {"course": ["max_crs_credit", "min_crs_credit", "avg_crs_credit", "total_crs_credit"]}, "schema_with_content": "class : class_time (\"Th 6:00-8:40 p.m.\", \"MWF 10:00-10:50 a.m.\", \"TTh 1:00-2:15 p.m.\"), prof_num (162, 301, 105), class_room (\"KLR200\", \"KLR209\", \"KLR209\"), class_section (\"1\", \"2\", \"3\"), crs_code (\"CIS-420\", \"QM-362\", \"CIS-420\"), class_code (\"10022\", \"10022\", \"10015\") | course : crs_code (\"QM-261\", \"QM-261\", \"ACCT-211\"), crs_description (\"Accounting II\", \"Statistical Applications\", \"Accounting II\"), dept_code (\"ACCT\", \"CIS\"), crs_credit (3.0, 4.0) | course_crs_credit : min_crs_credit (3.0, 4.0), dept_code (\"ACCT\", \"CIS\"), max_crs_credit (3.0, 4.0), crs_description (\"Accounting II\", \"Statistical Applications\", \"Accounting II\"), avg_crs_credit (3.0, 4.0), total_crs_credit (3.0, 4.0), crs_code (\"QM-261\", \"QM-261\", \"ACCT-211\") | department : dept_address (\"KLR 211, Box 52\", \"KLR 126, Box 55\", \"AAK 230, Box 415\"), dept_name (\"Psychology\", \"Mathematics\", \"Economics/Finance\"), emp_num (297, 106, 342), dept_code (\"MATH\", \"ACCT\", \"SOC\"), school_code (\"BUS\", \"A&SCI\"), dept_extension (\"3126\", \"2278\", \"3126\") | employee : emp_dob (\"1939-3-18\", \"1955-11-19\", \"1946-5-24\"), emp_hiredate (\"1994-10-1\", \"1989-8-1\", \"1994-11-15\"), emp_jobcode (\"TECH\", \"CLRK\", \"CUST\"), emp_num (195, 155, 301), emp_initial (\"F\", \"D\", \"E\"), emp_lname (\"Stoddard\", \"Heffington\", \"Smithson\"), emp_fname (\"Robert\", \"George\", \"Todd\") | enroll : stu_num (321452, 324257), class_code (\"10014\", \"10018\", \"10021\"), enroll_grade (\"C\", \"B\", \"A\") | professor : prof_extension (\"6783\", \"2248\", \"2359\"), dept_code (\"MKT/MGT\", \"MKT/MGT\", \"CIS\"), prof_high_degree (\"DBA\", \"Ph.D.\", \"MBA\"), emp_num (191, 299, 228), prof_office (\"KLR 284\", \"KLR 229D\", \"AAK 297\") | student : stu_transfer (0, 1), stu_class (\"So\", \"Sr\", \"Fr\"), stu_lname (\"Katinga\", \"Katinga\", \"Smith\"), stu_gpa (2.84, 2.26, 2.26), dept_code (\"EDU\", \"EDU\", \"EDU\"), prof_num (230, 311, 230), stu_init (\"K\", \"T\", \"P\"), stu_dob (\"1958-12-30\", \"1973-4-8\", \"1958-12-30\"), stu_num (324257, 324257, 324299), stu_fname (\"John\", \"Gerald\", \"Gerald\"), stu_phone (\"2114\", \"2231\", \"2315\"), stu_hrs (42, 15, 66)", "schema_without_content": "class : class_time , prof_num , class_room , class_section , crs_code , class_code  | course : crs_code , crs_description , dept_code , crs_credit  | course_crs_credit : min_crs_credit , dept_code , max_crs_credit , crs_description , avg_crs_credit , total_crs_credit , crs_code  | department : dept_address , dept_name , emp_num , dept_code , school_code , dept_extension  | employee : emp_dob , emp_hiredate , emp_jobcode , emp_num , emp_initial , emp_lname , emp_fname  | enroll : stu_num , class_code , enroll_grade  | professor : prof_extension , dept_code , prof_high_degree , emp_num , prof_office  | student : stu_transfer , stu_class , stu_lname , stu_gpa , dept_code , prof_num , stu_init , stu_dob , stu_num , stu_fname , stu_phone , stu_hrs "}, {"db_id": "college_1", "query": "select total_crs_credit, dept_code from course_crs_credit group by dept_code", "query_toks": ["SELECT", "sum", "(", "crs_credit", ")", ",", "dept_code", "FROM", "course", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "sum", "(", "crs_credit", ")", ",", "dept_code", "from", "course", "group", "by", "dept_code"], "question": "How many credits does the department offer?", "question_toks": ["How", "many", "credits", "does", "the", "department", "offer", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"course": "crs_code"}, "orig_query": "select sum(crs_credit), dept_code from course group by dept_code", "split_map": {"course": ["max_crs_credit", "min_crs_credit", "avg_crs_credit", "total_crs_credit"]}, "schema_with_content": "class : crs_code (\"QM-261\", \"CIS-420\", \"QM-261\"), class_time (\"W 6:00-8:40 p.m.\", \"MWF 9:00-9:50 a.m.\", \"W 6:00-8:40 p.m.\"), class_room (\"BUS252\", \"BUS252\", \"KLR211\"), class_code (\"10013\", \"10016\", \"10013\"), class_section (\"1\", \"2\", \"3\"), prof_num (162, 162, 105) | course : crs_code (\"CIS-420\", \"ACCT-212\", \"ACCT-212\"), crs_description (\"Accounting I\", \"Statistical Applications\", \"Accounting II\"), dept_code (\"ACCT\", \"CIS\"), crs_credit (3.0, 4.0) | course_crs_credit : max_crs_credit (3.0, 4.0), total_crs_credit (3.0, 4.0), min_crs_credit (3.0, 4.0), dept_code (\"ACCT\", \"CIS\"), avg_crs_credit (3.0, 4.0), crs_description (\"Accounting I\", \"Statistical Applications\", \"Accounting II\"), crs_code (\"CIS-420\", \"ACCT-212\", \"ACCT-212\") | department : school_code (\"BUS\", \"A&SCI\"), dept_address (\"KLR 284, Box 63\", \"KLR 333, Box 56\", \"BBG 185, Box 128\"), dept_extension (\"1004\", \"4117\", \"1004\"), dept_code (\"PSYCH\", \"ART\", \"CIS\"), emp_num (195, 106, 387), dept_name (\"Computer Info. Systems\", \"Fine Arts\", \"Fine Arts\") | employee : emp_initial (\"L\", \"S\", \"O\"), emp_lname (\"Williams\", \"Williams\", \"Donelly\"), emp_hiredate (\"1975-8-1\", \"1987-7-1\", \"1994-2-21\"), emp_fname (\"Hermine\", \"Elaine\", \"Weston\"), emp_dob (\"1950-6-12\", \"1950-7-4\", \"1953-5-17\"), emp_num (101, 173, 231), emp_jobcode (\"CLRK\", \"CUST\", \"PROF\") | enroll : enroll_grade (\"C\", \"B\", \"A\"), class_code (\"10014\", \"10018\", \"10021\"), stu_num (321452, 324257) | professor : prof_high_degree (\"MBA\", \"MBA\", \"DBA\"), prof_extension (\"3421\", \"4440\", \"5561\"), dept_code (\"ACCT\", \"ENG\", \"MKT/MGT\"), emp_num (104, 110, 110), prof_office (\"KLR 409B\", \"KLR 126\", \"KLR 333\") | student : dept_code (\"ACCT\", \"EDU\", \"BIOL\"), stu_num (324269, 324273, 321452), stu_fname (\"Raphael\", \"Raphael\", \"William\"), stu_hrs (66, 102, 42), stu_transfer (0, 1), stu_init (\"P\", \"T\", \"D\"), stu_class (\"Sr\", \"So\", \"So\"), prof_num (222, 311, 311), stu_phone (\"2315\", \"2267\", \"2256\"), stu_gpa (2.92, 2.11, 2.92), stu_dob (\"1958-12-30\", \"1969-8-23\", \"1975-2-12\"), stu_lname (\"Robertson\", \"Oblonski\", \"Robertson\")", "schema_without_content": "class : crs_code , class_time , class_room , class_code , class_section , prof_num  | course : crs_code , crs_description , dept_code , crs_credit  | course_crs_credit : max_crs_credit , total_crs_credit , min_crs_credit , dept_code , avg_crs_credit , crs_description , crs_code  | department : school_code , dept_address , dept_extension , dept_code , emp_num , dept_name  | employee : emp_initial , emp_lname , emp_hiredate , emp_fname , emp_dob , emp_num , emp_jobcode  | enroll : enroll_grade , class_code , stu_num  | professor : prof_high_degree , prof_extension , dept_code , emp_num , prof_office  | student : dept_code , stu_num , stu_fname , stu_hrs , stu_transfer , stu_init , stu_class , prof_num , stu_phone , stu_gpa , stu_dob , stu_lname "}, {"db_id": "college_1", "query": "select total_stu_hrs, dept_code from student_stu_hrs group by dept_code", "query_toks": ["SELECT", "sum", "(", "stu_hrs", ")", ",", "dept_code", "FROM", "student", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "sum", "(", "stu_hrs", ")", ",", "dept_code", "from", "student", "group", "by", "dept_code"], "question": "Find the total number of hours have done for all students in each department.", "question_toks": ["Find", "the", "total", "number", "of", "hours", "have", "done", "for", "all", "students", "in", "each", "department", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 37, false], null]], [0, [0, [0, 41, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stu_num"}, "orig_query": "select sum(stu_hrs), dept_code from student group by dept_code", "split_map": {"student": ["max_stu_hrs", "min_stu_hrs", "avg_stu_hrs", "total_stu_hrs"]}, "schema_with_content": "class : class_section (\"1\", \"2\", \"3\"), class_code (\"10021\", \"10022\", \"10019\"), crs_code (\"CIS-420\", \"CIS-420\", \"CIS-420\"), class_time (\"TTh 2:30-3:45 p.m.\", \"MWF 8:00-8:50 a.m.\", \"Th 6:00-8:40 p.m.\"), class_room (\"KLR209\", \"KLR209\", \"BUS252\"), prof_num (114, 162, 228) | course : crs_description (\"Accounting I\", \"Intro. to Microcomputing\", \"Intro. to Microcomputing\"), crs_credit (3.0, 4.0), dept_code (\"ACCT\", \"CIS\"), crs_code (\"ACCT-212\", \"CIS-420\", \"QM-362\") | department : dept_extension (\"4117\", \"1867\", \"4117\"), emp_num (106, 103, 387), dept_code (\"ECON/FIN\", \"SOC\", \"PSYCH\"), dept_name (\"Computer Info. Systems\", \"Computer Info. Systems\", \"Computer Info. Systems\"), dept_address (\"DRE 102, Box 223\", \"BBG 208, Box 132\", \"DRE 102, Box 223\"), school_code (\"BUS\", \"A&SCI\") | employee : emp_dob (\"1973-12-2\", \"1962-10-2\", \"1953-5-17\"), emp_hiredate (\"1992-6-15\", \"1978-2-23\", \"1990-8-1\"), emp_initial (\"B\", \"D\", \"F\"), emp_jobcode (\"PROF\", \"PROF\", \"CUST\"), emp_num (126, 166, 104), emp_lname (\"Shebert\", \"Smithson\", \"Jones\"), emp_fname (\"Rebecca\", \"Suzanne\", \"Herman\") | enroll : class_code (\"10014\", \"10018\", \"10021\"), enroll_grade (\"C\", \"B\", \"A\"), stu_num (321452, 324257) | professor : emp_num (387, 435, 105), prof_extension (\"2359\", \"5514\", \"4016\"), prof_high_degree (\"DBA\", \"Ph.D.\", \"MA\"), prof_office (\"KLR 244\", \"KLR 284\", \"AAK 201\"), dept_code (\"BIOL\", \"ECON/FIN\", \"BIOL\") | student : stu_init (\"D\", \"D\", \"H\"), stu_dob (\"1976-9-16\", \"1973-4-8\", \"1981-11-15\"), stu_num (324299, 324269, 324274), stu_phone (\"2134\", \"2267\", \"2315\"), stu_transfer (0, 1), prof_num (228, 222, 199), stu_gpa (3.09, 3.87, 3.27), stu_class (\"So\", \"So\", \"Fr\"), stu_fname (\"Walter\", \"Anne\", \"Walter\"), stu_lname (\"Robertson\", \"Oblonski\", \"Katinga\"), stu_hrs (36, 36, 66), dept_code (\"BIOL\", \"EDU\", \"ACCT\") | student_stu_hrs : stu_dob (\"1976-9-16\", \"1973-4-8\", \"1981-11-15\"), min_stu_hrs (36, 36, 66), stu_num (324299, 324269, 324274), total_stu_hrs (36, 36, 66), stu_init (\"D\", \"D\", \"H\"), stu_lname (\"Robertson\", \"Oblonski\", \"Katinga\"), stu_fname (\"Walter\", \"Anne\", \"Walter\"), avg_stu_hrs (36, 36, 66), max_stu_hrs (36, 36, 66), stu_class (\"So\", \"So\", \"Fr\"), stu_gpa (3.09, 3.87, 3.27), stu_transfer (0, 1), dept_code (\"BIOL\", \"EDU\", \"ACCT\"), stu_phone (\"2134\", \"2267\", \"2315\"), prof_num (228, 222, 199)", "schema_without_content": "class : class_section , class_code , crs_code , class_time , class_room , prof_num  | course : crs_description , crs_credit , dept_code , crs_code  | department : dept_extension , emp_num , dept_code , dept_name , dept_address , school_code  | employee : emp_dob , emp_hiredate , emp_initial , emp_jobcode , emp_num , emp_lname , emp_fname  | enroll : class_code , enroll_grade , stu_num  | professor : emp_num , prof_extension , prof_high_degree , prof_office , dept_code  | student : stu_init , stu_dob , stu_num , stu_phone , stu_transfer , prof_num , stu_gpa , stu_class , stu_fname , stu_lname , stu_hrs , dept_code  | student_stu_hrs : stu_dob , min_stu_hrs , stu_num , total_stu_hrs , stu_init , stu_lname , stu_fname , avg_stu_hrs , max_stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num "}, {"db_id": "college_1", "query": "select total_stu_hrs, dept_code from student_stu_hrs group by dept_code", "query_toks": ["SELECT", "sum", "(", "stu_hrs", ")", ",", "dept_code", "FROM", "student", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "sum", "(", "stu_hrs", ")", ",", "dept_code", "from", "student", "group", "by", "dept_code"], "question": "How many hours do the students spend studying in each department?", "question_toks": ["How", "many", "hours", "do", "the", "students", "spend", "studying", "in", "each", "department", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 37, false], null]], [0, [0, [0, 41, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stu_num"}, "orig_query": "select sum(stu_hrs), dept_code from student group by dept_code", "split_map": {"student": ["max_stu_hrs", "min_stu_hrs", "avg_stu_hrs", "total_stu_hrs"]}, "schema_with_content": "class : class_room (\"KLR211\", \"KLR200\", \"BUS311\"), prof_num (105, 162, 342), class_time (\"MWF 8:00-8:50 a.m.\", \"MWF 8:00-8:50 a.m.\", \"MWF 8:00-8:50 a.m.\"), crs_code (\"ACCT-211\", \"CIS-220\", \"CIS-420\"), class_section (\"1\", \"2\", \"3\"), class_code (\"10015\", \"10015\", \"10023\") | course : dept_code (\"ACCT\", \"CIS\"), crs_code (\"QM-362\", \"CIS-220\", \"CIS-420\"), crs_description (\"Intro. to Statistics\", \"Accounting II\", \"Intro. to Microcomputing\"), crs_credit (3.0, 4.0) | department : emp_num (106, 103, 160), dept_code (\"CIS\", \"HIST\", \"CIS\"), school_code (\"BUS\", \"A&SCI\"), dept_address (\"BBG 185, Box 128\", \"BBG 208, Box 132\", \"KLR 333, Box 56\"), dept_name (\"Fine Arts\", \"Sociology\", \"Mathematics\"), dept_extension (\"3126\", \"4117\", \"4117\") | employee : emp_fname (\"Hermine\", \"Weston\", \"Suzanne\"), emp_num (160, 435, 110), emp_jobcode (\"PROF\", \"CLRK\", \"CLRK\"), emp_initial (\"K\", \"M\", \"D\"), emp_lname (\"Wilson\", \"Teng\", \"Washington\"), emp_dob (\"1963-9-25\", \"1950-6-12\", \"1963-2-27\"), emp_hiredate (\"1978-2-23\", \"1978-8-1\", \"1992-5-1\") | enroll : enroll_grade (\"C\", \"B\", \"A\"), class_code (\"10014\", \"10018\", \"10021\"), stu_num (321452, 324257) | professor : dept_code (\"ECON/FIN\", \"PSYCH\", \"MKT/MGT\"), prof_office (\"KLR 333\", \"AAK 160\", \"BBG 185\"), prof_extension (\"3421\", \"6783\", \"6783\"), prof_high_degree (\"DBA\", \"MBA\", \"DBA\"), emp_num (195, 297, 105) | student : stu_init (\"H\", \"H\", \"\"), stu_dob (\"1969-8-23\", \"1973-4-8\", \"1973-4-8\"), dept_code (\"CIS\", \"BIOL\", \"BIOL\"), prof_num (199, 230, 222), stu_hrs (81, 36, 15), stu_gpa (2.84, 3.27, 3.27), stu_num (324258, 324273, 324274), stu_class (\"Jr\", \"Fr\", \"Jr\"), stu_phone (\"2267\", \"2231\", \"2231\"), stu_lname (\"Smithson\", \"Smithson\", \"Bowser\"), stu_fname (\"Juliette\", \"Gerald\", \"John\"), stu_transfer (0, 1) | student_stu_hrs : total_stu_hrs (81, 36, 15), stu_init (\"H\", \"H\", \"\"), min_stu_hrs (81, 36, 15), stu_lname (\"Smithson\", \"Smithson\", \"Bowser\"), stu_dob (\"1969-8-23\", \"1973-4-8\", \"1973-4-8\"), stu_num (324258, 324273, 324274), stu_fname (\"Juliette\", \"Gerald\", \"John\"), avg_stu_hrs (81, 36, 15), max_stu_hrs (81, 36, 15), stu_class (\"Jr\", \"Fr\", \"Jr\"), stu_gpa (2.84, 3.27, 3.27), stu_transfer (0, 1), dept_code (\"CIS\", \"BIOL\", \"BIOL\"), stu_phone (\"2267\", \"2231\", \"2231\"), prof_num (199, 230, 222)", "schema_without_content": "class : class_room , prof_num , class_time , crs_code , class_section , class_code  | course : dept_code , crs_code , crs_description , crs_credit  | department : emp_num , dept_code , school_code , dept_address , dept_name , dept_extension  | employee : emp_fname , emp_num , emp_jobcode , emp_initial , emp_lname , emp_dob , emp_hiredate  | enroll : enroll_grade , class_code , stu_num  | professor : dept_code , prof_office , prof_extension , prof_high_degree , emp_num  | student : stu_init , stu_dob , dept_code , prof_num , stu_hrs , stu_gpa , stu_num , stu_class , stu_phone , stu_lname , stu_fname , stu_transfer  | student_stu_hrs : total_stu_hrs , stu_init , min_stu_hrs , stu_lname , stu_dob , stu_num , stu_fname , avg_stu_hrs , max_stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num "}, {"db_id": "college_1", "query": "select max_stu_gpa, avg_stu_gpa, min_stu_gpa, dept_code from student_stu_gpa group by dept_code", "query_toks": ["SELECT", "max", "(", "stu_gpa", ")", ",", "avg", "(", "stu_gpa", ")", ",", "min", "(", "stu_gpa", ")", ",", "dept_code", "FROM", "student", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "max", "(", "stu_gpa", ")", ",", "avg", "(", "stu_gpa", ")", ",", "min", "(", "stu_gpa", ")", ",", "dept_code", "from", "student", "group", "by", "dept_code"], "question": "Find the max, average, and minimum gpa of all students in each department.", "question_toks": ["Find", "the", "max", ",", "average", ",", "and", "minimum", "gpa", "of", "all", "students", "in", "each", "department", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 39, false], null]], [5, [0, [0, 39, false], null]], [2, [0, [0, 39, false], null]], [0, [0, [0, 41, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stu_num"}, "orig_query": "select max(stu_gpa), avg(stu_gpa), min(stu_gpa), dept_code from student group by dept_code", "split_map": {"student": ["max_stu_gpa", "min_stu_gpa", "avg_stu_gpa", "total_stu_gpa"]}, "schema_with_content": "class : prof_num (342, 301, 105), class_section (\"1\", \"2\", \"3\"), crs_code (\"QM-362\", \"ACCT-211\", \"QM-362\"), class_code (\"10023\", \"10013\", \"10013\"), class_room (\"BUS311\", \"BUS311\", \"KLR211\"), class_time (\"MWF 10:00-10:50 a.m.\", \"MWF 10:00-10:50 a.m.\", \"W 6:00-8:40 p.m.\") | course : crs_description (\"Database Design and Implementation\", \"Intro. to Statistics\", \"Intro. to Statistics\"), crs_credit (3.0, 4.0), dept_code (\"ACCT\", \"CIS\"), crs_code (\"ACCT-212\", \"CIS-220\", \"CIS-420\") | department : dept_name (\"Mathematics\", \"Accounting\", \"Sociology\"), emp_num (209, 160, 387), dept_code (\"CIS\", \"ART\", \"MATH\"), school_code (\"BUS\", \"A&SCI\"), dept_extension (\"2008\", \"2008\", \"3245\"), dept_address (\"DRE 102, Box 223\", \"KLR 333, Box 56\", \"BBG 185, Box 128\") | employee : emp_hiredate (\"1994-2-21\", \"1994-10-1\", \"1978-8-1\"), emp_initial (\"O\", \"S\", \"M\"), emp_num (195, 123, 425), emp_jobcode (\"CUST\", \"CLRK\", \"CUST\"), emp_dob (\"1951-8-12\", \"1953-7-3\", \"1951-8-12\"), emp_fname (\"Ross\", \"Ismael\", \"Peter\"), emp_lname (\"Donelly\", \"Blalock\", \"Teng\") | enroll : enroll_grade (\"C\", \"B\", \"A\"), class_code (\"10014\", \"10018\", \"10021\"), stu_num (321452, 324257) | professor : prof_extension (\"5561\", \"8665\", \"1145\"), prof_high_degree (\"MBA\", \"Ph.D.\", \"MBA\"), dept_code (\"CIS\", \"ART\", \"ART\"), emp_num (435, 387, 162), prof_office (\"KLR 229D\", \"KLR 244\", \"BBG 185\") | student : dept_code (\"CIS\", \"BIOL\", \"EDU\"), stu_phone (\"2231\", \"2315\", \"2134\"), prof_num (311, 230, 230), stu_dob (\"1979-10-21\", \"1976-9-16\", \"1986-11-30\"), stu_num (324299, 324273, 324257), stu_transfer (0, 1), stu_hrs (81, 120, 81), stu_class (\"Sr\", \"Sr\", \"Sr\"), stu_init (\"P\", \"T\", \"P\"), stu_fname (\"Anne\", \"Gerald\", \"Walter\"), stu_lname (\"Oblonski\", \"Smith\", \"Katinga\"), stu_gpa (3.87, 3.09, 2.92) | student_stu_gpa : stu_dob (\"1979-10-21\", \"1976-9-16\", \"1986-11-30\"), min_stu_gpa (3.87, 3.09, 2.92), total_stu_gpa (3.87, 3.09, 2.92), stu_hrs (81, 120, 81), avg_stu_gpa (3.87, 3.09, 2.92), stu_fname (\"Anne\", \"Gerald\", \"Walter\"), stu_lname (\"Oblonski\", \"Smith\", \"Katinga\"), stu_init (\"P\", \"T\", \"P\"), stu_class (\"Sr\", \"Sr\", \"Sr\"), stu_num (324299, 324273, 324257), max_stu_gpa (3.87, 3.09, 2.92), stu_transfer (0, 1), dept_code (\"CIS\", \"BIOL\", \"EDU\"), stu_phone (\"2231\", \"2315\", \"2134\"), prof_num (311, 230, 230)", "schema_without_content": "class : prof_num , class_section , crs_code , class_code , class_room , class_time  | course : crs_description , crs_credit , dept_code , crs_code  | department : dept_name , emp_num , dept_code , school_code , dept_extension , dept_address  | employee : emp_hiredate , emp_initial , emp_num , emp_jobcode , emp_dob , emp_fname , emp_lname  | enroll : enroll_grade , class_code , stu_num  | professor : prof_extension , prof_high_degree , dept_code , emp_num , prof_office  | student : dept_code , stu_phone , prof_num , stu_dob , stu_num , stu_transfer , stu_hrs , stu_class , stu_init , stu_fname , stu_lname , stu_gpa  | student_stu_gpa : stu_dob , min_stu_gpa , total_stu_gpa , stu_hrs , avg_stu_gpa , stu_fname , stu_lname , stu_init , stu_class , stu_num , max_stu_gpa , stu_transfer , dept_code , stu_phone , prof_num "}, {"db_id": "college_1", "query": "select max_stu_gpa, avg_stu_gpa, min_stu_gpa, dept_code from student_stu_gpa group by dept_code", "query_toks": ["SELECT", "max", "(", "stu_gpa", ")", ",", "avg", "(", "stu_gpa", ")", ",", "min", "(", "stu_gpa", ")", ",", "dept_code", "FROM", "student", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "max", "(", "stu_gpa", ")", ",", "avg", "(", "stu_gpa", ")", ",", "min", "(", "stu_gpa", ")", ",", "dept_code", "from", "student", "group", "by", "dept_code"], "question": "What is the highest, lowest, and average student GPA for every department?", "question_toks": ["What", "is", "the", "highest", ",", "lowest", ",", "and", "average", "student", "GPA", "for", "every", "department", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 39, false], null]], [5, [0, [0, 39, false], null]], [2, [0, [0, 39, false], null]], [0, [0, [0, 41, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stu_num"}, "orig_query": "select max(stu_gpa), avg(stu_gpa), min(stu_gpa), dept_code from student group by dept_code", "split_map": {"student": ["max_stu_gpa", "min_stu_gpa", "avg_stu_gpa", "total_stu_gpa"]}, "schema_with_content": "class : class_room (\"BUS311\", \"BUS252\", \"KLR209\"), class_code (\"10017\", \"10019\", \"10024\"), class_section (\"1\", \"2\", \"3\"), prof_num (301, 105, 301), crs_code (\"ACCT-212\", \"CIS-420\", \"CIS-420\"), class_time (\"Th 6:00-8:40 p.m.\", \"TTh 1:00-2:15 p.m.\", \"Th 6:00-8:40 p.m.\") | course : crs_code (\"CIS-420\", \"QM-261\", \"ACCT-212\"), dept_code (\"ACCT\", \"CIS\"), crs_credit (3.0, 4.0), crs_description (\"Statistical Applications\", \"Statistical Applications\", \"Intro. to Microcomputing\") | department : dept_extension (\"2278\", \"3119\", \"2008\"), dept_code (\"SOC\", \"ACCT\", \"CIS\"), dept_address (\"AAK 297, Box 438\", \"KLR 333, Box 56\", \"BBG 185, Box 128\"), emp_num (195, 103, 297), dept_name (\"Mathematics\", \"Economics/Finance\", \"English\"), school_code (\"BUS\", \"A&SCI\") | employee : emp_jobcode (\"CUST\", \"PROF\", \"CUST\"), emp_num (160, 299, 162), emp_dob (\"1968-11-17\", \"1953-5-17\", \"1953-7-3\"), emp_fname (\"James\", \"Doreen\", \"Carlos\"), emp_lname (\"Smith\", \"Smith\", \"Osaki\"), emp_hiredate (\"1975-8-1\", \"1991-4-23\", \"1987-7-1\"), emp_initial (\"A\", \"J\", \"G\") | enroll : stu_num (321452, 324257), class_code (\"10014\", \"10018\", \"10021\"), enroll_grade (\"C\", \"B\", \"A\") | professor : dept_code (\"CIS\", \"PSYCH\", \"MKT/MGT\"), emp_num (114, 103, 301), prof_extension (\"3000\", \"5561\", \"2278\"), prof_high_degree (\"Ph.D.\", \"Ph.D.\", \"MBA\"), prof_office (\"BBG 208\", \"AAK 194\", \"DRE 156\") | student : prof_num (199, 199, 311), stu_phone (\"2134\", \"2256\", \"2256\"), stu_dob (\"1969-8-23\", \"1958-12-30\", \"1958-12-30\"), stu_init (\"T\", \"K\", \"K\"), stu_num (324273, 324273, 324299), stu_lname (\"Katinga\", \"Bowser\", \"Katinga\"), stu_transfer (0, 1), stu_hrs (114, 81, 114), stu_class (\"Fr\", \"Jr\", \"So\"), stu_gpa (3.27, 2.92, 3.09), stu_fname (\"William\", \"Anne\", \"Anne\"), dept_code (\"BIOL\", \"ENGL\", \"ACCT\") | student_stu_gpa : stu_dob (\"1969-8-23\", \"1958-12-30\", \"1958-12-30\"), stu_hrs (114, 81, 114), stu_init (\"T\", \"K\", \"K\"), avg_stu_gpa (3.27, 2.92, 3.09), stu_fname (\"William\", \"Anne\", \"Anne\"), stu_num (324273, 324273, 324299), max_stu_gpa (3.27, 2.92, 3.09), total_stu_gpa (3.27, 2.92, 3.09), stu_class (\"Fr\", \"Jr\", \"So\"), min_stu_gpa (3.27, 2.92, 3.09), stu_lname (\"Katinga\", \"Bowser\", \"Katinga\"), stu_transfer (0, 1), dept_code (\"BIOL\", \"ENGL\", \"ACCT\"), stu_phone (\"2134\", \"2256\", \"2256\"), prof_num (199, 199, 311)", "schema_without_content": "class : class_room , class_code , class_section , prof_num , crs_code , class_time  | course : crs_code , dept_code , crs_credit , crs_description  | department : dept_extension , dept_code , dept_address , emp_num , dept_name , school_code  | employee : emp_jobcode , emp_num , emp_dob , emp_fname , emp_lname , emp_hiredate , emp_initial  | enroll : stu_num , class_code , enroll_grade  | professor : dept_code , emp_num , prof_extension , prof_high_degree , prof_office  | student : prof_num , stu_phone , stu_dob , stu_init , stu_num , stu_lname , stu_transfer , stu_hrs , stu_class , stu_gpa , stu_fname , dept_code  | student_stu_gpa : stu_dob , stu_hrs , stu_init , avg_stu_gpa , stu_fname , stu_num , max_stu_gpa , total_stu_gpa , stu_class , min_stu_gpa , stu_lname , stu_transfer , dept_code , stu_phone , prof_num "}, {"db_id": "sports_competition", "query": "select avg_gold from club_rank_gold", "query_toks": ["SELECT", "avg", "(", "Gold", ")", "FROM", "club_rank"], "query_toks_no_value": ["select", "avg", "(", "gold", ")", "from", "club_rank"], "question": "What is the average number of gold medals for clubs?", "question_toks": ["What", "is", "the", "average", "number", "of", "gold", "medals", "for", "clubs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"club_rank": "rank"}, "orig_query": "select avg(gold) from club_rank", "split_map": {"club_rank": ["max_gold", "min_gold", "avg_gold", "total_gold"]}, "schema_with_content": "club : name (\"BK Slide\", \"HGS2\", \"BK Slide\"), start_year (\"2011\", \"2001\", \"2009\"), club_id (5, 5, 1), region (\"Brazil\", \"UK\", \"China\") | club_rank : rank (5.0, 6.0, 4.0), total (21.0, 12.0, 31.0), club_id (6, 3, 2), silver (1.0, 7.0, 4.0), bronze (9.0, 0.0, 9.0), gold (2.0, 11.0, 11.0) | club_rank_gold : rank (5.0, 6.0, 4.0), total_gold (2.0, 11.0, 11.0), max_gold (2.0, 11.0, 11.0), avg_gold (2.0, 11.0, 11.0), club_id (6, 3, 2), min_gold (2.0, 11.0, 11.0), silver (1.0, 7.0, 4.0), bronze (9.0, 0.0, 9.0), total (21.0, 12.0, 31.0) | player : player_id (2, 1, 8), name (\"Paul Deacon (c)\", \"Iestyn Harris\", \"Sam Burgess\"), goals (\"0\", \"0\", \"50/60\"), apps (23.0, 13.0, 27.0), tries (2.0, 8.0, 9.0), club_id (3, 5, 4), position (\"Loose Forward\", \"Second Row\", \"Left Wing\"), points (110.0, 24.0, 8.0) | competition : competition_id (4, 3, 2), competition_type (\"Friendly\", \"Tournament\"), country (\"Australia\", \"Australia\", \"Italy\"), year (2006.0, 2007.0) | competition_result : club_id_2 (2, 4, 6), score (\"12:9\", \"10:3\", \"12:9\"), club_id_1 (1, 3, 4), competition_id (10, 5, 6)", "schema_without_content": "club : name , start_year , club_id , region  | club_rank : rank , total , club_id , silver , bronze , gold  | club_rank_gold : rank , total_gold , max_gold , avg_gold , club_id , min_gold , silver , bronze , total  | player : player_id , name \", \"Iestyn Harris\", \"Sam Burgess\", goals , apps , tries , club_id , position , points  | competition : competition_id , competition_type , country , year  | competition_result : club_id_2 , score , club_id_1 , competition_id "}, {"db_id": "sports_competition", "query": "select avg_gold from club_rank_gold", "query_toks": ["SELECT", "avg", "(", "Gold", ")", "FROM", "club_rank"], "query_toks_no_value": ["select", "avg", "(", "gold", ")", "from", "club_rank"], "question": "What is the average number of gold medals for a club?", "question_toks": ["What", "is", "the", "average", "number", "of", "gold", "medals", "for", "a", "club", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"club_rank": "rank"}, "orig_query": "select avg(gold) from club_rank", "split_map": {"club_rank": ["max_gold", "min_gold", "avg_gold", "total_gold"]}, "schema_with_content": "club : start_year (\"2000\", \"2000\", \"1998\"), club_id (4, 6, 1), name (\"AIB\", \"ASC\", \"HGS2\"), region (\"England\", \"Brazil\", \"China\") | club_rank : total (3.0, 6.0, 3.0), silver (2.0, 1.0, 11.0), rank (2.0, 3.0, 2.0), bronze (0.0, 9.0, 9.0), gold (2.0, 8.0, 7.0), club_id (4, 2, 5) | club_rank_gold : total_gold (2.0, 8.0, 7.0), min_gold (2.0, 8.0, 7.0), rank (2.0, 3.0, 2.0), max_gold (2.0, 8.0, 7.0), club_id (4, 2, 5), avg_gold (2.0, 8.0, 7.0), silver (2.0, 1.0, 11.0), bronze (0.0, 9.0, 9.0), total (3.0, 6.0, 3.0) | player : apps (19.0, 30.0, 30.0), points (20.0, 12.0, 20.0), goals (\"0/1\", \"0/1\", \"0\"), tries (6.0, 4.0, 8.0), player_id (9, 6, 7), name (\"Glenn Morrison (vc)\", \"Terry Newton\", \"Paul Deacon (c)\"), position (\"Right Centre\", \"Second Row\", \"Right Centre\"), club_id (2, 4, 1) | competition : year (2006.0, 2007.0), competition_id (11, 9, 11), competition_type (\"Friendly\", \"Tournament\"), country (\"Ireland\", \"Russia\", \"Australia\") | competition_result : club_id_2 (2, 4, 6), score (\"13:10\", \"25:2\", \"13:10\"), competition_id (5, 2, 4), club_id_1 (1, 3, 4)", "schema_without_content": "club : start_year , club_id , name , region  | club_rank : total , silver , rank , bronze , gold , club_id  | club_rank_gold : total_gold , min_gold , rank , max_gold , club_id , avg_gold , silver , bronze , total  | player : apps , points , goals , tries , player_id , name \", \"Terry Newton\", \"Paul Deacon \", position , club_id  | competition : year , competition_id , competition_type , country  | competition_result : club_id_2 , score , competition_id , club_id_1 "}, {"db_id": "sports_competition", "query": "select max_silver, min_silver from club_rank_silver", "query_toks": ["SELECT", "max", "(", "Silver", ")", ",", "min", "(", "Silver", ")", "FROM", "club_rank"], "query_toks_no_value": ["select", "max", "(", "silver", ")", ",", "min", "(", "silver", ")", "from", "club_rank"], "question": "What are the maximum and minimum number of silver medals for clubs.", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "number", "of", "silver", "medals", "for", "clubs", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 8, false], null]], [2, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"club_rank": "rank"}, "orig_query": "select max(silver), min(silver) from club_rank", "split_map": {"club_rank": ["max_silver", "min_silver", "avg_silver", "total_silver"]}, "schema_with_content": "club : name (\"HGS2\", \"BK Slide\", \"HSBIF\"), region (\"UK\", \"USA\", \"UK\"), club_id (1, 3, 4), start_year (\"2011\", \"2000\", \"2001\") | club_rank : club_id (3, 3, 3), total (31.0, 12.0, 3.0), gold (8.0, 4.0, 7.0), rank (5.0, 2.0, 6.0), bronze (9.0, 6.0, 9.0), silver (4.0, 1.0, 3.0) | club_rank_silver : rank (5.0, 2.0, 6.0), club_id (3, 3, 3), max_silver (4.0, 1.0, 3.0), total_silver (4.0, 1.0, 3.0), min_silver (4.0, 1.0, 3.0), avg_silver (4.0, 1.0, 3.0), gold (8.0, 4.0, 7.0), bronze (9.0, 6.0, 9.0), total (31.0, 12.0, 3.0) | player : apps (24.0, 29.0, 20.0), position (\"Full Back\", \"Second Row\", \"Hooker\"), player_id (15, 8, 1), goals (\"0\", \"0/1\", \"90/106\"), club_id (1, 5, 2), name (\"Sam Burgess\", \"Iestyn Harris\", \"Joe Vagana\"), tries (5.0, 2.0, 3.0), points (24.0, 16.0, 188.0) | competition : competition_id (2, 2, 7), country (\"Australia\", \"Italy\", \"Ireland\"), year (2006.0, 2007.0), competition_type (\"Friendly\", \"Tournament\") | competition_result : club_id_1 (1, 3, 4), club_id_2 (2, 4, 6), competition_id (5, 4, 6), score (\"12:9\", \"10:3\", \"10:3\")", "schema_without_content": "club : name , region , club_id , start_year  | club_rank : club_id , total , gold , rank , bronze , silver  | club_rank_silver : rank , club_id , max_silver , total_silver , min_silver , avg_silver , gold , bronze , total  | player : apps , position , player_id , goals , club_id , name , tries , points  | competition : competition_id , country , year , competition_type  | competition_result : club_id_1 , club_id_2 , competition_id , score "}, {"db_id": "sports_competition", "query": "select max_silver, min_silver from club_rank_silver", "query_toks": ["SELECT", "max", "(", "Silver", ")", ",", "min", "(", "Silver", ")", "FROM", "club_rank"], "query_toks_no_value": ["select", "max", "(", "silver", ")", ",", "min", "(", "silver", ")", "from", "club_rank"], "question": "What are the maximum and minimum number of silver medals for all the clubs?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "number", "of", "silver", "medals", "for", "all", "the", "clubs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 8, false], null]], [2, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"club_rank": "rank"}, "orig_query": "select max(silver), min(silver) from club_rank", "split_map": {"club_rank": ["max_silver", "min_silver", "avg_silver", "total_silver"]}, "schema_with_content": "club : name (\"ASC\", \"HGS2\", \"HGS2\"), start_year (\"2011\", \"1998\", \"1998\"), club_id (1, 3, 6), region (\"UK\", \"Japan\", \"UK\") | club_rank : gold (8.0, 11.0, 8.0), rank (3.0, 1.0, 3.0), bronze (9.0, 6.0, 2.0), club_id (1, 4, 1), total (3.0, 6.0, 12.0), silver (4.0, 3.0, 2.0) | club_rank_silver : avg_silver (4.0, 3.0, 2.0), max_silver (4.0, 3.0, 2.0), club_id (1, 4, 1), total_silver (4.0, 3.0, 2.0), rank (3.0, 1.0, 3.0), min_silver (4.0, 3.0, 2.0), gold (8.0, 11.0, 8.0), bronze (9.0, 6.0, 2.0), total (3.0, 6.0, 12.0) | player : tries (9.0, 5.0, 9.0), goals (\"90/106\", \"50/60\", \"50/60\"), name (\"Joe Vagana\", \"Michael Platt\", \"Tame Tupou\"), position (\"Full Back\", \"Hooker\", \"Left Wing\"), points (12.0, 4.0, 188.0), club_id (3, 1, 2), apps (30.0, 19.0, 17.0), player_id (11, 5, 12) | competition : competition_type (\"Friendly\", \"Tournament\"), competition_id (10, 2, 1), year (2006.0, 2007.0), country (\"Spain\", \"Italy\", \"Ireland\") | competition_result : score (\"11:10\", \"10:11\", \"10:11\"), competition_id (10, 6, 2), club_id_1 (1, 3, 4), club_id_2 (2, 4, 6)", "schema_without_content": "club : name , start_year , club_id , region  | club_rank : gold , rank , bronze , club_id , total , silver  | club_rank_silver : avg_silver , max_silver , club_id , total_silver , rank , min_silver , gold , bronze , total  | player : tries , goals , name , position , points , club_id , apps , player_id  | competition : competition_type , competition_id , year , country  | competition_result : score , competition_id , club_id_1 , club_id_2 "}, {"db_id": "sports_competition", "query": "select position, avg_points from player_points group by position", "query_toks": ["SELECT", "POSITION", ",", "avg", "(", "Points", ")", "FROM", "player", "GROUP", "BY", "POSITION"], "query_toks_no_value": ["select", "position", ",", "avg", "(", "points", ")", "from", "player", "group", "by", "position"], "question": "List the position of players and the average number of points of players of each position.", "question_toks": ["List", "the", "position", "of", "players", "and", "the", "average", "number", "of", "points", "of", "players", "of", "each", "position", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [5, [0, [0, 18, false], null]]]], "union": null, "where": []}, "primary_key": {"player": "player_id"}, "orig_query": "select position, avg(points) from player group by position", "split_map": {"player": ["max_points", "min_points", "avg_points", "total_points"]}, "schema_with_content": "club : region (\"Brazil\", \"UK\", \"USA\"), name (\"AIB\", \"AIB\", \"HSBIF\"), start_year (\"2009\", \"2001\", \"1998\"), club_id (2, 6, 3) | club_rank : club_id (3, 1, 6), gold (3.0, 4.0, 2.0), total (12.0, 6.0, 6.0), bronze (2.0, 6.0, 0.0), rank (1.0, 6.0, 2.0), silver (11.0, 1.0, 2.0) | player : points (36.0, 36.0, 24.0), club_id (5, 1, 3), position (\"Prop\", \"Full Back\", \"Hooker\"), goals (\"0/1\", \"90/106\", \"0/1\"), player_id (15, 10, 12), name (\"Dave Halley\", \"Sam Burgess\", \"Terry Newton\"), tries (5.0, 4.0, 2.0), apps (23.0, 27.0, 30.0) | player_points : total_points (36.0, 36.0, 24.0), avg_points (36.0, 36.0, 24.0), name (\"Dave Halley\", \"Sam Burgess\", \"Terry Newton\"), min_points (36.0, 36.0, 24.0), club_id (5, 1, 3), position (\"Prop\", \"Full Back\", \"Hooker\"), max_points (36.0, 36.0, 24.0), goals (\"0/1\", \"90/106\", \"0/1\"), apps (23.0, 27.0, 30.0), player_id (15, 10, 12), tries (5.0, 4.0, 2.0) | competition : country (\"Spain\", \"Russia\", \"Ireland\"), competition_type (\"Friendly\", \"Tournament\"), competition_id (5, 5, 2), year (2006.0, 2007.0) | competition_result : score (\"10:3\", \"25:2\", \"11:10\"), club_id_2 (2, 4, 6), competition_id (5, 4, 6), club_id_1 (1, 3, 4)", "schema_without_content": "club : region , name , start_year , club_id  | club_rank : club_id , gold , total , bronze , rank , silver  | player : points , club_id , position , goals , player_id , name , tries , apps  | player_points : total_points , avg_points , name , min_points , club_id , position , max_points , goals , apps , player_id , tries  | competition : country , competition_type , competition_id , year  | competition_result : score , club_id_2 , competition_id , club_id_1 "}, {"db_id": "sports_competition", "query": "select position, avg_points from player_points group by position", "query_toks": ["SELECT", "POSITION", ",", "avg", "(", "Points", ")", "FROM", "player", "GROUP", "BY", "POSITION"], "query_toks_no_value": ["select", "position", ",", "avg", "(", "points", ")", "from", "player", "group", "by", "position"], "question": "For each position, what is the average number of points for players in that position?", "question_toks": ["For", "each", "position", ",", "what", "is", "the", "average", "number", "of", "points", "for", "players", "in", "that", "position", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [5, [0, [0, 18, false], null]]]], "union": null, "where": []}, "primary_key": {"player": "player_id"}, "orig_query": "select position, avg(points) from player group by position", "split_map": {"player": ["max_points", "min_points", "avg_points", "total_points"]}, "schema_with_content": "club : start_year (\"1998\", \"2009\", \"2000\"), club_id (2, 5, 1), region (\"USA\", \"USA\", \"China\"), name (\"HSBIF\", \"HSBIF\", \"ASC\") | club_rank : bronze (9.0, 6.0, 9.0), club_id (6, 5, 4), rank (3.0, 3.0, 2.0), gold (2.0, 3.0, 7.0), silver (4.0, 4.0, 11.0), total (31.0, 21.0, 31.0) | player : club_id (4, 1, 1), player_id (9, 10, 12), tries (2.0, 1.0, 1.0), position (\"Second Row\", \"Right Wing\", \"Second Row\"), goals (\"0\", \"90/106\", \"50/60\"), points (8.0, 32.0, 188.0), apps (28.0, 27.0, 29.0), name (\"Paul Deacon (c)\", \"Iestyn Harris\", \"David Solomona\") | player_points : avg_points (8.0, 32.0, 188.0), max_points (8.0, 32.0, 188.0), club_id (4, 1, 1), player_id (9, 10, 12), goals (\"0\", \"90/106\", \"50/60\"), tries (2.0, 1.0, 1.0), min_points (8.0, 32.0, 188.0), apps (28.0, 27.0, 29.0), position (\"Second Row\", \"Right Wing\", \"Second Row\"), name (\"Paul Deacon (c)\", \"Iestyn Harris\", \"David Solomona\"), total_points (8.0, 32.0, 188.0) | competition : competition_id (5, 8, 8), year (2006.0, 2007.0), competition_type (\"Friendly\", \"Tournament\"), country (\"Russia\", \"Spain\", \"Slovenia\") | competition_result : club_id_2 (2, 4, 6), competition_id (5, 5, 2), club_id_1 (1, 3, 4), score (\"10:11\", \"11:10\", \"10:3\")", "schema_without_content": "club : start_year , club_id , region , name  | club_rank : bronze , club_id , rank , gold , silver , total  | player : club_id , player_id , tries , position , goals , points , apps , name \", \"Iestyn Harris\", \"David Solomona\" | player_points : avg_points , max_points , club_id , player_id , goals , tries , min_points , apps , position , name \", \"Iestyn Harris\", \"David Solomona\", total_points  | competition : competition_id , year , competition_type , country  | competition_result : club_id_2 , competition_id , club_id_1 , score "}, {"db_id": "sports_competition", "query": "select total_points from player_points", "query_toks": ["SELECT", "sum", "(", "Points", ")", "FROM", "player"], "query_toks_no_value": ["select", "sum", "(", "points", ")", "from", "player"], "question": "Show total points of all players.", "question_toks": ["Show", "total", "points", "of", "all", "players", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 18, false], null]]]], "union": null, "where": []}, "primary_key": {"player": "player_id"}, "orig_query": "select sum(points) from player", "split_map": {"player": ["max_points", "min_points", "avg_points", "total_points"]}, "schema_with_content": "club : region (\"Japan\", \"England\", \"Japan\"), start_year (\"2011\", \"2011\", \"2011\"), name (\"BK Slide\", \"BK Slide\", \"HGS2\"), club_id (1, 3, 4) | club_rank : gold (8.0, 11.0, 7.0), club_id (2, 5, 5), silver (1.0, 11.0, 3.0), total (13.0, 12.0, 6.0), bronze (6.0, 2.0, 0.0), rank (3.0, 4.0, 4.0) | player : points (110.0, 24.0, 36.0), name (\"Terry Newton\", \"Chris Feather\", \"David Solomona\"), player_id (13, 13, 4), position (\"Left Wing\", \"Right Wing\", \"Stand Off\"), apps (23.0, 24.0, 14.0), tries (5.0, 4.0, 1.0), club_id (1, 5, 3), goals (\"50/60\", \"0\", \"90/106\") | player_points : player_id (13, 13, 4), goals (\"50/60\", \"0\", \"90/106\"), max_points (110.0, 24.0, 36.0), club_id (1, 5, 3), position (\"Left Wing\", \"Right Wing\", \"Stand Off\"), avg_points (110.0, 24.0, 36.0), min_points (110.0, 24.0, 36.0), tries (5.0, 4.0, 1.0), total_points (110.0, 24.0, 36.0), apps (23.0, 24.0, 14.0), name (\"Terry Newton\", \"Chris Feather\", \"David Solomona\") | competition : year (2006.0, 2007.0), competition_id (6, 1, 7), country (\"Ireland\", \"Russia\", \"Spain\"), competition_type (\"Friendly\", \"Tournament\") | competition_result : score (\"25:2\", \"10:11\", \"10:11\"), club_id_2 (2, 4, 6), competition_id (1, 10, 6), club_id_1 (1, 3, 4)", "schema_without_content": "club : region , start_year , name , club_id  | club_rank : gold , club_id , silver , total , bronze , rank  | player : points , name , player_id , position , apps , tries , club_id , goals  | player_points : player_id , goals , max_points , club_id , position , avg_points , min_points , tries , total_points , apps , name  | competition : year , competition_id , country , competition_type  | competition_result : score , club_id_2 , competition_id , club_id_1 "}, {"db_id": "sports_competition", "query": "select total_points from player_points", "query_toks": ["SELECT", "sum", "(", "Points", ")", "FROM", "player"], "query_toks_no_value": ["select", "sum", "(", "points", ")", "from", "player"], "question": "What is the total number of points for all players?", "question_toks": ["What", "is", "the", "total", "number", "of", "points", "for", "all", "players", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 18, false], null]]]], "union": null, "where": []}, "primary_key": {"player": "player_id"}, "orig_query": "select sum(points) from player", "split_map": {"player": ["max_points", "min_points", "avg_points", "total_points"]}, "schema_with_content": "club : name (\"BK Slide\", \"ASC\", \"BK Slide\"), club_id (2, 3, 3), start_year (\"1998\", \"1998\", \"2011\"), region (\"England\", \"Japan\", \"England\") | club_rank : club_id (1, 3, 3), rank (4.0, 1.0, 1.0), total (12.0, 3.0, 21.0), silver (3.0, 1.0, 11.0), bronze (9.0, 6.0, 0.0), gold (8.0, 3.0, 8.0) | player : points (4.0, 16.0, 188.0), apps (20.0, 26.0, 19.0), tries (8.0, 8.0, 4.0), goals (\"0/1\", \"90/106\", \"0\"), player_id (10, 9, 7), club_id (2, 5, 1), name (\"Terry Newton\", \"David Solomona\", \"Michael Platt\"), position (\"Right Centre\", \"Second Row\", \"Prop\") | player_points : name (\"Terry Newton\", \"David Solomona\", \"Michael Platt\"), goals (\"0/1\", \"90/106\", \"0\"), max_points (4.0, 16.0, 188.0), player_id (10, 9, 7), apps (20.0, 26.0, 19.0), position (\"Right Centre\", \"Second Row\", \"Prop\"), tries (8.0, 8.0, 4.0), min_points (4.0, 16.0, 188.0), total_points (4.0, 16.0, 188.0), club_id (2, 5, 1), avg_points (4.0, 16.0, 188.0) | competition : country (\"Spain\", \"Ireland\", \"Ireland\"), year (2006.0, 2007.0), competition_type (\"Friendly\", \"Tournament\"), competition_id (6, 3, 3) | competition_result : club_id_1 (1, 3, 4), competition_id (6, 10, 1), club_id_2 (2, 4, 6), score (\"25:2\", \"25:2\", \"10:3\")", "schema_without_content": "club : name , club_id , start_year , region  | club_rank : club_id , rank , total , silver , bronze , gold  | player : points , apps , tries , goals , player_id , club_id , name , position  | player_points : name , goals , max_points , player_id , apps , position , tries , min_points , total_points , club_id , avg_points  | competition : country , year , competition_type , competition_id  | competition_result : club_id_1 , competition_id , club_id_2 , score "}, {"db_id": "manufacturer", "query": "select total_num_of_component from furniture_num_of_component", "query_toks": ["SELECT", "sum", "(", "num_of_component", ")", "FROM", "furniture"], "query_toks_no_value": ["select", "sum", "(", "num_of_component", ")", "from", "furniture"], "question": "How many furniture components are there in total?", "question_toks": ["How", "many", "furniture", "components", "are", "there", "in", "total", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"furniture": "furniture_id"}, "orig_query": "select sum(num_of_component) from furniture", "split_map": {"furniture": ["max_num_of_component", "min_num_of_component", "avg_num_of_component", "total_num_of_component"]}, "schema_with_content": "manufacturer : manufacturer_id (3, 6, 4), num_of_factories (3, 36, 1), name (\"Chevrolet House\", \"Jiaju\", \"Chevrolet\"), open_year (2001.0, 2001.0, 1992.0), num_of_shops (2, 19, 2) | furniture : num_of_component (4, 4, 4), name (\"Four-poster bed\", \"Bookcase\", \"Dining set\"), market_rate (1.0, 40.0, 52.5), furniture_id (7, 4, 1) | furniture_num_of_component : furniture_id (7, 4, 1), avg_num_of_component (4, 4, 4), min_num_of_component (4, 4, 4), total_num_of_component (4, 4, 4), max_num_of_component (4, 4, 4), name (\"Four-poster bed\", \"Bookcase\", \"Dining set\"), market_rate (1.0, 40.0, 52.5) | furniture_manufacte : manufacturer_id (7, 1, 5), price_in_dollar (2124.0, 1234.0, 2124.0), furniture_id (7, 1, 3)", "schema_without_content": "manufacturer : manufacturer_id , num_of_factories , name , open_year , num_of_shops  | furniture : num_of_component , name , market_rate , furniture_id  | furniture_num_of_component : furniture_id , avg_num_of_component , min_num_of_component , total_num_of_component , max_num_of_component , name , market_rate  | furniture_manufacte : manufacturer_id , price_in_dollar , furniture_id "}, {"db_id": "manufacturer", "query": "select total_market_rate from furniture_market_rate order by market_rate desc limit 2", "query_toks": ["SELECT", "sum", "(", "market_rate", ")", "FROM", "furniture", "ORDER", "BY", "market_rate", "DESC", "LIMIT", "2"], "query_toks_no_value": ["select", "sum", "(", "market_rate", ")", "from", "furniture", "order", "by", "market_rate", "desc", "limit", "value"], "question": "find the total market rate of the furnitures that have the top 2 market shares.", "question_toks": ["find", "the", "total", "market", "rate", "of", "the", "furnitures", "that", "have", "the", "top", "2", "market", "shares", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 2, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[4, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"furniture": "furniture_id"}, "orig_query": "select sum(market_rate) from furniture order by market_rate desc limit 2", "split_map": {"furniture": ["max_market_rate", "min_market_rate", "avg_market_rate", "total_market_rate"]}, "schema_with_content": "manufacturer : manufacturer_id (6, 7, 5), name (\"Dodge\", \"IKEA\", \"Ford Make\"), num_of_shops (24, 19, 19), open_year (1991.0, 1990.0, 1980.0), num_of_factories (36, 38, 36) | furniture : furniture_id (3, 4, 6), market_rate (40.0, 2.0, 0.5), name (\"Chabudai\", \"Bookcase\", \"Bench\"), num_of_component (12, 3, 3) | furniture_market_rate : min_market_rate (40.0, 2.0, 0.5), max_market_rate (40.0, 2.0, 0.5), furniture_id (3, 4, 6), name (\"Chabudai\", \"Bookcase\", \"Bench\"), num_of_component (12, 3, 3), avg_market_rate (40.0, 2.0, 0.5), total_market_rate (40.0, 2.0, 0.5) | furniture_manufacte : furniture_id (3, 4, 1), manufacturer_id (5, 4, 7), price_in_dollar (2124.0, 450.0, 2124.0)", "schema_without_content": "manufacturer : manufacturer_id , name , num_of_shops , open_year , num_of_factories  | furniture : furniture_id , market_rate , name , num_of_component  | furniture_market_rate : min_market_rate , max_market_rate , furniture_id , name , num_of_component , avg_market_rate , total_market_rate  | furniture_manufacte : furniture_id , manufacturer_id , price_in_dollar "}, {"db_id": "manufacturer", "query": "select avg_num_of_factories from manufacturer_num_of_factories where num_of_shops > 20", "query_toks": ["SELECT", "avg", "(", "Num_of_Factories", ")", "FROM", "manufacturer", "WHERE", "num_of_shops", ">", "20"], "query_toks_no_value": ["select", "avg", "(", "num_of_factories", ")", "from", "manufacturer", "where", "num_of_shops", ">", "value"], "question": "Find the average number of factories for the manufacturers that have more than 20 shops.", "question_toks": ["Find", "the", "average", "number", "of", "factories", "for", "the", "manufacturers", "that", "have", "more", "than", "20", "shops", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 5, false], null], 20.0, null]]}, "primary_key": {"manufacturer": "manufacturer_id"}, "orig_query": "select avg(num_of_factories) from manufacturer where num_of_shops > 20", "split_map": {"manufacturer": ["max_num_of_factories", "min_num_of_factories", "avg_num_of_factories", "total_num_of_factories"]}, "schema_with_content": "manufacturer : name (\"Jiaju\", \"Jiaju\", \"IKEA\"), manufacturer_id (6, 4, 5), num_of_factories (1, 1, 1), open_year (1980.0, 1992.0, 2001.0), num_of_shops (24, 7, 24) | manufacturer_num_of_factories : min_num_of_factories (1, 1, 1), max_num_of_factories (1, 1, 1), manufacturer_id (6, 4, 5), name (\"Jiaju\", \"Jiaju\", \"IKEA\"), total_num_of_factories (1, 1, 1), avg_num_of_factories (1, 1, 1), open_year (1980.0, 1992.0, 2001.0), num_of_shops (24, 7, 24) | furniture : num_of_component (14, 12, 5), furniture_id (5, 3, 3), market_rate (2.0, 0.5, 1.0), name (\"Bookcase\", \"Bookcase\", \"Hatstand\") | furniture_manufacte : furniture_id (4, 1, 2), manufacturer_id (4, 5, 1), price_in_dollar (450.0, 450.0, 443.0)", "schema_without_content": "manufacturer : name , manufacturer_id , num_of_factories , open_year , num_of_shops  | manufacturer_num_of_factories : min_num_of_factories , max_num_of_factories , manufacturer_id , name , total_num_of_factories , avg_num_of_factories , open_year , num_of_shops  | furniture : num_of_component , furniture_id , market_rate , name  | furniture_manufacte : furniture_id , manufacturer_id , price_in_dollar "}, {"db_id": "manufacturer", "query": "select max_num_of_shops, avg(num_of_factories)from manufacturer_num_of_shops where open_year < 1990", "query_toks": ["SELECT", "max", "(", "num_of_shops", ")", ",", "avg", "(", "Num_of_Factories", ")", "FROM", "manufacturer", "WHERE", "open_year", "<", "1990"], "query_toks_no_value": ["select", "max", "(", "num_of_shops", ")", ",", "avg", "(", "num_of_factories", ")", "from", "manufacturer", "where", "open_year", "<", "value"], "question": "what is the average number of factories and maximum number of shops for manufacturers that opened before 1990.", "question_toks": ["what", "is", "the", "average", "number", "of", "factories", "and", "maximum", "number", "of", "shops", "for", "manufacturers", "that", "opened", "before", "1990", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]], [5, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 2, false], null], 1990.0, null]]}, "primary_key": {"manufacturer": "manufacturer_id"}, "orig_query": "select max(num_of_shops), avg(num_of_factories) from manufacturer where open_year < 1990", "split_map": {"manufacturer": ["max_num_of_shops", "min_num_of_shops", "avg_num_of_shops", "total_num_of_shops"]}, "schema_with_content": "manufacturer : open_year (1980.0, 2000.0, 2001.0), name (\"IKEA\", \"IKEA\", \"Jiaju\"), num_of_shops (4, 7, 35), manufacturer_id (1, 7, 4), num_of_factories (12, 12, 21) | manufacturer_num_of_shops : total_num_of_shops (4, 7, 35), num_of_factories (12, 12, 21), open_year (1980.0, 2000.0, 2001.0), avg_num_of_shops (4, 7, 35), manufacturer_id (1, 7, 4), max_num_of_shops (4, 7, 35), name (\"IKEA\", \"IKEA\", \"Jiaju\"), min_num_of_shops (4, 7, 35) | furniture : num_of_component (12, 5, 3), market_rate (1.0, 52.5, 52.5), name (\"Dining set\", \"Chabudai\", \"Bench\"), furniture_id (6, 3, 2) | furniture_manufacte : manufacturer_id (1, 1, 1), furniture_id (2, 1, 2), price_in_dollar (450.0, 2124.0, 1234.0)", "schema_without_content": "manufacturer : open_year , name , num_of_shops , manufacturer_id , num_of_factories  | manufacturer_num_of_shops : total_num_of_shops , num_of_factories , open_year , avg_num_of_shops , manufacturer_id , max_num_of_shops , name , min_num_of_shops  | furniture : num_of_component , market_rate , name , furniture_id  | furniture_manufacte : manufacturer_id , furniture_id , price_in_dollar "}, {"db_id": "manufacturer", "query": "select max(num_of_shops), avg_num_of_factories from manufacturer_num_of_factories where open_year < 1990", "query_toks": ["SELECT", "max", "(", "num_of_shops", ")", ",", "avg", "(", "Num_of_Factories", ")", "FROM", "manufacturer", "WHERE", "open_year", "<", "1990"], "query_toks_no_value": ["select", "max", "(", "num_of_shops", ")", ",", "avg", "(", "num_of_factories", ")", "from", "manufacturer", "where", "open_year", "<", "value"], "question": "what is the average number of factories and maximum number of shops for manufacturers that opened before 1990.", "question_toks": ["what", "is", "the", "average", "number", "of", "factories", "and", "maximum", "number", "of", "shops", "for", "manufacturers", "that", "opened", "before", "1990", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]], [5, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 2, false], null], 1990.0, null]]}, "primary_key": {"manufacturer": "manufacturer_id"}, "orig_query": "select max(num_of_shops), avg(num_of_factories) from manufacturer where open_year < 1990", "split_map": {"manufacturer": ["max_num_of_factories", "min_num_of_factories", "avg_num_of_factories", "total_num_of_factories"]}, "schema_with_content": "manufacturer : manufacturer_id (6, 7, 1), num_of_factories (38, 1, 21), open_year (1980.0, 1992.0, 2001.0), name (\"Dodge\", \"Jiaju\", \"Dodge\"), num_of_shops (19, 19, 4) | manufacturer_num_of_factories : name (\"Dodge\", \"Jiaju\", \"Dodge\"), max_num_of_factories (38, 1, 21), open_year (1980.0, 1992.0, 2001.0), avg_num_of_factories (38, 1, 21), manufacturer_id (6, 7, 1), total_num_of_factories (38, 1, 21), min_num_of_factories (38, 1, 21), num_of_shops (19, 19, 4) | furniture : furniture_id (2, 1, 2), num_of_component (4, 12, 6), name (\"Billiard table\", \"Chabudai\", \"Hatstand\"), market_rate (0.5, 40.0, 3.5) | furniture_manufacte : furniture_id (7, 2, 3), price_in_dollar (443.0, 450.0, 443.0), manufacturer_id (4, 7, 4)", "schema_without_content": "manufacturer : manufacturer_id , num_of_factories , open_year , name , num_of_shops  | manufacturer_num_of_factories : name , max_num_of_factories , open_year , avg_num_of_factories , manufacturer_id , total_num_of_factories , min_num_of_factories , num_of_shops  | furniture : furniture_id , num_of_component , name , market_rate  | furniture_manufacte : furniture_id , price_in_dollar , manufacturer_id "}, {"db_id": "hr_1", "query": "select employee_id, max_end_date from job_history_end_date group by employee_id", "query_toks": ["SELECT", "employee_id", ",", "MAX", "(", "end_date", ")", "FROM", "job_history", "GROUP", "BY", "employee_id"], "query_toks_no_value": ["select", "employee_id", ",", "max", "(", "end_date", ")", "from", "job_history", "group", "by", "employee_id"], "question": "display the employee ID for each employee and the date on which he ended his previous job.", "question_toks": ["display", "the", "employee", "ID", "for", "each", "employee", "and", "the", "date", "on", "which", "he", "ended", "his", "previous", "job", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 25, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]], [1, [0, [0, 27, false], null]]]], "union": null, "where": []}, "primary_key": {"job_history": "employee_id"}, "orig_query": "select employee_id, max(end_date) from job_history group by employee_id", "split_map": {"job_history": ["max_end_date", "min_end_date", "avg_end_date", "total_end_date"]}, "schema_with_content": "regions : region_name (\"Asia\\r\", \"Americas\\r\", \"Asia\\r\"), region_id (2, 4, 2) | countries : country_name (\"China\", \"India\", \"Israel\"), country_id (\"CA\", \"CH\", \"FR\"), region_id (2, 4, 1) | departments : manager_id (203, 0, 201), department_id (40, 140, 150), department_name (\"Finance\", \"Purchasing\", \"Public Relations\"), location_id (1800, 1700, 2700) | jobs : min_salary (2500, 8200, 15000), job_id (\"MK_REP\", \"AC_ACCOUNT\", \"AC_MGR\"), max_salary (5500, 5500, 5500), job_title (\"Purchasing Clerk\", \"President\", \"Marketing Manager\") | employees : department_id (40, 20, 110), email (\"SVOLLMAN\", \"LDORAN\", \"AMCEWEN\"), hire_date (\"1987-09-23\", \"1987-07-13\", \"1987-08-20\"), employee_id (135, 186, 101), job_id (\"ST_MAN\", \"AC_MGR\", \"HR_REP\"), commission_pct (0, 0, 0.3), last_name (\"Taylor\", \"Sewall\", \"Vishney\"), manager_id (102, 149, 124), phone_number (\"011.44.1345.529268\", \"650.127.1934\", \"011.44.1343.929268\"), salary (6500, 10000, 6500), first_name (\"Jason\", \"Martha\", \"Sarah\") | job_history : end_date (\"1993-06-17\", \"1993-06-17\", \"1998-07-24\"), start_date (\"1989-09-21\", \"1994-07-01\", \"1996-02-17\"), employee_id (122, 102, 201), department_id (90, 90, 80), job_id (\"IT_PROG\", \"\", \"ST_CLERK\") | job_history_end_date : min_end_date (\"1993-06-17\", \"1993-06-17\", \"1998-07-24\"), total_end_date (\"1993-06-17\", \"1993-06-17\", \"1998-07-24\"), max_end_date (\"1993-06-17\", \"1993-06-17\", \"1998-07-24\"), start_date (\"1989-09-21\", \"1994-07-01\", \"1996-02-17\"), employee_id (122, 102, 201), avg_end_date (\"1993-06-17\", \"1993-06-17\", \"1998-07-24\"), job_id (\"IT_PROG\", \"\", \"ST_CLERK\"), department_id (90, 90, 80) | locations : city (\"Utrecht\", \"South Brunswick\", \"Mexico City\"), postal_code (\"\", \"50090\", \"3029SK\"), street_address (\"2014 Jabberwocky Rd\", \"9702 Chester Road\", \"2004 Charade Rd\"), location_id (2400, 1500, 1100), state_province (\"Geneve\", \"Manchester\", \"Texas\"), country_id (\"CH\", \"CA\", \"AU\")", "schema_without_content": "regions : region_name , region_id  | countries : country_name , country_id , region_id  | departments : manager_id , department_id , department_name , location_id  | jobs : min_salary , job_id , max_salary , job_title  | employees : department_id , email , hire_date , employee_id , job_id , commission_pct , last_name , manager_id , phone_number , salary , first_name  | job_history : end_date , start_date , employee_id , department_id , job_id  | job_history_end_date : min_end_date , total_end_date , max_end_date , start_date , employee_id , avg_end_date , job_id , department_id  | locations : city , postal_code , street_address , location_id , state_province , country_id "}, {"db_id": "hr_1", "query": "select employee_id, max_end_date from job_history_end_date group by employee_id", "query_toks": ["SELECT", "employee_id", ",", "MAX", "(", "end_date", ")", "FROM", "job_history", "GROUP", "BY", "employee_id"], "query_toks_no_value": ["select", "employee_id", ",", "max", "(", "end_date", ")", "from", "job_history", "group", "by", "employee_id"], "question": "What are the employee ids for each employee and final dates of employment at their last job?", "question_toks": ["What", "are", "the", "employee", "ids", "for", "each", "employee", "and", "final", "dates", "of", "employment", "at", "their", "last", "job", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 25, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]], [1, [0, [0, 27, false], null]]]], "union": null, "where": []}, "primary_key": {"job_history": "employee_id"}, "orig_query": "select employee_id, max(end_date) from job_history group by employee_id", "split_map": {"job_history": ["max_end_date", "min_end_date", "avg_end_date", "total_end_date"]}, "schema_with_content": "regions : region_name (\"Asia\\r\", \"Asia\\r\", \"Europe\\r\"), region_id (1, 3, 2) | countries : region_id (2, 3, 2), country_name (\"Germany\", \"Canada\", \"Belgium\"), country_id (\"NL\", \"ZM\", \"BR\") | departments : manager_id (200, 114, 100), department_id (210, 80, 70), location_id (1800, 1800, 2500), department_name (\"NOC\", \"Public Relations\", \"Recruiting\") | jobs : job_title (\"Public Relations Representative\", \"President\", \"Accounting Manager\"), max_salary (6000, 9000, 10500), job_id (\"IT_PROG\", \"AD_ASST\", \"SH_CLERK\"), min_salary (20000, 9000, 6000) | employees : first_name (\"Kelly\", \"Daniel\", \"Lex\"), email (\"GCAMBRAU\", \"JRUSSEL\", \"CDAVIES\"), hire_date (\"1987-07-20\", \"1987-09-04\", \"1987-07-18\"), phone_number (\"650.121.8009\", \"650.127.1834\", \"011.44.1346.529268\"), commission_pct (0, 0.25, 0.2), job_id (\"PR_REP\", \"ST_CLERK\", \"SA_REP\"), salary (7700, 4400, 17000), employee_id (166, 100, 167), manager_id (120, 103, 124), last_name (\"Mikkilineni\", \"De Haan\", \"Urman\"), department_id (90, 40, 50) | job_history : start_date (\"1996-02-17\", \"0000-00-00\", \"1989-09-21\"), job_id (\"AC_MGR\", \"ST_CLERK\", \"AC_MGR\"), employee_id (114, 101, 176), department_id (60, 20, 80), end_date (\"1998-12-31\", \"1998-07-24\", \"1993-10-27\") | job_history_end_date : max_end_date (\"1998-12-31\", \"1998-07-24\", \"1993-10-27\"), total_end_date (\"1998-12-31\", \"1998-07-24\", \"1993-10-27\"), avg_end_date (\"1998-12-31\", \"1998-07-24\", \"1993-10-27\"), employee_id (114, 101, 176), min_end_date (\"1998-12-31\", \"1998-07-24\", \"1993-10-27\"), start_date (\"1996-02-17\", \"0000-00-00\", \"1989-09-21\"), job_id (\"AC_MGR\", \"ST_CLERK\", \"AC_MGR\"), department_id (60, 20, 80) | locations : state_province (\"Ontario\", \"New Jersey\", \"Manchester\"), country_id (\"DE\", \"Ox\", \"US\"), street_address (\"Pieter Breughelstraat 837\", \"1298 Vileparle (E)\", \"\"Magdalen Centre\"), postal_code (\"11932\", \"3095\", \"2901\"), location_id (1700, 1400, 2100), city (\"Singapore\", \"South Brunswick\", \"Seattle\")", "schema_without_content": "regions : region_name , region_id  | countries : region_id , country_name , country_id  | departments : manager_id , department_id , location_id , department_name  | jobs : job_title , max_salary , job_id , min_salary  | employees : first_name , email , hire_date , phone_number , commission_pct , job_id , salary , employee_id , manager_id , last_name , department_id  | job_history : start_date , job_id , employee_id , department_id , end_date  | job_history_end_date : max_end_date , total_end_date , avg_end_date , employee_id , min_end_date , start_date , job_id , department_id  | locations : state_province , country_id , street_address \", \"\"Magdalen Centre\", postal_code , location_id , city "}, {"db_id": "hr_1", "query": "select department_id, avg_salary from employees_salary where commission_pct != \"null\" group by department_id", "query_toks": ["SELECT", "department_id", ",", "AVG", "(", "salary", ")", "FROM", "employees", "WHERE", "commission_pct", "!", "=", "``", "null", "''", "GROUP", "BY", "department_id"], "query_toks_no_value": ["select", "department_id", ",", "avg", "(", "salary", ")", "from", "employees", "where", "commission_pct", "!", "=", "value", "group", "by", "department_id"], "question": "display the average salary of employees for each department who gets a commission percentage.", "question_toks": ["display", "the", "average", "salary", "of", "employees", "for", "each", "department", "who", "gets", "a", "commission", "percentage", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]], [5, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 22, false], null], "\"null\"", null]]}, "primary_key": {"employees": "employee_id"}, "orig_query": "select department_id, avg(salary) from employees where commission_pct != \"null\" group by department_id", "split_map": {"employees": ["max_salary", "min_salary", "avg_salary", "total_salary"]}, "schema_with_content": "regions : region_name (\"Asia\\r\", \"Asia\\r\", \"Europe\\r\"), region_id (4, 4, 3) | countries : country_name (\"United Kingdom\", \"Singapore\", \"Zambia\"), country_id (\"NL\", \"DK\", \"CN\"), region_id (1, 3, 4) | departments : department_id (250, 200, 50), department_name (\"Payroll\", \"Administration\", \"Marketing\"), manager_id (203, 203, 205), location_id (2400, 2400, 1400) | jobs : max_salary (15000, 5000, 16000), job_id (\"IT_PROG\", \"PU_MAN\", \"SA_MAN\"), min_salary (6000, 4500, 2000), job_title (\"Administration Assistant\", \"Administration Assistant\", \"President\") | employees : employee_id (118, 153, 155), first_name (\"Anthony\", \"Girard\", \"Louise\"), commission_pct (0.1, 0.3, 0), manager_id (100, 103, 201), department_id (90, 30, 20), last_name (\"Partners\", \"Kumar\", \"Bernstein\"), hire_date (\"1987-08-07\", \"1987-06-21\", \"1987-07-10\"), email (\"BEVERETT\", \"AERRAZUR\", \"LSMITH\"), salary (7900, 7300, 5800), phone_number (\"011.44.1346.329268\", \"515.123.4568\", \"650.509.2876\"), job_id (\"PR_REP\", \"AC_ACCOUNT\", \"AD_VP\") | employees_salary : email (\"BEVERETT\", \"AERRAZUR\", \"LSMITH\"), avg_salary (7900, 7300, 5800), first_name (\"Anthony\", \"Girard\", \"Louise\"), max_salary (7900, 7300, 5800), last_name (\"Partners\", \"Kumar\", \"Bernstein\"), employee_id (118, 153, 155), min_salary (7900, 7300, 5800), hire_date (\"1987-08-07\", \"1987-06-21\", \"1987-07-10\"), job_id (\"PR_REP\", \"AC_ACCOUNT\", \"AD_VP\"), phone_number (\"011.44.1346.329268\", \"515.123.4568\", \"650.509.2876\"), total_salary (7900, 7300, 5800), commission_pct (0.1, 0.3, 0), manager_id (100, 103, 201), department_id (90, 30, 20) | job_history : job_id (\"AC_MGR\", \"MK_REP\", \"SA_REP\"), start_date (\"1994-07-01\", \"1998-03-24\", \"1987-09-17\"), end_date (\"1993-10-27\", \"1993-10-27\", \"1993-10-27\"), department_id (60, 80, 20), employee_id (200, 122, 101) | locations : state_province (\"Washington\", \"Washington\", \"Oxford\"), country_id (\"SG\", \"SG\", \"BR\"), street_address (\"2007 Zagora St\", \"Murtenstrasse 921\", \"9702 Chester Road\"), location_id (3100, 1100, 2900), city (\"London\", \"Bern\", \"Stretford\"), postal_code (\"9629850293\", \"01307-002\", \"50090\")", "schema_without_content": "regions : region_name , region_id  | countries : country_name , country_id , region_id  | departments : department_id , department_name , manager_id , location_id  | jobs : max_salary , job_id , min_salary , job_title  | employees : employee_id , first_name , commission_pct , manager_id , department_id , last_name , hire_date , email , salary , phone_number , job_id  | employees_salary : email , avg_salary , first_name , max_salary , last_name , employee_id , min_salary , hire_date , job_id , phone_number , total_salary , commission_pct , manager_id , department_id  | job_history : job_id , start_date , end_date , department_id , employee_id  | locations : state_province , country_id , street_address , location_id , city , postal_code "}, {"db_id": "hr_1", "query": "select department_id, avg_salary from employees_salary where commission_pct != \"null\" group by department_id", "query_toks": ["SELECT", "department_id", ",", "AVG", "(", "salary", ")", "FROM", "employees", "WHERE", "commission_pct", "!", "=", "``", "null", "''", "GROUP", "BY", "department_id"], "query_toks_no_value": ["select", "department_id", ",", "avg", "(", "salary", ")", "from", "employees", "where", "commission_pct", "!", "=", "value", "group", "by", "department_id"], "question": "What is the average salary of employees who have a commission percentage that is not null?", "question_toks": ["What", "is", "the", "average", "salary", "of", "employees", "who", "have", "a", "commission", "percentage", "that", "is", "not", "null", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]], [5, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 22, false], null], "\"null\"", null]]}, "primary_key": {"employees": "employee_id"}, "orig_query": "select department_id, avg(salary) from employees where commission_pct != \"null\" group by department_id", "split_map": {"employees": ["max_salary", "min_salary", "avg_salary", "total_salary"]}, "schema_with_content": "regions : region_name (\"Europe\\r\", \"Americas\\r\", \"Middle East and Africa\\r\"), region_id (4, 1, 1) | countries : country_name (\"Argentina\", \"United States of America\", \"HongKong\"), region_id (4, 1, 1), country_id (\"BR\", \"NG\", \"ZM\") | departments : location_id (1800, 1800, 1500), department_id (230, 150, 40), department_name (\"Sales\", \"Finance\", \"Benefits\"), manager_id (145, 201, 121) | jobs : job_id (\"AD_ASST\", \"HR_REP\", \"AD_ASST\"), job_title (\"Accounting Manager\", \"Stock Manager\", \"Sales Manager\"), min_salary (3000, 6000, 4200), max_salary (6000, 16000, 40000) | employees : job_id (\"ST_CLERK\", \"SA_REP\", \"FI_MGR\"), last_name (\"Raphaely\", \"Fox\", \"McEwen\"), employee_id (137, 144, 171), email (\"SBAIDA\", \"JCHEN\", \"SBAIDA\"), hire_date (\"1987-08-14\", \"1987-07-29\", \"1987-09-21\"), department_id (90, 80, 80), salary (10500, 3600, 2100), manager_id (146, 148, 147), first_name (\"Sundar\", \"Jonathon\", \"Nanette\"), commission_pct (0.3, 0.3, 0.35), phone_number (\"011.44.1344.498718\", \"011.44.1346.129268\", \"011.44.1346.129268\") | employees_salary : max_salary (10500, 3600, 2100), hire_date (\"1987-08-14\", \"1987-07-29\", \"1987-09-21\"), job_id (\"ST_CLERK\", \"SA_REP\", \"FI_MGR\"), last_name (\"Raphaely\", \"Fox\", \"McEwen\"), email (\"SBAIDA\", \"JCHEN\", \"SBAIDA\"), employee_id (137, 144, 171), avg_salary (10500, 3600, 2100), phone_number (\"011.44.1344.498718\", \"011.44.1346.129268\", \"011.44.1346.129268\"), min_salary (10500, 3600, 2100), total_salary (10500, 3600, 2100), first_name (\"Sundar\", \"Jonathon\", \"Nanette\"), commission_pct (0.3, 0.3, 0.35), manager_id (146, 148, 147), department_id (90, 80, 80) | job_history : employee_id (101, 101, 0), department_id (110, 110, 50), job_id (\"SA_MAN\", \"\", \"SA_REP\"), start_date (\"1994-07-01\", \"0000-00-00\", \"1987-09-17\"), end_date (\"1999-12-19\", \"1998-07-24\", \"1999-12-19\") | locations : city (\"London\", \"South San Francisco\", \"Utrecht\"), street_address (\"40-5-12 Laogianggen\", \"9702 Chester Road\", \"Murtenstrasse 921\"), state_province (\"Texas\", \"Utrecht\", \"Bavaria\"), country_id (\"CA\", \"IN\", \"AU\"), location_id (3100, 1600, 1900), postal_code (\"6823\", \"98199\", \"190518\")", "schema_without_content": "regions : region_name , region_id  | countries : country_name , region_id , country_id  | departments : location_id , department_id , department_name , manager_id  | jobs : job_id , job_title , min_salary , max_salary  | employees : job_id , last_name , employee_id , email , hire_date , department_id , salary , manager_id , first_name , commission_pct , phone_number  | employees_salary : max_salary , hire_date , job_id , last_name , email , employee_id , avg_salary , phone_number , min_salary , total_salary , first_name , commission_pct , manager_id , department_id  | job_history : employee_id , department_id , job_id , start_date , end_date  | locations : city , street_address , state_province , country_id , location_id , postal_code "}, {"db_id": "hr_1", "query": "select min_salary, department_id from employees_salary group by department_id", "query_toks": ["SELECT", "MIN", "(", "salary", ")", ",", "department_id", "FROM", "employees", "GROUP", "BY", "department_id"], "query_toks_no_value": ["select", "min", "(", "salary", ")", ",", "department_id", "from", "employees", "group", "by", "department_id"], "question": "return the smallest salary for every departments.", "question_toks": ["return", "the", "smallest", "salary", "for", "every", "departments", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": []}, "primary_key": {"employees": "employee_id"}, "orig_query": "select min(salary), department_id from employees group by department_id", "split_map": {"employees": ["max_salary", "min_salary", "avg_salary", "total_salary"]}, "schema_with_content": "regions : region_name (\"Americas\\r\", \"Middle East and Africa\\r\", \"Americas\\r\"), region_id (1, 1, 3) | countries : country_name (\"Netherlands\", \"Italy\", \"Denmark\"), region_id (3, 2, 2), country_id (\"DK\", \"AR\", \"ZM\") | departments : manager_id (200, 200, 200), department_id (110, 160, 120), department_name (\"Retail Sales\", \"Operations\", \"Payroll\"), location_id (2700, 1700, 1700) | jobs : job_title (\"Shipping Clerk\", \"Public Relations Representative\", \"Human Resources Representative\"), max_salary (15000, 15000, 12000), job_id (\"HR_REP\", \"AD_VP\", \"SA_MAN\"), min_salary (15000, 8200, 4500) | employees : manager_id (0, 145, 0), department_id (40, 10, 70), employee_id (179, 198, 169), last_name (\"Sarchand\", \"Perkins\", \"Urman\"), job_id (\"ST_CLERK\", \"IT_PROG\", \"SA_REP\"), phone_number (\"011.44.1343.829268\", \"515.127.4564\", \"603.123.6666\"), salary (6800, 8400, 7200), email (\"HBLOOM\", \"SSEWALL\", \"DAUSTIN\"), first_name (\"Susan\", \"Mattea\", \"Randall\"), commission_pct (0.15, 0.35, 0.15), hire_date (\"1987-07-08\", \"1987-07-04\", \"1987-09-19\") | employees_salary : email (\"HBLOOM\", \"SSEWALL\", \"DAUSTIN\"), first_name (\"Susan\", \"Mattea\", \"Randall\"), max_salary (6800, 8400, 7200), avg_salary (6800, 8400, 7200), job_id (\"ST_CLERK\", \"IT_PROG\", \"SA_REP\"), employee_id (179, 198, 169), hire_date (\"1987-07-08\", \"1987-07-04\", \"1987-09-19\"), phone_number (\"011.44.1343.829268\", \"515.127.4564\", \"603.123.6666\"), min_salary (6800, 8400, 7200), last_name (\"Sarchand\", \"Perkins\", \"Urman\"), total_salary (6800, 8400, 7200), commission_pct (0.15, 0.35, 0.15), manager_id (0, 145, 0), department_id (40, 10, 70) | job_history : employee_id (114, 122, 114), job_id (\"MK_REP\", \"AC_ACCOUNT\", \"AC_MGR\"), end_date (\"1998-07-24\", \"1998-12-31\", \"1993-10-27\"), start_date (\"1987-09-17\", \"1996-02-17\", \"1993-01-13\"), department_id (80, 110, 110) | locations : location_id (2000, 1600, 3000), city (\"Whitehorse\", \"Mexico City\", \"Tokyo\"), country_id (\"Ox\", \"SG\", \"UK\"), postal_code (\"2901\", \"10934\", \"10934\"), street_address (\"6092 Boxwood St\", \"1298 Vileparle (E)\", \"Rua Frei Caneca 1360\"), state_province (\"Utrecht\", \"Manchester\", \"California\")", "schema_without_content": "regions : region_name , region_id  | countries : country_name , region_id , country_id  | departments : manager_id , department_id , department_name , location_id  | jobs : job_title , max_salary , job_id , min_salary  | employees : manager_id , department_id , employee_id , last_name , job_id , phone_number , salary , email , first_name , commission_pct , hire_date  | employees_salary : email , first_name , max_salary , avg_salary , job_id , employee_id , hire_date , phone_number , min_salary , last_name , total_salary , commission_pct , manager_id , department_id  | job_history : employee_id , job_id , end_date , start_date , department_id  | locations : location_id , city , country_id , postal_code , street_address \", \"Rua Frei Caneca 1360\", state_province "}, {"db_id": "hr_1", "query": "select min_salary, department_id from employees_salary group by department_id", "query_toks": ["SELECT", "MIN", "(", "salary", ")", ",", "department_id", "FROM", "employees", "GROUP", "BY", "department_id"], "query_toks_no_value": ["select", "min", "(", "salary", ")", ",", "department_id", "from", "employees", "group", "by", "department_id"], "question": "What is the minimum salary in each department?", "question_toks": ["What", "is", "the", "minimum", "salary", "in", "each", "department", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": []}, "primary_key": {"employees": "employee_id"}, "orig_query": "select min(salary), department_id from employees group by department_id", "split_map": {"employees": ["max_salary", "min_salary", "avg_salary", "total_salary"]}, "schema_with_content": "regions : region_id (3, 1, 2), region_name (\"Americas\\r\", \"Middle East and Africa\\r\", \"Middle East and Africa\\r\") | countries : region_id (2, 4, 1), country_id (\"JP\", \"SG\", \"DE\"), country_name (\"China\", \"Mexico\", \"United Kingdom\") | departments : department_id (240, 230, 30), location_id (1500, 2500, 2700), department_name (\"Finance\", \"Marketing\", \"Construction\"), manager_id (200, 201, 145) | jobs : min_salary (4200, 3000, 8200), job_id (\"ST_MAN\", \"PR_REP\", \"AD_PRES\"), max_salary (9000, 10500, 6000), job_title (\"Purchasing Clerk\", \"President\", \"Marketing Representative\") | employees : phone_number (\"515.124.4369\", \"515.123.4568\", \"011.44.1344.429278\"), department_id (70, 90, 60), first_name (\"James\", \"Nanette\", \"Renske\"), hire_date (\"1987-07-16\", \"1987-09-28\", \"1987-09-26\"), commission_pct (0.25, 0.35, 0.3), manager_id (102, 100, 101), last_name (\"Tuvault\", \"Dellinger\", \"Perkins\"), employee_id (170, 197, 154), email (\"JMURMAN\", \"LDORAN\", \"MATKINSO\"), job_id (\"AC_ACCOUNT\", \"PR_REP\", \"AD_ASST\"), salary (6800, 7800, 7200) | employees_salary : max_salary (6800, 7800, 7200), job_id (\"AC_ACCOUNT\", \"PR_REP\", \"AD_ASST\"), last_name (\"Tuvault\", \"Dellinger\", \"Perkins\"), phone_number (\"515.124.4369\", \"515.123.4568\", \"011.44.1344.429278\"), total_salary (6800, 7800, 7200), hire_date (\"1987-07-16\", \"1987-09-28\", \"1987-09-26\"), employee_id (170, 197, 154), min_salary (6800, 7800, 7200), first_name (\"James\", \"Nanette\", \"Renske\"), email (\"JMURMAN\", \"LDORAN\", \"MATKINSO\"), avg_salary (6800, 7800, 7200), commission_pct (0.25, 0.35, 0.3), manager_id (102, 100, 101), department_id (70, 90, 60) | job_history : end_date (\"1997-03-15\", \"0000-00-00\", \"1999-12-31\"), employee_id (101, 201, 101), department_id (50, 20, 50), start_date (\"1993-10-28\", \"1999-01-01\", \"1987-09-17\"), job_id (\"\", \"\", \"SA_REP\") | locations : country_id (\"DE\", \"JP\", \"UK\"), location_id (2700, 1800, 2200), postal_code (\"6823\", \"\", \"YSW 9T2\"), street_address (\"1298 Vileparle (E)\", \"40-5-12 Laogianggen\", \"12-98 Victoria Street\"), city (\"Tokyo\", \"Toronto\", \"Roma\"), state_province (\"Tokyo Prefecture\", \"Geneve\", \"Washington\")", "schema_without_content": "regions : region_id , region_name  | countries : region_id , country_id , country_name  | departments : department_id , location_id , department_name , manager_id  | jobs : min_salary , job_id , max_salary , job_title  | employees : phone_number , department_id , first_name , hire_date , commission_pct , manager_id , last_name , employee_id , email , job_id , salary  | employees_salary : max_salary , job_id , last_name , phone_number , total_salary , hire_date , employee_id , min_salary , first_name , email , avg_salary , commission_pct , manager_id , department_id  | job_history : end_date , employee_id , department_id , start_date , job_id  | locations : country_id , location_id , postal_code , street_address \", \"40-5-12 Laogianggen\", \"12-98 Victoria Street\", city , state_province "}, {"db_id": "hr_1", "query": "select department_id, total_salary from employees_salary group by department_id having count(*)>= 2", "query_toks": ["SELECT", "department_id", ",", "SUM", "(", "salary", ")", "FROM", "employees", "GROUP", "BY", "department_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "department_id", ",", "sum", "(", "salary", ")", "from", "employees", "group", "by", "department_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "display the department id and the total salary for those departments which contains at least two employees.", "question_toks": ["display", "the", "department", "id", "and", "the", "total", "salary", "for", "those", "departments", "which", "contains", "at", "least", "two", "employees", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]], [4, [0, [0, 21, false], null]]]], "union": null, "where": []}, "primary_key": {"employees": "employee_id"}, "orig_query": "select department_id, sum(salary) from employees group by department_id having count(*) >= 2", "split_map": {"employees": ["max_salary", "min_salary", "avg_salary", "total_salary"]}, "schema_with_content": "regions : region_name (\"Americas\\r\", \"Middle East and Africa\\r\", \"Americas\\r\"), region_id (1, 2, 3) | countries : country_name (\"Zambia\", \"Switzerland\", \"Netherlands\"), country_id (\"DE\", \"BE\", \"AU\"), region_id (1, 4, 3) | departments : department_name (\"Contracting\", \"Public Relations\", \"Manufacturing\"), location_id (2400, 1500, 2700), manager_id (201, 121, 203), department_id (270, 30, 230) | jobs : job_title (\"Stock Manager\", \"Finance Manager\", \"Stock Manager\"), job_id (\"PU_CLERK\", \"AD_VP\", \"PU_MAN\"), max_salary (16000, 16000, 12000), min_salary (10000, 4000, 2500) | employees : hire_date (\"1987-08-23\", \"1987-08-25\", \"1987-09-21\"), employee_id (116, 184, 111), department_id (20, 50, 70), job_id (\"IT_PROG\", \"SH_CLERK\", \"FI_ACCOUNT\"), salary (4800, 2100, 3500), phone_number (\"650.121.2034\", \"515.127.4564\", \"650.509.3876\"), email (\"PKAUFLIN\", \"PVARGAS\", \"KMOURGOS\"), commission_pct (0.2, 0, 0.4), manager_id (205, 122, 123), last_name (\"Kaufling\", \"Whalen\", \"Hartstein\"), first_name (\"Vance\", \"Amit\", \"Donald\") | employees_salary : max_salary (4800, 2100, 3500), avg_salary (4800, 2100, 3500), email (\"PKAUFLIN\", \"PVARGAS\", \"KMOURGOS\"), hire_date (\"1987-08-23\", \"1987-08-25\", \"1987-09-21\"), employee_id (116, 184, 111), job_id (\"IT_PROG\", \"SH_CLERK\", \"FI_ACCOUNT\"), last_name (\"Kaufling\", \"Whalen\", \"Hartstein\"), total_salary (4800, 2100, 3500), min_salary (4800, 2100, 3500), phone_number (\"650.121.2034\", \"515.127.4564\", \"650.509.3876\"), first_name (\"Vance\", \"Amit\", \"Donald\"), commission_pct (0.2, 0, 0.4), manager_id (205, 122, 123), department_id (20, 50, 70) | job_history : job_id (\"SA_REP\", \"SA_REP\", \"\"), department_id (60, 60, 20), start_date (\"0000-00-00\", \"0000-00-00\", \"1994-07-01\"), end_date (\"1998-07-24\", \"1998-12-31\", \"1998-07-24\"), employee_id (114, 200, 102) | locations : state_province (\"California\", \"Manchester\", \"Manchester\"), postal_code (\"2901\", \"26192\", \"6823\"), country_id (\"DE\", \"Ox\", \"AU\"), street_address (\"1298 Vileparle (E)\", \"\"Magdalen Centre\", \"1297 Via Cola di Rie\"), location_id (2500, 2000, 1400), city (\"Utrecht\", \"Munich\", \"South Brunswick\")", "schema_without_content": "regions : region_name , region_id  | countries : country_name , country_id , region_id  | departments : department_name , location_id , manager_id , department_id  | jobs : job_title , job_id , max_salary , min_salary  | employees : hire_date , employee_id , department_id , job_id , salary , phone_number , email , commission_pct , manager_id , last_name , first_name  | employees_salary : max_salary , avg_salary , email , hire_date , employee_id , job_id , last_name , total_salary , min_salary , phone_number , first_name , commission_pct , manager_id , department_id  | job_history : job_id , department_id , start_date , end_date , employee_id  | locations : state_province , postal_code , country_id , street_address \", \"\"Magdalen Centre\", \"1297 Via Cola di Rie\", location_id , city "}, {"db_id": "hr_1", "query": "select department_id, total_salary from employees_salary group by department_id having count(*)>= 2", "query_toks": ["SELECT", "department_id", ",", "SUM", "(", "salary", ")", "FROM", "employees", "GROUP", "BY", "department_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "department_id", ",", "sum", "(", "salary", ")", "from", "employees", "group", "by", "department_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are total salaries and department id for each department that has more than 2 employees?", "question_toks": ["What", "are", "total", "salaries", "and", "department", "id", "for", "each", "department", "that", "has", "more", "than", "2", "employees", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]], [4, [0, [0, 21, false], null]]]], "union": null, "where": []}, "primary_key": {"employees": "employee_id"}, "orig_query": "select department_id, sum(salary) from employees group by department_id having count(*) >= 2", "split_map": {"employees": ["max_salary", "min_salary", "avg_salary", "total_salary"]}, "schema_with_content": "regions : region_name (\"Americas\\r\", \"Asia\\r\", \"Middle East and Africa\\r\"), region_id (4, 2, 4) | countries : country_name (\"Egypt\", \"Israel\", \"Mexico\"), country_id (\"BE\", \"CN\", \"CH\"), region_id (3, 2, 1) | departments : manager_id (145, 145, 205), location_id (1800, 2700, 2400), department_name (\"Executive\", \"IT\", \"Government Sales\"), department_id (190, 200, 240) | jobs : max_salary (20000, 5500, 10500), job_title (\"Stock Clerk\", \"Public Relations Representative\", \"Accountant\"), job_id (\"SA_MAN\", \"FI_ACCOUNT\", \"ST_CLERK\"), min_salary (9000, 4000, 8000) | employees : salary (2100, 7200, 11500), employee_id (186, 132, 114), department_id (100, 60, 50), phone_number (\"650.124.6234\", \"011.44.1346.129268\", \"650.505.1876\"), commission_pct (0.4, 0.15, 0.35), last_name (\"Walsh\", \"Abel\", \"Fripp\"), hire_date (\"1987-06-24\", \"1987-08-17\", \"1987-07-25\"), manager_id (100, 101, 145), first_name (\"Patrick\", \"Irene\", \"Nanette\"), email (\"CDAVIES\", \"RMATOS\", \"TGATES\"), job_id (\"AD_ASST\", \"IT_PROG\", \"PR_REP\") | employees_salary : min_salary (2100, 7200, 11500), employee_id (186, 132, 114), max_salary (2100, 7200, 11500), last_name (\"Walsh\", \"Abel\", \"Fripp\"), first_name (\"Patrick\", \"Irene\", \"Nanette\"), avg_salary (2100, 7200, 11500), email (\"CDAVIES\", \"RMATOS\", \"TGATES\"), phone_number (\"650.124.6234\", \"011.44.1346.129268\", \"650.505.1876\"), hire_date (\"1987-06-24\", \"1987-08-17\", \"1987-07-25\"), total_salary (2100, 7200, 11500), job_id (\"AD_ASST\", \"IT_PROG\", \"PR_REP\"), commission_pct (0.4, 0.15, 0.35), manager_id (100, 101, 145), department_id (100, 60, 50) | job_history : end_date (\"1993-10-27\", \"1993-10-27\", \"1998-07-24\"), department_id (80, 0, 110), start_date (\"1994-07-01\", \"1993-01-13\", \"1993-01-13\"), employee_id (201, 122, 101), job_id (\"IT_PROG\", \"AD_ASST\", \"MK_REP\") | locations : postal_code (\"989\", \"9629850293\", \"YSW 9T2\"), street_address (\"8204 Arthur St\", \"Murtenstrasse 921\", \"93091 Calle della Testa\"), city (\"South San Francisco\", \"Bombay\", \"Bern\"), country_id (\"CN\", \"IT\", \"IN\"), location_id (1600, 1700, 1500), state_province (\"Utrecht\", \"New South Wales\", \"Oxford\")", "schema_without_content": "regions : region_name , region_id  | countries : country_name , country_id , region_id  | departments : manager_id , location_id , department_name , department_id  | jobs : max_salary , job_title , job_id , min_salary  | employees : salary , employee_id , department_id , phone_number , commission_pct , last_name , hire_date , manager_id , first_name , email , job_id  | employees_salary : min_salary , employee_id , max_salary , last_name , first_name , avg_salary , email , phone_number , hire_date , total_salary , job_id , commission_pct , manager_id , department_id  | job_history : end_date , department_id , start_date , employee_id , job_id  | locations : postal_code , street_address , city , country_id , location_id , state_province "}, {"db_id": "hr_1", "query": "select first_name, last_name, salary, department_id, max_salary from employees_salary group by department_id", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", ",", "department_id", ",", "MAX", "(", "salary", ")", "FROM", "employees", "GROUP", "BY", "department_id"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", ",", "department_id", ",", "max", "(", "salary", ")", "from", "employees", "group", "by", "department_id"], "question": "display the department ID, full name (first and last name), salary for those employees who is highest salary in every department.", "question_toks": ["display", "the", "department", "ID", ",", "full", "name", "(", "first", "and", "last", "name", ")", ",", "salary", "for", "those", "employees", "who", "is", "highest", "salary", "in", "every", "department", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]], [1, [0, [0, 21, false], null]]]], "union": null, "where": []}, "primary_key": {"employees": "employee_id"}, "orig_query": "select first_name, last_name, salary, department_id, max(salary) from employees group by department_id", "split_map": {"employees": ["max_salary", "min_salary", "avg_salary", "total_salary"]}, "schema_with_content": "regions : region_id (1, 3, 3), region_name (\"Middle East and Africa\\r\", \"Middle East and Africa\\r\", \"Americas\\r\") | countries : region_id (2, 1, 1), country_id (\"NG\", \"DE\", \"IN\"), country_name (\"Israel\", \"Nigeria\", \"Zambia\") | departments : department_name (\"Finance\", \"Benefits\", \"Contracting\"), location_id (1800, 1500, 2400), manager_id (203, 200, 121), department_id (120, 150, 170) | jobs : job_id (\"AD_VP\", \"MK_REP\", \"IT_PROG\"), min_salary (20000, 4200, 2500), max_salary (10000, 6000, 9000), job_title (\"Finance Manager\", \"Stock Manager\", \"Administration Vice President\") | employees : job_id (\"MK_MAN\", \"SA_MAN\", \"SH_CLERK\"), manager_id (123, 120, 123), last_name (\"Geoni\", \"Russell\", \"Abel\"), commission_pct (0.1, 0.35, 0.3), phone_number (\"590.423.5567\", \"011.44.1344.429268\", \"011.44.1644.429262\"), department_id (60, 70, 60), employee_id (138, 170, 119), salary (7900, 6000, 8000), email (\"JRUSSEL\", \"JKING\", \"JCHEN\"), hire_date (\"1987-09-26\", \"1987-07-09\", \"1987-08-09\"), first_name (\"Michael\", \"Guy\", \"Mozhe\") | employees_salary : min_salary (7900, 6000, 8000), employee_id (138, 170, 119), email (\"JRUSSEL\", \"JKING\", \"JCHEN\"), max_salary (7900, 6000, 8000), total_salary (7900, 6000, 8000), avg_salary (7900, 6000, 8000), job_id (\"MK_MAN\", \"SA_MAN\", \"SH_CLERK\"), phone_number (\"590.423.5567\", \"011.44.1344.429268\", \"011.44.1644.429262\"), hire_date (\"1987-09-26\", \"1987-07-09\", \"1987-08-09\"), first_name (\"Michael\", \"Guy\", \"Mozhe\"), last_name (\"Geoni\", \"Russell\", \"Abel\"), commission_pct (0.1, 0.35, 0.3), manager_id (123, 120, 123), department_id (60, 70, 60) | job_history : department_id (80, 80, 50), employee_id (101, 201, 201), end_date (\"1999-12-19\", \"0000-00-00\", \"1998-07-24\"), job_id (\"SA_MAN\", \"AC_MGR\", \"AC_MGR\"), start_date (\"1987-09-17\", \"1996-02-17\", \"1993-10-28\") | locations : country_id (\"UK\", \"\"\", \"JP\"), postal_code (\"9629850293\", \"3029SK\", \"2901\"), location_id (3200, 2100, 2700), state_province (\"Oxford\", \"Manchester\", \"California\"), city (\"Singapore\", \"Sydney\", \"Sao Paulo\"), street_address (\"20 Rue des Corps-Saints\", \"Schwanthalerstr. 7031\", \"2004 Charade Rd\")", "schema_without_content": "regions : region_id , region_name  | countries : region_id , country_id , country_name  | departments : department_name , location_id , manager_id , department_id  | jobs : job_id , min_salary , max_salary , job_title  | employees : job_id , manager_id , last_name , commission_pct , phone_number , department_id , employee_id , salary , email , hire_date , first_name  | employees_salary : min_salary , employee_id , email , max_salary , total_salary , avg_salary , job_id , phone_number , hire_date , first_name , last_name , commission_pct , manager_id , department_id  | job_history : department_id , employee_id , end_date , job_id , start_date  | locations : country_id , postal_code , location_id , state_province , city , street_address "}, {"db_id": "hr_1", "query": "select first_name, last_name, salary, department_id, max_salary from employees_salary group by department_id", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", ",", "department_id", ",", "MAX", "(", "salary", ")", "FROM", "employees", "GROUP", "BY", "department_id"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", ",", "department_id", ",", "max", "(", "salary", ")", "from", "employees", "group", "by", "department_id"], "question": "What are the department ids, full names, and salaries for employees who make the most in their departments?", "question_toks": ["What", "are", "the", "department", "ids", ",", "full", "names", ",", "and", "salaries", "for", "employees", "who", "make", "the", "most", "in", "their", "departments", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]], [1, [0, [0, 21, false], null]]]], "union": null, "where": []}, "primary_key": {"employees": "employee_id"}, "orig_query": "select first_name, last_name, salary, department_id, max(salary) from employees group by department_id", "split_map": {"employees": ["max_salary", "min_salary", "avg_salary", "total_salary"]}, "schema_with_content": "regions : region_id (1, 2, 4), region_name (\"Middle East and Africa\\r\", \"Europe\\r\", \"Asia\\r\") | countries : country_id (\"NL\", \"ZW\", \"NL\"), region_id (3, 1, 2), country_name (\"Italy\", \"Belgium\", \"Zimbabwe\") | departments : manager_id (114, 203, 0), location_id (2700, 1800, 1800), department_id (120, 270, 250), department_name (\"Marketing\", \"IT Support\", \"Public Relations\") | jobs : max_salary (6000, 10000, 40000), job_title (\"Stock Manager\", \"Public Accountant\", \"Programmer\"), min_salary (4500, 2500, 2500), job_id (\"FI_MGR\", \"MK_MAN\", \"ST_MAN\") | employees : hire_date (\"1987-07-24\", \"1987-06-22\", \"1987-07-15\"), phone_number (\"515.123.8080\", \"011.44.1343.329268\", \"515.127.4564\"), email (\"MMARVINS\", \"CDAVIES\", \"SMAVRIS\"), first_name (\"Martha\", \"Ki\", \"Ellen\"), commission_pct (0.15, 0.2, 0.25), department_id (70, 0, 50), employee_id (141, 142, 164), job_id (\"SA_MAN\", \"HR_REP\", \"AD_ASST\"), salary (4100, 7800, 7800), last_name (\"De Haan\", \"Jones\", \"Russell\"), manager_id (145, 101, 103) | employees_salary : hire_date (\"1987-07-24\", \"1987-06-22\", \"1987-07-15\"), last_name (\"De Haan\", \"Jones\", \"Russell\"), total_salary (4100, 7800, 7800), employee_id (141, 142, 164), avg_salary (4100, 7800, 7800), email (\"MMARVINS\", \"CDAVIES\", \"SMAVRIS\"), first_name (\"Martha\", \"Ki\", \"Ellen\"), job_id (\"SA_MAN\", \"HR_REP\", \"AD_ASST\"), min_salary (4100, 7800, 7800), max_salary (4100, 7800, 7800), phone_number (\"515.123.8080\", \"011.44.1343.329268\", \"515.127.4564\"), commission_pct (0.15, 0.2, 0.25), manager_id (145, 101, 103), department_id (70, 0, 50) | job_history : department_id (110, 90, 90), employee_id (101, 176, 122), end_date (\"1997-03-15\", \"1997-03-15\", \"0000-00-00\"), job_id (\"MK_REP\", \"IT_PROG\", \"MK_REP\"), start_date (\"1987-09-17\", \"1999-01-01\", \"1993-01-13\") | locations : city (\"Sydney\", \"South Brunswick\", \"Whitehorse\"), state_province (\"Bavaria\", \"Ontario\", \"Geneve\"), street_address (\"2004 Charade Rd\", \"12-98 Victoria Street\", \"20 Rue des Corps-Saints\"), postal_code (\"99236\", \"3095\", \"3095\"), location_id (2900, 2300, 1500), country_id (\"CA\", \"IN\", \"CA\")", "schema_without_content": "regions : region_id , region_name  | countries : country_id , region_id , country_name  | departments : manager_id , location_id , department_id , department_name  | jobs : max_salary , job_title , min_salary , job_id  | employees : hire_date , phone_number , email , first_name , commission_pct , department_id , employee_id , job_id , salary , last_name , manager_id  | employees_salary : hire_date , last_name , total_salary , employee_id , avg_salary , email , first_name , job_id , min_salary , max_salary , phone_number , commission_pct , manager_id , department_id  | job_history : department_id , employee_id , end_date , job_id , start_date  | locations : city , state_province , street_address , postal_code , location_id , country_id "}, {"db_id": "music_1", "query": "select avg_rating, languages from song_rating group by languages", "query_toks": ["SELECT", "avg", "(", "rating", ")", ",", "languages", "FROM", "song", "GROUP", "BY", "languages"], "query_toks_no_value": ["select", "avg", "(", "rating", ")", ",", "languages", "from", "song", "group", "by", "languages"], "question": "What is the average rating of songs for each language?", "question_toks": ["What", "is", "the", "average", "rating", "of", "songs", "for", "each", "language", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}, "primary_key": {"song": "song_name"}, "orig_query": "select avg(rating), languages from song group by languages", "split_map": {"song": ["max_rating", "min_rating", "avg_rating", "total_rating"]}, "schema_with_content": "genre : rating (\"8\", \"7\", \"9\"), most_popular_in (\"Canada\", \"Sylhet,Chittagong,Kustia\", \"Canada\"), g_name (\"modern\", \"tagore\", \"modern\") | artist : country (\"USA\", \"India\", \"India\"), gender (\"Male\", \"Female\"), preferred_genre (\"tagore\", \"blues\", \"tagore\"), artist_name (\"Michel\", \"Topu\", \"Topu\") | files : f_id (3, 3, 2), file_size (\"4.58 MB\", \"4.58 MB\", \"3.69 MB\"), artist_name (\"Farida\", \"Shrikanta\", \"Farida\"), formats (\"mp4\", \"mp3\"), duration (\"5:23\", \"2:56\", \"4:12\") | song : resolution (512, 512, 512), f_id (4, 2, 1), languages (\"bangla\", \"english\"), artist_name (\"Topu\", \"Farida\", \"Topu\"), song_name (\"Tumi robe nirobe\", \"Ami opar hoye\", \"Ami opar hoye\"), country (\"India\", \"Bangladesh\", \"India\"), genre_is (\"modern\", \"nazrul\", \"modern\"), rating (7, 7, 5), releasedate (\"28-AUG-2011\", \"27-MAR-2004\", \"28-AUG-2011\") | song_rating : total_rating (7, 7, 5), genre_is (\"modern\", \"nazrul\", \"modern\"), artist_name (\"Topu\", \"Farida\", \"Topu\"), song_name (\"Tumi robe nirobe\", \"Ami opar hoye\", \"Ami opar hoye\"), max_rating (7, 7, 5), avg_rating (7, 7, 5), country (\"India\", \"Bangladesh\", \"India\"), f_id (4, 2, 1), min_rating (7, 7, 5), languages (\"bangla\", \"english\"), releasedate (\"28-AUG-2011\", \"27-MAR-2004\", \"28-AUG-2011\"), resolution (512, 512, 512)", "schema_without_content": "genre : rating , most_popular_in , g_name  | artist : country , gender , preferred_genre , artist_name  | files : f_id , file_size , artist_name , formats , duration  | song : resolution , f_id , languages , artist_name , song_name , country , genre_is , rating , releasedate  | song_rating : total_rating , genre_is , artist_name , song_name , max_rating , avg_rating , country , f_id , min_rating , languages , releasedate , resolution "}, {"db_id": "music_1", "query": "select avg_rating, languages from song_rating group by languages", "query_toks": ["SELECT", "avg", "(", "rating", ")", ",", "languages", "FROM", "song", "GROUP", "BY", "languages"], "query_toks_no_value": ["select", "avg", "(", "rating", ")", ",", "languages", "from", "song", "group", "by", "languages"], "question": "What is the average song rating for each language?", "question_toks": ["What", "is", "the", "average", "song", "rating", "for", "each", "language", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}, "primary_key": {"song": "song_name"}, "orig_query": "select avg(rating), languages from song group by languages", "split_map": {"song": ["max_rating", "min_rating", "avg_rating", "total_rating"]}, "schema_with_content": "genre : g_name (\"blues\", \"folk\", \"blues\"), rating (\"8\", \"7\", \"9\"), most_popular_in (\"Bangladesh\", \"Sylhet,Chittagong,Kustia\", \"Sylhet,Chittagong,Kustia\") | artist : artist_name (\"Enrique\", \"Farida\", \"Enrique\"), preferred_genre (\"nazrul\", \"tagore\", \"tagore\"), country (\"Bangladesh\", \"USA\", \"Bangladesh\"), gender (\"Male\", \"Female\") | files : artist_name (\"Topu\", \"Michel\", \"Topu\"), f_id (5, 3, 4), duration (\"4:30\", \"5:23\", \"4:34\"), formats (\"mp4\", \"mp3\"), file_size (\"3.69 MB\", \"3.69 MB\", \"4.10 MB\") | song : song_name (\"Just beat it\", \"Just beat it\", \"Shukno patar nupur pae\"), country (\"USA\", \"India\", \"Bangladesh\"), languages (\"bangla\", \"english\"), resolution (320, 512, 512), f_id (6, 3, 4), artist_name (\"Topu\", \"Enrique\", \"Michel\"), rating (7, 8, 10), genre_is (\"pop\", \"pop\", \"folk\"), releasedate (\"7-APR-2001\", \"21-SEP-1997\", \"7-APR-2001\") | song_rating : f_id (6, 3, 4), total_rating (7, 8, 10), country (\"USA\", \"India\", \"Bangladesh\"), genre_is (\"pop\", \"pop\", \"folk\"), song_name (\"Just beat it\", \"Just beat it\", \"Shukno patar nupur pae\"), max_rating (7, 8, 10), artist_name (\"Topu\", \"Enrique\", \"Michel\"), min_rating (7, 8, 10), avg_rating (7, 8, 10), languages (\"bangla\", \"english\"), releasedate (\"7-APR-2001\", \"21-SEP-1997\", \"7-APR-2001\"), resolution (320, 512, 512)", "schema_without_content": "genre : g_name , rating , most_popular_in  | artist : artist_name , preferred_genre , country , gender  | files : artist_name , f_id , duration , formats , file_size  | song : song_name , country , languages , resolution , f_id , artist_name , rating , genre_is , releasedate  | song_rating : f_id , total_rating , country , genre_is , song_name , max_rating , artist_name , min_rating , avg_rating , languages , releasedate , resolution "}, {"db_id": "music_1", "query": "select avg_rating, (resolution)from song_rating where languages = \"bangla\"", "query_toks": ["SELECT", "avg", "(", "rating", ")", ",", "avg", "(", "resolution", ")", "FROM", "song", "WHERE", "languages", "=", "``", "bangla", "''"], "query_toks_no_value": ["select", "avg", "(", "rating", ")", ",", "avg", "(", "resolution", ")", "from", "song", "where", "languages", "=", "value"], "question": "What are the average rating and resolution of songs that are in Bangla?", "question_toks": ["What", "are", "the", "average", "rating", "and", "resolution", "of", "songs", "that", "are", "in", "Bangla", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 18, false], null]], [5, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"bangla\"", null]]}, "primary_key": {"song": "song_name"}, "orig_query": "select avg(rating), avg(resolution) from song where languages = \"bangla\"", "split_map": {"song": ["max_rating", "min_rating", "avg_rating", "total_rating"]}, "schema_with_content": "genre : rating (\"8\", \"7\", \"9\"), most_popular_in (\"Sylhet,Chittagong,Kustia\", \"Canada\", \"Bangladesh\"), g_name (\"nazrul\", \"pop\", \"pop\") | artist : country (\"USA\", \"UK\", \"USA\"), gender (\"Male\", \"Female\"), preferred_genre (\"pop\", \"modern\", \"pop\"), artist_name (\"Topu\", \"Prity\", \"Shrikanta\") | files : file_size (\"3.69 MB\", \"5.10 MB\", \"3.69 MB\"), f_id (4, 6, 6), artist_name (\"Farida\", \"Enrique\", \"Topu\"), formats (\"mp4\", \"mp3\"), duration (\"4:30\", \"4:30\", \"2:56\") | song : song_name (\"Aj ei akash\", \"Just beat it\", \"My love\"), rating (5, 10, 8), genre_is (\"nazrul\", \"folk\", \"pop\"), resolution (720, 720, 720), f_id (6, 6, 1), country (\"India\", \"UK\", \"Bangladesh\"), releasedate (\"7-APR-2001\", \"21-SEP-1997\", \"21-SEP-1997\"), languages (\"bangla\", \"english\"), artist_name (\"Michel\", \"Enrique\", \"Farida\") | song_rating : avg_rating (5, 10, 8), max_rating (5, 10, 8), artist_name (\"Michel\", \"Enrique\", \"Farida\"), f_id (6, 6, 1), min_rating (5, 10, 8), genre_is (\"nazrul\", \"folk\", \"pop\"), song_name (\"Aj ei akash\", \"Just beat it\", \"My love\"), total_rating (5, 10, 8), country (\"India\", \"UK\", \"Bangladesh\"), languages (\"bangla\", \"english\"), releasedate (\"7-APR-2001\", \"21-SEP-1997\", \"21-SEP-1997\"), resolution (720, 720, 720)", "schema_without_content": "genre : rating , most_popular_in , g_name  | artist : country , gender , preferred_genre , artist_name  | files : file_size , f_id , artist_name , formats , duration  | song : song_name , rating , genre_is , resolution , f_id , country , releasedate , languages , artist_name  | song_rating : avg_rating , max_rating , artist_name , f_id , min_rating , genre_is , song_name , total_rating , country , languages , releasedate , resolution "}, {"db_id": "music_1", "query": "select (rating), avg_resolution from song_resolution where languages = \"bangla\"", "query_toks": ["SELECT", "avg", "(", "rating", ")", ",", "avg", "(", "resolution", ")", "FROM", "song", "WHERE", "languages", "=", "``", "bangla", "''"], "query_toks_no_value": ["select", "avg", "(", "rating", ")", ",", "avg", "(", "resolution", ")", "from", "song", "where", "languages", "=", "value"], "question": "What are the average rating and resolution of songs that are in Bangla?", "question_toks": ["What", "are", "the", "average", "rating", "and", "resolution", "of", "songs", "that", "are", "in", "Bangla", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 18, false], null]], [5, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"bangla\"", null]]}, "primary_key": {"song": "song_name"}, "orig_query": "select avg(rating), avg(resolution) from song where languages = \"bangla\"", "split_map": {"song": ["max_resolution", "min_resolution", "avg_resolution", "total_resolution"]}, "schema_with_content": "genre : g_name (\"pop\", \"nazrul\", \"blues\"), most_popular_in (\"Sylhet,Chittagong,Kustia\", \"Canada\", \"America\"), rating (\"8\", \"7\", \"9\") | artist : country (\"UK\", \"UK\", \"Bangladesh\"), preferred_genre (\"nazrul\", \"tagore\", \"pop\"), artist_name (\"Shrikanta\", \"Shrikanta\", \"Farida\"), gender (\"Male\", \"Female\") | files : duration (\"4:30\", \"3:45\", \"3:45\"), formats (\"mp4\", \"mp3\"), file_size (\"3.69 MB\", \"4.12 MB\", \"3.78 MB\"), artist_name (\"Shrikanta\", \"Topu\", \"Farida\"), f_id (1, 2, 2) | song : country (\"USA\", \"UK\", \"UK\"), resolution (512, 1080, 512), genre_is (\"folk\", \"folk\", \"tagore\"), artist_name (\"Enrique\", \"Topu\", \"Prity\"), languages (\"bangla\", \"english\"), f_id (4, 5, 2), song_name (\"Shukno patar nupur pae\", \"Just beat it\", \"My love\"), releasedate (\"17-MAR-2002\", \"17-MAR-2002\", \"28-AUG-2011\"), rating (8, 7, 6) | song_resolution : languages (\"bangla\", \"english\"), max_resolution (512, 1080, 512), country (\"USA\", \"UK\", \"UK\"), min_resolution (512, 1080, 512), releasedate (\"17-MAR-2002\", \"17-MAR-2002\", \"28-AUG-2011\"), rating (8, 7, 6), song_name (\"Shukno patar nupur pae\", \"Just beat it\", \"My love\"), artist_name (\"Enrique\", \"Topu\", \"Prity\"), f_id (4, 5, 2), avg_resolution (512, 1080, 512), genre_is (\"folk\", \"folk\", \"tagore\"), total_resolution (512, 1080, 512)", "schema_without_content": "genre : g_name , most_popular_in , rating  | artist : country , preferred_genre , artist_name , gender  | files : duration , formats , file_size , artist_name , f_id  | song : country , resolution , genre_is , artist_name , languages , f_id , song_name , releasedate , rating  | song_resolution : languages , max_resolution , country , min_resolution , releasedate , rating , song_name , artist_name , f_id , avg_resolution , genre_is , total_resolution "}, {"db_id": "music_1", "query": "select avg_rating, (resolution)from song_rating where languages = \"bangla\"", "query_toks": ["SELECT", "avg", "(", "rating", ")", ",", "avg", "(", "resolution", ")", "FROM", "song", "WHERE", "languages", "=", "``", "bangla", "''"], "query_toks_no_value": ["select", "avg", "(", "rating", ")", ",", "avg", "(", "resolution", ")", "from", "song", "where", "languages", "=", "value"], "question": "What is the average rating and resolution of all bangla songs?", "question_toks": ["What", "is", "the", "average", "rating", "and", "resolution", "of", "all", "bangla", "songs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 18, false], null]], [5, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"bangla\"", null]]}, "primary_key": {"song": "song_name"}, "orig_query": "select avg(rating), avg(resolution) from song where languages = \"bangla\"", "split_map": {"song": ["max_rating", "min_rating", "avg_rating", "total_rating"]}, "schema_with_content": "genre : most_popular_in (\"Canada\", \"Bangladesh\", \"America\"), rating (\"8\", \"7\", \"9\"), g_name (\"blues\", \"folk\", \"modern\") | artist : gender (\"Male\", \"Female\"), preferred_genre (\"blues\", \"modern\", \"blues\"), country (\"UK\", \"India\", \"USA\"), artist_name (\"Farida\", \"Prity\", \"Shrikanta\") | files : duration (\"4:34\", \"4:12\", \"4:12\"), file_size (\"4.58 MB\", \"3.69 MB\", \"5.10 MB\"), artist_name (\"Shrikanta\", \"Farida\", \"Michel\"), formats (\"mp4\", \"mp3\"), f_id (3, 1, 6) | song : artist_name (\"Topu\", \"Farida\", \"Shrikanta\"), languages (\"bangla\", \"english\"), resolution (720, 320, 1080), country (\"Bangladesh\", \"UK\", \"Bangladesh\"), releasedate (\"27-MAR-2004\", \"7-APR-2001\", \"24-JAN-2007\"), rating (6, 5, 7), f_id (4, 5, 6), genre_is (\"blues\", \"blues\", \"pop\"), song_name (\"Just beat it\", \"My love\", \"Shukno patar nupur pae\") | song_rating : song_name (\"Just beat it\", \"My love\", \"Shukno patar nupur pae\"), f_id (4, 5, 6), genre_is (\"blues\", \"blues\", \"pop\"), max_rating (6, 5, 7), min_rating (6, 5, 7), country (\"Bangladesh\", \"UK\", \"Bangladesh\"), total_rating (6, 5, 7), avg_rating (6, 5, 7), artist_name (\"Topu\", \"Farida\", \"Shrikanta\"), languages (\"bangla\", \"english\"), releasedate (\"27-MAR-2004\", \"7-APR-2001\", \"24-JAN-2007\"), resolution (720, 320, 1080)", "schema_without_content": "genre : most_popular_in , rating , g_name  | artist : gender , preferred_genre , country , artist_name  | files : duration , file_size , artist_name , formats , f_id  | song : artist_name , languages , resolution , country , releasedate , rating , f_id , genre_is , song_name  | song_rating : song_name , f_id , genre_is , max_rating , min_rating , country , total_rating , avg_rating , artist_name , languages , releasedate , resolution "}, {"db_id": "music_1", "query": "select (rating), avg_resolution from song_resolution where languages = \"bangla\"", "query_toks": ["SELECT", "avg", "(", "rating", ")", ",", "avg", "(", "resolution", ")", "FROM", "song", "WHERE", "languages", "=", "``", "bangla", "''"], "query_toks_no_value": ["select", "avg", "(", "rating", ")", ",", "avg", "(", "resolution", ")", "from", "song", "where", "languages", "=", "value"], "question": "What is the average rating and resolution of all bangla songs?", "question_toks": ["What", "is", "the", "average", "rating", "and", "resolution", "of", "all", "bangla", "songs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 18, false], null]], [5, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"bangla\"", null]]}, "primary_key": {"song": "song_name"}, "orig_query": "select avg(rating), avg(resolution) from song where languages = \"bangla\"", "split_map": {"song": ["max_resolution", "min_resolution", "avg_resolution", "total_resolution"]}, "schema_with_content": "genre : rating (\"8\", \"7\", \"9\"), most_popular_in (\"Canada\", \"Sylhet,Chittagong,Kustia\", \"Sylhet,Chittagong,Kustia\"), g_name (\"modern\", \"modern\", \"blues\") | artist : artist_name (\"Shrikanta\", \"Topu\", \"Shrikanta\"), gender (\"Male\", \"Female\"), country (\"India\", \"USA\", \"India\"), preferred_genre (\"pop\", \"blues\", \"modern\") | files : file_size (\"4.10 MB\", \"4.12 MB\", \"3.69 MB\"), formats (\"mp4\", \"mp3\"), duration (\"4:34\", \"4:30\", \"5:23\"), artist_name (\"Enrique\", \"Michel\", \"Farida\"), f_id (6, 3, 4) | song : genre_is (\"modern\", \"pop\", \"modern\"), artist_name (\"Michel\", \"Farida\", \"Michel\"), resolution (1080, 720, 1080), rating (10, 7, 5), country (\"India\", \"India\", \"UK\"), releasedate (\"24-JAN-2007\", \"28-AUG-2011\", \"24-JAN-2007\"), languages (\"bangla\", \"english\"), song_name (\"Ami opar hoye\", \"Tumi robe nirobe\", \"Tumi robe nirobe\"), f_id (5, 5, 6) | song_resolution : avg_resolution (1080, 720, 1080), country (\"India\", \"India\", \"UK\"), f_id (5, 5, 6), total_resolution (1080, 720, 1080), artist_name (\"Michel\", \"Farida\", \"Michel\"), languages (\"bangla\", \"english\"), rating (10, 7, 5), max_resolution (1080, 720, 1080), releasedate (\"24-JAN-2007\", \"28-AUG-2011\", \"24-JAN-2007\"), min_resolution (1080, 720, 1080), genre_is (\"modern\", \"pop\", \"modern\"), song_name (\"Ami opar hoye\", \"Tumi robe nirobe\", \"Tumi robe nirobe\")", "schema_without_content": "genre : rating , most_popular_in , g_name  | artist : artist_name , gender , country , preferred_genre  | files : file_size , formats , duration , artist_name , f_id  | song : genre_is , artist_name , resolution , rating , country , releasedate , languages , song_name , f_id  | song_resolution : avg_resolution , country , f_id , total_resolution , artist_name , languages , rating , max_resolution , releasedate , min_resolution , genre_is , song_name "}, {"db_id": "mountain_photos", "query": "select max_height, avg_height from mountain_height", "query_toks": ["SELECT", "max", "(", "height", ")", ",", "avg", "(", "height", ")", "FROM", "mountain"], "query_toks_no_value": ["select", "max", "(", "height", ")", ",", "avg", "(", "height", ")", "from", "mountain"], "question": "What are the maximum and average height of the mountains?", "question_toks": ["What", "are", "the", "maximum", "and", "average", "height", "of", "the", "mountains", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]], [5, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"mountain": "id"}, "orig_query": "select max(height), avg(height) from mountain", "split_map": {"mountain": ["max_height", "min_height", "avg_height", "total_height"]}, "schema_with_content": "mountain : id (12, 5, 9), range (\"Cameroon line\", \"Lasta Massif\", \"Lasta Massif\"), name (\"Ioll / Yoll\", \"Inatye\", \"Choqa / Choke / Birhan\"), prominence (3755.0, 530.0, 530.0), country (\"Kenya\", \"Morocco\", \"Ethiopia\"), height (3996.0, 3950.0, 4127.0) | mountain_height : max_height (3996.0, 3950.0, 4127.0), avg_height (3996.0, 3950.0, 4127.0), name (\"Ioll / Yoll\", \"Inatye\", \"Choqa / Choke / Birhan\"), total_height (3996.0, 3950.0, 4127.0), id (12, 5, 9), min_height (3996.0, 3950.0, 4127.0), prominence (3755.0, 530.0, 530.0), range (\"Cameroon line\", \"Lasta Massif\", \"Lasta Massif\"), country (\"Kenya\", \"Morocco\", \"Ethiopia\") | camera_lens : focal_length_mm (150.0, 19.0, 14.0), max_aperture (2.0, 1.2, 2.8), name (\"Schneider Kreuznach Super Angulon 14mm f /2.0\", \"Sigma 19mm f2.8 EX DN\", \"Panasonic Leica DG Summilux 25mm f /1.4 Asph.\"), brand (\"Schneider Kreuznach\", \"Olympus\", \"Olympus\"), id (3, 6, 7) | photos : mountain_id (10, 10, 10), color (\"RBG\", \"Black/White\"), name (\"monkey\", \"life\", \"deers\"), id (2, 5, 4), camera_lens_id (5, 10, 1)", "schema_without_content": "mountain : id , range , name , prominence , country , height  | mountain_height : max_height , avg_height , name , total_height , id , min_height , prominence , range , country  | camera_lens : focal_length_mm , max_aperture , name , brand , id  | photos : mountain_id , color , name , id , camera_lens_id "}, {"db_id": "mountain_photos", "query": "select avg_prominence from mountain_prominence where country = 'Morocco'", "query_toks": ["SELECT", "avg", "(", "prominence", ")", "FROM", "mountain", "WHERE", "country", "=", "'Morocco", "'"], "query_toks_no_value": ["select", "avg", "(", "prominence", ")", "from", "mountain", "where", "country", "=", "value"], "question": "What are the average prominence of the mountains in country 'Morocco'?", "question_toks": ["What", "are", "the", "average", "prominence", "of", "the", "mountains", "in", "country", "'Morocco", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"Morocco\"", null]]}, "primary_key": {"mountain": "id"}, "orig_query": "select avg(prominence) from mountain where country = 'Morocco'", "split_map": {"mountain": ["max_prominence", "min_prominence", "avg_prominence", "total_prominence"]}, "schema_with_content": "mountain : name (\"Aksou\u00c3\u00a2l\", \"Ouanoukrim\", \"Ioll / Yoll\"), range (\"Guna Massif\", \"Tigray Mountains\", \"Aberdare Range\"), id (19, 17, 21), prominence (3755.0, 3931.0, 610.0), country (\"Cameroon\", \"Morocco\", \"Cameroon\"), height (4193.0, 4068.0, 3900.0) | mountain_prominence : name (\"Aksou\u00c3\u00a2l\", \"Ouanoukrim\", \"Ioll / Yoll\"), avg_prominence (3755.0, 3931.0, 610.0), id (19, 17, 21), min_prominence (3755.0, 3931.0, 610.0), total_prominence (3755.0, 3931.0, 610.0), height (4193.0, 4068.0, 3900.0), max_prominence (3755.0, 3931.0, 610.0), range (\"Guna Massif\", \"Tigray Mountains\", \"Aberdare Range\"), country (\"Cameroon\", \"Morocco\", \"Cameroon\") | camera_lens : focal_length_mm (19.0, 19.0, 75.0), brand (\"Schneider Kreuznach\", \"Olympus\", \"Sigma\"), id (10, 4, 1), name (\"Schneider Kreuznach Super Angulon 14mm f /2.0\", \"Schneider Kreuznach Super Angulon 14mm f /2.0\", \"Panasonic Lumix G 150mm f /2.8\"), max_aperture (2.0, 2.8, 1.4) | photos : camera_lens_id (5, 7, 10), name (\"river\", \"river\", \"grass\"), id (3, 10, 1), mountain_id (2, 14, 20), color (\"RBG\", \"Black/White\")", "schema_without_content": "mountain : name , range , id , prominence , country , height  | mountain_prominence : name , avg_prominence , id , min_prominence , total_prominence , height , max_prominence , range , country  | camera_lens : focal_length_mm , brand , id , name , max_aperture  | photos : camera_lens_id , name , id , mountain_id , color "}, {"db_id": "program_share", "query": "select total_share_in_percent from channel_share_in_percent where owner = 'CCTV'", "query_toks": ["SELECT", "sum", "(", "Share_in_percent", ")", "FROM", "channel", "WHERE", "OWNER", "=", "'CCTV", "'"], "query_toks_no_value": ["select", "sum", "(", "share_in_percent", ")", "from", "channel", "where", "owner", "=", "value"], "question": "find the total percentage share of all channels owned by CCTV.", "question_toks": ["find", "the", "total", "percentage", "share", "of", "all", "channels", "owned", "by", "CCTV", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], "\"CCTV\"", null]]}, "primary_key": {"channel": "channel_id"}, "orig_query": "select sum(share_in_percent) from channel where owner = 'CCTV'", "split_map": {"channel": ["max_share_in_percent", "min_share_in_percent", "avg_share_in_percent", "total_share_in_percent"]}, "schema_with_content": "program : owner (\"Jiangsu Broadcasting Corporation (JSBC)\", \"Hunan Broadcasting System (HBS)\", \"Southern Media Corporation (SMC)\"), launch (2004.0, 2010.0, 2010.0), program_id (3, 5, 3), origin (\"Guangdong\", \"Beijing\", \"Jiangsu\"), name (\"Jiajia\", \"Kaku\", \"Aniworld\") | channel : name (\"CCTV-4\", \"CCTV-13\", \"CCTV-14\"), share_in_percent (1.78, 2.33, 1.74), channel_id (6, 8, 5), owner (\"HBS\", \"CCTV\", \"Anhui Television\"), rating_in_percent (0.26, 0.53, 0.29) | channel_share_in_percent : avg_share_in_percent (1.78, 2.33, 1.74), name (\"CCTV-4\", \"CCTV-13\", \"CCTV-14\"), max_share_in_percent (1.78, 2.33, 1.74), total_share_in_percent (1.78, 2.33, 1.74), channel_id (6, 8, 5), min_share_in_percent (1.78, 2.33, 1.74), owner (\"HBS\", \"CCTV\", \"Anhui Television\"), rating_in_percent (0.26, 0.53, 0.29) | broadcast : program_id (4, 1, 4), channel_id (8, 5, 8), time_of_day (\"Morning\", \"Night\", \"Noon\") | broadcast_share : date (\"02,May\", \"10,Jun\", \"10,Jun\"), share_in_percent (4.2, 3.1, 3.1), program_id (2, 1, 1), channel_id (7, 2, 5)", "schema_without_content": "program : owner \", \"Hunan Broadcasting System \", \"Southern Media Corporation \", launch , program_id , origin , name  | channel : name , share_in_percent , channel_id , owner , rating_in_percent  | channel_share_in_percent : avg_share_in_percent , name , max_share_in_percent , total_share_in_percent , channel_id , min_share_in_percent , owner , rating_in_percent  | broadcast : program_id , channel_id , time_of_day  | broadcast_share : date , share_in_percent , program_id , channel_id "}, {"db_id": "program_share", "query": "select total_share_in_percent from channel_share_in_percent where owner = 'CCTV'", "query_toks": ["SELECT", "sum", "(", "Share_in_percent", ")", "FROM", "channel", "WHERE", "OWNER", "=", "'CCTV", "'"], "query_toks_no_value": ["select", "sum", "(", "share_in_percent", ")", "from", "channel", "where", "owner", "=", "value"], "question": "What is the total share (in percent) of all the channels owned by CCTV?", "question_toks": ["What", "is", "the", "total", "share", "(", "in", "percent", ")", "of", "all", "the", "channels", "owned", "by", "CCTV", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], "\"CCTV\"", null]]}, "primary_key": {"channel": "channel_id"}, "orig_query": "select sum(share_in_percent) from channel where owner = 'CCTV'", "split_map": {"channel": ["max_share_in_percent", "min_share_in_percent", "avg_share_in_percent", "total_share_in_percent"]}, "schema_with_content": "program : launch (2005.0, 2010.0, 2005.0), owner (\"Jiangsu Broadcasting Corporation (JSBC)\", \"Jiangsu Broadcasting Corporation (JSBC)\", \"Jiangsu Broadcasting Corporation (JSBC)\"), origin (\"Shanghai\", \"Shanghai\", \"Beijing\"), name (\"Youman\", \"Kaku\", \"Jiajia\"), program_id (5, 2, 3) | channel : name (\"CCTV-1\", \"Shandong Satellite TV\", \"CCTV-3\"), owner (\"CCTV\", \"CCTV\", \"Anhui Television\"), channel_id (10, 5, 6), share_in_percent (4.9, 2.73, 2.6), rating_in_percent (0.26, 0.32, 0.54) | channel_share_in_percent : min_share_in_percent (4.9, 2.73, 2.6), channel_id (10, 5, 6), max_share_in_percent (4.9, 2.73, 2.6), total_share_in_percent (4.9, 2.73, 2.6), owner (\"CCTV\", \"CCTV\", \"Anhui Television\"), avg_share_in_percent (4.9, 2.73, 2.6), name (\"CCTV-1\", \"Shandong Satellite TV\", \"CCTV-3\"), rating_in_percent (0.26, 0.32, 0.54) | broadcast : time_of_day (\"Morning\", \"Night\", \"Noon\"), channel_id (8, 9, 1), program_id (1, 1, 2) | broadcast_share : program_id (4, 2, 2), channel_id (6, 6, 9), date (\"11,May\", \"02,May\", \"03,May\"), share_in_percent (3.2, 1.8, 2.8)", "schema_without_content": "program : launch , owner \", \"Jiangsu Broadcasting Corporation \", \"Jiangsu Broadcasting Corporation \", origin , name , program_id  | channel : name , owner , channel_id , share_in_percent , rating_in_percent  | channel_share_in_percent : min_share_in_percent , channel_id , max_share_in_percent , total_share_in_percent , owner , avg_share_in_percent , name , rating_in_percent  | broadcast : time_of_day , channel_id , program_id  | broadcast_share : program_id , channel_id , date , share_in_percent "}, {"db_id": "program_share", "query": "select total_rating_in_percent, owner from channel_rating_in_percent group by owner", "query_toks": ["SELECT", "sum", "(", "Rating_in_percent", ")", ",", "OWNER", "FROM", "channel", "GROUP", "BY", "OWNER"], "query_toks_no_value": ["select", "sum", "(", "rating_in_percent", ")", ",", "owner", "from", "channel", "group", "by", "owner"], "question": "Find the total rating ratio for each channel owner.", "question_toks": ["Find", "the", "total", "rating", "ratio", "for", "each", "channel", "owner", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"channel": "channel_id"}, "orig_query": "select sum(rating_in_percent), owner from channel group by owner", "split_map": {"channel": ["max_rating_in_percent", "min_rating_in_percent", "avg_rating_in_percent", "total_rating_in_percent"]}, "schema_with_content": "program : program_id (3, 1, 5), owner (\"Shanghai Media Group (SMG)\", \"Hunan Broadcasting System (HBS)\", \"Southern Media Corporation (SMC)\"), launch (2004.0, 2004.0, 2005.0), name (\"Aniworld\", \"Jiajia\", \"Aniworld\"), origin (\"Beijing\", \"Beijing\", \"Hunan\") | channel : owner (\"Anhui Television\", \"CCTV\", \"Shandong Television\"), share_in_percent (4.81, 2.6, 2.86), rating_in_percent (0.26, 0.41, 0.29), channel_id (6, 2, 1), name (\"CCTV-1\", \"Shandong Satellite TV\", \"CCTV-4\") | channel_rating_in_percent : owner (\"Anhui Television\", \"CCTV\", \"Shandong Television\"), avg_rating_in_percent (0.26, 0.41, 0.29), share_in_percent (4.81, 2.6, 2.86), total_rating_in_percent (0.26, 0.41, 0.29), name (\"CCTV-1\", \"Shandong Satellite TV\", \"CCTV-4\"), min_rating_in_percent (0.26, 0.41, 0.29), max_rating_in_percent (0.26, 0.41, 0.29), channel_id (6, 2, 1) | broadcast : channel_id (4, 10, 7), time_of_day (\"Morning\", \"Night\", \"Noon\"), program_id (1, 4, 1) | broadcast_share : channel_id (5, 7, 8), date (\"01,May\", \"10,Jun\", \"11,May\"), program_id (3, 2, 2), share_in_percent (3.1, 1.1, 3.2)", "schema_without_content": "program : program_id , owner \", \"Hunan Broadcasting System \", \"Southern Media Corporation \", launch , name , origin  | channel : owner , share_in_percent , rating_in_percent , channel_id , name  | channel_rating_in_percent : owner , avg_rating_in_percent , share_in_percent , total_rating_in_percent , name , min_rating_in_percent , max_rating_in_percent , channel_id  | broadcast : channel_id , time_of_day , program_id  | broadcast_share : channel_id , date , program_id , share_in_percent "}, {"db_id": "program_share", "query": "select total_rating_in_percent, owner from channel_rating_in_percent group by owner", "query_toks": ["SELECT", "sum", "(", "Rating_in_percent", ")", ",", "OWNER", "FROM", "channel", "GROUP", "BY", "OWNER"], "query_toks_no_value": ["select", "sum", "(", "rating_in_percent", ")", ",", "owner", "from", "channel", "group", "by", "owner"], "question": "What is the total rating of channel for each channel owner?", "question_toks": ["What", "is", "the", "total", "rating", "of", "channel", "for", "each", "channel", "owner", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"channel": "channel_id"}, "orig_query": "select sum(rating_in_percent), owner from channel group by owner", "split_map": {"channel": ["max_rating_in_percent", "min_rating_in_percent", "avg_rating_in_percent", "total_rating_in_percent"]}, "schema_with_content": "program : program_id (1, 4, 5), launch (2007.0, 2004.0, 2007.0), origin (\"Hunan\", \"Guangdong\", \"Hunan\"), name (\"Kaku\", \"Kaku\", \"Toonmax\"), owner (\"Southern Media Corporation (SMC)\", \"Southern Media Corporation (SMC)\", \"Shanghai Media Group (SMG)\") | channel : channel_id (1, 8, 4), share_in_percent (3.76, 2.6, 1.78), rating_in_percent (0.2, 0.53, 0.31), name (\"CCTV-4\", \"Shandong Satellite TV\", \"CCTV-8\"), owner (\"HBS\", \"Anhui Television\", \"HBS\") | channel_rating_in_percent : channel_id (1, 8, 4), total_rating_in_percent (0.2, 0.53, 0.31), share_in_percent (3.76, 2.6, 1.78), avg_rating_in_percent (0.2, 0.53, 0.31), min_rating_in_percent (0.2, 0.53, 0.31), owner (\"HBS\", \"Anhui Television\", \"HBS\"), max_rating_in_percent (0.2, 0.53, 0.31), name (\"CCTV-4\", \"Shandong Satellite TV\", \"CCTV-8\") | broadcast : channel_id (4, 10, 1), program_id (3, 4, 3), time_of_day (\"Morning\", \"Night\", \"Noon\") | broadcast_share : share_in_percent (2.8, 3.2, 2.1), date (\"11,May\", \"02,May\", \"03,May\"), channel_id (5, 1, 6), program_id (3, 2, 2)", "schema_without_content": "program : program_id , launch , origin , name , owner \", \"Southern Media Corporation \", \"Shanghai Media Group \" | channel : channel_id , share_in_percent , rating_in_percent , name , owner  | channel_rating_in_percent : channel_id , total_rating_in_percent , share_in_percent , avg_rating_in_percent , min_rating_in_percent , owner , max_rating_in_percent , name  | broadcast : channel_id , program_id , time_of_day  | broadcast_share : share_in_percent , date , channel_id , program_id "}, {"db_id": "insurance_policies", "query": "select total_amount_settled from settlements_amount_settled", "query_toks": ["SELECT", "sum", "(", "Amount_Settled", ")", "FROM", "Settlements"], "query_toks_no_value": ["select", "sum", "(", "amount_settled", ")", "from", "settlements"], "question": "What is the total amount of settlement made for all the settlements?", "question_toks": ["What", "is", "the", "total", "amount", "of", "settlement", "made", "for", "all", "the", "settlements", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 19, false], null]]]], "union": null, "where": []}, "primary_key": {"settlements": "settlement_id"}, "orig_query": "select sum(amount_settled) from settlements", "split_map": {"settlements": ["max_amount_settled", "min_amount_settled", "avg_amount_settled", "total_amount_settled"]}, "schema_with_content": "customers : customer_details (\"Mrs. Liza Heller V\", \"Buddy Marquardt\", \"Dr. Diana Rath\"), customer_id (8, 9, 3) | customer_policies : policy_type_code (\"Car\", \"Life\", \"Car\"), policy_id (587, 352, 744), customer_id (1, 4, 7), start_date (\"2016-07-17\", \"2017-07-30\", \"2017-07-30\"), end_date (\"2017-12-11\", \"2017-12-04\", \"2018-03-07\") | claims : policy_id (552, 352, 473), date_claim_made (\"2016-08-12\", \"2018-07-15\", \"2018-07-13\"), amount_settled (1353, 1091, 1528), claim_id (569, 143, 486), date_claim_settled (\"2017-12-22\", \"2017-11-03\", \"2018-01-05\"), amount_claimed (70674, 79134, 83703) | settlements : amount_settled (930, 1885, 1427), date_claim_settled (\"2018-01-27\", \"2018-02-15\", \"2017-11-15\"), claim_id (486, 761, 563), settlement_id (558, 897, 516), amount_claimed (24055, 8634, 62680), customer_policy_id (943, 727, 617), date_claim_made (\"2017-03-04\", \"2017-04-14\", \"2018-11-10\") | settlements_amount_settled : avg_amount_settled (930, 1885, 1427), total_amount_settled (930, 1885, 1427), date_claim_settled (\"2018-01-27\", \"2018-02-15\", \"2017-11-15\"), claim_id (486, 761, 563), settlement_id (558, 897, 516), date_claim_made (\"2017-03-04\", \"2017-04-14\", \"2018-11-10\"), min_amount_settled (930, 1885, 1427), amount_claimed (24055, 8634, 62680), max_amount_settled (930, 1885, 1427), customer_policy_id (943, 727, 617) | payments : payment_id (754, 498, 384), date_payment_made (\"2018-01-19\", \"2018-02-16\", \"2017-05-04\"), amount_payment (459407, 38324, 459407), settlement_id (682, 476, 516), payment_method_code (\"MasterCard\", \"MasterCard\", \"Visa\")", "schema_without_content": "customers : customer_details , customer_id  | customer_policies : policy_type_code , policy_id , customer_id , start_date , end_date  | claims : policy_id , date_claim_made , amount_settled , claim_id , date_claim_settled , amount_claimed  | settlements : amount_settled , date_claim_settled , claim_id , settlement_id , amount_claimed , customer_policy_id , date_claim_made  | settlements_amount_settled : avg_amount_settled , total_amount_settled , date_claim_settled , claim_id , settlement_id , date_claim_made , min_amount_settled , amount_claimed , max_amount_settled , customer_policy_id  | payments : payment_id , date_payment_made , amount_payment , settlement_id , payment_method_code "}, {"db_id": "insurance_policies", "query": "select total_amount_settled from settlements_amount_settled", "query_toks": ["SELECT", "sum", "(", "Amount_Settled", ")", "FROM", "Settlements"], "query_toks_no_value": ["select", "sum", "(", "amount_settled", ")", "from", "settlements"], "question": "Compute the total amount of settlement across all the settlements.", "question_toks": ["Compute", "the", "total", "amount", "of", "settlement", "across", "all", "the", "settlements", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 19, false], null]]]], "union": null, "where": []}, "primary_key": {"settlements": "settlement_id"}, "orig_query": "select sum(amount_settled) from settlements", "split_map": {"settlements": ["max_amount_settled", "min_amount_settled", "avg_amount_settled", "total_amount_settled"]}, "schema_with_content": "customers : customer_details (\"Lauriane Ferry PhD\", \"Augustine Kerluke\", \"Sydnie Friesen\"), customer_id (5, 10, 2) | customer_policies : customer_id (8, 13, 13), end_date (\"2017-12-11\", \"2017-10-09\", \"2017-12-09\"), policy_id (396, 744, 900), policy_type_code (\"Car\", \"Property\", \"Life\"), start_date (\"2017-08-21\", \"2016-12-25\", \"2017-09-18\") | claims : date_claim_made (\"2017-03-11\", \"2016-08-26\", \"2017-02-24\"), date_claim_settled (\"2018-01-21\", \"2017-11-19\", \"2018-01-05\"), amount_claimed (69696, 10209, 43884), amount_settled (1639, 1637, 1638), policy_id (858, 141, 552), claim_id (442, 571, 143) | settlements : date_claim_made (\"2017-04-18\", \"2017-09-22\", \"2017-09-22\"), settlement_id (983, 558, 564), amount_claimed (8634, 20569, 56850), customer_policy_id (515, 564, 536), claim_id (571, 621, 563), date_claim_settled (\"2018-01-27\", \"2017-10-06\", \"2017-11-15\"), amount_settled (1508, 1181, 1737) | settlements_amount_settled : amount_claimed (8634, 20569, 56850), date_claim_made (\"2017-04-18\", \"2017-09-22\", \"2017-09-22\"), avg_amount_settled (1508, 1181, 1737), claim_id (571, 621, 563), settlement_id (983, 558, 564), min_amount_settled (1508, 1181, 1737), total_amount_settled (1508, 1181, 1737), date_claim_settled (\"2018-01-27\", \"2017-10-06\", \"2017-11-15\"), max_amount_settled (1508, 1181, 1737), customer_policy_id (515, 564, 536) | payments : amount_payment (7343, 423154, 241730), date_payment_made (\"2018-01-10\", \"2017-05-04\", \"2018-01-19\"), settlement_id (983, 648, 564), payment_method_code (\"Discover Card\", \"Visa\", \"American Express\"), payment_id (484, 559, 678)", "schema_without_content": "customers : customer_details , customer_id  | customer_policies : customer_id , end_date , policy_id , policy_type_code , start_date  | claims : date_claim_made , date_claim_settled , amount_claimed , amount_settled , policy_id , claim_id  | settlements : date_claim_made , settlement_id , amount_claimed , customer_policy_id , claim_id , date_claim_settled , amount_settled  | settlements_amount_settled : amount_claimed , date_claim_made , avg_amount_settled , claim_id , settlement_id , min_amount_settled , total_amount_settled , date_claim_settled , max_amount_settled , customer_policy_id  | payments : amount_payment , date_payment_made , settlement_id , payment_method_code , payment_id "}, {"db_id": "insurance_policies", "query": "select total_amount_payment from payments_amount_payment", "query_toks": ["SELECT", "sum", "(", "Amount_Payment", ")", "FROM", "Payments"], "query_toks_no_value": ["select", "sum", "(", "amount_payment", ")", "from", "payments"], "question": "What is the total amount of payment?", "question_toks": ["What", "is", "the", "total", "amount", "of", "payment", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 25, false], null]]]], "union": null, "where": []}, "primary_key": {"payments": "payment_id"}, "orig_query": "select sum(amount_payment) from payments", "split_map": {"payments": ["max_amount_payment", "min_amount_payment", "avg_amount_payment", "total_amount_payment"]}, "schema_with_content": "customers : customer_id (1, 2, 10), customer_details (\"Dayana Robel\", \"Mrs. Hanna Willms\", \"America Jaskolski\") | customer_policies : customer_id (2, 7, 7), policy_id (352, 858, 473), policy_type_code (\"Car\", \"Car\", \"Property\"), start_date (\"2016-05-23\", \"2017-12-01\", \"2017-03-23\"), end_date (\"2017-12-14\", \"2017-09-29\", \"2017-12-14\") | claims : claim_id (442, 563, 621), policy_id (141, 143, 744), amount_claimed (46479, 35824, 69696), date_claim_settled (\"2018-02-18\", \"2017-11-03\", \"2017-12-20\"), amount_settled (1353, 1639, 1724), date_claim_made (\"2017-10-21\", \"2017-07-17\", \"2017-02-24\") | settlements : date_claim_settled (\"2017-11-30\", \"2018-03-02\", \"2017-11-30\"), claim_id (563, 563, 761), settlement_id (597, 512, 983), customer_policy_id (536, 678, 564), amount_claimed (20569, 20569, 20569), amount_settled (1737, 1516, 1698), date_claim_made (\"2017-03-29\", \"2018-08-07\", \"2017-04-18\") | payments : amount_payment (155654, 155654, 123255), payment_method_code (\"American Express\", \"Visa\", \"MasterCard\"), date_payment_made (\"2018-01-28\", \"2017-07-31\", \"2018-01-28\"), payment_id (435, 779, 791), settlement_id (564, 597, 648) | payments_amount_payment : payment_method_code (\"American Express\", \"Visa\", \"MasterCard\"), date_payment_made (\"2018-01-28\", \"2017-07-31\", \"2018-01-28\"), payment_id (435, 779, 791), total_amount_payment (155654, 155654, 123255), min_amount_payment (155654, 155654, 123255), avg_amount_payment (155654, 155654, 123255), max_amount_payment (155654, 155654, 123255), settlement_id (564, 597, 648)", "schema_without_content": "customers : customer_id , customer_details  | customer_policies : customer_id , policy_id , policy_type_code , start_date , end_date  | claims : claim_id , policy_id , amount_claimed , date_claim_settled , amount_settled , date_claim_made  | settlements : date_claim_settled , claim_id , settlement_id , customer_policy_id , amount_claimed , amount_settled , date_claim_made  | payments : amount_payment , payment_method_code , date_payment_made , payment_id , settlement_id  | payments_amount_payment : payment_method_code , date_payment_made , payment_id , total_amount_payment , min_amount_payment , avg_amount_payment , max_amount_payment , settlement_id "}, {"db_id": "insurance_policies", "query": "select total_amount_payment from payments_amount_payment", "query_toks": ["SELECT", "sum", "(", "Amount_Payment", ")", "FROM", "Payments"], "query_toks_no_value": ["select", "sum", "(", "amount_payment", ")", "from", "payments"], "question": "Compute the total amount of payment processed.", "question_toks": ["Compute", "the", "total", "amount", "of", "payment", "processed", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 25, false], null]]]], "union": null, "where": []}, "primary_key": {"payments": "payment_id"}, "orig_query": "select sum(amount_payment) from payments", "split_map": {"payments": ["max_amount_payment", "min_amount_payment", "avg_amount_payment", "total_amount_payment"]}, "schema_with_content": "customers : customer_details (\"Buddy Marquardt\", \"Selena Gerhold\", \"Dr. Diana Rath\"), customer_id (3, 6, 10) | customer_policies : start_date (\"2017-12-01\", \"2017-07-30\", \"2016-05-23\"), policy_id (141, 143, 119), policy_type_code (\"Property\", \"Car\", \"Life\"), customer_id (8, 3, 8), end_date (\"2018-02-11\", \"2017-11-05\", \"2017-12-14\") | claims : date_claim_settled (\"2018-01-27\", \"2017-11-19\", \"2017-11-03\"), policy_id (119, 473, 352), amount_settled (1724, 1639, 1637), claim_id (801, 843, 571), amount_claimed (43708, 70088, 70674), date_claim_made (\"2018-07-15\", \"2016-12-18\", \"2016-08-26\") | settlements : date_claim_made (\"2018-05-12\", \"2017-04-14\", \"2016-07-19\"), settlement_id (983, 357, 357), claim_id (569, 761, 843), date_claim_settled (\"2018-02-20\", \"2017-11-30\", \"2018-01-27\"), customer_policy_id (805, 943, 448), amount_claimed (32079, 57669, 57669), amount_settled (1885, 1293, 1516) | payments : settlement_id (527, 476, 597), amount_payment (177130, 407235, 177130), payment_id (983, 484, 779), date_payment_made (\"2017-08-06\", \"2017-05-03\", \"2018-01-28\"), payment_method_code (\"Visa\", \"Discover Card\", \"American Express\") | payments_amount_payment : avg_amount_payment (177130, 407235, 177130), payment_id (983, 484, 779), payment_method_code (\"Visa\", \"Discover Card\", \"American Express\"), settlement_id (527, 476, 597), max_amount_payment (177130, 407235, 177130), total_amount_payment (177130, 407235, 177130), date_payment_made (\"2017-08-06\", \"2017-05-03\", \"2018-01-28\"), min_amount_payment (177130, 407235, 177130)", "schema_without_content": "customers : customer_details , customer_id  | customer_policies : start_date , policy_id , policy_type_code , customer_id , end_date  | claims : date_claim_settled , policy_id , amount_settled , claim_id , amount_claimed , date_claim_made  | settlements : date_claim_made , settlement_id , claim_id , date_claim_settled , customer_policy_id , amount_claimed , amount_settled  | payments : settlement_id , amount_payment , payment_id , date_payment_made , payment_method_code  | payments_amount_payment : avg_amount_payment , payment_id , payment_method_code , settlement_id , max_amount_payment , total_amount_payment , date_payment_made , min_amount_payment "}, {"db_id": "insurance_policies", "query": "select total_amount_claimed from claims_amount_claimed", "query_toks": ["SELECT", "sum", "(", "Amount_Claimed", ")", "FROM", "Claims"], "query_toks_no_value": ["select", "sum", "(", "amount_claimed", ")", "from", "claims"], "question": "Find the total claimed amount of all the claims.", "question_toks": ["Find", "the", "total", "claimed", "amount", "of", "all", "the", "claims", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 12, false], null]]]], "union": null, "where": []}, "primary_key": {"claims": "claim_id"}, "orig_query": "select sum(amount_claimed) from claims", "split_map": {"claims": ["max_amount_claimed", "min_amount_claimed", "avg_amount_claimed", "total_amount_claimed"]}, "schema_with_content": "customers : customer_id (9, 3, 9), customer_details (\"Miss Felicita Reichel\", \"Buddy Marquardt\", \"Dr. Diana Rath\") | customer_policies : start_date (\"2017-12-01\", \"2017-04-24\", \"2017-12-13\"), end_date (\"2017-12-11\", \"2018-01-05\", \"2017-09-29\"), policy_id (264, 858, 270), policy_type_code (\"Travel\", \"Life\", \"Car\"), customer_id (7, 9, 2) | claims : amount_settled (1724, 1050, 1353), date_claim_settled (\"2017-09-15\", \"2017-09-15\", \"2018-02-18\"), policy_id (744, 552, 352), date_claim_made (\"2018-07-13\", \"2017-08-03\", \"2016-08-12\"), amount_claimed (38280, 49743, 43884), claim_id (486, 569, 621) | claims_amount_claimed : max_amount_claimed (38280, 49743, 43884), policy_id (744, 552, 352), min_amount_claimed (38280, 49743, 43884), date_claim_made (\"2018-07-13\", \"2017-08-03\", \"2016-08-12\"), date_claim_settled (\"2017-09-15\", \"2017-09-15\", \"2018-02-18\"), claim_id (486, 569, 621), total_amount_claimed (38280, 49743, 43884), avg_amount_claimed (38280, 49743, 43884), amount_settled (1724, 1050, 1353) | settlements : date_claim_made (\"2018-11-10\", \"2016-07-04\", \"2016-05-18\"), settlement_id (476, 412, 476), amount_claimed (62680, 4456, 16603), customer_policy_id (536, 727, 133), claim_id (569, 801, 563), amount_settled (1698, 1737, 1516), date_claim_settled (\"2017-11-04\", \"2018-02-20\", \"2017-11-04\") | payments : payment_method_code (\"Discover Card\", \"MasterCard\", \"American Express\"), date_payment_made (\"2017-05-04\", \"2017-07-31\", \"2018-01-19\"), payment_id (779, 484, 983), amount_payment (38324, 456098, 448613), settlement_id (512, 564, 512)", "schema_without_content": "customers : customer_id , customer_details  | customer_policies : start_date , end_date , policy_id , policy_type_code , customer_id  | claims : amount_settled , date_claim_settled , policy_id , date_claim_made , amount_claimed , claim_id  | claims_amount_claimed : max_amount_claimed , policy_id , min_amount_claimed , date_claim_made , date_claim_settled , claim_id , total_amount_claimed , avg_amount_claimed , amount_settled  | settlements : date_claim_made , settlement_id , amount_claimed , customer_policy_id , claim_id , amount_settled , date_claim_settled  | payments : payment_method_code , date_payment_made , payment_id , amount_payment , settlement_id "}, {"db_id": "insurance_policies", "query": "select total_amount_claimed from claims_amount_claimed", "query_toks": ["SELECT", "sum", "(", "Amount_Claimed", ")", "FROM", "Claims"], "query_toks_no_value": ["select", "sum", "(", "amount_claimed", ")", "from", "claims"], "question": "What is total amount claimed summed across all the claims?", "question_toks": ["What", "is", "total", "amount", "claimed", "summed", "across", "all", "the", "claims", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 12, false], null]]]], "union": null, "where": []}, "primary_key": {"claims": "claim_id"}, "orig_query": "select sum(amount_claimed) from claims", "split_map": {"claims": ["max_amount_claimed", "min_amount_claimed", "avg_amount_claimed", "total_amount_claimed"]}, "schema_with_content": "customers : customer_id (8, 12, 13), customer_details (\"Mr. Randal Lynch III\", \"Mrs. Liza Heller V\", \"Augustine Kerluke\") | customer_policies : start_date (\"2017-08-21\", \"2017-08-21\", \"2017-08-21\"), policy_id (738, 738, 270), end_date (\"2017-11-23\", \"2018-02-11\", \"2017-11-05\"), policy_type_code (\"Life\", \"Property\", \"Car\"), customer_id (9, 13, 7) | claims : policy_id (119, 141, 744), date_claim_settled (\"2018-01-27\", \"2017-12-20\", \"2017-09-04\"), claim_id (621, 801, 965), amount_claimed (83703, 69696, 79134), date_claim_made (\"2016-08-02\", \"2017-03-11\", \"2018-06-14\"), amount_settled (1528, 1189, 1189) | claims_amount_claimed : total_amount_claimed (83703, 69696, 79134), date_claim_settled (\"2018-01-27\", \"2017-12-20\", \"2017-09-04\"), claim_id (621, 801, 965), max_amount_claimed (83703, 69696, 79134), min_amount_claimed (83703, 69696, 79134), policy_id (119, 141, 744), date_claim_made (\"2016-08-02\", \"2017-03-11\", \"2018-06-14\"), avg_amount_claimed (83703, 69696, 79134), amount_settled (1528, 1189, 1189) | settlements : amount_claimed (24055, 30954, 32079), customer_policy_id (419, 727, 839), date_claim_made (\"2017-09-22\", \"2018-11-10\", \"2017-07-31\"), settlement_id (558, 476, 412), date_claim_settled (\"2017-10-06\", \"2017-11-04\", \"2018-02-15\"), claim_id (957, 957, 563), amount_settled (1262, 1293, 1042) | payments : payment_method_code (\"American Express\", \"Visa\", \"American Express\"), payment_id (435, 886, 542), settlement_id (648, 476, 527), date_payment_made (\"2017-06-24\", \"2018-02-16\", \"2017-10-07\"), amount_payment (123255, 155654, 459407)", "schema_without_content": "customers : customer_id , customer_details  | customer_policies : start_date , policy_id , end_date , policy_type_code , customer_id  | claims : policy_id , date_claim_settled , claim_id , amount_claimed , date_claim_made , amount_settled  | claims_amount_claimed : total_amount_claimed , date_claim_settled , claim_id , max_amount_claimed , min_amount_claimed , policy_id , date_claim_made , avg_amount_claimed , amount_settled  | settlements : amount_claimed , customer_policy_id , date_claim_made , settlement_id , date_claim_settled , claim_id , amount_settled  | payments : payment_method_code , payment_id , settlement_id , date_payment_made , amount_payment "}, {"db_id": "hospital_1", "query": "select max_cost, min_cost, avg_cost from procedures_cost", "query_toks": ["SELECT", "MAX", "(", "cost", ")", ",", "MIN", "(", "cost", ")", ",", "AVG", "(", "cost", ")", "FROM", "procedures"], "query_toks_no_value": ["select", "max", "(", "cost", ")", ",", "min", "(", "cost", ")", ",", "avg", "(", "cost", ")", "from", "procedures"], "question": "What are the highest cost, lowest cost and average cost of procedures?", "question_toks": ["What", "are", "the", "highest", "cost", ",", "lowest", "cost", "and", "average", "cost", "of", "procedures", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [5, [0, [0, 13, false], null]]]], "union": null, "where": []}, "primary_key": {"procedures": "code"}, "orig_query": "select max(cost), min(cost), avg(cost) from procedures", "split_map": {"procedures": ["max_cost", "min_cost", "avg_cost", "total_cost"]}, "schema_with_content": "physician : name (\"Keith Dudemeister\", \"Percival Cox\", \"Elliot Reid\"), position (\"Senior Attending Physician\", \"Head Chief of Medicine\", \"Senior Attending Physician\"), employeeid (3, 7, 3), ssn (555555555, 444444444, 444444444) | department : departmentid (1, 2, 3), name (\"General Medicine\", \"Surgery\", \"Psychiatry\"), head (4, 7, 9) | affiliated_with : department (1, 2, 3), primaryaffiliation (1, 0), physician (7, 8, 1) | procedures : name (\"Reversible Pancreomyoplasty\", \"Reverse Rhinopodoplasty\", \"Obfuscated Dermogastrotomy\"), cost (1500.0, 25.0, 4899.0), code (2, 1, 4) | procedures_cost : total_cost (1500.0, 25.0, 4899.0), max_cost (1500.0, 25.0, 4899.0), code (2, 1, 4), min_cost (1500.0, 25.0, 4899.0), name (\"Reversible Pancreomyoplasty\", \"Reverse Rhinopodoplasty\", \"Obfuscated Dermogastrotomy\"), avg_cost (1500.0, 25.0, 4899.0) | trained_in : certificationdate (\"2008-01-01\", \"2007-01-01\"), treatment (2, 4, 5), certificationexpires (\"2008-12-31\", \"2007-12-31\"), physician (3, 6, 7) | patient : insuranceid (68476213, 68476213, 68476213), ssn (100000003, 100000003, 100000003), name (\"Random J. Patient\", \"Random J. Patient\", \"Random J. Patient\"), phone (\"555-2048\", \"555-2048\", \"555-0512\"), address (\"42 Foobar Lane\", \"37 Snafu Drive\", \"1100 Foobaz Avenue\"), pcp (1, 2, 3) | nurse : registered (1, 0), ssn (111111110, 222222220, 333333330), name (\"Carla Espinosa\", \"Laverne Roberts\", \"Paul Flowers\"), employeeid (101, 102, 103), position (\"Head Nurse\", \"Nurse\") | appointment : start (\"2008-04-24 10:00\", \"2008-04-26 10:00\", \"2008-04-25 10:00\"), examinationroom (\"A\", \"B\", \"C\"), end (\"2008-04-26 11:00\", \"2008-04-27 11:00\", \"2008-04-26 12:00\"), appointmentid (13216584, 46846589, 86213939), physician (2, 3, 9), patient (100000003, 100000002, 100000001), prepnurse (102, 103, 103) | medication : brand (\"X\", \"Foo Labs\", \"X\"), code (5, 3, 5), name (\"Procrastin-X\", \"Procrastin-X\", \"Awakin\"), description (\"N/A\") | prescribes : date (\"2008-04-24 10:47\", \"2008-04-27 10:53\", \"2008-04-30 16:53\"), dose (\"5\", \"10\"), patient (100000001, 100000004), physician (1, 9), medication (1, 2), appointment (13216584, 86213939, None) | block : blockfloor (2, 1, 2), blockcode (1, 2, 3) | room : unavailable (0, 1), blockfloor (1, 3, 1), roomtype (\"Single\"), roomnumber (303, 202, 322), blockcode (1, 2, 3) | on_call : oncallend (\"2008-11-04 19:00\", \"2008-11-05 03:00\"), blockcode (1, 2, 3), oncallstart (\"2008-11-04 11:00\", \"2008-11-04 19:00\"), nurse (101, 102, 103), blockfloor (1) | stay : stayid (3215, 3216, 3217), room (111, 123, 112), patient (100000001, 100000003, 100000004), stayend (\"2008-05-04\", \"2008-05-14\", \"2008-05-03\"), staystart (\"2008-05-01\", \"2008-05-03\", \"2008-05-02\") | undergoes : physician (3, 7, 6), assistingnurse (101, 103, 101), patient (100000001, 100000004), dateundergoes (\"2008-05-07\", \"2008-05-09\", \"2008-05-10\"), procedures (7, 1, 6), stay (3215, 3217)", "schema_without_content": "physician : name , position , employeeid , ssn  | department : departmentid , name , head  | affiliated_with : department , primaryaffiliation , physician  | procedures : name , cost , code  | procedures_cost : total_cost , max_cost , code , min_cost , name , avg_cost  | trained_in : certificationdate , treatment , certificationexpires , physician  | patient : insuranceid , ssn , name , phone , address , pcp  | nurse : registered , ssn , name , employeeid , position  | appointment : start , examinationroom , end , appointmentid , physician , patient , prepnurse  | medication : brand , code , name , description  | prescribes : date , dose , patient , physician , medication , appointment  | block : blockfloor , blockcode  | room : unavailable , blockfloor , roomtype , roomnumber , blockcode  | on_call : oncallend , blockcode , oncallstart , nurse , blockfloor  | stay : stayid , room , patient , stayend , staystart  | undergoes : physician , assistingnurse , patient , dateundergoes , procedures , stay "}, {"db_id": "hospital_1", "query": "select max_cost, min_cost, avg_cost from procedures_cost", "query_toks": ["SELECT", "MAX", "(", "cost", ")", ",", "MIN", "(", "cost", ")", ",", "AVG", "(", "cost", ")", "FROM", "procedures"], "query_toks_no_value": ["select", "max", "(", "cost", ")", ",", "min", "(", "cost", ")", ",", "avg", "(", "cost", ")", "from", "procedures"], "question": "Tell me the highest, lowest, and average cost of procedures.", "question_toks": ["Tell", "me", "the", "highest", ",", "lowest", ",", "and", "average", "cost", "of", "procedures", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [5, [0, [0, 13, false], null]]]], "union": null, "where": []}, "primary_key": {"procedures": "code"}, "orig_query": "select max(cost), min(cost), avg(cost) from procedures", "split_map": {"procedures": ["max_cost", "min_cost", "avg_cost", "total_cost"]}, "schema_with_content": "physician : position (\"Staff Internist\", \"Head Chief of Medicine\", \"Attending Physician\"), employeeid (8, 5, 8), name (\"Christopher Turk\", \"Christopher Turk\", \"Molly Clock\"), ssn (666666666, 777777777, 222222222) | department : departmentid (1, 2, 3), name (\"General Medicine\", \"Surgery\", \"Psychiatry\"), head (4, 7, 9) | affiliated_with : physician (2, 7, 3), department (1, 2, 3), primaryaffiliation (1, 0) | procedures : cost (25.0, 3750.0, 25.0), code (6, 6, 4), name (\"Folded Demiophtalmectomy\", \"Folded Demiophtalmectomy\", \"Obtuse Pyloric Recombobulation\") | procedures_cost : total_cost (25.0, 3750.0, 25.0), min_cost (25.0, 3750.0, 25.0), name (\"Folded Demiophtalmectomy\", \"Folded Demiophtalmectomy\", \"Obtuse Pyloric Recombobulation\"), avg_cost (25.0, 3750.0, 25.0), code (6, 6, 4), max_cost (25.0, 3750.0, 25.0) | trained_in : certificationexpires (\"2008-12-31\", \"2007-12-31\"), certificationdate (\"2008-01-01\", \"2007-01-01\"), physician (3, 6, 7), treatment (4, 2, 7) | patient : pcp (1, 2, 3), address (\"101 Omgbbq Street\", \"1100 Foobaz Avenue\", \"42 Foobar Lane\"), ssn (100000004, 100000003, 100000002), name (\"Grace Ritchie\", \"Grace Ritchie\", \"Grace Ritchie\"), insuranceid (68421879, 36546321, 68421879), phone (\"555-1204\", \"555-0512\", \"555-0256\") | nurse : position (\"Head Nurse\", \"Nurse\"), employeeid (101, 102, 103), registered (1, 0), name (\"Carla Espinosa\", \"Laverne Roberts\", \"Paul Flowers\"), ssn (111111110, 222222220, 333333330) | appointment : start (\"2008-04-26 11:00\", \"2008-04-26 10:00\", \"2008-04-25 10:00\"), prepnurse (101, 102, 101), appointmentid (69879231, 76983231, 59871321), examinationroom (\"A\", \"B\", \"C\"), patient (100000001, 100000003, 100000003), physician (2, 2, 2), end (\"2008-04-25 11:00\", \"2008-04-21 11:00\", \"2008-04-26 11:00\") | medication : name (\"Melioraurin\", \"Crescavitin\", \"Thesisin\"), code (5, 4, 4), description (\"N/A\"), brand (\"Baz Industries\", \"Foo Labs\", \"Baz Industries\") | prescribes : patient (100000001, 100000004), dose (\"5\", \"10\"), appointment (13216584, 86213939, None), physician (1, 9), medication (1, 2), date (\"2008-04-24 10:47\", \"2008-04-27 10:53\", \"2008-04-30 16:53\") | block : blockcode (1, 2, 3), blockfloor (1, 1, 2) | room : blockcode (1, 2, 3), roomnumber (413, 201, 113), unavailable (0, 1), roomtype (\"Single\"), blockfloor (4, 2, 3) | on_call : blockcode (1, 2, 3), oncallstart (\"2008-11-04 11:00\", \"2008-11-04 19:00\"), blockfloor (1), nurse (101, 102, 103), oncallend (\"2008-11-04 19:00\", \"2008-11-05 03:00\") | stay : stayid (3215, 3216, 3217), staystart (\"2008-05-01\", \"2008-05-03\", \"2008-05-02\"), patient (100000001, 100000003, 100000004), stayend (\"2008-05-04\", \"2008-05-14\", \"2008-05-03\"), room (111, 123, 112) | undergoes : stay (3215, 3217), dateundergoes (\"2008-05-13\", \"2008-05-02\", \"2008-05-09\"), assistingnurse (105, 102, 102), physician (3, 7, 6), procedures (7, 1, 6), patient (100000001, 100000004)", "schema_without_content": "physician : position , employeeid , name , ssn  | department : departmentid , name , head  | affiliated_with : physician , department , primaryaffiliation  | procedures : cost , code , name  | procedures_cost : total_cost , min_cost , name , avg_cost , code , max_cost  | trained_in : certificationexpires , certificationdate , physician , treatment  | patient : pcp , address , ssn , name , insuranceid , phone  | nurse : position , employeeid , registered , name , ssn  | appointment : start , prepnurse , appointmentid , examinationroom , patient , physician , end  | medication : name , code , description , brand  | prescribes : patient , dose , appointment , physician , medication , date  | block : blockcode , blockfloor  | room : blockcode , roomnumber , unavailable , roomtype , blockfloor  | on_call : blockcode , oncallstart , blockfloor , nurse , oncallend  | stay : stayid , staystart , patient , stayend , room  | undergoes : stay , dateundergoes , assistingnurse , physician , procedures , patient "}, {"db_id": "ship_mission", "query": "select type, avg_tonnage from ship_tonnage group by type", "query_toks": ["SELECT", "TYPE", ",", "avg", "(", "Tonnage", ")", "FROM", "ship", "GROUP", "BY", "TYPE"], "query_toks_no_value": ["select", "type", ",", "avg", "(", "tonnage", ")", "from", "ship", "group", "by", "type"], "question": "Show different types of ships and the average tonnage of ships of each type.", "question_toks": ["Show", "different", "types", "of", "ships", "and", "the", "average", "tonnage", "of", "ships", "of", "each", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [5, [0, [0, 12, false], null]]]], "union": null, "where": []}, "primary_key": {"ship": "ship_id"}, "orig_query": "select type, avg(tonnage) from ship group by type", "split_map": {"ship": ["max_tonnage", "min_tonnage", "avg_tonnage", "total_tonnage"]}, "schema_with_content": "mission : location (\"Helsinki , Finland\", \"Germany\", \"Norway\"), fate (\"Lost (burned) 1931\", \"Retired 1939\", \"Lost (burned) 1931\"), ship_id (1, 1, 2), code (\"VMV-2\", \"VMV-3\", \"VMV-7\"), speed_knots (25, 23, 16), mission_id (2, 6, 5), launched_year (1930, 1930, 1930) | ship : name (\"Ariadne\", \"Farringford\", \"Trader\"), ship_id (7, 4, 4), nationality (\"United Kingdom\", \"United States\"), type (\"Cargo ship\", \"Battle ship\"), tonnage (5816, 3627, 3608) | ship_tonnage : avg_tonnage (5816, 3627, 3608), nationality (\"United Kingdom\", \"United States\"), name (\"Ariadne\", \"Farringford\", \"Trader\"), ship_id (7, 4, 4), type (\"Cargo ship\", \"Battle ship\"), min_tonnage (5816, 3627, 3608), total_tonnage (5816, 3627, 3608), max_tonnage (5816, 3627, 3608)", "schema_without_content": "mission : location , fate  1931\", \"Retired 1939\", \"Lost  1931\", ship_id , code , speed_knots , mission_id , launched_year  | ship : name , ship_id , nationality , type , tonnage  | ship_tonnage : avg_tonnage , nationality , name , ship_id , type , min_tonnage , total_tonnage , max_tonnage "}, {"db_id": "ship_mission", "query": "select type, avg_tonnage from ship_tonnage group by type", "query_toks": ["SELECT", "TYPE", ",", "avg", "(", "Tonnage", ")", "FROM", "ship", "GROUP", "BY", "TYPE"], "query_toks_no_value": ["select", "type", ",", "avg", "(", "tonnage", ")", "from", "ship", "group", "by", "type"], "question": "For each type, what is the average tonnage?", "question_toks": ["For", "each", "type", ",", "what", "is", "the", "average", "tonnage", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [5, [0, [0, 12, false], null]]]], "union": null, "where": []}, "primary_key": {"ship": "ship_id"}, "orig_query": "select type, avg(tonnage) from ship group by type", "split_map": {"ship": ["max_tonnage", "min_tonnage", "avg_tonnage", "total_tonnage"]}, "schema_with_content": "mission : mission_id (6, 5, 5), ship_id (5, 5, 6), launched_year (1931, 1916, 1931), fate (\"Retired 1939\", \"Decommissioned 1960\", \"Retired 1939\"), location (\"Norway\", \"Norway\", \"Turku , Finland\"), code (\"VMV-4 Former: Sterling\", \"VMV-7\", \"VMV-2\"), speed_knots (25, 23, 16) | ship : name (\"Clan McTavish\", \"Farringford\", \"Dromonby\"), ship_id (2, 2, 5), tonnage (3035, 5816, 3627), type (\"Cargo ship\", \"Battle ship\"), nationality (\"United Kingdom\", \"United States\") | ship_tonnage : max_tonnage (3035, 5816, 3627), type (\"Cargo ship\", \"Battle ship\"), avg_tonnage (3035, 5816, 3627), total_tonnage (3035, 5816, 3627), ship_id (2, 2, 5), name (\"Clan McTavish\", \"Farringford\", \"Dromonby\"), min_tonnage (3035, 5816, 3627), nationality (\"United Kingdom\", \"United States\")", "schema_without_content": "mission : mission_id , ship_id , launched_year , fate , location , code , speed_knots  | ship : name , ship_id , tonnage , type , nationality  | ship_tonnage : max_tonnage , type , avg_tonnage , total_tonnage , ship_id , name , min_tonnage , nationality "}, {"db_id": "company_employee", "query": "select max_market_value_in_billion, min_market_value_in_billion from company_market_value_in_billion", "query_toks": ["SELECT", "max", "(", "Market_Value_in_Billion", ")", ",", "min", "(", "Market_Value_in_Billion", ")", "FROM", "company"], "query_toks_no_value": ["select", "max", "(", "market_value_in_billion", ")", ",", "min", "(", "market_value_in_billion", ")", "from", "company"], "question": "What is the maximum and minimum market value of companies?", "question_toks": ["What", "is", "the", "maximum", "and", "minimum", "market", "value", "of", "companies", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]]]], "union": null, "where": []}, "primary_key": {"company": "company_id"}, "orig_query": "select max(market_value_in_billion), min(market_value_in_billion) from company", "split_map": {"company": ["max_market_value_in_billion", "min_market_value_in_billion", "avg_market_value_in_billion", "total_market_value_in_billion"]}, "schema_with_content": "people : people_id (5, 2, 6), graduation_college (\"California\", \"Virginia\", \"Iowa\"), age (25, 31, 34), name (\"Reggie Lewis\", \"Darryl Kennedy\", \"Jerry Corcoran\"), nationality (\"United States\", \"United Kindom\") | company : market_value_in_billion (159.8, 178.7, 208.4), headquarters (\"Netherlands\", \"Germany\", \"Netherlands\"), industry (\"Oil and gas\", \"Automotive\", \"Conglomerate\"), name (\"PetroChina\", \"Citigroup\", \"Wells Fargo\"), sales_in_billion (62.4, 82.6, 447.0), profits_in_billion (41.1, 21.5, 10.3), assets_in_billion (1873.9, 319.4, 213.0), company_id (9.0, 18.0, 16.0) | company_market_value_in_billion : name (\"PetroChina\", \"Citigroup\", \"Wells Fargo\"), max_market_value_in_billion (159.8, 178.7, 208.4), total_market_value_in_billion (159.8, 178.7, 208.4), sales_in_billion (62.4, 82.6, 447.0), headquarters (\"Netherlands\", \"Germany\", \"Netherlands\"), assets_in_billion (1873.9, 319.4, 213.0), profits_in_billion (41.1, 21.5, 10.3), min_market_value_in_billion (159.8, 178.7, 208.4), industry (\"Oil and gas\", \"Automotive\", \"Conglomerate\"), avg_market_value_in_billion (159.8, 178.7, 208.4), company_id (9.0, 18.0, 16.0) | employment : people_id (7, 7, 1), year_working (2, 3, 2), company_id (11, 11, 15)", "schema_without_content": "people : people_id , graduation_college , age , name , nationality  | company : market_value_in_billion , headquarters , industry , name , sales_in_billion , profits_in_billion , assets_in_billion , company_id  | company_market_value_in_billion : name , max_market_value_in_billion , total_market_value_in_billion , sales_in_billion , headquarters , assets_in_billion , profits_in_billion , min_market_value_in_billion , industry , avg_market_value_in_billion , company_id  | employment : people_id , year_working , company_id "}, {"db_id": "film_rank", "query": "select avg_gross_in_dollar from film_gross_in_dollar", "query_toks": ["SELECT", "avg", "(", "Gross_in_dollar", ")", "FROM", "film"], "query_toks_no_value": ["select", "avg", "(", "gross_in_dollar", ")", "from", "film"], "question": "What is the average ticket sales gross in dollars of films?", "question_toks": ["What", "is", "the", "average", "ticket", "sales", "gross", "in", "dollars", "of", "films", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"film": "film_id"}, "orig_query": "select avg(gross_in_dollar) from film", "split_map": {"film": ["max_gross_in_dollar", "min_gross_in_dollar", "avg_gross_in_dollar", "total_gross_in_dollar"]}, "schema_with_content": "film : director (\"Richard Attenborough\", \"Taylor Hackford\", \"Richard Attenborough\"), title (\"Annie\", \"Porky's\", \"Poltergeist\"), film_id (7, 3, 13), gross_in_dollar (78868508, 177200000, 53977250), studio (\"Columbia\", \"Columbia / Rastar\", \"Columbia / Rastar\") | film_gross_in_dollar : total_gross_in_dollar (78868508, 177200000, 53977250), min_gross_in_dollar (78868508, 177200000, 53977250), title (\"Annie\", \"Porky's\", \"Poltergeist\"), avg_gross_in_dollar (78868508, 177200000, 53977250), film_id (7, 3, 13), max_gross_in_dollar (78868508, 177200000, 53977250), studio (\"Columbia\", \"Columbia / Rastar\", \"Columbia / Rastar\"), director (\"Richard Attenborough\", \"Taylor Hackford\", \"Richard Attenborough\") | market : market_id (1, 1, 4), number_cities (453, 209, 540), country (\"Poland\", \"China\", \"Russia\") | film_market_estimation : low_estimate (16.0, 39.0, 39.0), market_id (1, 2, 3), type (\"Mass suicide murder\", \"Mass suicide\", \"Mass human sacrifice\"), year (1994, 1995, 1978), film_id (2, 3, 3), estimation_id (7, 9, 5), high_estimate (16.0, 53.0, 960.0)", "schema_without_content": "film : director , title , film_id , gross_in_dollar , studio  | film_gross_in_dollar : total_gross_in_dollar , min_gross_in_dollar , title , avg_gross_in_dollar , film_id , max_gross_in_dollar , studio , director  | market : market_id , number_cities , country  | film_market_estimation : low_estimate , market_id , type , year , film_id , estimation_id , high_estimate "}, {"db_id": "film_rank", "query": "select avg_gross_in_dollar from film_gross_in_dollar", "query_toks": ["SELECT", "avg", "(", "Gross_in_dollar", ")", "FROM", "film"], "query_toks_no_value": ["select", "avg", "(", "gross_in_dollar", ")", "from", "film"], "question": "Return the average gross sales in dollars across all films.", "question_toks": ["Return", "the", "average", "gross", "sales", "in", "dollars", "across", "all", "films", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"film": "film_id"}, "orig_query": "select avg(gross_in_dollar) from film", "split_map": {"film": ["max_gross_in_dollar", "min_gross_in_dollar", "avg_gross_in_dollar", "total_gross_in_dollar"]}, "schema_with_content": "film : gross_in_dollar (125049125, 109492484, 129795554), director (\"Sydney Pollack\", \"Nicholas Meyer\", \"Tobe Hooper\"), title (\"Star Trek II: The Wrath of Khan\", \"An Officer and a Gentleman\", \"Poltergeist\"), film_id (8, 4, 11), studio (\"Universal\", \"Universal\", \"Paramount / Lorimar\") | film_gross_in_dollar : avg_gross_in_dollar (125049125, 109492484, 129795554), title (\"Star Trek II: The Wrath of Khan\", \"An Officer and a Gentleman\", \"Poltergeist\"), max_gross_in_dollar (125049125, 109492484, 129795554), total_gross_in_dollar (125049125, 109492484, 129795554), min_gross_in_dollar (125049125, 109492484, 129795554), director (\"Sydney Pollack\", \"Nicholas Meyer\", \"Tobe Hooper\"), studio (\"Universal\", \"Universal\", \"Paramount / Lorimar\"), film_id (8, 4, 11) | market : country (\"France\", \"USA\", \"China\"), number_cities (453, 453, 231), market_id (2, 2, 6) | film_market_estimation : film_id (4, 2, 1), year (2000, 1978, 1995), high_estimate (53.0, 16.0, 960.0), estimation_id (1, 3, 9), market_id (1, 2, 3), low_estimate (16.0, 913.0, 3000.0), type (\"Mass suicide murder\", \"Mass suicide\", \"Mass human sacrifice\")", "schema_without_content": "film : gross_in_dollar , director , title , film_id , studio  | film_gross_in_dollar : avg_gross_in_dollar , title , max_gross_in_dollar , total_gross_in_dollar , min_gross_in_dollar , director , studio , film_id  | market : country , number_cities , market_id  | film_market_estimation : film_id , year , high_estimate , estimation_id , market_id , low_estimate , type "}, {"db_id": "film_rank", "query": "select max_number_cities, min_number_cities from market_number_cities", "query_toks": ["SELECT", "max", "(", "Number_cities", ")", ",", "min", "(", "Number_cities", ")", "FROM", "market"], "query_toks_no_value": ["select", "max", "(", "number_cities", ")", ",", "min", "(", "number_cities", ")", "from", "market"], "question": "What are the maximum and minimum number of cities in all markets.", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "number", "of", "cities", "in", "all", "markets", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 8, false], null]], [2, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"market": "market_id"}, "orig_query": "select max(number_cities), min(number_cities) from market", "split_map": {"market": ["max_number_cities", "min_number_cities", "avg_number_cities", "total_number_cities"]}, "schema_with_content": "film : studio (\"Paramount\", \"MGM\", \"Orion / Carolco\"), film_id (1, 7, 13), director (\"Sidney Lumet\", \"Bob Clark\", \"Taylor Hackford\"), title (\"The Verdict\", \"Rocky III\", \"Star Trek II: The Wrath of Khan\"), gross_in_dollar (78868508, 52767889, 435110554) | market : number_cities (700, 209, 231), market_id (3, 1, 5), country (\"Poland\", \"Japan\", \"China\") | market_number_cities : total_number_cities (700, 209, 231), min_number_cities (700, 209, 231), avg_number_cities (700, 209, 231), market_id (3, 1, 5), country (\"Poland\", \"Japan\", \"China\"), max_number_cities (700, 209, 231) | film_market_estimation : low_estimate (80000.0, 300.0, 39.0), high_estimate (960.0, 960.0, 960.0), type (\"Mass suicide murder\", \"Mass suicide\", \"Mass human sacrifice\"), film_id (4, 2, 2), estimation_id (6, 6, 9), market_id (1, 2, 3), year (1944, 1995, 1944)", "schema_without_content": "film : studio , film_id , director , title , gross_in_dollar  | market : number_cities , market_id , country  | market_number_cities : total_number_cities , min_number_cities , avg_number_cities , market_id , country , max_number_cities  | film_market_estimation : low_estimate , high_estimate , type , film_id , estimation_id , market_id , year "}, {"db_id": "film_rank", "query": "select max_number_cities, min_number_cities from market_number_cities", "query_toks": ["SELECT", "max", "(", "Number_cities", ")", ",", "min", "(", "Number_cities", ")", "FROM", "market"], "query_toks_no_value": ["select", "max", "(", "number_cities", ")", ",", "min", "(", "number_cities", ")", "from", "market"], "question": "Return the maximum and minimum number of cities across all markets.", "question_toks": ["Return", "the", "maximum", "and", "minimum", "number", "of", "cities", "across", "all", "markets", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 8, false], null]], [2, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"market": "market_id"}, "orig_query": "select max(number_cities), min(number_cities) from market", "split_map": {"market": ["max_number_cities", "min_number_cities", "avg_number_cities", "total_number_cities"]}, "schema_with_content": "film : title (\"Annie\", \"The Verdict\", \"The Verdict\"), film_id (6, 12, 8), director (\"Taylor Hackford\", \"Taylor Hackford\", \"Ted Kotcheff\"), studio (\"Paramount\", \"United Artists\", \"United Artists\"), gross_in_dollar (52767889, 76606280, 125049125) | market : country (\"Japan\", \"China\", \"China\"), market_id (2, 5, 5), number_cities (453, 212, 700) | market_number_cities : total_number_cities (453, 212, 700), max_number_cities (453, 212, 700), market_id (2, 5, 5), country (\"Japan\", \"China\", \"China\"), min_number_cities (453, 212, 700), avg_number_cities (453, 212, 700) | film_market_estimation : high_estimate (80400.0, 16.0, 16.0), year (1973, 2000, 1995), type (\"Mass suicide murder\", \"Mass suicide\", \"Mass human sacrifice\"), film_id (2, 2, 1), low_estimate (53.0, 960.0, 80000.0), market_id (1, 2, 3), estimation_id (8, 8, 3)", "schema_without_content": "film : title , film_id , director , studio , gross_in_dollar  | market : country , market_id , number_cities  | market_number_cities : total_number_cities , max_number_cities , market_id , country , min_number_cities , avg_number_cities  | film_market_estimation : high_estimate , year , type , film_id , low_estimate , market_id , estimation_id "}, {"db_id": "tracking_grants_for_research", "query": "select total_grant_amount, organisation_id from grants_grant_amount group by organisation_id", "query_toks": ["SELECT", "sum", "(", "grant_amount", ")", ",", "organisation_id", "FROM", "Grants", "GROUP", "BY", "organisation_id"], "query_toks_no_value": ["select", "sum", "(", "grant_amount", ")", ",", "organisation_id", "from", "grants", "group", "by", "organisation_id"], "question": "What is the total amount of grants given by each organisations? Also list the organisation id.", "question_toks": ["What", "is", "the", "total", "amount", "of", "grants", "given", "by", "each", "organisations", "?", "Also", "list", "the", "organisation", "id", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}, "primary_key": {"grants": "grant_id"}, "orig_query": "select sum(grant_amount), organisation_id from grants group by organisation_id", "split_map": {"grants": ["max_grant_amount", "min_grant_amount", "avg_grant_amount", "total_grant_amount"]}, "schema_with_content": "document_types : document_description (\"Initial Application\", \"Regular\"), document_type_code (\"APP\", \"REG\") | documents : sent_date (\"2000-06-06 01:03:46\", \"1986-11-30 07:56:35\", \"1979-08-23 08:22:34\"), grant_id (7, 15, 11), document_id (1, 15, 10), other_details (\"\"), document_type_code (\"APP\", \"REG\"), response_received_date (\"1977-01-27 07:14:11\", \"1999-06-01 18:41:00\", \"1987-10-29 15:35:50\") | grants : grant_end_date (\"1982-03-11 15:27:55\", \"1982-03-11 15:27:55\", \"1991-06-06 07:26:25\"), other_details (\"et\", \"corrupti\", \"sapiente\"), organisation_id (3, 2, 8), grant_id (15, 11, 9), grant_start_date (\"2001-06-22 16:01:05\", \"2016-02-25 04:28:44\", \"1986-10-31 17:11:29\"), grant_amount (76977808.306, 66.4203, 42.8061) | grants_grant_amount : avg_grant_amount (76977808.306, 66.4203, 42.8061), grant_id (15, 11, 9), total_grant_amount (76977808.306, 66.4203, 42.8061), organisation_id (3, 2, 8), max_grant_amount (76977808.306, 66.4203, 42.8061), min_grant_amount (76977808.306, 66.4203, 42.8061), grant_start_date (\"2001-06-22 16:01:05\", \"2016-02-25 04:28:44\", \"1986-10-31 17:11:29\"), grant_end_date (\"1982-03-11 15:27:55\", \"1982-03-11 15:27:55\", \"1991-06-06 07:26:25\"), other_details (\"et\", \"corrupti\", \"sapiente\") | organisation_types : organisation_type (\"RES\", \"SPON\"), organisation_type_description (\"Research\", \"Sponsor\") | organisations : organisation_type (\"RES\", \"SPON\"), organisation_details (\"impedit\", \"officiis\", \"voluptas\"), organisation_id (13, 6, 2) | project_outcomes : outcome_code (\"Paper\", \"Patent\"), project_id (12, 11, 6), outcome_details (None) | project_staff : role_code (\"leader\", \"researcher\"), staff_id (5353407.0, 3100031.0, 6065505.0), date_from (\"1999-10-21 22:07:15\", \"1970-01-02 15:35:05\", \"2000-08-28 11:49:17\"), other_details (None), project_id (8, 9, 4), date_to (\"2010-12-08 11:55:36\", \"2010-12-08 11:55:36\", \"2004-12-16 13:03:36\") | projects : project_details (\"beatae\", \"deserunt\", \"sed\"), organisation_id (15, 15, 4), project_id (12, 13, 11) | research_outcomes : outcome_description (\"Published Research Paper\", \"Research Patent\"), outcome_code (\"Paper\", \"Patent\") | research_staff : staff_details (\"accusamus\", \"sint\", \"dolor\"), employer_organisation_id (2, 8, 6), staff_id (9, 5, 12) | staff_roles : role_description (\"Project Leader\", \"Project Researcher\"), role_code (\"leader\", \"researcher\") | tasks : task_details (\"t\", \"b\", \"c\"), eg agree objectives (None), task_id (1, 4, 15), project_id (9, 8, 8)", "schema_without_content": "document_types : document_description , document_type_code  | documents : sent_date , grant_id , document_id , other_details , document_type_code , response_received_date  | grants : grant_end_date , other_details , organisation_id , grant_id , grant_start_date , grant_amount  | grants_grant_amount : avg_grant_amount , grant_id , total_grant_amount , organisation_id , max_grant_amount , min_grant_amount , grant_start_date , grant_end_date , other_details  | organisation_types : organisation_type , organisation_type_description  | organisations : organisation_type , organisation_details , organisation_id  | project_outcomes : outcome_code , project_id , outcome_details  | project_staff : role_code , staff_id , date_from , other_details , project_id , date_to  | projects : project_details , organisation_id , project_id  | research_outcomes : outcome_description , outcome_code  | research_staff : staff_details , employer_organisation_id , staff_id  | staff_roles : role_description , role_code  | tasks : task_details , eg agree objectives , task_id , project_id "}, {"db_id": "tracking_grants_for_research", "query": "select total_grant_amount, organisation_id from grants_grant_amount group by organisation_id", "query_toks": ["SELECT", "sum", "(", "grant_amount", ")", ",", "organisation_id", "FROM", "Grants", "GROUP", "BY", "organisation_id"], "query_toks_no_value": ["select", "sum", "(", "grant_amount", ")", ",", "organisation_id", "from", "grants", "group", "by", "organisation_id"], "question": "What is the total amount of grant money given to each organization and what is its id?", "question_toks": ["What", "is", "the", "total", "amount", "of", "grant", "money", "given", "to", "each", "organization", "and", "what", "is", "its", "id", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}, "primary_key": {"grants": "grant_id"}, "orig_query": "select sum(grant_amount), organisation_id from grants group by organisation_id", "split_map": {"grants": ["max_grant_amount", "min_grant_amount", "avg_grant_amount", "total_grant_amount"]}, "schema_with_content": "document_types : document_type_code (\"APP\", \"REG\"), document_description (\"Initial Application\", \"Regular\") | documents : grant_id (8, 15, 13), other_details (\"\"), response_received_date (\"1986-05-23 07:17:59\", \"1986-05-23 07:17:59\", \"1977-01-27 07:14:11\"), document_id (11, 10, 10), sent_date (\"1993-02-19 16:31:12\", \"1978-09-13 16:23:29\", \"2002-07-26 15:50:28\"), document_type_code (\"APP\", \"REG\") | grants : grant_id (5, 6, 12), organisation_id (10, 5, 14), grant_end_date (\"2007-04-24 03:04:13\", \"1985-06-08 00:22:07\", \"1983-06-22 15:12:32\"), other_details (\"veniam\", \"ea\", \"dolor\"), grant_start_date (\"2004-11-10 02:26:01\", \"1970-09-19 22:53:49\", \"1986-08-26 20:49:27\"), grant_amount (25313.51, 66.4203, 281.2446) | grants_grant_amount : avg_grant_amount (25313.51, 66.4203, 281.2446), total_grant_amount (25313.51, 66.4203, 281.2446), max_grant_amount (25313.51, 66.4203, 281.2446), grant_id (5, 6, 12), min_grant_amount (25313.51, 66.4203, 281.2446), organisation_id (10, 5, 14), grant_start_date (\"2004-11-10 02:26:01\", \"1970-09-19 22:53:49\", \"1986-08-26 20:49:27\"), grant_end_date (\"2007-04-24 03:04:13\", \"1985-06-08 00:22:07\", \"1983-06-22 15:12:32\"), other_details (\"veniam\", \"ea\", \"dolor\") | organisation_types : organisation_type_description (\"Research\", \"Sponsor\"), organisation_type (\"RES\", \"SPON\") | organisations : organisation_details (\"a\", \"tenetur\", \"consequuntur\"), organisation_type (\"RES\", \"SPON\"), organisation_id (6, 3, 6) | project_outcomes : outcome_code (\"Paper\", \"Patent\"), outcome_details (None), project_id (6, 9, 7) | project_staff : date_to (\"1988-03-04 19:30:05\", \"1993-06-09 12:44:28\", \"2004-12-16 13:03:36\"), role_code (\"leader\", \"researcher\"), date_from (\"2000-08-28 11:49:17\", \"1981-10-04 22:44:50\", \"1970-03-25 06:18:11\"), staff_id (5353407.0, 5137097.0, 674810.0), other_details (None), project_id (8, 8, 11) | projects : organisation_id (15, 12, 4), project_details (\"deserunt\", \"et\", \"sint\"), project_id (2, 9, 14) | research_outcomes : outcome_description (\"Published Research Paper\", \"Research Patent\"), outcome_code (\"Paper\", \"Patent\") | research_staff : staff_id (5, 5, 6), employer_organisation_id (3, 2, 3), staff_details (\"doloribus\", \"aspernatur\", \"dicta\") | staff_roles : role_code (\"leader\", \"researcher\"), role_description (\"Project Leader\", \"Project Researcher\") | tasks : project_id (1, 14, 9), task_details (\"c\", \"w\", \"m\"), task_id (8, 1, 13), eg agree objectives (None)", "schema_without_content": "document_types : document_type_code , document_description  | documents : grant_id , other_details , response_received_date , document_id , sent_date , document_type_code  | grants : grant_id , organisation_id , grant_end_date , other_details , grant_start_date , grant_amount  | grants_grant_amount : avg_grant_amount , total_grant_amount , max_grant_amount , grant_id , min_grant_amount , organisation_id , grant_start_date , grant_end_date , other_details  | organisation_types : organisation_type_description , organisation_type  | organisations : organisation_details , organisation_type , organisation_id  | project_outcomes : outcome_code , outcome_details , project_id  | project_staff : date_to , role_code , date_from , staff_id , other_details , project_id  | projects : organisation_id , project_details , project_id  | research_outcomes : outcome_description , outcome_code  | research_staff : staff_id , employer_organisation_id , staff_details  | staff_roles : role_code , role_description  | tasks : project_id , task_details , task_id , eg agree objectives "}, {"db_id": "network_2", "query": "select avg_age from person_age", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "Person"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "person"], "question": "What is the average age for all person?", "question_toks": ["What", "is", "the", "average", "age", "for", "all", "person", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 2, false], null]]]], "union": null, "where": []}, "primary_key": {"person": "name"}, "orig_query": "select avg(age) from person", "split_map": {"person": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "person : age (25, 45, 35), gender (\"female\", \"male\"), name (\"Zach\", \"Alice\", \"Bob\"), job (\"student\", \"engineer\", \"doctor\"), city (\"chicago\", \"salt lake city\", \"new york city\") | person_age : min_age (25, 45, 35), avg_age (25, 45, 35), max_age (25, 45, 35), name (\"Zach\", \"Alice\", \"Bob\"), total_age (25, 45, 35), city (\"chicago\", \"salt lake city\", \"new york city\"), gender (\"female\", \"male\"), job (\"student\", \"engineer\", \"doctor\") | personfriend : year (5, 5, 10), name (\"Alice\", \"Zach\", \"Bob\"), friend (\"Alice\", \"Alice\", \"Bob\")", "schema_without_content": "person : age , gender , name , job , city  | person_age : min_age , avg_age , max_age , name , total_age , city , gender , job  | personfriend : year , name , friend "}, {"db_id": "network_2", "query": "select avg_age from person_age", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "Person"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "person"], "question": "What is the average age for all people in the table?", "question_toks": ["What", "is", "the", "average", "age", "for", "all", "people", "in", "the", "table", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 2, false], null]]]], "union": null, "where": []}, "primary_key": {"person": "name"}, "orig_query": "select avg(age) from person", "split_map": {"person": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "person : name (\"Bob\", \"Bob\", \"Bob\"), city (\"new york city\", \"austin\", \"chicago\"), job (\"student\", \"engineer\", \"doctor\"), age (35, 25, 45), gender (\"female\", \"male\") | person_age : max_age (35, 25, 45), avg_age (35, 25, 45), min_age (35, 25, 45), name (\"Bob\", \"Bob\", \"Bob\"), total_age (35, 25, 45), city (\"new york city\", \"austin\", \"chicago\"), gender (\"female\", \"male\"), job (\"student\", \"engineer\", \"doctor\") | personfriend : name (\"Alice\", \"Zach\", \"Bob\"), friend (\"Zach\", \"Alice\", \"Zach\"), year (6, 6, 6)", "schema_without_content": "person : name , city , job , age , gender  | person_age : max_age , avg_age , min_age , name , total_age , city , gender , job  | personfriend : name , friend , year "}, {"db_id": "network_2", "query": "select avg_age, gender from person_age group by gender", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "gender", "FROM", "Person", "GROUP", "BY", "gender"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "gender", "from", "person", "group", "by", "gender"], "question": "What is the average age for each gender?", "question_toks": ["What", "is", "the", "average", "age", "for", "each", "gender", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}, "primary_key": {"person": "name"}, "orig_query": "select avg(age), gender from person group by gender", "split_map": {"person": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "person : gender (\"female\", \"male\"), name (\"Bob\", \"Alice\", \"Zach\"), job (\"student\", \"engineer\", \"doctor\"), city (\"chicago\", \"chicago\", \"salt lake city\"), age (26, 25, 45) | person_age : avg_age (26, 25, 45), name (\"Bob\", \"Alice\", \"Zach\"), max_age (26, 25, 45), total_age (26, 25, 45), min_age (26, 25, 45), city (\"chicago\", \"chicago\", \"salt lake city\"), gender (\"female\", \"male\"), job (\"student\", \"engineer\", \"doctor\") | personfriend : friend (\"Dan\", \"Alice\", \"Bob\"), year (6, 10, 5), name (\"Alice\", \"Zach\", \"Bob\")", "schema_without_content": "person : gender , name , job , city , age  | person_age : avg_age , name , max_age , total_age , min_age , city , gender , job  | personfriend : friend , year , name "}, {"db_id": "network_2", "query": "select avg_age, gender from person_age group by gender", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "gender", "FROM", "Person", "GROUP", "BY", "gender"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "gender", "from", "person", "group", "by", "gender"], "question": "How old is each gender, on average?", "question_toks": ["How", "old", "is", "each", "gender", ",", "on", "average", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}, "primary_key": {"person": "name"}, "orig_query": "select avg(age), gender from person group by gender", "split_map": {"person": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "person : gender (\"female\", \"male\"), age (35, 25, 26), job (\"student\", \"engineer\", \"doctor\"), name (\"Bob\", \"Alice\", \"Dan\"), city (\"new york city\", \"austin\", \"new york city\") | person_age : total_age (35, 25, 26), min_age (35, 25, 26), max_age (35, 25, 26), name (\"Bob\", \"Alice\", \"Dan\"), avg_age (35, 25, 26), city (\"new york city\", \"austin\", \"new york city\"), gender (\"female\", \"male\"), job (\"student\", \"engineer\", \"doctor\") | personfriend : friend (\"Zach\", \"Zach\", \"Alice\"), name (\"Alice\", \"Zach\", \"Bob\"), year (6, 10, 6)", "schema_without_content": "person : gender , age , job , name , city  | person_age : total_age , min_age , max_age , name , avg_age , city , gender , job  | personfriend : friend , name , year "}, {"db_id": "network_2", "query": "select avg_age, job from person_age group by job", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "job", "FROM", "Person", "GROUP", "BY", "job"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "job", "from", "person", "group", "by", "job"], "question": "What is average age for different job title?", "question_toks": ["What", "is", "average", "age", "for", "different", "job", "title", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"person": "name"}, "orig_query": "select avg(age), job from person group by job", "split_map": {"person": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "person : name (\"Bob\", \"Zach\", \"Dan\"), city (\"new york city\", \"chicago\", \"new york city\"), gender (\"female\", \"male\"), age (25, 25, 45), job (\"student\", \"engineer\", \"doctor\") | person_age : total_age (25, 25, 45), max_age (25, 25, 45), name (\"Bob\", \"Zach\", \"Dan\"), avg_age (25, 25, 45), min_age (25, 25, 45), city (\"new york city\", \"chicago\", \"new york city\"), gender (\"female\", \"male\"), job (\"student\", \"engineer\", \"doctor\") | personfriend : name (\"Alice\", \"Zach\", \"Bob\"), friend (\"Bob\", \"Dan\", \"Alice\"), year (12, 6, 10)", "schema_without_content": "person : name , city , gender , age , job  | person_age : total_age , max_age , name , avg_age , min_age , city , gender , job  | personfriend : name , friend , year "}, {"db_id": "network_2", "query": "select avg_age, job from person_age group by job", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "job", "FROM", "Person", "GROUP", "BY", "job"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "job", "from", "person", "group", "by", "job"], "question": "How old is the average person for each job?", "question_toks": ["How", "old", "is", "the", "average", "person", "for", "each", "job", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"person": "name"}, "orig_query": "select avg(age), job from person group by job", "split_map": {"person": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "person : name (\"Bob\", \"Bob\", \"Dan\"), job (\"student\", \"engineer\", \"doctor\"), city (\"austin\", \"austin\", \"salt lake city\"), age (26, 25, 25), gender (\"female\", \"male\") | person_age : name (\"Bob\", \"Bob\", \"Dan\"), avg_age (26, 25, 25), total_age (26, 25, 25), min_age (26, 25, 25), max_age (26, 25, 25), city (\"austin\", \"austin\", \"salt lake city\"), gender (\"female\", \"male\"), job (\"student\", \"engineer\", \"doctor\") | personfriend : year (5, 5, 10), name (\"Alice\", \"Zach\", \"Bob\"), friend (\"Dan\", \"Bob\", \"Alice\")", "schema_without_content": "person : name , job , city , age , gender  | person_age : name , avg_age , total_age , min_age , max_age , city , gender , job  | personfriend : year , name , friend "}, {"db_id": "network_2", "query": "select avg_age, job from person_age where gender = 'male' group by job", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "job", "FROM", "Person", "WHERE", "gender", "=", "'male", "'", "GROUP", "BY", "job"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "job", "from", "person", "where", "gender", "=", "value", "group", "by", "job"], "question": "What is average age of male for different job title?", "question_toks": ["What", "is", "average", "age", "of", "male", "for", "different", "job", "title", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"male\"", null]]}, "primary_key": {"person": "name"}, "orig_query": "select avg(age), job from person where gender = 'male' group by job", "split_map": {"person": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "person : name (\"Dan\", \"Bob\", \"Alice\"), city (\"salt lake city\", \"new york city\", \"austin\"), job (\"student\", \"engineer\", \"doctor\"), age (25, 26, 25), gender (\"female\", \"male\") | person_age : avg_age (25, 26, 25), name (\"Dan\", \"Bob\", \"Alice\"), min_age (25, 26, 25), total_age (25, 26, 25), max_age (25, 26, 25), city (\"salt lake city\", \"new york city\", \"austin\"), gender (\"female\", \"male\"), job (\"student\", \"engineer\", \"doctor\") | personfriend : friend (\"Alice\", \"Bob\", \"Bob\"), name (\"Alice\", \"Zach\", \"Bob\"), year (10, 10, 12)", "schema_without_content": "person : name , city , job , age , gender  | person_age : avg_age , name , min_age , total_age , max_age , city , gender , job  | personfriend : friend , name , year "}, {"db_id": "network_2", "query": "select avg_age, job from person_age where gender = 'male' group by job", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "job", "FROM", "Person", "WHERE", "gender", "=", "'male", "'", "GROUP", "BY", "job"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "job", "from", "person", "where", "gender", "=", "value", "group", "by", "job"], "question": "What is the average age for a male in each job?", "question_toks": ["What", "is", "the", "average", "age", "for", "a", "male", "in", "each", "job", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"male\"", null]]}, "primary_key": {"person": "name"}, "orig_query": "select avg(age), job from person where gender = 'male' group by job", "split_map": {"person": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "person : job (\"student\", \"engineer\", \"doctor\"), age (35, 26, 45), city (\"chicago\", \"new york city\", \"chicago\"), name (\"Bob\", \"Bob\", \"Zach\"), gender (\"female\", \"male\") | person_age : name (\"Bob\", \"Bob\", \"Zach\"), max_age (35, 26, 45), avg_age (35, 26, 45), total_age (35, 26, 45), min_age (35, 26, 45), city (\"chicago\", \"new york city\", \"chicago\"), gender (\"female\", \"male\"), job (\"student\", \"engineer\", \"doctor\") | personfriend : name (\"Alice\", \"Zach\", \"Bob\"), year (10, 12, 10), friend (\"Bob\", \"Bob\", \"Bob\")", "schema_without_content": "person : job , age , city , name , gender  | person_age : name , max_age , avg_age , total_age , min_age , city , gender , job  | personfriend : name , year , friend "}, {"db_id": "network_2", "query": "select min_age, job from person_age group by job", "query_toks": ["SELECT", "min", "(", "age", ")", ",", "job", "FROM", "Person", "GROUP", "BY", "job"], "query_toks_no_value": ["select", "min", "(", "age", ")", ",", "job", "from", "person", "group", "by", "job"], "question": "What is minimum age for different job title?", "question_toks": ["What", "is", "minimum", "age", "for", "different", "job", "title", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"person": "name"}, "orig_query": "select min(age), job from person group by job", "split_map": {"person": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "person : age (26, 26, 45), city (\"austin\", \"new york city\", \"chicago\"), gender (\"female\", \"male\"), job (\"student\", \"engineer\", \"doctor\"), name (\"Bob\", \"Dan\", \"Dan\") | person_age : total_age (26, 26, 45), min_age (26, 26, 45), avg_age (26, 26, 45), max_age (26, 26, 45), name (\"Bob\", \"Dan\", \"Dan\"), city (\"austin\", \"new york city\", \"chicago\"), gender (\"female\", \"male\"), job (\"student\", \"engineer\", \"doctor\") | personfriend : year (10, 10, 10), friend (\"Alice\", \"Bob\", \"Dan\"), name (\"Alice\", \"Zach\", \"Bob\")", "schema_without_content": "person : age , city , gender , job , name  | person_age : total_age , min_age , avg_age , max_age , name , city , gender , job  | personfriend : year , friend , name "}, {"db_id": "network_2", "query": "select min_age, job from person_age group by job", "query_toks": ["SELECT", "min", "(", "age", ")", ",", "job", "FROM", "Person", "GROUP", "BY", "job"], "query_toks_no_value": ["select", "min", "(", "age", ")", ",", "job", "from", "person", "group", "by", "job"], "question": "How old is the youngest person for each job?", "question_toks": ["How", "old", "is", "the", "youngest", "person", "for", "each", "job", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"person": "name"}, "orig_query": "select min(age), job from person group by job", "split_map": {"person": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "person : name (\"Bob\", \"Bob\", \"Dan\"), city (\"salt lake city\", \"new york city\", \"new york city\"), gender (\"female\", \"male\"), job (\"student\", \"engineer\", \"doctor\"), age (26, 45, 26) | person_age : total_age (26, 45, 26), avg_age (26, 45, 26), min_age (26, 45, 26), name (\"Bob\", \"Bob\", \"Dan\"), max_age (26, 45, 26), city (\"salt lake city\", \"new york city\", \"new york city\"), gender (\"female\", \"male\"), job (\"student\", \"engineer\", \"doctor\") | personfriend : name (\"Alice\", \"Zach\", \"Bob\"), year (5, 10, 5), friend (\"Bob\", \"Bob\", \"Bob\")", "schema_without_content": "person : name , city , gender , job , age  | person_age : total_age , avg_age , min_age , name , max_age , city , gender , job  | personfriend : name , year , friend "}, {"db_id": "document_management", "query": "select total_access_count from documents_access_count group by document_type_code order by count(*)desc limit 1", "query_toks": ["SELECT", "sum", "(", "access_count", ")", "FROM", "documents", "GROUP", "BY", "document_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "sum", "(", "access_count", ")", "from", "documents", "group", "by", "document_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the total access count of all documents in the most popular document type.", "question_toks": ["Find", "the", "total", "access", "count", "of", "all", "documents", "in", "the", "most", "popular", "document", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 20, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[4, [0, [0, 21, false], null]]]], "union": null, "where": []}, "primary_key": {"documents": "document_code"}, "orig_query": "select sum(access_count) from documents group by document_type_code order by count(*) desc limit 1", "split_map": {"documents": ["max_access_count", "min_access_count", "avg_access_count", "total_access_count"]}, "schema_with_content": "roles : role_description (\"Database Administrator\", \"Project Manager\"), role_code (\"DBA\", \"PROJ-MGR\") | users : password (\"3f6affa583bfdf7fac6faeb2ca418431909d4b39\", \"3f6affa583bfdf7fac6faeb2ca418431909d4b39\", \"11af7569a5c1e8b455add5755e18131be2ac8636\"), role_code (\"PROJ-MGR\", \"DBA\"), user_login (\"0\", \"1\"), user_id (2, 6, 1), user_name (\"heller.harley\", \"glenna.simonis\", \"gussie00\") | document_structures : parent_document_structure_code (\"1\", \"6\", \"8\"), document_structure_description (\"Image section\", \"Main section\", \"Header\"), document_structure_code (\"6\", \"9\", \"1\") | functional_areas : functional_area_code (\"1\", \"8\", \"9\"), parent_functional_area_code (\"8\"), functional_area_description (\"Signature\", \"Acknowledgement\", \"Keep blank\") | images : image_url (\"http://www.rempelnader.com/1.jpg\", \"http://www.fritsch.net/1.jpg\", \"http://abernathyboehm.com/1.jpg\"), image_name (\"top4\", \"top1\", \"top2\"), image_alt_text (\"Name\", \"Marianna\", \"Mohamed\"), image_id (8, 14, 13) | documents : document_structure_code (\"5\", \"1\", \"6\"), document_type_code (\"Book\", \"Paper\", \"Book\"), document_name (\"Learning Database\", \"Humanity: a fact\", \"Winter Sails\"), document_code (\"961\", \"349\", \"714\"), access_count (3289, 1864, 1864) | documents_access_count : document_code (\"961\", \"349\", \"714\"), total_access_count (3289, 1864, 1864), max_access_count (3289, 1864, 1864), document_structure_code (\"5\", \"1\", \"6\"), min_access_count (3289, 1864, 1864), avg_access_count (3289, 1864, 1864), document_type_code (\"Book\", \"Paper\", \"Book\"), document_name (\"Learning Database\", \"Humanity: a fact\", \"Winter Sails\") | document_functional_areas : functional_area_code (\"9\", \"1\", \"8\"), document_code (\"989\", \"217\", \"930\") | document_sections : section_code (\"14\", \"14\", \"38\"), section_id (62, 21, 38), section_sequence (6072, 4510, 4433), section_title (\"after\", \"before\"), document_code (\"566\", \"989\", \"961\") | document_sections_images : image_id (2, 2, 6), section_id (86, 15, 12)", "schema_without_content": "roles : role_description , role_code  | users : password , role_code , user_login , user_id , user_name  | document_structures : parent_document_structure_code , document_structure_description , document_structure_code  | functional_areas : functional_area_code , parent_functional_area_code , functional_area_description  | images : image_url , image_name , image_alt_text , image_id  | documents : document_structure_code , document_type_code , document_name , document_code , access_count  | documents_access_count : document_code , total_access_count , max_access_count , document_structure_code , min_access_count , avg_access_count , document_type_code , document_name  | document_functional_areas : functional_area_code , document_code  | document_sections : section_code , section_id , section_sequence , section_title , document_code  | document_sections_images : image_id , section_id "}, {"db_id": "document_management", "query": "select total_access_count from documents_access_count group by document_type_code order by count(*)desc limit 1", "query_toks": ["SELECT", "sum", "(", "access_count", ")", "FROM", "documents", "GROUP", "BY", "document_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "sum", "(", "access_count", ")", "from", "documents", "group", "by", "document_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the total access count of documents that are of the most common document type?", "question_toks": ["What", "is", "the", "total", "access", "count", "of", "documents", "that", "are", "of", "the", "most", "common", "document", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 20, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[4, [0, [0, 21, false], null]]]], "union": null, "where": []}, "primary_key": {"documents": "document_code"}, "orig_query": "select sum(access_count) from documents group by document_type_code order by count(*) desc limit 1", "split_map": {"documents": ["max_access_count", "min_access_count", "avg_access_count", "total_access_count"]}, "schema_with_content": "roles : role_description (\"Database Administrator\", \"Project Manager\"), role_code (\"DBA\", \"PROJ-MGR\") | users : user_id (8, 10, 11), user_login (\"0\", \"1\"), role_code (\"PROJ-MGR\", \"DBA\"), password (\"11af7569a5c1e8b455add5755e18131be2ac8636\", \"95f489fc0921bbb3e7d661a550ae208b88d9b11a\", \"a0fe5434a5f4c218e37b0082f2408b357feb0fa6\"), user_name (\"gussie00\", \"dickens.elta\", \"gussie00\") | document_structures : document_structure_description (\"Image section\", \"Image section\", \"Header\"), parent_document_structure_code (\"1\", \"6\", \"8\"), document_structure_code (\"1\", \"6\", \"6\") | functional_areas : parent_functional_area_code (\"8\"), functional_area_description (\"Signature\", \"Acknowledgement\", \"Keep blank\"), functional_area_code (\"1\", \"8\", \"9\") | images : image_url (\"http://gaylord.info/1.jpg\", \"http://www.bernierconnelly.com/1.jpg\", \"http://faycummerata.net/1.jpg\"), image_name (\"chapter3\", \"top3\", \"data6\"), image_alt_text (\"Jeanette\", \"Mohamed\", \"Jeanette\"), image_id (13, 8, 7) | documents : document_name (\"Life about Claude Monet\", \"Humanity: a fact\", \"David CV\"), access_count (8623, 2910, 2294), document_code (\"706\", \"930\", \"928\"), document_type_code (\"Book\", \"Advertisement\", \"Book\"), document_structure_code (\"6\", \"6\", \"9\") | documents_access_count : min_access_count (8623, 2910, 2294), document_type_code (\"Book\", \"Advertisement\", \"Book\"), avg_access_count (8623, 2910, 2294), document_code (\"706\", \"930\", \"928\"), document_structure_code (\"6\", \"6\", \"9\"), total_access_count (8623, 2910, 2294), max_access_count (8623, 2910, 2294), document_name (\"Life about Claude Monet\", \"Humanity: a fact\", \"David CV\") | document_functional_areas : functional_area_code (\"9\", \"1\", \"8\"), document_code (\"217\", \"713\", \"465\") | document_sections : section_sequence (6349, 6016, 7236), section_title (\"after\", \"before\"), section_id (27, 38, 12), section_code (\"58\", \"72\", \"18\"), document_code (\"217\", \"621\", \"465\") | document_sections_images : section_id (86, 23, 15), image_id (8, 6, 4)", "schema_without_content": "roles : role_description , role_code  | users : user_id , user_login , role_code , password , user_name  | document_structures : document_structure_description , parent_document_structure_code , document_structure_code  | functional_areas : parent_functional_area_code , functional_area_description , functional_area_code  | images : image_url , image_name , image_alt_text , image_id  | documents : document_name , access_count , document_code , document_type_code , document_structure_code  | documents_access_count : min_access_count , document_type_code , avg_access_count , document_code , document_structure_code , total_access_count , max_access_count , document_name  | document_functional_areas : functional_area_code , document_code  | document_sections : section_sequence , section_title , section_id , section_code , document_code  | document_sections_images : section_id , image_id "}, {"db_id": "document_management", "query": "select avg_access_count from documents_access_count", "query_toks": ["SELECT", "avg", "(", "access_count", ")", "FROM", "documents"], "query_toks_no_value": ["select", "avg", "(", "access_count", ")", "from", "documents"], "question": "What is the average access count of documents?", "question_toks": ["What", "is", "the", "average", "access", "count", "of", "documents", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 21, false], null]]]], "union": null, "where": []}, "primary_key": {"documents": "document_code"}, "orig_query": "select avg(access_count) from documents", "split_map": {"documents": ["max_access_count", "min_access_count", "avg_access_count", "total_access_count"]}, "schema_with_content": "roles : role_description (\"Database Administrator\", \"Project Manager\"), role_code (\"DBA\", \"PROJ-MGR\") | users : role_code (\"PROJ-MGR\", \"DBA\"), user_id (15, 14, 4), user_name (\"larson.vesta\", \"faye30\", \"johanna.fisher\"), user_login (\"0\", \"1\"), password (\"90db8f51449e6c39e2a01f0b649d5a92fe76bbbb\", \"da383455a05a824606c54e99f671c4d6a2ddae26\", \"1fb26eea854962d41512827bf90a5b7ce4b359d8\") | document_structures : parent_document_structure_code (\"1\", \"6\", \"8\"), document_structure_code (\"5\", \"1\", \"6\"), document_structure_description (\"Header\", \"Author section\", \"Bib\") | functional_areas : parent_functional_area_code (\"8\"), functional_area_code (\"1\", \"8\", \"9\"), functional_area_description (\"Signature\", \"Acknowledgement\", \"Keep blank\") | images : image_name (\"top1\", \"chapter1\", \"chapter4\"), image_url (\"http://gaylord.info/1.jpg\", \"http://www.rempelnader.com/1.jpg\", \"http://www.beahan.biz/1.jpg\"), image_alt_text (\"Percival\", \"Mohamed\", \"Camylle\"), image_id (13, 9, 12) | documents : access_count (6345, 1219, 3479), document_name (\"Learning Database\", \"Learning Database\", \"Learning Japanese\"), document_code (\"713\", \"675\", \"621\"), document_structure_code (\"6\", \"6\", \"5\"), document_type_code (\"Advertisement\", \"Book\", \"Paper\") | documents_access_count : document_type_code (\"Advertisement\", \"Book\", \"Paper\"), total_access_count (6345, 1219, 3479), document_structure_code (\"6\", \"6\", \"5\"), document_code (\"713\", \"675\", \"621\"), max_access_count (6345, 1219, 3479), min_access_count (6345, 1219, 3479), avg_access_count (6345, 1219, 3479), document_name (\"Learning Database\", \"Learning Database\", \"Learning Japanese\") | document_functional_areas : functional_area_code (\"9\", \"1\", \"8\"), document_code (\"930\", \"465\", \"217\") | document_sections : document_code (\"621\", \"714\", \"465\"), section_code (\"70\", \"38\", \"18\"), section_title (\"after\", \"before\"), section_id (57, 19, 21), section_sequence (7236, 2170, 8805) | document_sections_images : image_id (12, 12, 4), section_id (93, 27, 15)", "schema_without_content": "roles : role_description , role_code  | users : role_code , user_id , user_name , user_login , password  | document_structures : parent_document_structure_code , document_structure_code , document_structure_description  | functional_areas : parent_functional_area_code , functional_area_code , functional_area_description  | images : image_name , image_url , image_alt_text , image_id  | documents : access_count , document_name , document_code , document_structure_code , document_type_code  | documents_access_count : document_type_code , total_access_count , document_structure_code , document_code , max_access_count , min_access_count , avg_access_count , document_name  | document_functional_areas : functional_area_code , document_code  | document_sections : document_code , section_code , section_title , section_id , section_sequence  | document_sections_images : image_id , section_id "}, {"db_id": "document_management", "query": "select avg_access_count from documents_access_count", "query_toks": ["SELECT", "avg", "(", "access_count", ")", "FROM", "documents"], "query_toks_no_value": ["select", "avg", "(", "access_count", ")", "from", "documents"], "question": "Find the average access count across all documents?", "question_toks": ["Find", "the", "average", "access", "count", "across", "all", "documents", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 21, false], null]]]], "union": null, "where": []}, "primary_key": {"documents": "document_code"}, "orig_query": "select avg(access_count) from documents", "split_map": {"documents": ["max_access_count", "min_access_count", "avg_access_count", "total_access_count"]}, "schema_with_content": "roles : role_code (\"DBA\", \"PROJ-MGR\"), role_description (\"Database Administrator\", \"Project Manager\") | users : password (\"20241478f890508ac47870cfba472e1db04a71ca\", \"6aa66440864ff8143fe7dee5940a6af3460bad07\", \"9bc25a040d5647ced5ec32e1a455e90fafc10bcb\"), user_id (9, 5, 9), user_login (\"0\", \"1\"), user_name (\"joanne.deckow\", \"dickinson.lenora\", \"johanna.fisher\"), role_code (\"PROJ-MGR\", \"DBA\") | document_structures : document_structure_description (\"Author section\", \"Author section\", \"Bib\"), document_structure_code (\"6\", \"8\", \"6\"), parent_document_structure_code (\"1\", \"6\", \"8\") | functional_areas : functional_area_code (\"1\", \"8\", \"9\"), functional_area_description (\"Signature\", \"Acknowledgement\", \"Keep blank\"), parent_functional_area_code (\"8\") | images : image_url (\"http://connellykertzmann.org/1.jpg\", \"http://www.beahan.biz/1.jpg\", \"http://www.heller.com/1.jpg\"), image_alt_text (\"Arden\", \"Jeanette\", \"Jeanette\"), image_id (2, 3, 2), image_name (\"chapter4\", \"data1\", \"data3\") | documents : access_count (1864, 2294, 2294), document_code (\"930\", \"930\", \"714\"), document_structure_code (\"6\", \"6\", \"9\"), document_type_code (\"Paper\", \"CV\", \"Paper\"), document_name (\"John CV\", \"Relationships between History and Arts\", \"Life about Claude Monet\") | documents_access_count : total_access_count (1864, 2294, 2294), document_type_code (\"Paper\", \"CV\", \"Paper\"), max_access_count (1864, 2294, 2294), min_access_count (1864, 2294, 2294), document_structure_code (\"6\", \"6\", \"9\"), document_code (\"930\", \"930\", \"714\"), avg_access_count (1864, 2294, 2294), document_name (\"John CV\", \"Relationships between History and Arts\", \"Life about Claude Monet\") | document_functional_areas : functional_area_code (\"9\", \"1\", \"8\"), document_code (\"713\", \"465\", \"349\") | document_sections : section_sequence (5552, 4510, 7236), section_code (\"70\", \"91\", \"70\"), document_code (\"930\", \"706\", \"989\"), section_title (\"after\", \"before\"), section_id (57, 89, 12) | document_sections_images : image_id (12, 10, 8), section_id (38, 19, 62)", "schema_without_content": "roles : role_code , role_description  | users : password , user_id , user_login , user_name , role_code  | document_structures : document_structure_description , document_structure_code , parent_document_structure_code  | functional_areas : functional_area_code , functional_area_description , parent_functional_area_code  | images : image_url , image_alt_text , image_id , image_name  | documents : access_count , document_code , document_structure_code , document_type_code , document_name  | documents_access_count : total_access_count , document_type_code , max_access_count , min_access_count , document_structure_code , document_code , avg_access_count , document_name  | document_functional_areas : functional_area_code , document_code  | document_sections : section_sequence , section_code , document_code , section_title , section_id  | document_sections_images : image_id , section_id "}, {"db_id": "document_management", "query": "select avg_access_count from documents_access_count group by document_structure_code order by count(*)asc limit 1", "query_toks": ["SELECT", "avg", "(", "access_count", ")", "FROM", "documents", "GROUP", "BY", "document_structure_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "avg", "(", "access_count", ")", "from", "documents", "group", "by", "document_structure_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Find the average access count of documents with the least popular structure.", "question_toks": ["Find", "the", "average", "access", "count", "of", "documents", "with", "the", "least", "popular", "structure", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[5, [0, [0, 21, false], null]]]], "union": null, "where": []}, "primary_key": {"documents": "document_code"}, "orig_query": "select avg(access_count) from documents group by document_structure_code order by count(*) asc limit 1", "split_map": {"documents": ["max_access_count", "min_access_count", "avg_access_count", "total_access_count"]}, "schema_with_content": "roles : role_description (\"Database Administrator\", \"Project Manager\"), role_code (\"DBA\", \"PROJ-MGR\") | users : user_login (\"0\", \"1\"), password (\"a0fe5434a5f4c218e37b0082f2408b357feb0fa6\", \"1fb26eea854962d41512827bf90a5b7ce4b359d8\", \"90db8f51449e6c39e2a01f0b649d5a92fe76bbbb\"), role_code (\"PROJ-MGR\", \"DBA\"), user_name (\"dickens.elta\", \"johanna.fisher\", \"gussie00\"), user_id (12, 12, 3) | document_structures : parent_document_structure_code (\"1\", \"6\", \"8\"), document_structure_description (\"Bib\", \"Main section\", \"Bib\"), document_structure_code (\"9\", \"1\", \"6\") | functional_areas : parent_functional_area_code (\"8\"), functional_area_code (\"1\", \"8\", \"9\"), functional_area_description (\"Signature\", \"Acknowledgement\", \"Keep blank\") | images : image_id (9, 3, 1), image_alt_text (\"Camylle\", \"Percival\", \"Name\"), image_url (\"http://andersonluettgen.net/1.jpg\", \"http://www.hellerreinger.com/1.jpg\", \"http://www.heller.com/1.jpg\"), image_name (\"chapter5\", \"data4\", \"top1\") | documents : document_name (\"Learning English\", \"Humanity: a fact\", \"Summer Sails\"), document_type_code (\"Advertisement\", \"Paper\", \"CV\"), document_code (\"928\", \"675\", \"217\"), access_count (6345, 3289, 2045), document_structure_code (\"1\", \"8\", \"8\") | documents_access_count : avg_access_count (6345, 3289, 2045), max_access_count (6345, 3289, 2045), total_access_count (6345, 3289, 2045), document_code (\"928\", \"675\", \"217\"), document_type_code (\"Advertisement\", \"Paper\", \"CV\"), min_access_count (6345, 3289, 2045), document_structure_code (\"1\", \"8\", \"8\"), document_name (\"Learning English\", \"Humanity: a fact\", \"Summer Sails\") | document_functional_areas : functional_area_code (\"9\", \"1\", \"8\"), document_code (\"930\", \"930\", \"989\") | document_sections : document_code (\"930\", \"713\", \"989\"), section_sequence (5552, 6016, 8548), section_code (\"93\", \"22\", \"60\"), section_id (57, 86, 89), section_title (\"after\", \"before\") | document_sections_images : section_id (54, 86, 19), image_id (6, 14, 13)", "schema_without_content": "roles : role_description , role_code  | users : user_login , password , role_code , user_name , user_id  | document_structures : parent_document_structure_code , document_structure_description , document_structure_code  | functional_areas : parent_functional_area_code , functional_area_code , functional_area_description  | images : image_id , image_alt_text , image_url , image_name  | documents : document_name , document_type_code , document_code , access_count , document_structure_code  | documents_access_count : avg_access_count , max_access_count , total_access_count , document_code , document_type_code , min_access_count , document_structure_code , document_name  | document_functional_areas : functional_area_code , document_code  | document_sections : document_code , section_sequence , section_code , section_id , section_title  | document_sections_images : section_id , image_id "}, {"db_id": "document_management", "query": "select avg_access_count from documents_access_count group by document_structure_code order by count(*)asc limit 1", "query_toks": ["SELECT", "avg", "(", "access_count", ")", "FROM", "documents", "GROUP", "BY", "document_structure_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "avg", "(", "access_count", ")", "from", "documents", "group", "by", "document_structure_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "What is the average access count of documents that have the least common structure?", "question_toks": ["What", "is", "the", "average", "access", "count", "of", "documents", "that", "have", "the", "least", "common", "structure", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[5, [0, [0, 21, false], null]]]], "union": null, "where": []}, "primary_key": {"documents": "document_code"}, "orig_query": "select avg(access_count) from documents group by document_structure_code order by count(*) asc limit 1", "split_map": {"documents": ["max_access_count", "min_access_count", "avg_access_count", "total_access_count"]}, "schema_with_content": "roles : role_code (\"DBA\", \"PROJ-MGR\"), role_description (\"Database Administrator\", \"Project Manager\") | users : password (\"da383455a05a824606c54e99f671c4d6a2ddae26\", \"6aa66440864ff8143fe7dee5940a6af3460bad07\", \"27cca8f94136f0e8971b5ca555a21ff756871b27\"), role_code (\"PROJ-MGR\", \"DBA\"), user_login (\"0\", \"1\"), user_id (2, 9, 1), user_name (\"dickinson.lenora\", \"lynn.haley\", \"faye30\") | document_structures : parent_document_structure_code (\"1\", \"6\", \"8\"), document_structure_description (\"Header\", \"Header\", \"Main section\"), document_structure_code (\"1\", \"9\", \"8\") | functional_areas : functional_area_description (\"Signature\", \"Acknowledgement\", \"Keep blank\"), functional_area_code (\"1\", \"8\", \"9\"), parent_functional_area_code (\"8\") | images : image_id (13, 10, 14), image_url (\"http://sauer.com/1.jpg\", \"http://www.hellerreinger.com/1.jpg\", \"http://haleychamplin.net/1.jpg\"), image_name (\"top3\", \"top2\", \"top3\"), image_alt_text (\"Mohamed\", \"Lincoln\", \"Filomena\") | documents : access_count (1864, 8208, 3479), document_type_code (\"Advertisement\", \"CV\", \"Advertisement\"), document_structure_code (\"9\", \"5\", \"6\"), document_code (\"621\", \"675\", \"713\"), document_name (\"Research about Art history\", \"Relationships between History and Arts\", \"Relationships between History and Arts\") | documents_access_count : avg_access_count (1864, 8208, 3479), document_type_code (\"Advertisement\", \"CV\", \"Advertisement\"), min_access_count (1864, 8208, 3479), max_access_count (1864, 8208, 3479), document_structure_code (\"9\", \"5\", \"6\"), total_access_count (1864, 8208, 3479), document_code (\"621\", \"675\", \"713\"), document_name (\"Research about Art history\", \"Relationships between History and Arts\", \"Relationships between History and Arts\") | document_functional_areas : document_code (\"217\", \"928\", \"706\"), functional_area_code (\"9\", \"1\", \"8\") | document_sections : section_code (\"58\", \"93\", \"91\"), section_id (38, 40, 12), section_title (\"after\", \"before\"), section_sequence (9847, 2354, 6072), document_code (\"713\", \"675\", \"621\") | document_sections_images : section_id (38, 40, 89), image_id (6, 4, 14)", "schema_without_content": "roles : role_code , role_description  | users : password , role_code , user_login , user_id , user_name  | document_structures : parent_document_structure_code , document_structure_description , document_structure_code  | functional_areas : functional_area_description , functional_area_code , parent_functional_area_code  | images : image_id , image_url , image_name , image_alt_text  | documents : access_count , document_type_code , document_structure_code , document_code , document_name  | documents_access_count : avg_access_count , document_type_code , min_access_count , max_access_count , document_structure_code , total_access_count , document_code , document_name  | document_functional_areas : document_code , functional_area_code  | document_sections : section_code , section_id , section_title , section_sequence , document_code  | document_sections_images : section_id , image_id "}, {"db_id": "company_office", "query": "select avg_profits_billion from companies_profits_billion", "query_toks": ["SELECT", "avg", "(", "Profits_billion", ")", "FROM", "Companies"], "query_toks_no_value": ["select", "avg", "(", "profits_billion", ")", "from", "companies"], "question": "What are the average profits of companies?", "question_toks": ["What", "are", "the", "average", "profits", "of", "companies", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 12, false], null]]]], "union": null, "where": []}, "primary_key": {"companies": "id"}, "orig_query": "select avg(profits_billion) from companies", "split_map": {"companies": ["max_profits_billion", "min_profits_billion", "avg_profits_billion", "total_profits_billion"]}, "schema_with_content": "buildings : stories (59, 59, 60), city (\"Monterrey\", \"Mexico City\"), height (210, 100, 100), id (3, 11, 1), status (\"under construction\", \"proposed\", \"on-hold\"), name (\"Residencial Vidalta Torre Altaire 3\", \"Torre New York Life\", \"Torre KOI\") | companies : name (\"Wells Fargo\", \"Petrobras\", \"Santander Group\"), id (1, 13, 2), headquarters (\"China\", \"Spain\", \"USA\"), assets_billion (2117.6, 317.2, 372.2), market_value_billion (\"216.2\", \"88\", \"172.9\"), industry (\"Oil and gas\", \"Telecommunications\", \"Banking\"), profits_billion (12.4, 20.1, 15.6), sales_billion (130.4, 93.2, 130.4) | companies_profits_billion : total_profits_billion (12.4, 20.1, 15.6), name (\"Wells Fargo\", \"Petrobras\", \"Santander Group\"), headquarters (\"China\", \"Spain\", \"USA\"), id (1, 13, 2), industry (\"Oil and gas\", \"Telecommunications\", \"Banking\"), avg_profits_billion (12.4, 20.1, 15.6), sales_billion (130.4, 93.2, 130.4), max_profits_billion (12.4, 20.1, 15.6), min_profits_billion (12.4, 20.1, 15.6), assets_billion (2117.6, 317.2, 372.2), market_value_billion (\"216.2\", \"88\", \"172.9\") | office_locations : company_id (2, 11, 4), building_id (4, 8, 1), move_in_year (2019, 2031, 2020)", "schema_without_content": "buildings : stories , city , height , id , status , name  | companies : name , id , headquarters , assets_billion , market_value_billion , industry , profits_billion , sales_billion  | companies_profits_billion : total_profits_billion , name , headquarters , id , industry , avg_profits_billion , sales_billion , max_profits_billion , min_profits_billion , assets_billion , market_value_billion  | office_locations : company_id , building_id , move_in_year "}, {"db_id": "company_office", "query": "select avg_profits_billion from companies_profits_billion", "query_toks": ["SELECT", "avg", "(", "Profits_billion", ")", "FROM", "Companies"], "query_toks_no_value": ["select", "avg", "(", "profits_billion", ")", "from", "companies"], "question": "Compute the average profits companies make.", "question_toks": ["Compute", "the", "average", "profits", "companies", "make", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 12, false], null]]]], "union": null, "where": []}, "primary_key": {"companies": "id"}, "orig_query": "select avg(profits_billion) from companies", "split_map": {"companies": ["max_profits_billion", "min_profits_billion", "avg_profits_billion", "total_profits_billion"]}, "schema_with_content": "buildings : stories (50, 100, 100), city (\"Monterrey\", \"Mexico City\"), status (\"under construction\", \"proposed\", \"on-hold\"), height (330, 50, 73), name (\"Torre New York Life\", \"Punto Chapultepec\", \"Torre Mitikah\"), id (9, 10, 10) | companies : assets_billion (372.2, 302.5, 251.3), id (8, 6, 7), profits_billion (18.8, 12.4, 19.9), headquarters (\"France\", \"France\", \"China\"), market_value_billion (\"216.2\", \"200.6\", \"224.8\"), sales_billion (98.7, 421.8, 58.2), name (\"China Construction Bank\", \"PetroChina\", \"BNP Paribas\"), industry (\"Retailing\", \"Banking\", \"Telecommunications\") | companies_profits_billion : max_profits_billion (18.8, 12.4, 19.9), total_profits_billion (18.8, 12.4, 19.9), id (8, 6, 7), avg_profits_billion (18.8, 12.4, 19.9), sales_billion (98.7, 421.8, 58.2), name (\"China Construction Bank\", \"PetroChina\", \"BNP Paribas\"), min_profits_billion (18.8, 12.4, 19.9), industry (\"Retailing\", \"Banking\", \"Telecommunications\"), headquarters (\"France\", \"France\", \"China\"), assets_billion (372.2, 302.5, 251.3), market_value_billion (\"216.2\", \"200.6\", \"224.8\") | office_locations : company_id (11, 7, 10), building_id (4, 6, 6), move_in_year (2023, 2031, 2020)", "schema_without_content": "buildings : stories , city , status , height , name , id  | companies : assets_billion , id , profits_billion , headquarters , market_value_billion , sales_billion , name , industry  | companies_profits_billion : max_profits_billion , total_profits_billion , id , avg_profits_billion , sales_billion , name , min_profits_billion , industry , headquarters , assets_billion , market_value_billion  | office_locations : company_id , building_id , move_in_year "}, {"db_id": "company_office", "query": "select max_sales_billion, min_sales_billion from companies_sales_billion where industry != \"Banking\"", "query_toks": ["SELECT", "max", "(", "Sales_billion", ")", ",", "min", "(", "Sales_billion", ")", "FROM", "Companies", "WHERE", "Industry", "!", "=", "``", "Banking", "''"], "query_toks_no_value": ["select", "max", "(", "sales_billion", ")", ",", "min", "(", "sales_billion", ")", "from", "companies", "where", "industry", "!", "=", "value"], "question": "What are the maximum and minimum sales of the companies whose industries are not \"Banking\".", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "sales", "of", "the", "companies", "whose", "industries", "are", "not", "``", "Banking", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 11, false], null]], [2, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 10, false], null], "\"Banking\"", null]]}, "primary_key": {"companies": "id"}, "orig_query": "select max(sales_billion), min(sales_billion) from companies where industry != \"Banking\"", "split_map": {"companies": ["max_sales_billion", "min_sales_billion", "avg_sales_billion", "total_sales_billion"]}, "schema_with_content": "buildings : name (\"Torre New York Life\", \"Residencial Vidalta Torre Altaire 3\", \"Residencial Vidalta Torre Altaire 2\"), height (50, 210, 330), city (\"Monterrey\", \"Mexico City\"), id (12, 1, 2), stories (59, 67, 60), status (\"under construction\", \"proposed\", \"on-hold\") | companies : market_value_billion (\"239.5\", \"224.8\", \"239.5\"), assets_billion (275.9, 2117.6, 268.5), profits_billion (19.0, 18.8, 13.0), headquarters (\"Netherlands\", \"UK\", \"France\"), id (8, 6, 10), name (\"Total\", \"PetroChina\", \"BNP Paribas\"), industry (\"Oil and gas\", \"Oil and gas\", \"Conglomerate\"), sales_billion (69.2, 136.2, 98.7) | companies_sales_billion : max_sales_billion (69.2, 136.2, 98.7), id (8, 6, 10), avg_sales_billion (69.2, 136.2, 98.7), industry (\"Oil and gas\", \"Oil and gas\", \"Conglomerate\"), headquarters (\"Netherlands\", \"UK\", \"France\"), min_sales_billion (69.2, 136.2, 98.7), total_sales_billion (69.2, 136.2, 98.7), name (\"Total\", \"PetroChina\", \"BNP Paribas\"), profits_billion (19.0, 18.8, 13.0), assets_billion (275.9, 2117.6, 268.5), market_value_billion (\"239.5\", \"224.8\", \"239.5\") | office_locations : building_id (6, 10, 3), company_id (10, 4, 3), move_in_year (2019, 2025, 2022)", "schema_without_content": "buildings : name , height , city , id , stories , status  | companies : market_value_billion , assets_billion , profits_billion , headquarters , id , name , industry , sales_billion  | companies_sales_billion : max_sales_billion , id , avg_sales_billion , industry , headquarters , min_sales_billion , total_sales_billion , name , profits_billion , assets_billion , market_value_billion  | office_locations : building_id , company_id , move_in_year "}, {"db_id": "company_office", "query": "select max_sales_billion, min_sales_billion from companies_sales_billion where industry != \"Banking\"", "query_toks": ["SELECT", "max", "(", "Sales_billion", ")", ",", "min", "(", "Sales_billion", ")", "FROM", "Companies", "WHERE", "Industry", "!", "=", "``", "Banking", "''"], "query_toks_no_value": ["select", "max", "(", "sales_billion", ")", ",", "min", "(", "sales_billion", ")", "from", "companies", "where", "industry", "!", "=", "value"], "question": "Find the maximum and minimum sales of the companies that are not in the \"Banking\" industry.", "question_toks": ["Find", "the", "maximum", "and", "minimum", "sales", "of", "the", "companies", "that", "are", "not", "in", "the", "``", "Banking", "''", "industry", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 11, false], null]], [2, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 10, false], null], "\"Banking\"", null]]}, "primary_key": {"companies": "id"}, "orig_query": "select max(sales_billion), min(sales_billion) from companies where industry != \"Banking\"", "split_map": {"companies": ["max_sales_billion", "min_sales_billion", "avg_sales_billion", "total_sales_billion"]}, "schema_with_content": "buildings : id (1, 12, 5), city (\"Monterrey\", \"Mexico City\"), stories (20, 44, 42), height (220, 50, 210), name (\"Torre Mitikah\", \"Punto Chapultepec\", \"Torre New York Life\"), status (\"under construction\", \"proposed\", \"on-hold\") | companies : sales_billion (109.7, 121.3, 103.3), industry (\"Oil and gas\", \"Banking\", \"Banking\"), headquarters (\"UK\", \"USA\", \"China\"), assets_billion (2117.6, 2680.7, 302.5), id (16, 18, 15), market_value_billion (\"239.5\", \"172.9\", \"216.2\"), name (\"AT&T Inc.\", \"BNP Paribas\", \"Wells Fargo\"), profits_billion (15.6, 30.5, 21.2) | companies_sales_billion : id (16, 18, 15), avg_sales_billion (109.7, 121.3, 103.3), max_sales_billion (109.7, 121.3, 103.3), min_sales_billion (109.7, 121.3, 103.3), total_sales_billion (109.7, 121.3, 103.3), name (\"AT&T Inc.\", \"BNP Paribas\", \"Wells Fargo\"), headquarters (\"UK\", \"USA\", \"China\"), industry (\"Oil and gas\", \"Banking\", \"Banking\"), profits_billion (15.6, 30.5, 21.2), assets_billion (2117.6, 2680.7, 302.5), market_value_billion (\"239.5\", \"172.9\", \"216.2\") | office_locations : building_id (4, 5, 9), move_in_year (2026, 2027, 2023), company_id (10, 9, 7)", "schema_without_content": "buildings : id , city , stories , height , name , status  | companies : sales_billion , industry , headquarters , assets_billion , id , market_value_billion , name , profits_billion  | companies_sales_billion : id , avg_sales_billion , max_sales_billion , min_sales_billion , total_sales_billion , name , headquarters , industry , profits_billion , assets_billion , market_value_billion  | office_locations : building_id , move_in_year , company_id "}, {"db_id": "solvency_ii", "query": "select avg_product_price from products_product_price", "query_toks": ["SELECT", "avg", "(", "Product_Price", ")", "FROM", "Products"], "query_toks_no_value": ["select", "avg", "(", "product_price", ")", "from", "products"], "question": "What is the average price for products?", "question_toks": ["What", "is", "the", "average", "price", "for", "products", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "product_id"}, "orig_query": "select avg(product_price) from products", "split_map": {"products": ["max_product_price", "min_product_price", "avg_product_price", "total_product_price"]}, "schema_with_content": "addresses : address_id (12, 8, 2), address_details (\"73409 Linnea Loop Apt. 778\nHaagberg, AK 41204-1496\", \"9113 Wisoky Glen Apt. 601\nLake Immanuel, UT 01388\", \"465 Emely Bypass\nWest Mafalda, CO 23309\") | locations : location_id (7, 1, 4), other_details (\"Price-Lynch\", \"Price-Lynch\", \"Rowe PLC\") | products : product_name (\"Trading Policy B\", \"TV Equipments\", \"Dinning\"), product_id (29, 5, 1), product_price (3298.84, 3541.17, 3228.49), product_type_code (\"Electronics\", \"Food\", \"Books\") | products_product_price : max_product_price (3298.84, 3541.17, 3228.49), product_type_code (\"Electronics\", \"Food\", \"Books\"), total_product_price (3298.84, 3541.17, 3228.49), product_id (29, 5, 1), product_name (\"Trading Policy B\", \"TV Equipments\", \"Dinning\"), avg_product_price (3298.84, 3541.17, 3228.49), min_product_price (3298.84, 3541.17, 3228.49) | parties : party_details (\"Alliance of Liberals and Democrats for Europe\", \"European Alliance for Freedom\", \"European Alliance for Freedom\"), party_id (3, 9, 4) | assets : other_details (\"Transportation Cars\", \"Meeting Rooms\", \"Dinning Tables\"), asset_id (1, 2, 3) | channels : other_details (\"681\", \"177\", \"933\"), channel_id (1, 7, 14) | finances : other_details (\"Mutual\", \"Good\", \"Bad\"), finance_id (11, 1, 11) | events : event_type_code (\"Seminar\", \"Seminar\", \"Conference\"), event_id (6, 15, 8), finance_id (14, 10, 5), channel_id (2, 2, 3), address_id (2, 14, 3), location_id (15, 11, 6) | products_in_events : product_in_event_id (61, 79, 99), product_id (34, 34, 20), event_id (10, 4, 1) | parties_in_events : party_id (9, 4, 9), event_id (4, 8, 12), role_code (\"Organizer\", \"Participant\") | agreements : event_id (8, 10, 9), document_id (15, 15, 9) | assets_in_events : event_id (12, 4, 2), asset_id (1, 2, 3)", "schema_without_content": "addresses : address_id , address_details  | locations : location_id , other_details  | products : product_name , product_id , product_price , product_type_code  | products_product_price : max_product_price , product_type_code , total_product_price , product_id , product_name , avg_product_price , min_product_price  | parties : party_details , party_id  | assets : other_details , asset_id  | channels : other_details , channel_id  | finances : other_details , finance_id  | events : event_type_code , event_id , finance_id , channel_id , address_id , location_id  | products_in_events : product_in_event_id , product_id , event_id  | parties_in_events : party_id , event_id , role_code  | agreements : event_id , document_id  | assets_in_events : event_id , asset_id "}, {"db_id": "entertainment_awards", "query": "select avg_num_of_audience from festival_detail_num_of_audience", "query_toks": ["SELECT", "avg", "(", "Num_of_Audience", ")", "FROM", "festival_detail"], "query_toks_no_value": ["select", "avg", "(", "num_of_audience", ")", "from", "festival_detail"], "question": "What is the average number of audience for festivals?", "question_toks": ["What", "is", "the", "average", "number", "of", "audience", "for", "festivals", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"festival_detail": "festival_id"}, "orig_query": "select avg(num_of_audience) from festival_detail", "split_map": {"festival_detail": ["max_num_of_audience", "min_num_of_audience", "avg_num_of_audience", "total_num_of_audience"]}, "schema_with_content": "festival_detail : num_of_audience (155, 155, 161), festival_name (\"Cherry Awards\", \"Panasonic Awards\", \"Flower Awards\"), location (\"United States\"), year (2008, 2006, 2007), festival_id (1, 3, 2), chair_name (\"Doug Ford\", \"Doug Ford\", \"Raymond Floyd\") | festival_detail_num_of_audience : festival_name (\"Cherry Awards\", \"Panasonic Awards\", \"Flower Awards\"), total_num_of_audience (155, 155, 161), chair_name (\"Doug Ford\", \"Doug Ford\", \"Raymond Floyd\"), max_num_of_audience (155, 155, 161), festival_id (1, 3, 2), min_num_of_audience (155, 155, 161), location (\"United States\"), year (2008, 2006, 2007), avg_num_of_audience (155, 155, 161) | artwork : type (\"Presenter Music/Variety Show\", \"Program Talent Show\", \"Presenter Talent Show\"), artwork_id (7, 2, 3), name (\"Cats\", \"Boys\", \"Martin\") | nomination : result (\"Nominated\", \"Won\"), festival_id (2, 1, 5), artwork_id (2, 3, 1)", "schema_without_content": "festival_detail : num_of_audience , festival_name , location , year , festival_id , chair_name  | festival_detail_num_of_audience : festival_name , total_num_of_audience , chair_name , max_num_of_audience , festival_id , min_num_of_audience , location , year , avg_num_of_audience  | artwork : type , artwork_id , name  | nomination : result , festival_id , artwork_id "}, {"db_id": "entertainment_awards", "query": "select total_num_of_audience from festival_detail_num_of_audience", "query_toks": ["SELECT", "sum", "(", "Num_of_Audience", ")", "FROM", "festival_detail"], "query_toks_no_value": ["select", "sum", "(", "num_of_audience", ")", "from", "festival_detail"], "question": "What are the total number of the audiences who visited any of the festivals?", "question_toks": ["What", "are", "the", "total", "number", "of", "the", "audiences", "who", "visited", "any", "of", "the", "festivals", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"festival_detail": "festival_id"}, "orig_query": "select sum(num_of_audience) from festival_detail", "split_map": {"festival_detail": ["max_num_of_audience", "min_num_of_audience", "avg_num_of_audience", "total_num_of_audience"]}, "schema_with_content": "festival_detail : location (\"United States\"), festival_name (\"Panasonic Awards\", \"Cherry Awards\", \"Cherry Awards\"), festival_id (4, 3, 1), chair_name (\"Doug Ford\", \"Arnold Palmer\", \"Lucy Lu\"), num_of_audience (152, 155, 155), year (2007, 2006, 2008) | festival_detail_num_of_audience : min_num_of_audience (152, 155, 155), location (\"United States\"), chair_name (\"Doug Ford\", \"Arnold Palmer\", \"Lucy Lu\"), avg_num_of_audience (152, 155, 155), year (2007, 2006, 2008), festival_name (\"Panasonic Awards\", \"Cherry Awards\", \"Cherry Awards\"), festival_id (4, 3, 1), total_num_of_audience (152, 155, 155), max_num_of_audience (152, 155, 155) | artwork : name (\"Daniel Mananta\", \"Cats\", \"Martin\"), artwork_id (5, 6, 7), type (\"Presenter Music/Variety Show\", \"Program Music/Variety Show\", \"Program Talent Show\") | nomination : festival_id (2, 1, 5), artwork_id (3, 1, 9), result (\"Nominated\", \"Won\")", "schema_without_content": "festival_detail : location , festival_name , festival_id , chair_name , num_of_audience , year  | festival_detail_num_of_audience : min_num_of_audience , location , chair_name , avg_num_of_audience , year , festival_name , festival_id , total_num_of_audience , max_num_of_audience  | artwork : name , artwork_id , type  | nomination : festival_id , artwork_id , result "}, {"db_id": "college_3", "query": "select max_gradepoint, min_gradepoint from gradeconversion_gradepoint", "query_toks": ["SELECT", "max", "(", "gradepoint", ")", ",", "min", "(", "gradepoint", ")", "FROM", "GRADECONVERSION"], "query_toks_no_value": ["select", "max", "(", "gradepoint", ")", ",", "min", "(", "gradepoint", ")", "from", "gradeconversion"], "question": "Find the max and min grade point for all letter grade.", "question_toks": ["Find", "the", "max", "and", "min", "grade", "point", "for", "all", "letter", "grade", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 39, false], null]], [2, [0, [0, 39, false], null]]]], "union": null, "where": []}, "primary_key": {"gradeconversion": "lettergrade"}, "orig_query": "select max(gradepoint), min(gradepoint) from gradeconversion", "split_map": {"gradeconversion": ["max_gradepoint", "min_gradepoint", "avg_gradepoint", "total_gradepoint"]}, "schema_with_content": "student : lname (\"Lee\", \"Thornton\", \"Simms\"), sex (\"F\", \"M\"), advisor (2192, 8721, 7712), age (22, 26, 16), stuid (1021, 1025, 1026), major (550, 550, 520), city_code (\"NYC\", \"ROC\", \"YYZ\"), fname (\"William\", \"Linda\", \"Derek\") | faculty : phone (2906, 5666, 2906), lname (\"Delcher\", \"Brent\", \"Pang\"), facid (1148, 9199, 4432), sex (\"M\", \"F\"), rank (\"Professor\", \"Professor\", \"Professor\"), fname (\"Howard\", \"Frederick\", \"Mark\"), building (\"NEB\", \"Barton\", \"Krieger\"), room (\"317\", \"119\", \"329\") | department : room (\"347\", \"105\", \"366\"), dname (\"Cognitive Science\", \"Mathematics\", \"ECE\"), building (\"Barton\", \"Barton\", \"Ames\"), dphone (7033, 7055, 7575), division (\"AS\", \"EN\"), dno (540, 540, 50) | member_of : appt_type (\"Primary\", \"Secondary\"), dno (520, 520, 520), facid (9191, 7231, 9826) | course : credits (1, 1, 1), dno (600, 600, 520), cid (\"600.363\", \"550.310\", \"520.605\"), days (\"MT\", \"TTh\", \"TW\"), cname (\"ANALOG AND DIGITAL VLSI SYSTEMS\", \"BUSINESS LAW I\", \"INTRODUCTION TO COMPUTER SCIENCE\"), hours (\"1-4:30\", \"12\", \"10\"), instructor (8722, 7792, 9824) | minor_in : dno (550, 90, 550), stuid (1027, 1006, 1027) | enrolled_in : stuid (1019, 1015, 1035), cid (\"600.103\", \"600.232\", \"600.461\"), grade (\"A+\", \"A-\", \"B+\") | gradeconversion : lettergrade (\"B-\", \"B\", \"F\"), gradepoint (2.7, 2.3, 0.0) | gradeconversion_gradepoint : lettergrade (\"B-\", \"B\", \"F\"), avg_gradepoint (2.7, 2.3, 0.0), max_gradepoint (2.7, 2.3, 0.0), total_gradepoint (2.7, 2.3, 0.0), min_gradepoint (2.7, 2.3, 0.0)", "schema_without_content": "student : lname , sex , advisor , age , stuid , major , city_code , fname  | faculty : phone , lname , facid , sex , rank , fname , building , room  | department : room , dname , building , dphone , division , dno  | member_of : appt_type , dno , facid  | course : credits , dno , cid , days , cname , hours , instructor  | minor_in : dno , stuid  | enrolled_in : stuid , cid , grade  | gradeconversion : lettergrade , gradepoint  | gradeconversion_gradepoint : lettergrade , avg_gradepoint , max_gradepoint , total_gradepoint , min_gradepoint "}, {"db_id": "college_3", "query": "select max_gradepoint, min_gradepoint from gradeconversion_gradepoint", "query_toks": ["SELECT", "max", "(", "gradepoint", ")", ",", "min", "(", "gradepoint", ")", "FROM", "GRADECONVERSION"], "query_toks_no_value": ["select", "max", "(", "gradepoint", ")", ",", "min", "(", "gradepoint", ")", "from", "gradeconversion"], "question": "What are the maximum and minumum grade points?", "question_toks": ["What", "are", "the", "maximum", "and", "minumum", "grade", "points", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 39, false], null]], [2, [0, [0, 39, false], null]]]], "union": null, "where": []}, "primary_key": {"gradeconversion": "lettergrade"}, "orig_query": "select max(gradepoint), min(gradepoint) from gradeconversion", "split_map": {"gradeconversion": ["max_gradepoint", "min_gradepoint", "avg_gradepoint", "total_gradepoint"]}, "schema_with_content": "student : advisor (8918, 9172, 1121), stuid (1025, 1031, 1031), lname (\"Tai\", \"Norris\", \"Thornton\"), city_code (\"LOS\", \"DAL\", \"ROC\"), fname (\"Arthur\", \"Paul\", \"Eric\"), sex (\"F\", \"M\"), age (22, 19, 19), major (540, 100, 540) | faculty : fname (\"Thordur\", \"Edward\", \"Jerry\"), building (\"NEB\", \"Barton\", \"Krieger\"), lname (\"Runolfsson\", \"Angelopoulou\", \"Legendre\"), phone (2932, 2424, 8209), facid (1823, 8114, 2119), room (\"220\", \"324B\", \"319\"), sex (\"M\", \"F\"), rank (\"Instructor\", \"AsstProf\", \"Instructor\") | department : building (\"Mudd\", \"Maryland\", \"Barton\"), division (\"AS\", \"EN\"), dname (\"ECE\", \"Political Science\", \"Biomedical Engineering\"), dphone (8577, 7272, 7117), room (\"105\", \"144\", \"440\"), dno (550, 140, 530) | member_of : dno (50, 600, 600), facid (6330, 7231, 6112), appt_type (\"Primary\", \"Secondary\") | course : days (\"ThF\", \"W\", \"W\"), hours (\"10-12\", \"2:30-4\", \"11:30\"), dno (600, 520, 600), cid (\"550.111\", \"520.213\", \"520.349\"), credits (4, 4, 1), instructor (7723, 8918, 2192), cname (\"STATISTICAL INFERENCE\", \"LANGUAGE AND MIND\", \"PROBABILITY THEORY I\") | minor_in : stuid (1005, 1031, 1008), dno (540, 50, 90) | enrolled_in : cid (\"600.232\", \"050.109\", \"550.471\"), grade (\"B\", \"A+\", \"B+\"), stuid (1033, 1012, 1031) | gradeconversion : lettergrade (\"B-\", \"C+\", \"A+\"), gradepoint (2.0, 0.0, 1.7) | gradeconversion_gradepoint : total_gradepoint (2.0, 0.0, 1.7), avg_gradepoint (2.0, 0.0, 1.7), max_gradepoint (2.0, 0.0, 1.7), min_gradepoint (2.0, 0.0, 1.7), lettergrade (\"B-\", \"C+\", \"A+\")", "schema_without_content": "student : advisor , stuid , lname , city_code , fname , sex , age , major  | faculty : fname , building , lname , phone , facid , room , sex , rank  | department : building , division , dname , dphone , room , dno  | member_of : dno , facid , appt_type  | course : days , hours , dno , cid , credits , instructor , cname  | minor_in : stuid , dno  | enrolled_in : cid , grade , stuid  | gradeconversion : lettergrade , gradepoint  | gradeconversion_gradepoint : total_gradepoint , avg_gradepoint , max_gradepoint , min_gradepoint , lettergrade "}, {"db_id": "department_store", "query": "select product_type_code, avg_product_price from products_product_price group by product_type_code", "query_toks": ["SELECT", "product_type_code", ",", "avg", "(", "product_price", ")", "FROM", "products", "GROUP", "BY", "product_type_code"], "query_toks_no_value": ["select", "product_type_code", ",", "avg", "(", "product_price", ")", "from", "products", "group", "by", "product_type_code"], "question": "What is the average price for each type of product?", "question_toks": ["What", "is", "the", "average", "price", "for", "each", "type", "of", "product", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [5, [0, [0, 21, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "product_id"}, "orig_query": "select product_type_code, avg(product_price) from products group by product_type_code", "split_map": {"products": ["max_product_price", "min_product_price", "avg_product_price", "total_product_price"]}, "schema_with_content": "addresses : address_id (9, 9, 3), address_details (\"11784 Stehr Road\nPort Isaac, NV 61159\", \"36594 O'Keefe Lock\nNew Cali, RI 42319\", \"92594 Marvin Trafficway\nPourosfurt, IA 98649\") | staff : staff_id (12, 3, 7), staff_gender (\"1\", \"0\"), staff_name (\"Vanessa\", \"Malika\", \"Katelynn\") | suppliers : supplier_name (\"Audi\", \"Audi\", \"Lidl\"), supplier_phone (\"1-483-283-4742\", \"(692)009-5928\", \"1-432-960-2402x1734\"), supplier_id (2, 1, 2) | department_store_chain : dept_store_chain_name (\"West\", \"East\", \"South\"), dept_store_chain_id (1, 2, 4) | customers : customer_phone (\"857-844-9339x40140\", \"117.822.3577\", \"857-844-9339x40140\"), customer_id (2, 14, 4), customer_email (\"gbrekke@example.com\", \"nicholas44@example.com\", \"maxime86@example.net\"), customer_code (\"182\", \"240\", \"887\"), customer_address (\"5065 Mraz Fields Apt. 041\nEast Chris, NH 41624\", \"983 Elinore Passage\nDarrionborough, SC 53915-0479\", \"8327 Christiansen Lakes Suite 409\nSchneiderland, IA 93624\"), customer_name (\"Ahmed\", \"Adah\", \"Lexus\"), payment_method_code (\"Credit Card\", \"Direct Debit\") | products : product_type_code (\"Clothes\", \"Hardware\"), product_id (14, 15, 6), product_name (\"red jeans\", \"black topping\", \"red jeans\"), product_price (803.74, 604.86, 734.73) | products_product_price : max_product_price (803.74, 604.86, 734.73), product_id (14, 15, 6), product_type_code (\"Clothes\", \"Hardware\"), product_name (\"red jeans\", \"black topping\", \"red jeans\"), avg_product_price (803.74, 604.86, 734.73), total_product_price (803.74, 604.86, 734.73), min_product_price (803.74, 604.86, 734.73) | supplier_addresses : date_to (\"2018-03-02 19:50:22\", \"2018-03-02 19:50:22\", \"2018-03-16 16:39:58\"), date_from (\"2015-03-16 19:30:29\", \"2014-11-07 19:18:49\", \"2008-11-22 12:01:25\"), address_id (9, 5, 11), supplier_id (2, 3, 4) | customer_addresses : customer_id (2, 8, 1), address_id (13, 7, 7), date_to (\"2018-03-24 14:31:59\", \"2018-03-20 20:52:34\", \"2018-03-05 16:18:34\"), date_from (\"2018-01-15 12:05:39\", \"2017-10-07 23:00:26\", \"2017-10-02 19:56:27\") | customer_orders : order_date (\"2018-01-31 17:49:18\", \"2018-02-26 05:34:18\", \"2018-02-02 23:42:01\"), order_id (2, 8, 8), customer_id (10, 15, 11), order_status_code (\"New\", \"PartFilled\", \"Pending\") | department_stores : dept_store_chain_id (3, 3, 2), dept_store_id (9, 7, 3), store_name (\"store_name\"), store_phone (\"611-037-9309\", \"(626)763-7031\", \"(587)993-3604x3077\"), store_email (\"creola23@example.org\", \"freda.toy@example.org\", \"luisa57@example.org\"), store_address (\"16650 Lysanne River Apt. 281\nNorth Garettton, AL 84756-4375\", \"7081 Shanna Cape\nWest Zacheryshire, NC 17408\", \"34894 Everett Road\nSouth Jeremiehaven, GA 08730\") | departments : dept_store_id (5, 11, 4), department_id (2, 3, 2), department_name (\"managing\", \"advertising\", \"purchasing\") | order_items : product_id (4, 3, 12), order_item_id (3, 13, 15), order_id (15, 9, 5) | product_suppliers : total_amount_purchased (\"20689.78\", \"25318.21\", \"25318.21\"), product_id (14, 7, 3), total_value_purchased (8042.78, 27257.6, 27257.6), date_supplied_to (\"2018-03-24 05:22:36\", \"2018-03-24 05:22:36\", \"2018-03-25 12:03:33\"), supplier_id (3, 3, 1), date_supplied_from (\"2017-12-08 09:14:05\", \"2017-09-19 02:14:02\", \"2017-07-13 15:02:24\") | staff_department_assignments : date_assigned_from (\"2017-06-06 22:22:17\", \"2016-09-20 02:59:15\", \"2017-06-06 22:22:17\"), department_id (4, 3, 4), job_title_code (\"Clerical Staff\", \"Department Manager\", \"Department Manager\"), staff_id (12, 9, 3), date_assigned_to (\"2018-03-24 09:11:14\", \"2018-03-25 02:59:19\", \"2018-03-24 10:45:21\")", "schema_without_content": "addresses : address_id , address_details  | staff : staff_id , staff_gender , staff_name  | suppliers : supplier_name , supplier_phone 009-5928\", \"1-432-960-2402x1734\", supplier_id  | department_store_chain : dept_store_chain_name , dept_store_chain_id  | customers : customer_phone , customer_id , customer_email , customer_code , customer_address , customer_name , payment_method_code  | products : product_type_code , product_id , product_name , product_price  | products_product_price : max_product_price , product_id , product_type_code , product_name , avg_product_price , total_product_price , min_product_price  | supplier_addresses : date_to , date_from , address_id , supplier_id  | customer_addresses : customer_id , address_id , date_to , date_from  | customer_orders : order_date , order_id , customer_id , order_status_code  | department_stores : dept_store_chain_id , dept_store_id , store_name , store_phone 763-7031\", \"993-3604x3077\", store_email , store_address  | departments : dept_store_id , department_id , department_name  | order_items : product_id , order_item_id , order_id  | product_suppliers : total_amount_purchased , product_id , total_value_purchased , date_supplied_to , supplier_id , date_supplied_from  | staff_department_assignments : date_assigned_from , department_id , job_title_code , staff_id , date_assigned_to "}, {"db_id": "department_store", "query": "select product_type_code, avg_product_price from products_product_price group by product_type_code", "query_toks": ["SELECT", "product_type_code", ",", "avg", "(", "product_price", ")", "FROM", "products", "GROUP", "BY", "product_type_code"], "query_toks_no_value": ["select", "product_type_code", ",", "avg", "(", "product_price", ")", "from", "products", "group", "by", "product_type_code"], "question": "Return the average price for each product type.", "question_toks": ["Return", "the", "average", "price", "for", "each", "product", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [5, [0, [0, 21, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "product_id"}, "orig_query": "select product_type_code, avg(product_price) from products group by product_type_code", "split_map": {"products": ["max_product_price", "min_product_price", "avg_product_price", "total_product_price"]}, "schema_with_content": "addresses : address_id (10, 15, 8), address_details (\"7181 Wuckert Port Apt. 571\nLake Zariaburgh, IL 98085\", \"521 Molly Harbors Apt. 567\nReingerland, HI 97099-1005\", \"69482 Renner Ville Suite 653\nLangworthborough, OH 95195\") | staff : staff_gender (\"1\", \"0\"), staff_id (11, 10, 15), staff_name (\"Sabrina\", \"Tom\", \"Tyson\") | suppliers : supplier_name (\"AB Store\", \"Lidl\", \"AB Store\"), supplier_phone (\"(692)009-5928\", \"(692)009-5928\", \"287-071-1153x254\"), supplier_id (1, 3, 1) | department_store_chain : dept_store_chain_id (2, 4, 2), dept_store_chain_name (\"West\", \"South\", \"North\") | customers : customer_id (6, 15, 7), customer_code (\"240\", \"662\", \"182\"), customer_email (\"maxime86@example.net\", \"shawna.cummerata@example.net\", \"nicholas44@example.com\"), payment_method_code (\"Credit Card\", \"Direct Debit\"), customer_phone (\"1-695-364-7586x59256\", \"1-064-498-6609x051\", \"197-417-3557\"), customer_address (\"75099 Tremblay Port Apt. 163\nSouth Norrisland, SC 80546\", \"649 Ocie Lights\nWyatttown, UT 12697\", \"362 Fisher Forge Apt. 900\nNew Mckenna, CA 98525-5674\"), customer_name (\"Abbie\", \"Lukas\", \"Tara\") | products : product_type_code (\"Clothes\", \"Hardware\"), product_id (14, 8, 15), product_name (\"blue topping\", \"red topping\", \"black topping\"), product_price (916.53, 734.73, 695.16) | products_product_price : max_product_price (916.53, 734.73, 695.16), product_name (\"blue topping\", \"red topping\", \"black topping\"), min_product_price (916.53, 734.73, 695.16), total_product_price (916.53, 734.73, 695.16), product_id (14, 8, 15), product_type_code (\"Clothes\", \"Hardware\"), avg_product_price (916.53, 734.73, 695.16) | supplier_addresses : date_from (\"2014-11-07 19:18:49\", \"2014-11-07 19:18:49\", \"2015-03-16 19:30:29\"), supplier_id (2, 3, 4), date_to (\"2018-03-02 19:50:22\", \"2018-03-16 16:39:58\", \"2018-03-16 16:39:58\"), address_id (9, 2, 11) | customer_addresses : date_to (\"2018-03-17 15:44:10\", \"2018-03-09 07:06:56\", \"2018-03-20 20:52:34\"), address_id (4, 8, 6), customer_id (4, 7, 8), date_from (\"2017-04-04 20:00:27\", \"2017-04-04 20:00:27\", \"2017-09-07 04:41:01\") | customer_orders : order_id (10, 5, 12), order_status_code (\"Completed\", \"PartFilled\", \"PartFilled\"), customer_id (13, 10, 15), order_date (\"2018-03-05 23:17:54\", \"2018-02-26 12:39:33\", \"2018-01-31 17:49:18\") | department_stores : store_name (\"store_name\"), store_email (\"casper.adolfo@example.org\", \"alexandro.mcclure@example.net\", \"bryon24@example.org\"), store_phone (\"(626)763-7031\", \"611-037-9309\", \"611-037-9309\"), dept_store_chain_id (1, 3, 3), store_address (\"49708 Marcella Valleys Suite 181\nNinamouth, WA 86667\", \"29297 West Road Suite 210\nWest Dulceside, UT 58085-8998\", \"93472 Mayert Shore Apt. 360\nMitchellton, TN 84209\"), dept_store_id (10, 9, 13) | departments : dept_store_id (5, 11, 4), department_name (\"human resource\", \"purchasing\", \"marketing\"), department_id (4, 2, 3) | order_items : order_id (12, 5, 5), product_id (8, 10, 2), order_item_id (11, 6, 12) | product_suppliers : product_id (11, 3, 8), date_supplied_from (\"2017-09-19 02:14:02\", \"2017-06-25 14:59:40\", \"2017-12-08 09:14:05\"), date_supplied_to (\"2018-03-24 02:29:44\", \"2018-03-24 12:27:13\", \"2018-03-24 12:35:08\"), supplier_id (4, 2, 2), total_value_purchased (36014.6, 99049.01, 99049.01), total_amount_purchased (\"13712.91\", \"20689.78\", \"64444.18\") | staff_department_assignments : job_title_code (\"Department Manager\", \"Sales Person\", \"Sales Person\"), date_assigned_from (\"2016-11-12 14:10:55\", \"2018-02-14 03:15:29\", \"2016-11-12 14:10:55\"), staff_id (9, 3, 6), date_assigned_to (\"2018-03-25 03:15:31\", \"2018-03-24 10:45:21\", \"2018-03-24 20:13:13\"), department_id (2, 4, 5)", "schema_without_content": "addresses : address_id , address_details  | staff : staff_gender , staff_id , staff_name  | suppliers : supplier_name , supplier_phone 009-5928\", \"009-5928\", \"287-071-1153x254\", supplier_id  | department_store_chain : dept_store_chain_id , dept_store_chain_name  | customers : customer_id , customer_code , customer_email , payment_method_code , customer_phone , customer_address , customer_name  | products : product_type_code , product_id , product_name , product_price  | products_product_price : max_product_price , product_name , min_product_price , total_product_price , product_id , product_type_code , avg_product_price  | supplier_addresses : date_from , supplier_id , date_to , address_id  | customer_addresses : date_to , address_id , customer_id , date_from  | customer_orders : order_id , order_status_code , customer_id , order_date  | department_stores : store_name , store_email , store_phone 763-7031\", \"611-037-9309\", \"611-037-9309\", dept_store_chain_id , store_address , dept_store_id  | departments : dept_store_id , department_name , department_id  | order_items : order_id , product_id , order_item_id  | product_suppliers : product_id , date_supplied_from , date_supplied_to , supplier_id , total_value_purchased , total_amount_purchased  | staff_department_assignments : job_title_code , date_assigned_from , staff_id , date_assigned_to , department_id "}, {"db_id": "department_store", "query": "select product_type_code, max_product_price, min_product_price from products_product_price group by product_type_code", "query_toks": ["SELECT", "product_type_code", ",", "max", "(", "product_price", ")", ",", "min", "(", "product_price", ")", "FROM", "products", "GROUP", "BY", "product_type_code"], "query_toks_no_value": ["select", "product_type_code", ",", "max", "(", "product_price", ")", ",", "min", "(", "product_price", ")", "from", "products", "group", "by", "product_type_code"], "question": "For each product type, return the maximum and minimum price.", "question_toks": ["For", "each", "product", "type", ",", "return", "the", "maximum", "and", "minimum", "price", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [1, [0, [0, 21, false], null]], [2, [0, [0, 21, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "product_id"}, "orig_query": "select product_type_code, max(product_price), min(product_price) from products group by product_type_code", "split_map": {"products": ["max_product_price", "min_product_price", "avg_product_price", "total_product_price"]}, "schema_with_content": "addresses : address_details (\"4062 Mante Place\nWest Lindsey, DE 76199-8015\", \"69482 Renner Ville Suite 653\nLangworthborough, OH 95195\", \"145 Alice Corners\nWillmsport, NV 36680\"), address_id (6, 12, 1) | staff : staff_name (\"Tom\", \"Vanessa\", \"Melody\"), staff_id (8, 14, 6), staff_gender (\"1\", \"0\") | suppliers : supplier_id (1, 3, 4), supplier_name (\"Audi\", \"Lidl\", \"Audi\"), supplier_phone (\"1-483-283-4742\", \"1-432-960-2402x1734\", \"1-432-960-2402x1734\") | department_store_chain : dept_store_chain_id (4, 2, 3), dept_store_chain_name (\"East\", \"North\", \"East\") | customers : customer_email (\"celine.bogan@example.com\", \"celine.bogan@example.com\", \"qstokes@example.org\"), customer_phone (\"1-695-364-7586x59256\", \"1-695-364-7586x59256\", \"254-072-4068x33935\"), payment_method_code (\"Credit Card\", \"Direct Debit\"), customer_address (\"84445 Elinor Glens\nPort Zita, SD 39410\", \"649 Ocie Lights\nWyatttown, UT 12697\", \"5049 Hand Land\nCoymouth, IL 97300-7731\"), customer_code (\"182\", \"665\", \"844\"), customer_id (1, 8, 4), customer_name (\"Chauncey\", \"Ahmed\", \"Yasmeen\") | products : product_name (\"mouse\", \"drive\", \"yellow jeans\"), product_type_code (\"Clothes\", \"Hardware\"), product_id (3, 15, 12), product_price (534.52, 813.76, 629.89) | products_product_price : max_product_price (534.52, 813.76, 629.89), min_product_price (534.52, 813.76, 629.89), total_product_price (534.52, 813.76, 629.89), product_type_code (\"Clothes\", \"Hardware\"), product_name (\"mouse\", \"drive\", \"yellow jeans\"), product_id (3, 15, 12), avg_product_price (534.52, 813.76, 629.89) | supplier_addresses : address_id (2, 2, 2), supplier_id (2, 3, 4), date_to (\"2018-03-16 16:39:58\", \"2018-03-02 19:50:22\", \"2018-03-24 00:14:45\"), date_from (\"2008-11-22 12:01:25\", \"2016-09-22 16:41:31\", \"2008-11-22 12:01:25\") | customer_addresses : date_to (\"2018-03-17 15:44:10\", \"2018-03-13 21:49:51\", \"2018-03-09 07:06:56\"), address_id (6, 14, 10), date_from (\"2017-11-01 04:21:41\", \"2018-01-07 13:31:08\", \"2017-11-28 23:36:20\"), customer_id (4, 2, 8) | customer_orders : customer_id (13, 8, 12), order_date (\"2018-03-05 23:17:54\", \"2018-01-31 17:49:18\", \"2018-03-06 16:35:51\"), order_id (11, 7, 3), order_status_code (\"Pending\", \"Completed\", \"Completed\") | department_stores : dept_store_id (1, 7, 5), store_name (\"store_name\"), store_address (\"01290 Jeremie Parkway Suite 753\nNorth Arielle, MS 51249\", \"994 Travis Plains\nNorth Wadeton, WV 27575-3951\", \"5288 Kaia Street\nDevonton, NJ 61782-9006\"), dept_store_chain_id (2, 1, 1), store_phone (\"1-859-843-1957\", \"(723)503-7086x356\", \"1-859-843-1957\"), store_email (\"ihamill@example.org\", \"luisa57@example.org\", \"creola23@example.org\") | departments : dept_store_id (5, 11, 4), department_id (1, 2, 3), department_name (\"purchasing\", \"human resource\", \"purchasing\") | order_items : order_item_id (3, 7, 3), product_id (11, 3, 11), order_id (7, 6, 15) | product_suppliers : total_amount_purchased (\"64444.18\", \"25085.57\", \"20447.99\"), product_id (8, 6, 6), date_supplied_from (\"2017-12-20 07:07:31\", \"2017-07-13 15:02:24\", \"2017-09-19 02:14:02\"), total_value_purchased (29836.26, 36014.6, 7273.74), supplier_id (4, 4, 1), date_supplied_to (\"2018-03-24 19:29:18\", \"2018-03-25 12:03:33\", \"2018-03-24 23:25:58\") | staff_department_assignments : date_assigned_from (\"2017-12-26 06:34:20\", \"2017-12-18 19:12:15\", \"2018-02-14 03:15:29\"), date_assigned_to (\"2018-03-23 20:25:24\", \"2018-03-24 13:02:22\", \"2018-03-24 13:02:22\"), department_id (4, 3, 3), staff_id (9, 9, 12), job_title_code (\"Department Manager\", \"Administration\", \"Sales Person\")", "schema_without_content": "addresses : address_details , address_id  | staff : staff_name , staff_id , staff_gender  | suppliers : supplier_id , supplier_name , supplier_phone  | department_store_chain : dept_store_chain_id , dept_store_chain_name  | customers : customer_email , customer_phone , payment_method_code , customer_address , customer_code , customer_id , customer_name  | products : product_name , product_type_code , product_id , product_price  | products_product_price : max_product_price , min_product_price , total_product_price , product_type_code , product_name , product_id , avg_product_price  | supplier_addresses : address_id , supplier_id , date_to , date_from  | customer_addresses : date_to , address_id , date_from , customer_id  | customer_orders : customer_id , order_date , order_id , order_status_code  | department_stores : dept_store_id , store_name , store_address , dept_store_chain_id , store_phone 503-7086x356\", \"1-859-843-1957\", store_email  | departments : dept_store_id , department_id , department_name  | order_items : order_item_id , product_id , order_id  | product_suppliers : total_amount_purchased , product_id , date_supplied_from , total_value_purchased , supplier_id , date_supplied_to  | staff_department_assignments : date_assigned_from , date_assigned_to , department_id , staff_id , job_title_code "}, {"db_id": "department_store", "query": "select product_type_code, max_product_price, min_product_price from products_product_price group by product_type_code", "query_toks": ["SELECT", "product_type_code", ",", "max", "(", "product_price", ")", ",", "min", "(", "product_price", ")", "FROM", "products", "GROUP", "BY", "product_type_code"], "query_toks_no_value": ["select", "product_type_code", ",", "max", "(", "product_price", ")", ",", "min", "(", "product_price", ")", "from", "products", "group", "by", "product_type_code"], "question": "What are the maximum and minimum product prices for each product type?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "product", "prices", "for", "each", "product", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [1, [0, [0, 21, false], null]], [2, [0, [0, 21, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "product_id"}, "orig_query": "select product_type_code, max(product_price), min(product_price) from products group by product_type_code", "split_map": {"products": ["max_product_price", "min_product_price", "avg_product_price", "total_product_price"]}, "schema_with_content": "addresses : address_id (1, 9, 1), address_details (\"69482 Renner Ville Suite 653\nLangworthborough, OH 95195\", \"69482 Renner Ville Suite 653\nLangworthborough, OH 95195\", \"28481 Crist Circle\nEast Burdettestad, IA 21232\") | staff : staff_id (9, 8, 12), staff_name (\"Maximus\", \"Sabrina\", \"Tyson\"), staff_gender (\"1\", \"0\") | suppliers : supplier_phone (\"287-071-1153x254\", \"1-483-283-4742\", \"1-483-283-4742\"), supplier_id (1, 2, 4), supplier_name (\"Audi\", \"AB Store\", \"Lidl\") | department_store_chain : dept_store_chain_id (4, 2, 2), dept_store_chain_name (\"West\", \"West\", \"West\") | customers : customer_address (\"338 Floy Mountains Suite 589\nYesseniaville, TN 60847\", \"983 Elinore Passage\nDarrionborough, SC 53915-0479\", \"5065 Mraz Fields Apt. 041\nEast Chris, NH 41624\"), customer_name (\"Kenya\", \"Cordell\", \"Adah\"), customer_phone (\"197-417-3557\", \"857-844-9339x40140\", \"1-064-498-6609x051\"), payment_method_code (\"Credit Card\", \"Direct Debit\"), customer_code (\"848\", \"589\", \"401\"), customer_email (\"schultz.arnoldo@example.net\", \"nicholas44@example.com\", \"margarett.vonrueden@example.com\"), customer_id (6, 14, 6) | products : product_type_code (\"Clothes\", \"Hardware\"), product_name (\"black topping\", \"mic\", \"keyboard\"), product_price (612.46, 813.76, 612.46), product_id (14, 2, 11) | products_product_price : total_product_price (612.46, 813.76, 612.46), product_id (14, 2, 11), min_product_price (612.46, 813.76, 612.46), product_name (\"black topping\", \"mic\", \"keyboard\"), product_type_code (\"Clothes\", \"Hardware\"), avg_product_price (612.46, 813.76, 612.46), max_product_price (612.46, 813.76, 612.46) | supplier_addresses : supplier_id (2, 3, 4), address_id (5, 5, 9), date_from (\"2016-09-22 16:41:31\", \"2015-03-16 19:30:29\", \"2016-09-22 16:41:31\"), date_to (\"2018-03-16 16:39:58\", \"2018-03-14 20:06:37\", \"2018-03-24 00:14:45\") | customer_addresses : date_from (\"2017-12-11 05:00:22\", \"2018-02-22 04:46:48\", \"2018-02-22 04:46:48\"), customer_id (10, 6, 7), address_id (14, 7, 7), date_to (\"2018-03-13 21:49:51\", \"2018-02-26 00:52:25\", \"2018-03-12 05:32:28\") | customer_orders : order_id (6, 7, 6), order_date (\"2018-03-18 15:12:39\", \"2018-02-12 19:34:12\", \"2018-03-06 16:35:51\"), order_status_code (\"Cancelled\", \"Cancelled\", \"New\"), customer_id (6, 8, 7) | department_stores : store_address (\"00578 Lisa Gateway Suite 476\nStrosinville, VA 03998-3292\", \"7081 Shanna Cape\nWest Zacheryshire, NC 17408\", \"29297 West Road Suite 210\nWest Dulceside, UT 58085-8998\"), store_name (\"store_name\"), dept_store_id (15, 13, 3), dept_store_chain_id (1, 4, 1), store_email (\"creola23@example.org\", \"larissa10@example.org\", \"kelly30@example.com\"), store_phone (\"877-917-5029\", \"1-764-126-7567x0795\", \"(587)993-3604x3077\") | departments : department_name (\"marketing\", \"purchasing\", \"purchasing\"), department_id (4, 1, 2), dept_store_id (5, 11, 4) | order_items : order_item_id (1, 9, 2), product_id (14, 2, 2), order_id (9, 5, 6) | product_suppliers : total_value_purchased (97371.12, 48100.23, 27257.6), product_id (14, 5, 4), date_supplied_to (\"2018-03-24 09:17:15\", \"2018-03-24 09:17:15\", \"2018-03-24 02:38:31\"), total_amount_purchased (\"35149.74\", \"25318.21\", \"20447.99\"), supplier_id (3, 3, 2), date_supplied_from (\"2017-07-02 00:35:12\", \"2017-09-19 02:14:02\", \"2017-12-01 19:46:53\") | staff_department_assignments : job_title_code (\"Sales Person\", \"Clerical Staff\", \"Department Manager\"), staff_id (8, 7, 7), date_assigned_to (\"2018-03-23 20:25:24\", \"2018-03-23 20:25:24\", \"2018-03-24 13:02:22\"), department_id (2, 3, 1), date_assigned_from (\"2017-05-14 12:30:33\", \"2017-06-11 22:55:20\", \"2016-10-19 08:11:39\")", "schema_without_content": "addresses : address_id , address_details  | staff : staff_id , staff_name , staff_gender  | suppliers : supplier_phone , supplier_id , supplier_name  | department_store_chain : dept_store_chain_id , dept_store_chain_name  | customers : customer_address , customer_name , customer_phone , payment_method_code , customer_code , customer_email , customer_id  | products : product_type_code , product_name , product_price , product_id  | products_product_price : total_product_price , product_id , min_product_price , product_name , product_type_code , avg_product_price , max_product_price  | supplier_addresses : supplier_id , address_id , date_from , date_to  | customer_addresses : date_from , customer_id , address_id , date_to  | customer_orders : order_id , order_date , order_status_code , customer_id  | department_stores : store_address , store_name , dept_store_id , dept_store_chain_id , store_email , store_phone 993-3604x3077\" | departments : department_name , department_id , dept_store_id  | order_items : order_item_id , product_id , order_id  | product_suppliers : total_value_purchased , product_id , date_supplied_to , total_amount_purchased , supplier_id , date_supplied_from  | staff_department_assignments : job_title_code , staff_id , date_assigned_to , department_id , date_assigned_from "}, {"db_id": "department_store", "query": "select avg_total_amount_purchased, (total_value_purchased)from product_suppliers_total_amount_purchased where supplier_id = (select supplier_id from product_suppliers group by supplier_id order by count(*)desc limit 1)", "query_toks": ["SELECT", "avg", "(", "total_amount_purchased", ")", ",", "avg", "(", "total_value_purchased", ")", "FROM", "Product_Suppliers", "WHERE", "supplier_id", "=", "(", "SELECT", "supplier_id", "FROM", "Product_Suppliers", "GROUP", "BY", "supplier_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "avg", "(", "total_amount_purchased", ")", ",", "avg", "(", "total_value_purchased", ")", "from", "product_suppliers", "where", "supplier_id", "=", "(", "select", "supplier_id", "from", "product_suppliers", "group", "by", "supplier_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "What are the average amount purchased and value purchased for the supplier who supplies the most products.", "question_toks": ["What", "are", "the", "average", "amount", "purchased", "and", "value", "purchased", "for", "the", "supplier", "who", "supplies", "the", "most", "products", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 50, false], null]], [5, [0, [0, 51, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 47, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 12]]}, "groupBy": [[0, 47, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 47, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"product_suppliers": "product_id"}, "orig_query": "select avg(total_amount_purchased), avg(total_value_purchased) from product_suppliers where supplier_id = (select supplier_id from product_suppliers group by supplier_id order by count(*) desc limit 1)", "split_map": {"product_suppliers": ["max_total_amount_purchased", "min_total_amount_purchased", "avg_total_amount_purchased", "total_total_amount_purchased"]}, "schema_with_content": "addresses : address_id (5, 10, 4), address_details (\"521 Molly Harbors Apt. 567\nReingerland, HI 97099-1005\", \"521 Molly Harbors Apt. 567\nReingerland, HI 97099-1005\", \"7181 Wuckert Port Apt. 571\nLake Zariaburgh, IL 98085\") | staff : staff_name (\"Adrienne\", \"Vito\", \"Malika\"), staff_id (9, 4, 12), staff_gender (\"1\", \"0\") | suppliers : supplier_phone (\"287-071-1153x254\", \"287-071-1153x254\", \"(692)009-5928\"), supplier_name (\"Lidl\", \"AB Store\", \"Audi\"), supplier_id (3, 1, 1) | department_store_chain : dept_store_chain_name (\"North\", \"East\", \"West\"), dept_store_chain_id (4, 4, 3) | customers : customer_phone (\"07594320656\", \"254-072-4068x33935\", \"877-150-8674x63517\"), customer_name (\"Cristobal\", \"Lexus\", \"Adah\"), customer_code (\"808\", \"611\", \"182\"), payment_method_code (\"Credit Card\", \"Direct Debit\"), customer_email (\"schultz.arnoldo@example.net\", \"stiedemann.sigrid@example.com\", \"maxime86@example.net\"), customer_address (\"841 Goyette Unions\nSouth Dionbury, NC 62021\", \"9581 Will Flat Suite 272\nEast Cathryn, WY 30751-4404\", \"841 Goyette Unions\nSouth Dionbury, NC 62021\"), customer_id (4, 1, 7) | products : product_id (1, 15, 5), product_type_code (\"Clothes\", \"Hardware\"), product_name (\"keyboard\", \"speaker\", \"mouse\"), product_price (918.41, 971.44, 534.52) | supplier_addresses : supplier_id (2, 3, 4), date_from (\"2014-11-07 19:18:49\", \"2016-09-22 16:41:31\", \"2016-09-22 16:41:31\"), address_id (11, 2, 9), date_to (\"2018-03-14 20:06:37\", \"2018-03-14 20:06:37\", \"2018-03-02 19:50:22\") | customer_addresses : customer_id (6, 4, 1), date_to (\"2018-03-13 21:49:51\", \"2018-03-20 20:52:34\", \"2018-03-13 21:49:51\"), date_from (\"2017-04-04 20:00:27\", \"2017-04-04 20:00:27\", \"2018-01-07 13:31:08\"), address_id (2, 6, 2) | customer_orders : order_id (8, 14, 11), order_date (\"2018-03-05 23:17:54\", \"2018-02-10 15:44:48\", \"2018-03-05 23:17:54\"), customer_id (15, 6, 11), order_status_code (\"Pending\", \"Cancelled\", \"Completed\") | department_stores : store_phone (\"1-859-843-1957\", \"319.331.3397\", \"877-917-5029\"), store_address (\"49708 Marcella Valleys Suite 181\nNinamouth, WA 86667\", \"88112 Parisian Lights\nSporermouth, MN 25962\", \"7081 Shanna Cape\nWest Zacheryshire, NC 17408\"), store_email (\"larissa10@example.org\", \"mohr.elwin@example.net\", \"alexandro.mcclure@example.net\"), dept_store_chain_id (1, 1, 1), dept_store_id (4, 8, 12), store_name (\"store_name\") | departments : department_name (\"managing\", \"advertising\", \"managing\"), department_id (3, 1, 2), dept_store_id (5, 11, 4) | order_items : order_id (7, 15, 15), order_item_id (2, 6, 13), product_id (14, 5, 3) | product_suppliers : total_value_purchased (7273.74, 7273.74, 27257.6), total_amount_purchased (\"31862.59\", \"31862.59\", \"79316.31\"), product_id (3, 6, 14), date_supplied_from (\"2017-12-20 07:07:31\", \"2017-07-28 19:23:39\", \"2017-07-13 15:02:24\"), date_supplied_to (\"2018-03-24 23:01:03\", \"2018-03-24 09:17:15\", \"2018-03-25 07:30:49\"), supplier_id (4, 3, 4) | product_suppliers_total_amount_purchased : min_total_amount_purchased (\"31862.59\", \"31862.59\", \"79316.31\"), supplier_id (4, 3, 4), date_supplied_from (\"2017-12-20 07:07:31\", \"2017-07-28 19:23:39\", \"2017-07-13 15:02:24\"), date_supplied_to (\"2018-03-24 23:01:03\", \"2018-03-24 09:17:15\", \"2018-03-25 07:30:49\"), total_total_amount_purchased (\"31862.59\", \"31862.59\", \"79316.31\"), max_total_amount_purchased (\"31862.59\", \"31862.59\", \"79316.31\"), product_id (3, 6, 14), avg_total_amount_purchased (\"31862.59\", \"31862.59\", \"79316.31\"), total_value_purchased (7273.74, 7273.74, 27257.6) | staff_department_assignments : department_id (2, 1, 5), job_title_code (\"Sales Person\", \"Administration\", \"Department Manager\"), staff_id (12, 7, 3), date_assigned_to (\"2018-03-24 07:04:28\", \"2018-03-24 07:04:28\", \"2018-03-23 20:25:24\"), date_assigned_from (\"2016-09-15 11:00:41\", \"2017-12-26 06:34:20\", \"2016-06-24 17:31:24\")", "schema_without_content": "addresses : address_id , address_details  | staff : staff_name , staff_id , staff_gender  | suppliers : supplier_phone 009-5928\", supplier_name , supplier_id  | department_store_chain : dept_store_chain_name , dept_store_chain_id  | customers : customer_phone , customer_name , customer_code , payment_method_code , customer_email , customer_address , customer_id  | products : product_id , product_type_code , product_name , product_price  | supplier_addresses : supplier_id , date_from , address_id , date_to  | customer_addresses : customer_id , date_to , date_from , address_id  | customer_orders : order_id , order_date , customer_id , order_status_code  | department_stores : store_phone , store_address , store_email , dept_store_chain_id , dept_store_id , store_name  | departments : department_name , department_id , dept_store_id  | order_items : order_id , order_item_id , product_id  | product_suppliers : total_value_purchased , total_amount_purchased , product_id , date_supplied_from , date_supplied_to , supplier_id  | product_suppliers_total_amount_purchased : min_total_amount_purchased , supplier_id , date_supplied_from , date_supplied_to , total_total_amount_purchased , max_total_amount_purchased , product_id , avg_total_amount_purchased , total_value_purchased  | staff_department_assignments : department_id , job_title_code , staff_id , date_assigned_to , date_assigned_from "}, {"db_id": "department_store", "query": "select (total_amount_purchased), avg_total_value_purchased from product_suppliers_total_value_purchased where supplier_id = (select supplier_id from product_suppliers group by supplier_id order by count(*)desc limit 1)", "query_toks": ["SELECT", "avg", "(", "total_amount_purchased", ")", ",", "avg", "(", "total_value_purchased", ")", "FROM", "Product_Suppliers", "WHERE", "supplier_id", "=", "(", "SELECT", "supplier_id", "FROM", "Product_Suppliers", "GROUP", "BY", "supplier_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "avg", "(", "total_amount_purchased", ")", ",", "avg", "(", "total_value_purchased", ")", "from", "product_suppliers", "where", "supplier_id", "=", "(", "select", "supplier_id", "from", "product_suppliers", "group", "by", "supplier_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "What are the average amount purchased and value purchased for the supplier who supplies the most products.", "question_toks": ["What", "are", "the", "average", "amount", "purchased", "and", "value", "purchased", "for", "the", "supplier", "who", "supplies", "the", "most", "products", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 50, false], null]], [5, [0, [0, 51, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 47, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 12]]}, "groupBy": [[0, 47, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 47, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"product_suppliers": "product_id"}, "orig_query": "select avg(total_amount_purchased), avg(total_value_purchased) from product_suppliers where supplier_id = (select supplier_id from product_suppliers group by supplier_id order by count(*) desc limit 1)", "split_map": {"product_suppliers": ["max_total_value_purchased", "min_total_value_purchased", "avg_total_value_purchased", "total_total_value_purchased"]}, "schema_with_content": "addresses : address_id (7, 1, 2), address_details (\"0292 Mitchel Pike\nPort Abefurt, IA 84402-4249\", \"145 Alice Corners\nWillmsport, NV 36680\", \"195 Mara Rue\nJenkinsmouth, OK 22345\") | staff : staff_gender (\"1\", \"0\"), staff_name (\"Tom\", \"Adrienne\", \"Archibald\"), staff_id (4, 9, 1) | suppliers : supplier_phone (\"1-483-283-4742\", \"1-483-283-4742\", \"1-483-283-4742\"), supplier_name (\"Audi\", \"Tesco\", \"Audi\"), supplier_id (2, 1, 3) | department_store_chain : dept_store_chain_name (\"North\", \"East\", \"East\"), dept_store_chain_id (1, 4, 4) | customers : customer_email (\"gbrekke@example.com\", \"cconroy@example.net\", \"gbrekke@example.com\"), customer_code (\"172\", \"887\", \"980\"), customer_address (\"649 Ocie Lights\nWyatttown, UT 12697\", \"362 Fisher Forge Apt. 900\nNew Mckenna, CA 98525-5674\", \"8327 Christiansen Lakes Suite 409\nSchneiderland, IA 93624\"), customer_id (12, 5, 2), payment_method_code (\"Credit Card\", \"Direct Debit\"), customer_phone (\"1-472-036-0434\", \"07594320656\", \"1-064-498-6609x051\"), customer_name (\"Ahmed\", \"Lexus\", \"Lukas\") | products : product_type_code (\"Clothes\", \"Hardware\"), product_price (408.82, 629.89, 408.82), product_name (\"drive\", \"red jeans\", \"yellow jeans\"), product_id (1, 13, 15) | supplier_addresses : supplier_id (2, 3, 4), date_to (\"2018-03-02 19:50:22\", \"2018-03-14 20:06:37\", \"2018-03-02 19:50:22\"), address_id (5, 9, 2), date_from (\"2014-11-07 19:18:49\", \"2014-11-07 19:18:49\", \"2015-03-16 19:30:29\") | customer_addresses : date_from (\"2017-10-02 19:56:27\", \"2017-12-14 07:40:08\", \"2017-11-28 23:36:20\"), customer_id (6, 6, 10), address_id (7, 10, 13), date_to (\"2018-02-27 20:08:33\", \"2018-02-26 00:52:25\", \"2018-03-20 20:52:34\") | customer_orders : order_status_code (\"PartFilled\", \"New\", \"Pending\"), customer_id (11, 13, 6), order_id (1, 11, 7), order_date (\"2018-01-31 17:49:18\", \"2018-03-06 16:35:51\", \"2018-02-16 19:42:39\") | department_stores : store_email (\"larissa10@example.org\", \"bryon24@example.org\", \"jerod.reynolds@example.net\"), store_phone (\"01399327266\", \"1-764-126-7567x0795\", \"1-109-872-9142x77078\"), dept_store_id (11, 3, 13), store_name (\"store_name\"), dept_store_chain_id (1, 1, 4), store_address (\"29297 West Road Suite 210\nWest Dulceside, UT 58085-8998\", \"082 Purdy Expressway\nO'Connellshire, IL 31732\", \"41924 Alfredo Cliff\nNew Eviestad, NY 17573\") | departments : department_id (2, 2, 1), dept_store_id (5, 11, 4), department_name (\"purchasing\", \"purchasing\", \"advertising\") | order_items : product_id (10, 14, 8), order_id (5, 12, 9), order_item_id (6, 7, 12) | product_suppliers : date_supplied_from (\"2017-08-09 21:26:38\", \"2017-06-25 14:59:40\", \"2017-09-19 02:14:02\"), product_id (5, 6, 11), total_amount_purchased (\"22332.08\", \"15752.45\", \"22332.08\"), supplier_id (3, 3, 3), total_value_purchased (7273.74, 48100.23, 7273.74), date_supplied_to (\"2018-03-24 02:38:31\", \"2018-03-24 12:35:08\", \"2018-03-25 07:30:49\") | product_suppliers_total_value_purchased : product_id (5, 6, 11), date_supplied_to (\"2018-03-24 02:38:31\", \"2018-03-24 12:35:08\", \"2018-03-25 07:30:49\"), avg_total_value_purchased (7273.74, 48100.23, 7273.74), supplier_id (3, 3, 3), total_total_value_purchased (7273.74, 48100.23, 7273.74), total_amount_purchased (\"22332.08\", \"15752.45\", \"22332.08\"), max_total_value_purchased (7273.74, 48100.23, 7273.74), min_total_value_purchased (7273.74, 48100.23, 7273.74), date_supplied_from (\"2017-08-09 21:26:38\", \"2017-06-25 14:59:40\", \"2017-09-19 02:14:02\") | staff_department_assignments : department_id (4, 1, 5), job_title_code (\"Sales Person\", \"Administration\", \"Clerical Staff\"), staff_id (6, 15, 12), date_assigned_from (\"2016-06-24 17:31:24\", \"2018-02-14 03:15:29\", \"2016-09-15 11:00:41\"), date_assigned_to (\"2018-03-24 19:57:56\", \"2018-03-25 03:15:31\", \"2018-03-25 02:29:08\")", "schema_without_content": "addresses : address_id , address_details  | staff : staff_gender , staff_name , staff_id  | suppliers : supplier_phone , supplier_name , supplier_id  | department_store_chain : dept_store_chain_name , dept_store_chain_id  | customers : customer_email , customer_code , customer_address , customer_id , payment_method_code , customer_phone , customer_name  | products : product_type_code , product_price , product_name , product_id  | supplier_addresses : supplier_id , date_to , address_id , date_from  | customer_addresses : date_from , customer_id , address_id , date_to  | customer_orders : order_status_code , customer_id , order_id , order_date  | department_stores : store_email , store_phone , dept_store_id , store_name , dept_store_chain_id , store_address  | departments : department_id , dept_store_id , department_name  | order_items : product_id , order_id , order_item_id  | product_suppliers : date_supplied_from , product_id , total_amount_purchased , supplier_id , total_value_purchased , date_supplied_to  | product_suppliers_total_value_purchased : product_id , date_supplied_to , avg_total_value_purchased , supplier_id , total_total_value_purchased , total_amount_purchased , max_total_value_purchased , min_total_value_purchased , date_supplied_from  | staff_department_assignments : department_id , job_title_code , staff_id , date_assigned_from , date_assigned_to "}, {"db_id": "department_store", "query": "select avg_total_amount_purchased, (total_value_purchased)from product_suppliers_total_amount_purchased where supplier_id = (select supplier_id from product_suppliers group by supplier_id order by count(*)desc limit 1)", "query_toks": ["SELECT", "avg", "(", "total_amount_purchased", ")", ",", "avg", "(", "total_value_purchased", ")", "FROM", "Product_Suppliers", "WHERE", "supplier_id", "=", "(", "SELECT", "supplier_id", "FROM", "Product_Suppliers", "GROUP", "BY", "supplier_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "avg", "(", "total_amount_purchased", ")", ",", "avg", "(", "total_value_purchased", ")", "from", "product_suppliers", "where", "supplier_id", "=", "(", "select", "supplier_id", "from", "product_suppliers", "group", "by", "supplier_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "Return the average total amount purchased and total value purchased for the supplier who supplies the greatest number of products.", "question_toks": ["Return", "the", "average", "total", "amount", "purchased", "and", "total", "value", "purchased", "for", "the", "supplier", "who", "supplies", "the", "greatest", "number", "of", "products", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 50, false], null]], [5, [0, [0, 51, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 47, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 12]]}, "groupBy": [[0, 47, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 47, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"product_suppliers": "product_id"}, "orig_query": "select avg(total_amount_purchased), avg(total_value_purchased) from product_suppliers where supplier_id = (select supplier_id from product_suppliers group by supplier_id order by count(*) desc limit 1)", "split_map": {"product_suppliers": ["max_total_amount_purchased", "min_total_amount_purchased", "avg_total_amount_purchased", "total_total_amount_purchased"]}, "schema_with_content": "addresses : address_details (\"28481 Crist Circle\nEast Burdettestad, IA 21232\", \"521 Molly Harbors Apt. 567\nReingerland, HI 97099-1005\", \"36594 O'Keefe Lock\nNew Cali, RI 42319\"), address_id (13, 10, 15) | staff : staff_id (12, 12, 15), staff_gender (\"1\", \"0\"), staff_name (\"Tom\", \"Vito\", \"Adrienne\") | suppliers : supplier_name (\"Tesco\", \"Lidl\", \"Tesco\"), supplier_phone (\"287-071-1153x254\", \"(692)009-5928\", \"1-483-283-4742\"), supplier_id (1, 4, 1) | department_store_chain : dept_store_chain_name (\"South\", \"South\", \"North\"), dept_store_chain_id (1, 1, 2) | customers : customer_address (\"5049 Hand Land\nCoymouth, IL 97300-7731\", \"362 Fisher Forge Apt. 900\nNew Mckenna, CA 98525-5674\", \"9581 Will Flat Suite 272\nEast Cathryn, WY 30751-4404\"), customer_id (5, 14, 7), customer_name (\"Tara\", \"Kenya\", \"Ahmed\"), payment_method_code (\"Credit Card\", \"Direct Debit\"), customer_email (\"cconroy@example.net\", \"joelle.monahan@example.com\", \"celine.bogan@example.com\"), customer_code (\"980\", \"916\", \"848\"), customer_phone (\"117.822.3577\", \"117.822.3577\", \"877-150-8674x63517\") | products : product_price (629.89, 612.46, 944.96), product_name (\"drive\", \"monitor\", \"drive\"), product_type_code (\"Clothes\", \"Hardware\"), product_id (11, 3, 7) | supplier_addresses : supplier_id (2, 3, 4), address_id (11, 11, 9), date_to (\"2018-03-24 00:14:45\", \"2018-03-24 00:14:45\", \"2018-03-24 00:14:45\"), date_from (\"2014-11-07 19:18:49\", \"2015-03-16 19:30:29\", \"2016-09-22 16:41:31\") | customer_addresses : date_from (\"2017-10-07 23:00:26\", \"2018-01-27 06:27:34\", \"2017-12-11 05:00:22\"), customer_id (10, 8, 2), address_id (14, 4, 8), date_to (\"2018-03-13 21:49:51\", \"2018-02-26 00:52:25\", \"2018-03-17 15:44:10\") | customer_orders : order_date (\"2018-02-26 05:34:18\", \"2018-02-15 02:25:32\", \"2018-03-18 15:12:39\"), order_status_code (\"PartFilled\", \"Cancelled\", \"PartFilled\"), order_id (10, 9, 14), customer_id (12, 1, 15) | department_stores : dept_store_id (14, 12, 14), store_address (\"29297 West Road Suite 210\nWest Dulceside, UT 58085-8998\", \"01290 Jeremie Parkway Suite 753\nNorth Arielle, MS 51249\", \"01290 Jeremie Parkway Suite 753\nNorth Arielle, MS 51249\"), dept_store_chain_id (2, 3, 4), store_email (\"vonrueden.vern@example.org\", \"bryon24@example.org\", \"mohr.elwin@example.net\"), store_name (\"store_name\"), store_phone (\"319.331.3397\", \"319.331.3397\", \"07126036440\") | departments : department_id (3, 2, 5), dept_store_id (5, 11, 4), department_name (\"marketing\", \"marketing\", \"human resource\") | order_items : product_id (7, 12, 14), order_id (14, 6, 7), order_item_id (14, 10, 6) | product_suppliers : supplier_id (3, 2, 1), total_amount_purchased (\"64444.18\", \"89366.05\", \"31862.59\"), date_supplied_from (\"2017-08-07 12:08:00\", \"2017-06-25 14:59:40\", \"2017-06-09 01:30:40\"), total_value_purchased (48100.23, 97371.12, 48100.23), date_supplied_to (\"2018-03-24 23:25:58\", \"2018-03-24 02:38:31\", \"2018-03-24 09:17:15\"), product_id (5, 8, 7) | product_suppliers_total_amount_purchased : max_total_amount_purchased (\"64444.18\", \"89366.05\", \"31862.59\"), date_supplied_from (\"2017-08-07 12:08:00\", \"2017-06-25 14:59:40\", \"2017-06-09 01:30:40\"), product_id (5, 8, 7), supplier_id (3, 2, 1), date_supplied_to (\"2018-03-24 23:25:58\", \"2018-03-24 02:38:31\", \"2018-03-24 09:17:15\"), total_total_amount_purchased (\"64444.18\", \"89366.05\", \"31862.59\"), avg_total_amount_purchased (\"64444.18\", \"89366.05\", \"31862.59\"), min_total_amount_purchased (\"64444.18\", \"89366.05\", \"31862.59\"), total_value_purchased (48100.23, 97371.12, 48100.23) | staff_department_assignments : staff_id (8, 8, 10), date_assigned_to (\"2018-03-25 03:15:31\", \"2018-03-24 02:36:57\", \"2018-03-24 13:02:22\"), date_assigned_from (\"2017-12-26 06:34:20\", \"2016-09-15 11:00:41\", \"2017-11-14 04:38:44\"), job_title_code (\"Administration\", \"Administration\", \"Department Manager\"), department_id (2, 3, 3)", "schema_without_content": "addresses : address_details , address_id  | staff : staff_id , staff_gender , staff_name  | suppliers : supplier_name , supplier_phone 009-5928\", \"1-483-283-4742\", supplier_id  | department_store_chain : dept_store_chain_name , dept_store_chain_id  | customers : customer_address , customer_id , customer_name , payment_method_code , customer_email , customer_code , customer_phone  | products : product_price , product_name , product_type_code , product_id  | supplier_addresses : supplier_id , address_id , date_to , date_from  | customer_addresses : date_from , customer_id , address_id , date_to  | customer_orders : order_date , order_status_code , order_id , customer_id  | department_stores : dept_store_id , store_address , dept_store_chain_id , store_email , store_name , store_phone  | departments : department_id , dept_store_id , department_name  | order_items : product_id , order_id , order_item_id  | product_suppliers : supplier_id , total_amount_purchased , date_supplied_from , total_value_purchased , date_supplied_to , product_id  | product_suppliers_total_amount_purchased : max_total_amount_purchased , date_supplied_from , product_id , supplier_id , date_supplied_to , total_total_amount_purchased , avg_total_amount_purchased , min_total_amount_purchased , total_value_purchased  | staff_department_assignments : staff_id , date_assigned_to , date_assigned_from , job_title_code , department_id "}, {"db_id": "department_store", "query": "select (total_amount_purchased), avg_total_value_purchased from product_suppliers_total_value_purchased where supplier_id = (select supplier_id from product_suppliers group by supplier_id order by count(*)desc limit 1)", "query_toks": ["SELECT", "avg", "(", "total_amount_purchased", ")", ",", "avg", "(", "total_value_purchased", ")", "FROM", "Product_Suppliers", "WHERE", "supplier_id", "=", "(", "SELECT", "supplier_id", "FROM", "Product_Suppliers", "GROUP", "BY", "supplier_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "avg", "(", "total_amount_purchased", ")", ",", "avg", "(", "total_value_purchased", ")", "from", "product_suppliers", "where", "supplier_id", "=", "(", "select", "supplier_id", "from", "product_suppliers", "group", "by", "supplier_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "Return the average total amount purchased and total value purchased for the supplier who supplies the greatest number of products.", "question_toks": ["Return", "the", "average", "total", "amount", "purchased", "and", "total", "value", "purchased", "for", "the", "supplier", "who", "supplies", "the", "greatest", "number", "of", "products", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 50, false], null]], [5, [0, [0, 51, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 47, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 12]]}, "groupBy": [[0, 47, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 47, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"product_suppliers": "product_id"}, "orig_query": "select avg(total_amount_purchased), avg(total_value_purchased) from product_suppliers where supplier_id = (select supplier_id from product_suppliers group by supplier_id order by count(*) desc limit 1)", "split_map": {"product_suppliers": ["max_total_value_purchased", "min_total_value_purchased", "avg_total_value_purchased", "total_total_value_purchased"]}, "schema_with_content": "addresses : address_id (14, 10, 6), address_details (\"145 Alice Corners\nWillmsport, NV 36680\", \"92594 Marvin Trafficway\nPourosfurt, IA 98649\", \"0258 Kessler Mountains Suite 688\nMooreside, ME 41586-5022\") | staff : staff_id (15, 11, 15), staff_name (\"Zakary\", \"Adrienne\", \"Archibald\"), staff_gender (\"1\", \"0\") | suppliers : supplier_phone (\"287-071-1153x254\", \"287-071-1153x254\", \"(692)009-5928\"), supplier_name (\"Tesco\", \"Audi\", \"Lidl\"), supplier_id (4, 2, 2) | department_store_chain : dept_store_chain_id (1, 2, 3), dept_store_chain_name (\"South\", \"North\", \"South\") | customers : customer_id (8, 13, 6), customer_name (\"Adah\", \"Tara\", \"Yasmeen\"), customer_address (\"362 Fisher Forge Apt. 900\nNew Mckenna, CA 98525-5674\", \"75099 Tremblay Port Apt. 163\nSouth Norrisland, SC 80546\", \"649 Ocie Lights\nWyatttown, UT 12697\"), customer_phone (\"877-150-8674x63517\", \"857-844-9339x40140\", \"1-472-036-0434\"), customer_email (\"maxime86@example.net\", \"stiedemann.sigrid@example.com\", \"maxime86@example.net\"), payment_method_code (\"Credit Card\", \"Direct Debit\"), customer_code (\"808\", \"182\", \"182\") | products : product_name (\"drive\", \"red jeans\", \"blue jeans\"), product_price (604.86, 971.44, 695.16), product_type_code (\"Clothes\", \"Hardware\"), product_id (6, 12, 5) | supplier_addresses : supplier_id (2, 3, 4), address_id (11, 2, 5), date_from (\"2016-09-22 16:41:31\", \"2016-09-22 16:41:31\", \"2014-11-07 19:18:49\"), date_to (\"2018-03-02 19:50:22\", \"2018-03-14 20:06:37\", \"2018-03-16 16:39:58\") | customer_addresses : address_id (14, 7, 9), customer_id (2, 8, 7), date_from (\"2017-10-02 19:56:27\", \"2017-08-27 13:38:37\", \"2018-01-07 13:31:08\"), date_to (\"2018-03-20 20:52:34\", \"2018-03-22 17:22:34\", \"2018-03-20 20:52:34\") | customer_orders : order_date (\"2018-02-12 19:34:12\", \"2018-03-22 10:49:25\", \"2018-03-06 16:35:51\"), customer_id (6, 8, 4), order_status_code (\"Cancelled\", \"Completed\", \"New\"), order_id (9, 4, 4) | department_stores : store_name (\"store_name\"), store_phone (\"877-917-5029\", \"01399327266\", \"(587)993-3604x3077\"), dept_store_id (5, 2, 1), store_email (\"larissa10@example.org\", \"mohr.elwin@example.net\", \"larissa10@example.org\"), dept_store_chain_id (4, 3, 3), store_address (\"5288 Kaia Street\nDevonton, NJ 61782-9006\", \"082 Purdy Expressway\nO'Connellshire, IL 31732\", \"082 Purdy Expressway\nO'Connellshire, IL 31732\") | departments : department_name (\"purchasing\", \"managing\", \"marketing\"), dept_store_id (5, 11, 4), department_id (3, 2, 3) | order_items : product_id (13, 3, 13), order_item_id (2, 3, 6), order_id (9, 14, 13) | product_suppliers : total_value_purchased (8042.78, 8042.78, 76992.42), total_amount_purchased (\"20689.78\", \"89366.05\", \"79316.31\"), date_supplied_from (\"2017-12-08 09:14:05\", \"2017-12-20 07:07:31\", \"2017-07-02 00:35:12\"), product_id (7, 15, 11), date_supplied_to (\"2018-03-24 19:29:18\", \"2018-03-25 12:03:33\", \"2018-03-24 09:17:15\"), supplier_id (4, 3, 3) | product_suppliers_total_value_purchased : supplier_id (4, 3, 3), avg_total_value_purchased (8042.78, 8042.78, 76992.42), max_total_value_purchased (8042.78, 8042.78, 76992.42), min_total_value_purchased (8042.78, 8042.78, 76992.42), total_total_value_purchased (8042.78, 8042.78, 76992.42), product_id (7, 15, 11), total_amount_purchased (\"20689.78\", \"89366.05\", \"79316.31\"), date_supplied_to (\"2018-03-24 19:29:18\", \"2018-03-25 12:03:33\", \"2018-03-24 09:17:15\"), date_supplied_from (\"2017-12-08 09:14:05\", \"2017-12-20 07:07:31\", \"2017-07-02 00:35:12\") | staff_department_assignments : department_id (2, 5, 1), job_title_code (\"Administration\", \"Sales Person\", \"Department Manager\"), staff_id (3, 6, 10), date_assigned_from (\"2017-12-26 06:34:20\", \"2017-11-14 04:38:44\", \"2016-10-19 08:11:39\"), date_assigned_to (\"2018-03-23 20:25:24\", \"2018-03-24 09:11:14\", \"2018-03-23 20:25:24\")", "schema_without_content": "addresses : address_id , address_details  | staff : staff_id , staff_name , staff_gender  | suppliers : supplier_phone 009-5928\", supplier_name , supplier_id  | department_store_chain : dept_store_chain_id , dept_store_chain_name  | customers : customer_id , customer_name , customer_address , customer_phone , customer_email , payment_method_code , customer_code  | products : product_name , product_price , product_type_code , product_id  | supplier_addresses : supplier_id , address_id , date_from , date_to  | customer_addresses : address_id , customer_id , date_from , date_to  | customer_orders : order_date , customer_id , order_status_code , order_id  | department_stores : store_name , store_phone 993-3604x3077\", dept_store_id , store_email , dept_store_chain_id , store_address  | departments : department_name , dept_store_id , department_id  | order_items : product_id , order_item_id , order_id  | product_suppliers : total_value_purchased , total_amount_purchased , date_supplied_from , product_id , date_supplied_to , supplier_id  | product_suppliers_total_value_purchased : supplier_id , avg_total_value_purchased , max_total_value_purchased , min_total_value_purchased , total_total_value_purchased , product_id , total_amount_purchased , date_supplied_to , date_supplied_from  | staff_department_assignments : department_id , job_title_code , staff_id , date_assigned_from , date_assigned_to "}, {"db_id": "department_store", "query": "select max_customer_code, min_customer_code from customers_customer_code", "query_toks": ["SELECT", "max", "(", "customer_code", ")", ",", "min", "(", "customer_code", ")", "FROM", "Customers"], "query_toks_no_value": ["select", "max", "(", "customer_code", ")", ",", "min", "(", "customer_code", ")", "from", "customers"], "question": "What is the largest and smallest customer codes?", "question_toks": ["What", "is", "the", "largest", "and", "smallest", "customer", "codes", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]]]], "union": null, "where": []}, "primary_key": {"customers": "customer_id"}, "orig_query": "select max(customer_code), min(customer_code) from customers", "split_map": {"customers": ["max_customer_code", "min_customer_code", "avg_customer_code", "total_customer_code"]}, "schema_with_content": "addresses : address_id (2, 7, 13), address_details (\"99666 Julie Junction\nMarvinburgh, OH 16085-1623\", \"521 Molly Harbors Apt. 567\nReingerland, HI 97099-1005\", \"145 Alice Corners\nWillmsport, NV 36680\") | staff : staff_id (13, 5, 6), staff_name (\"Yolanda\", \"Adrienne\", \"Adrienne\"), staff_gender (\"1\", \"0\") | suppliers : supplier_name (\"AB Store\", \"Audi\", \"Tesco\"), supplier_phone (\"1-483-283-4742\", \"1-483-283-4742\", \"(692)009-5928\"), supplier_id (1, 2, 3) | department_store_chain : dept_store_chain_name (\"West\", \"East\", \"North\"), dept_store_chain_id (4, 2, 4) | customers : payment_method_code (\"Credit Card\", \"Direct Debit\"), customer_id (4, 2, 14), customer_code (\"172\", \"589\", \"808\"), customer_name (\"Lukas\", \"Lukas\", \"Lyric\"), customer_address (\"5065 Mraz Fields Apt. 041\nEast Chris, NH 41624\", \"983 Elinore Passage\nDarrionborough, SC 53915-0479\", \"841 Goyette Unions\nSouth Dionbury, NC 62021\"), customer_email (\"margarett.vonrueden@example.com\", \"nicholas44@example.com\", \"shawna.cummerata@example.net\"), customer_phone (\"117.822.3577\", \"+08(3)8056580281\", \"117.822.3577\") | customers_customer_code : total_customer_code (\"172\", \"589\", \"808\"), customer_id (4, 2, 14), avg_customer_code (\"172\", \"589\", \"808\"), min_customer_code (\"172\", \"589\", \"808\"), payment_method_code (\"Credit Card\", \"Direct Debit\"), max_customer_code (\"172\", \"589\", \"808\"), customer_name (\"Lukas\", \"Lukas\", \"Lyric\"), customer_address (\"5065 Mraz Fields Apt. 041\nEast Chris, NH 41624\", \"983 Elinore Passage\nDarrionborough, SC 53915-0479\", \"841 Goyette Unions\nSouth Dionbury, NC 62021\"), customer_phone (\"117.822.3577\", \"+08(3)8056580281\", \"117.822.3577\"), customer_email (\"margarett.vonrueden@example.com\", \"nicholas44@example.com\", \"shawna.cummerata@example.net\") | products : product_id (4, 5, 14), product_name (\"red jeans\", \"keyboard\", \"monitor\"), product_type_code (\"Clothes\", \"Hardware\"), product_price (612.46, 813.76, 534.52) | supplier_addresses : supplier_id (2, 3, 4), date_to (\"2018-03-24 00:14:45\", \"2018-03-16 16:39:58\", \"2018-03-24 00:14:45\"), date_from (\"2008-11-22 12:01:25\", \"2008-11-22 12:01:25\", \"2008-11-22 12:01:25\"), address_id (11, 2, 5) | customer_addresses : date_from (\"2018-02-22 04:46:48\", \"2017-10-07 23:00:26\", \"2017-08-06 20:57:36\"), address_id (9, 13, 13), date_to (\"2018-02-26 00:52:25\", \"2018-03-05 21:19:53\", \"2018-03-12 05:32:28\"), customer_id (7, 12, 10) | customer_orders : order_date (\"2018-02-15 02:25:32\", \"2018-03-16 22:42:46\", \"2018-02-16 19:42:39\"), order_status_code (\"Pending\", \"Completed\", \"Cancelled\"), order_id (13, 14, 5), customer_id (15, 7, 12) | department_stores : store_phone (\"07126036440\", \"611-037-9309\", \"1-109-872-9142x77078\"), store_email (\"freda.toy@example.org\", \"selmer.stiedemann@example.org\", \"mohr.elwin@example.net\"), dept_store_chain_id (4, 2, 2), store_name (\"store_name\"), dept_store_id (13, 13, 13), store_address (\"34894 Everett Road\nSouth Jeremiehaven, GA 08730\", \"41924 Alfredo Cliff\nNew Eviestad, NY 17573\", \"082 Purdy Expressway\nO'Connellshire, IL 31732\") | departments : department_name (\"advertising\", \"purchasing\", \"advertising\"), dept_store_id (5, 11, 4), department_id (1, 5, 3) | order_items : order_id (7, 14, 14), order_item_id (6, 3, 4), product_id (2, 13, 11) | product_suppliers : product_id (11, 11, 6), date_supplied_to (\"2018-03-23 19:21:12\", \"2018-03-25 09:15:30\", \"2018-03-25 07:30:49\"), total_value_purchased (99049.01, 98086.8, 67216.31), date_supplied_from (\"2017-12-08 09:14:05\", \"2017-11-17 08:23:16\", \"2017-06-19 00:49:05\"), total_amount_purchased (\"83873.58\", \"83873.58\", \"85922.86\"), supplier_id (1, 1, 1) | staff_department_assignments : date_assigned_from (\"2017-03-31 23:07:54\", \"2016-05-17 07:02:37\", \"2017-05-14 12:30:33\"), job_title_code (\"Administration\", \"Clerical Staff\", \"Clerical Staff\"), date_assigned_to (\"2018-03-25 02:29:08\", \"2018-03-25 02:59:19\", \"2018-03-25 09:53:37\"), department_id (4, 1, 3), staff_id (8, 7, 2)", "schema_without_content": "addresses : address_id , address_details  | staff : staff_id , staff_name , staff_gender  | suppliers : supplier_name , supplier_phone 009-5928\", supplier_id  | department_store_chain : dept_store_chain_name , dept_store_chain_id  | customers : payment_method_code , customer_id , customer_code , customer_name , customer_address , customer_email , customer_phone 8056580281\", \"117.822.3577\" | customers_customer_code : total_customer_code , customer_id , avg_customer_code , min_customer_code , payment_method_code , max_customer_code , customer_name , customer_address , customer_phone 8056580281\", \"117.822.3577\", customer_email  | products : product_id , product_name , product_type_code , product_price  | supplier_addresses : supplier_id , date_to , date_from , address_id  | customer_addresses : date_from , address_id , date_to , customer_id  | customer_orders : order_date , order_status_code , order_id , customer_id  | department_stores : store_phone , store_email , dept_store_chain_id , store_name , dept_store_id , store_address  | departments : department_name , dept_store_id , department_id  | order_items : order_id , order_item_id , product_id  | product_suppliers : product_id , date_supplied_to , total_value_purchased , date_supplied_from , total_amount_purchased , supplier_id  | staff_department_assignments : date_assigned_from , job_title_code , date_assigned_to , department_id , staff_id "}, {"db_id": "department_store", "query": "select max_customer_code, min_customer_code from customers_customer_code", "query_toks": ["SELECT", "max", "(", "customer_code", ")", ",", "min", "(", "customer_code", ")", "FROM", "Customers"], "query_toks_no_value": ["select", "max", "(", "customer_code", ")", ",", "min", "(", "customer_code", ")", "from", "customers"], "question": "Return the maximum and minimum customer codes.", "question_toks": ["Return", "the", "maximum", "and", "minimum", "customer", "codes", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]]]], "union": null, "where": []}, "primary_key": {"customers": "customer_id"}, "orig_query": "select max(customer_code), min(customer_code) from customers", "split_map": {"customers": ["max_customer_code", "min_customer_code", "avg_customer_code", "total_customer_code"]}, "schema_with_content": "addresses : address_details (\"99666 Julie Junction\nMarvinburgh, OH 16085-1623\", \"92594 Marvin Trafficway\nPourosfurt, IA 98649\", \"4062 Mante Place\nWest Lindsey, DE 76199-8015\"), address_id (1, 8, 14) | staff : staff_gender (\"1\", \"0\"), staff_id (15, 2, 10), staff_name (\"Yolanda\", \"Melody\", \"Katelynn\") | suppliers : supplier_id (1, 1, 3), supplier_phone (\"(692)009-5928\", \"1-483-283-4742\", \"(692)009-5928\"), supplier_name (\"AB Store\", \"Audi\", \"Tesco\") | department_store_chain : dept_store_chain_id (3, 3, 1), dept_store_chain_name (\"North\", \"West\", \"East\") | customers : customer_name (\"Tara\", \"Kenya\", \"Lexus\"), customer_code (\"916\", \"844\", \"182\"), customer_phone (\"1-064-498-6609x051\", \"117.822.3577\", \"254-072-4068x33935\"), customer_address (\"75099 Tremblay Port Apt. 163\nSouth Norrisland, SC 80546\", \"3558 Witting Meadow Apt. 483\nLake Moriahbury, OH 91556-2122\", \"5049 Hand Land\nCoymouth, IL 97300-7731\"), payment_method_code (\"Credit Card\", \"Direct Debit\"), customer_email (\"kathlyn24@example.org\", \"celine.bogan@example.com\", \"schultz.arnoldo@example.net\"), customer_id (3, 12, 1) | customers_customer_code : customer_id (3, 12, 1), total_customer_code (\"916\", \"844\", \"182\"), max_customer_code (\"916\", \"844\", \"182\"), avg_customer_code (\"916\", \"844\", \"182\"), payment_method_code (\"Credit Card\", \"Direct Debit\"), min_customer_code (\"916\", \"844\", \"182\"), customer_name (\"Tara\", \"Kenya\", \"Lexus\"), customer_address (\"75099 Tremblay Port Apt. 163\nSouth Norrisland, SC 80546\", \"3558 Witting Meadow Apt. 483\nLake Moriahbury, OH 91556-2122\", \"5049 Hand Land\nCoymouth, IL 97300-7731\"), customer_phone (\"1-064-498-6609x051\", \"117.822.3577\", \"254-072-4068x33935\"), customer_email (\"kathlyn24@example.org\", \"celine.bogan@example.com\", \"schultz.arnoldo@example.net\") | products : product_name (\"mouse\", \"red topping\", \"yellow jeans\"), product_id (3, 9, 12), product_price (695.16, 803.74, 944.96), product_type_code (\"Clothes\", \"Hardware\") | supplier_addresses : address_id (2, 9, 11), date_to (\"2018-03-14 20:06:37\", \"2018-03-02 19:50:22\", \"2018-03-16 16:39:58\"), date_from (\"2014-11-07 19:18:49\", \"2008-11-22 12:01:25\", \"2014-11-07 19:18:49\"), supplier_id (2, 3, 4) | customer_addresses : customer_id (12, 6, 4), address_id (10, 2, 4), date_from (\"2017-07-31 20:18:52\", \"2017-11-01 04:21:41\", \"2017-08-06 20:57:36\"), date_to (\"2018-03-09 07:06:56\", \"2018-02-26 00:52:25\", \"2018-02-27 20:08:33\") | customer_orders : order_id (10, 11, 9), order_date (\"2018-03-07 16:55:17\", \"2018-03-16 22:42:46\", \"2018-03-05 23:17:54\"), customer_id (12, 11, 13), order_status_code (\"Completed\", \"Completed\", \"Completed\") | department_stores : store_phone (\"(723)503-7086x356\", \"1-859-843-1957\", \"(587)993-3604x3077\"), dept_store_chain_id (4, 1, 2), dept_store_id (2, 9, 6), store_email (\"katlynn62@example.com\", \"bmaggio@example.com\", \"larissa10@example.org\"), store_address (\"93472 Mayert Shore Apt. 360\nMitchellton, TN 84209\", \"93472 Mayert Shore Apt. 360\nMitchellton, TN 84209\", \"994 Travis Plains\nNorth Wadeton, WV 27575-3951\"), store_name (\"store_name\") | departments : dept_store_id (5, 11, 4), department_id (2, 3, 5), department_name (\"advertising\", \"purchasing\", \"marketing\") | order_items : order_item_id (3, 15, 8), product_id (2, 4, 8), order_id (15, 14, 15) | product_suppliers : date_supplied_from (\"2017-09-19 02:14:02\", \"2017-09-19 02:14:02\", \"2017-08-22 00:58:42\"), total_amount_purchased (\"31862.59\", \"22332.08\", \"15752.45\"), date_supplied_to (\"2018-03-23 19:21:12\", \"2018-03-24 05:22:36\", \"2018-03-24 23:25:58\"), product_id (14, 3, 11), supplier_id (1, 3, 4), total_value_purchased (97371.12, 48100.23, 61800.95) | staff_department_assignments : job_title_code (\"Clerical Staff\", \"Administration\", \"Sales Person\"), staff_id (12, 8, 3), date_assigned_to (\"2018-03-25 03:15:31\", \"2018-03-25 02:29:08\", \"2018-03-24 10:45:21\"), date_assigned_from (\"2016-06-24 17:31:24\", \"2016-09-15 11:00:41\", \"2017-12-26 06:34:20\"), department_id (4, 1, 5)", "schema_without_content": "addresses : address_details , address_id  | staff : staff_gender , staff_id , staff_name  | suppliers : supplier_id , supplier_phone 009-5928\", \"1-483-283-4742\", \"009-5928\", supplier_name  | department_store_chain : dept_store_chain_id , dept_store_chain_name  | customers : customer_name , customer_code , customer_phone , customer_address , payment_method_code , customer_email , customer_id  | customers_customer_code : customer_id , total_customer_code , max_customer_code , avg_customer_code , payment_method_code , min_customer_code , customer_name , customer_address , customer_phone , customer_email  | products : product_name , product_id , product_price , product_type_code  | supplier_addresses : address_id , date_to , date_from , supplier_id  | customer_addresses : customer_id , address_id , date_from , date_to  | customer_orders : order_id , order_date , customer_id , order_status_code  | department_stores : store_phone 503-7086x356\", \"1-859-843-1957\", \"993-3604x3077\", dept_store_chain_id , dept_store_id , store_email , store_address , store_name  | departments : dept_store_id , department_id , department_name  | order_items : order_item_id , product_id , order_id  | product_suppliers : date_supplied_from , total_amount_purchased , date_supplied_to , product_id , supplier_id , total_value_purchased  | staff_department_assignments : job_title_code , staff_id , date_assigned_to , date_assigned_from , department_id "}, {"db_id": "department_store", "query": "select max_product_price, min_product_price, product_type_code from products_product_price group by product_type_code order by product_type_code", "query_toks": ["SELECT", "max", "(", "product_price", ")", ",", "min", "(", "product_price", ")", ",", "product_type_code", "FROM", "products", "GROUP", "BY", "product_type_code", "ORDER", "BY", "product_type_code"], "query_toks_no_value": ["select", "max", "(", "product_price", ")", ",", "min", "(", "product_price", ")", ",", "product_type_code", "from", "products", "group", "by", "product_type_code", "order", "by", "product_type_code"], "question": "What are the highest and lowest prices of products, grouped by and alphabetically ordered by product type?", "question_toks": ["What", "are", "the", "highest", "and", "lowest", "prices", "of", "products", ",", "grouped", "by", "and", "alphabetically", "ordered", "by", "product", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 19, false], null]]], "select": [false, [[1, [0, [0, 21, false], null]], [2, [0, [0, 21, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "product_id"}, "orig_query": "select max(product_price), min(product_price), product_type_code from products group by product_type_code order by product_type_code", "split_map": {"products": ["max_product_price", "min_product_price", "avg_product_price", "total_product_price"]}, "schema_with_content": "addresses : address_id (10, 15, 2), address_details (\"92594 Marvin Trafficway\nPourosfurt, IA 98649\", \"7181 Wuckert Port Apt. 571\nLake Zariaburgh, IL 98085\", \"69482 Renner Ville Suite 653\nLangworthborough, OH 95195\") | staff : staff_name (\"Vanessa\", \"Zakary\", \"Maximus\"), staff_gender (\"1\", \"0\"), staff_id (5, 2, 1) | suppliers : supplier_id (3, 1, 1), supplier_name (\"Tesco\", \"AB Store\", \"Audi\"), supplier_phone (\"1-483-283-4742\", \"1-432-960-2402x1734\", \"1-483-283-4742\") | department_store_chain : dept_store_chain_id (3, 3, 2), dept_store_chain_name (\"West\", \"East\", \"East\") | customers : customer_address (\"84445 Elinor Glens\nPort Zita, SD 39410\", \"7162 Rodolfo Knoll Apt. 502\nLake Annalise, TN 35791-8871\", \"5049 Hand Land\nCoymouth, IL 97300-7731\"), customer_id (7, 8, 11), customer_email (\"maxime86@example.net\", \"qstokes@example.org\", \"shawna.cummerata@example.net\"), customer_code (\"808\", \"844\", \"662\"), customer_name (\"Cordell\", \"Abbie\", \"Tara\"), customer_phone (\"+41(8)1897032009\", \"08023680831\", \"197-417-3557\"), payment_method_code (\"Credit Card\", \"Direct Debit\") | products : product_price (803.74, 687.23, 971.44), product_name (\"mic\", \"drive\", \"yellow topping\"), product_type_code (\"Clothes\", \"Hardware\"), product_id (5, 2, 11) | products_product_price : min_product_price (803.74, 687.23, 971.44), product_id (5, 2, 11), total_product_price (803.74, 687.23, 971.44), avg_product_price (803.74, 687.23, 971.44), product_type_code (\"Clothes\", \"Hardware\"), max_product_price (803.74, 687.23, 971.44), product_name (\"mic\", \"drive\", \"yellow topping\") | supplier_addresses : date_from (\"2014-11-07 19:18:49\", \"2014-11-07 19:18:49\", \"2015-03-16 19:30:29\"), supplier_id (2, 3, 4), address_id (2, 5, 9), date_to (\"2018-03-16 16:39:58\", \"2018-03-14 20:06:37\", \"2018-03-14 20:06:37\") | customer_addresses : date_from (\"2018-01-27 06:27:34\", \"2018-01-27 06:27:34\", \"2018-01-15 12:05:39\"), address_id (7, 9, 10), customer_id (6, 1, 6), date_to (\"2018-02-27 20:08:33\", \"2018-03-05 16:18:34\", \"2018-03-22 17:22:34\") | customer_orders : order_id (14, 13, 4), order_status_code (\"Pending\", \"Pending\", \"Completed\"), customer_id (13, 12, 7), order_date (\"2018-03-07 16:55:17\", \"2018-03-16 22:42:46\", \"2018-03-06 16:35:51\") | department_stores : store_name (\"store_name\"), dept_store_id (11, 12, 8), store_phone (\"1-216-312-0375\", \"(948)944-5099x2027\", \"(626)763-7031\"), store_address (\"7081 Shanna Cape\nWest Zacheryshire, NC 17408\", \"34894 Everett Road\nSouth Jeremiehaven, GA 08730\", \"82470 Hansen Squares Suite 190\nWehnermouth, NC 76791\"), store_email (\"katlynn62@example.com\", \"freda.toy@example.org\", \"selmer.stiedemann@example.org\"), dept_store_chain_id (2, 1, 3) | departments : department_name (\"advertising\", \"human resource\", \"purchasing\"), dept_store_id (5, 11, 4), department_id (1, 3, 5) | order_items : order_item_id (14, 6, 10), order_id (8, 8, 13), product_id (14, 13, 12) | product_suppliers : total_value_purchased (67216.31, 61800.95, 7273.74), total_amount_purchased (\"89366.05\", \"31862.59\", \"32881.38\"), date_supplied_to (\"2018-03-24 19:29:18\", \"2018-03-24 12:35:08\", \"2018-03-24 02:29:44\"), supplier_id (1, 2, 3), product_id (7, 6, 11), date_supplied_from (\"2017-07-02 00:35:12\", \"2017-12-08 09:14:05\", \"2017-11-17 08:23:16\") | staff_department_assignments : date_assigned_to (\"2018-03-24 13:02:22\", \"2018-03-25 13:32:57\", \"2018-03-24 02:36:57\"), department_id (3, 2, 5), staff_id (2, 5, 5), job_title_code (\"Clerical Staff\", \"Department Manager\", \"Department Manager\"), date_assigned_from (\"2017-05-10 02:32:17\", \"2017-05-14 12:30:33\", \"2017-06-11 22:55:20\")", "schema_without_content": "addresses : address_id , address_details  | staff : staff_name , staff_gender , staff_id  | suppliers : supplier_id , supplier_name , supplier_phone  | department_store_chain : dept_store_chain_id , dept_store_chain_name  | customers : customer_address , customer_id , customer_email , customer_code , customer_name , customer_phone 1897032009\", \"08023680831\", \"197-417-3557\", payment_method_code  | products : product_price , product_name , product_type_code , product_id  | products_product_price : min_product_price , product_id , total_product_price , avg_product_price , product_type_code , max_product_price , product_name  | supplier_addresses : date_from , supplier_id , address_id , date_to  | customer_addresses : date_from , address_id , customer_id , date_to  | customer_orders : order_id , order_status_code , customer_id , order_date  | department_stores : store_name , dept_store_id , store_phone 944-5099x2027\", \"763-7031\", store_address , store_email , dept_store_chain_id  | departments : department_name , dept_store_id , department_id  | order_items : order_item_id , order_id , product_id  | product_suppliers : total_value_purchased , total_amount_purchased , date_supplied_to , supplier_id , product_id , date_supplied_from  | staff_department_assignments : date_assigned_to , department_id , staff_id , job_title_code , date_assigned_from "}, {"db_id": "department_store", "query": "select max_product_price, min_product_price, product_type_code from products_product_price group by product_type_code order by product_type_code", "query_toks": ["SELECT", "max", "(", "product_price", ")", ",", "min", "(", "product_price", ")", ",", "product_type_code", "FROM", "products", "GROUP", "BY", "product_type_code", "ORDER", "BY", "product_type_code"], "query_toks_no_value": ["select", "max", "(", "product_price", ")", ",", "min", "(", "product_price", ")", ",", "product_type_code", "from", "products", "group", "by", "product_type_code", "order", "by", "product_type_code"], "question": "Give the maximum and minimum product prices for each product type, grouped and ordered by product type.", "question_toks": ["Give", "the", "maximum", "and", "minimum", "product", "prices", "for", "each", "product", "type", ",", "grouped", "and", "ordered", "by", "product", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 19, false], null]]], "select": [false, [[1, [0, [0, 21, false], null]], [2, [0, [0, 21, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "product_id"}, "orig_query": "select max(product_price), min(product_price), product_type_code from products group by product_type_code order by product_type_code", "split_map": {"products": ["max_product_price", "min_product_price", "avg_product_price", "total_product_price"]}, "schema_with_content": "addresses : address_id (2, 4, 3), address_details (\"7181 Wuckert Port Apt. 571\nLake Zariaburgh, IL 98085\", \"7181 Wuckert Port Apt. 571\nLake Zariaburgh, IL 98085\", \"8207 Morissette Lakes\nEast Rheaview, ID 47493\") | staff : staff_name (\"Vanessa\", \"Vanessa\", \"Dannie\"), staff_id (9, 3, 14), staff_gender (\"1\", \"0\") | suppliers : supplier_name (\"Lidl\", \"Lidl\", \"Audi\"), supplier_phone (\"1-432-960-2402x1734\", \"(692)009-5928\", \"287-071-1153x254\"), supplier_id (3, 1, 3) | department_store_chain : dept_store_chain_name (\"West\", \"East\", \"East\"), dept_store_chain_id (1, 1, 2) | customers : customer_address (\"362 Fisher Forge Apt. 900\nNew Mckenna, CA 98525-5674\", \"8327 Christiansen Lakes Suite 409\nSchneiderland, IA 93624\", \"8408 Lindsay Court\nEast Dasiabury, IL 72656-3552\"), customer_code (\"844\", \"808\", \"916\"), customer_email (\"margarett.vonrueden@example.com\", \"gwisozk@example.net\", \"moriah91@example.com\"), customer_phone (\"254-072-4068x33935\", \"197-417-3557\", \"587.398.2400x31176\"), payment_method_code (\"Credit Card\", \"Direct Debit\"), customer_id (7, 12, 7), customer_name (\"Jon\", \"Lexus\", \"Abbie\") | products : product_price (534.52, 695.16, 971.44), product_name (\"drive\", \"mouse\", \"blue jeans\"), product_id (13, 4, 5), product_type_code (\"Clothes\", \"Hardware\") | products_product_price : total_product_price (534.52, 695.16, 971.44), min_product_price (534.52, 695.16, 971.44), avg_product_price (534.52, 695.16, 971.44), max_product_price (534.52, 695.16, 971.44), product_name (\"drive\", \"mouse\", \"blue jeans\"), product_type_code (\"Clothes\", \"Hardware\"), product_id (13, 4, 5) | supplier_addresses : address_id (2, 9, 9), supplier_id (2, 3, 4), date_from (\"2008-11-22 12:01:25\", \"2014-11-07 19:18:49\", \"2014-11-07 19:18:49\"), date_to (\"2018-03-16 16:39:58\", \"2018-03-16 16:39:58\", \"2018-03-24 00:14:45\") | customer_addresses : date_from (\"2017-12-11 05:00:22\", \"2017-09-07 04:41:01\", \"2017-10-07 23:00:26\"), date_to (\"2018-02-27 23:10:07\", \"2018-03-23 17:49:51\", \"2018-03-23 17:49:51\"), address_id (4, 4, 6), customer_id (1, 2, 1) | customer_orders : order_date (\"2018-03-05 23:17:54\", \"2018-02-02 23:42:01\", \"2018-03-22 10:49:25\"), customer_id (1, 15, 4), order_id (6, 1, 5), order_status_code (\"New\", \"PartFilled\", \"New\") | department_stores : store_name (\"store_name\"), dept_store_id (5, 14, 2), store_phone (\"1-859-843-1957\", \"1-764-126-7567x0795\", \"1-764-126-7567x0795\"), store_address (\"41924 Alfredo Cliff\nNew Eviestad, NY 17573\", \"994 Travis Plains\nNorth Wadeton, WV 27575-3951\", \"82470 Hansen Squares Suite 190\nWehnermouth, NC 76791\"), store_email (\"bryon24@example.org\", \"kelly30@example.com\", \"alexandro.mcclure@example.net\"), dept_store_chain_id (2, 3, 2) | departments : dept_store_id (5, 11, 4), department_name (\"managing\", \"marketing\", \"human resource\"), department_id (2, 1, 2) | order_items : order_item_id (15, 6, 12), order_id (6, 6, 9), product_id (2, 12, 13) | product_suppliers : date_supplied_from (\"2017-10-14 19:15:37\", \"2017-10-14 19:15:37\", \"2017-06-19 00:49:05\"), total_value_purchased (7273.74, 8042.78, 29836.26), total_amount_purchased (\"22332.08\", \"35149.74\", \"13712.91\"), date_supplied_to (\"2018-03-25 12:03:33\", \"2018-03-24 23:01:03\", \"2018-03-25 12:03:33\"), supplier_id (1, 1, 4), product_id (14, 3, 5) | staff_department_assignments : staff_id (9, 7, 5), job_title_code (\"Sales Person\", \"Sales Person\", \"Clerical Staff\"), date_assigned_from (\"2017-05-14 12:30:33\", \"2016-11-12 14:10:55\", \"2017-06-06 22:22:17\"), department_id (5, 3, 5), date_assigned_to (\"2018-03-25 02:29:08\", \"2018-03-24 10:45:21\", \"2018-03-24 20:13:13\")", "schema_without_content": "addresses : address_id , address_details  | staff : staff_name , staff_id , staff_gender  | suppliers : supplier_name , supplier_phone 009-5928\", \"287-071-1153x254\", supplier_id  | department_store_chain : dept_store_chain_name , dept_store_chain_id  | customers : customer_address , customer_code , customer_email , customer_phone , payment_method_code , customer_id , customer_name  | products : product_price , product_name , product_id , product_type_code  | products_product_price : total_product_price , min_product_price , avg_product_price , max_product_price , product_name , product_type_code , product_id  | supplier_addresses : address_id , supplier_id , date_from , date_to  | customer_addresses : date_from , date_to , address_id , customer_id  | customer_orders : order_date , customer_id , order_id , order_status_code  | department_stores : store_name , dept_store_id , store_phone , store_address , store_email , dept_store_chain_id  | departments : dept_store_id , department_name , department_id  | order_items : order_item_id , order_id , product_id  | product_suppliers : date_supplied_from , total_value_purchased , total_amount_purchased , date_supplied_to , supplier_id , product_id  | staff_department_assignments : staff_id , job_title_code , date_assigned_from , department_id , date_assigned_to "}, {"db_id": "department_store", "query": "select avg_product_price from products_product_price where product_type_code = 'Clothes'", "query_toks": ["SELECT", "avg", "(", "product_price", ")", "FROM", "products", "WHERE", "product_type_code", "=", "'Clothes", "'"], "query_toks_no_value": ["select", "avg", "(", "product_price", ")", "from", "products", "where", "product_type_code", "=", "value"], "question": "Find the average price of all product clothes.", "question_toks": ["Find", "the", "average", "price", "of", "all", "product", "clothes", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"Clothes\"", null]]}, "primary_key": {"products": "product_id"}, "orig_query": "select avg(product_price) from products where product_type_code = 'Clothes'", "split_map": {"products": ["max_product_price", "min_product_price", "avg_product_price", "total_product_price"]}, "schema_with_content": "addresses : address_details (\"36594 O'Keefe Lock\nNew Cali, RI 42319\", \"7181 Wuckert Port Apt. 571\nLake Zariaburgh, IL 98085\", \"4062 Mante Place\nWest Lindsey, DE 76199-8015\"), address_id (13, 13, 10) | staff : staff_name (\"Melody\", \"Melody\", \"Kristy\"), staff_gender (\"1\", \"0\"), staff_id (14, 13, 6) | suppliers : supplier_id (1, 3, 2), supplier_phone (\"1-483-283-4742\", \"(692)009-5928\", \"1-432-960-2402x1734\"), supplier_name (\"AB Store\", \"AB Store\", \"Audi\") | department_store_chain : dept_store_chain_id (4, 3, 1), dept_store_chain_name (\"South\", \"South\", \"South\") | customers : customer_id (8, 5, 13), customer_code (\"589\", \"401\", \"589\"), customer_name (\"Jon\", \"Karson\", \"Adah\"), customer_phone (\"07594320656\", \"1-064-498-6609x051\", \"587.398.2400x31176\"), customer_address (\"7308 Joan Lake Suite 346\nLizethtown, DE 56522\", \"75099 Tremblay Port Apt. 163\nSouth Norrisland, SC 80546\", \"8327 Christiansen Lakes Suite 409\nSchneiderland, IA 93624\"), customer_email (\"moriah91@example.com\", \"gbrekke@example.com\", \"joelle.monahan@example.com\"), payment_method_code (\"Credit Card\", \"Direct Debit\") | products : product_id (3, 15, 3), product_name (\"mic\", \"keyboard\", \"blue jeans\"), product_type_code (\"Clothes\", \"Hardware\"), product_price (803.74, 803.74, 971.44) | products_product_price : product_name (\"mic\", \"keyboard\", \"blue jeans\"), product_id (3, 15, 3), max_product_price (803.74, 803.74, 971.44), avg_product_price (803.74, 803.74, 971.44), min_product_price (803.74, 803.74, 971.44), total_product_price (803.74, 803.74, 971.44), product_type_code (\"Clothes\", \"Hardware\") | supplier_addresses : supplier_id (2, 3, 4), address_id (2, 11, 9), date_from (\"2014-11-07 19:18:49\", \"2014-11-07 19:18:49\", \"2008-11-22 12:01:25\"), date_to (\"2018-03-24 00:14:45\", \"2018-03-14 20:06:37\", \"2018-03-02 19:50:22\") | customer_addresses : date_to (\"2018-03-23 17:49:51\", \"2018-03-24 14:31:59\", \"2018-03-20 20:52:34\"), address_id (14, 13, 4), customer_id (7, 2, 2), date_from (\"2018-01-15 12:05:39\", \"2018-01-27 06:27:34\", \"2017-08-27 13:38:37\") | customer_orders : order_date (\"2018-01-31 17:49:18\", \"2018-02-10 15:44:48\", \"2018-02-16 19:42:39\"), order_id (12, 9, 1), customer_id (12, 6, 6), order_status_code (\"New\", \"Completed\", \"Pending\") | department_stores : store_phone (\"670-466-6367\", \"670-466-6367\", \"670-466-6367\"), dept_store_chain_id (3, 4, 4), dept_store_id (8, 13, 4), store_email (\"creola23@example.org\", \"ihamill@example.org\", \"kelly30@example.com\"), store_name (\"store_name\"), store_address (\"994 Travis Plains\nNorth Wadeton, WV 27575-3951\", \"49708 Marcella Valleys Suite 181\nNinamouth, WA 86667\", \"49708 Marcella Valleys Suite 181\nNinamouth, WA 86667\") | departments : dept_store_id (5, 11, 4), department_id (5, 1, 1), department_name (\"managing\", \"human resource\", \"purchasing\") | order_items : order_id (1, 12, 13), product_id (10, 3, 8), order_item_id (12, 12, 1) | product_suppliers : date_supplied_to (\"2018-03-24 19:29:18\", \"2018-03-24 09:17:15\", \"2018-03-24 23:01:03\"), product_id (8, 4, 8), date_supplied_from (\"2017-12-20 07:07:31\", \"2017-09-19 02:14:02\", \"2017-12-01 19:46:53\"), total_value_purchased (27257.6, 97371.12, 27257.6), supplier_id (2, 2, 1), total_amount_purchased (\"20447.99\", \"64444.18\", \"20689.78\") | staff_department_assignments : staff_id (10, 7, 8), date_assigned_to (\"2018-03-23 20:25:24\", \"2018-03-24 10:45:21\", \"2018-03-24 02:36:57\"), department_id (1, 5, 2), job_title_code (\"Administration\", \"Sales Person\", \"Department Manager\"), date_assigned_from (\"2016-09-20 02:59:15\", \"2017-12-18 19:12:15\", \"2016-10-19 08:11:39\")", "schema_without_content": "addresses : address_details , address_id  | staff : staff_name , staff_gender , staff_id  | suppliers : supplier_id , supplier_phone 009-5928\", \"1-432-960-2402x1734\", supplier_name  | department_store_chain : dept_store_chain_id , dept_store_chain_name  | customers : customer_id , customer_code , customer_name , customer_phone , customer_address , customer_email , payment_method_code  | products : product_id , product_name , product_type_code , product_price  | products_product_price : product_name , product_id , max_product_price , avg_product_price , min_product_price , total_product_price , product_type_code  | supplier_addresses : supplier_id , address_id , date_from , date_to  | customer_addresses : date_to , address_id , customer_id , date_from  | customer_orders : order_date , order_id , customer_id , order_status_code  | department_stores : store_phone , dept_store_chain_id , dept_store_id , store_email , store_name , store_address  | departments : dept_store_id , department_id , department_name  | order_items : order_id , product_id , order_item_id  | product_suppliers : date_supplied_to , product_id , date_supplied_from , total_value_purchased , supplier_id , total_amount_purchased  | staff_department_assignments : staff_id , date_assigned_to , department_id , job_title_code , date_assigned_from "}, {"db_id": "department_store", "query": "select avg_product_price from products_product_price where product_type_code = 'Clothes'", "query_toks": ["SELECT", "avg", "(", "product_price", ")", "FROM", "products", "WHERE", "product_type_code", "=", "'Clothes", "'"], "query_toks_no_value": ["select", "avg", "(", "product_price", ")", "from", "products", "where", "product_type_code", "=", "value"], "question": "What is the average price of clothes?", "question_toks": ["What", "is", "the", "average", "price", "of", "clothes", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"Clothes\"", null]]}, "primary_key": {"products": "product_id"}, "orig_query": "select avg(product_price) from products where product_type_code = 'Clothes'", "split_map": {"products": ["max_product_price", "min_product_price", "avg_product_price", "total_product_price"]}, "schema_with_content": "addresses : address_details (\"69482 Renner Ville Suite 653\nLangworthborough, OH 95195\", \"521 Molly Harbors Apt. 567\nReingerland, HI 97099-1005\", \"7181 Wuckert Port Apt. 571\nLake Zariaburgh, IL 98085\"), address_id (7, 5, 9) | staff : staff_name (\"Vanessa\", \"Zakary\", \"Yolanda\"), staff_gender (\"1\", \"0\"), staff_id (8, 15, 15) | suppliers : supplier_id (3, 2, 2), supplier_phone (\"(692)009-5928\", \"(692)009-5928\", \"287-071-1153x254\"), supplier_name (\"Audi\", \"Tesco\", \"Tesco\") | department_store_chain : dept_store_chain_id (2, 4, 3), dept_store_chain_name (\"West\", \"West\", \"East\") | customers : customer_email (\"margarett.vonrueden@example.com\", \"nicholas44@example.com\", \"cconroy@example.net\"), customer_phone (\"1-064-498-6609x051\", \"197-417-3557\", \"877-150-8674x63517\"), payment_method_code (\"Credit Card\", \"Direct Debit\"), customer_address (\"5049 Hand Land\nCoymouth, IL 97300-7731\", \"9581 Will Flat Suite 272\nEast Cathryn, WY 30751-4404\", \"84445 Elinor Glens\nPort Zita, SD 39410\"), customer_code (\"240\", \"887\", \"240\"), customer_name (\"Cordell\", \"Adah\", \"Abbie\"), customer_id (7, 6, 11) | products : product_price (813.76, 813.76, 803.74), product_id (8, 10, 1), product_name (\"speaker\", \"blue topping\", \"black topping\"), product_type_code (\"Clothes\", \"Hardware\") | products_product_price : product_name (\"speaker\", \"blue topping\", \"black topping\"), avg_product_price (813.76, 813.76, 803.74), total_product_price (813.76, 813.76, 803.74), product_type_code (\"Clothes\", \"Hardware\"), product_id (8, 10, 1), max_product_price (813.76, 813.76, 803.74), min_product_price (813.76, 813.76, 803.74) | supplier_addresses : date_to (\"2018-03-14 20:06:37\", \"2018-03-14 20:06:37\", \"2018-03-16 16:39:58\"), date_from (\"2015-03-16 19:30:29\", \"2014-11-07 19:18:49\", \"2016-09-22 16:41:31\"), supplier_id (2, 3, 4), address_id (5, 9, 2) | customer_addresses : date_to (\"2018-03-17 15:44:10\", \"2018-03-24 14:31:59\", \"2018-03-13 21:49:51\"), customer_id (4, 8, 1), date_from (\"2017-08-06 20:57:36\", \"2018-02-22 04:46:48\", \"2017-04-04 20:00:27\"), address_id (6, 4, 10) | customer_orders : customer_id (8, 1, 7), order_status_code (\"PartFilled\", \"PartFilled\", \"New\"), order_id (10, 14, 6), order_date (\"2018-02-15 02:25:32\", \"2018-02-26 12:39:33\", \"2018-02-09 11:16:46\") | department_stores : dept_store_chain_id (3, 4, 1), store_phone (\"(723)503-7086x356\", \"(723)503-7086x356\", \"611-037-9309\"), store_address (\"29297 West Road Suite 210\nWest Dulceside, UT 58085-8998\", \"082 Purdy Expressway\nO'Connellshire, IL 31732\", \"93472 Mayert Shore Apt. 360\nMitchellton, TN 84209\"), store_email (\"luisa57@example.org\", \"bryon24@example.org\", \"freda.toy@example.org\"), store_name (\"store_name\"), dept_store_id (4, 10, 12) | departments : dept_store_id (5, 11, 4), department_id (4, 1, 4), department_name (\"advertising\", \"advertising\", \"advertising\") | order_items : product_id (7, 3, 10), order_id (14, 15, 14), order_item_id (14, 1, 9) | product_suppliers : product_id (14, 8, 8), supplier_id (2, 2, 1), date_supplied_from (\"2017-12-20 07:07:31\", \"2017-08-09 21:26:38\", \"2017-08-22 00:58:42\"), total_value_purchased (76992.42, 97371.12, 99049.01), date_supplied_to (\"2018-03-25 07:30:49\", \"2018-03-24 23:01:03\", \"2018-03-24 12:27:13\"), total_amount_purchased (\"31862.59\", \"31862.59\", \"83873.58\") | staff_department_assignments : date_assigned_from (\"2017-06-11 22:55:20\", \"2017-12-18 19:12:15\", \"2017-11-14 04:38:44\"), date_assigned_to (\"2018-03-24 13:02:22\", \"2018-03-25 13:32:57\", \"2018-03-25 02:29:08\"), staff_id (12, 6, 8), job_title_code (\"Clerical Staff\", \"Sales Person\", \"Administration\"), department_id (4, 2, 5)", "schema_without_content": "addresses : address_details , address_id  | staff : staff_name , staff_gender , staff_id  | suppliers : supplier_id , supplier_phone 009-5928\", \"009-5928\", \"287-071-1153x254\", supplier_name  | department_store_chain : dept_store_chain_id , dept_store_chain_name  | customers : customer_email , customer_phone , payment_method_code , customer_address , customer_code , customer_name , customer_id  | products : product_price , product_id , product_name , product_type_code  | products_product_price : product_name , avg_product_price , total_product_price , product_type_code , product_id , max_product_price , min_product_price  | supplier_addresses : date_to , date_from , supplier_id , address_id  | customer_addresses : date_to , customer_id , date_from , address_id  | customer_orders : customer_id , order_status_code , order_id , order_date  | department_stores : dept_store_chain_id , store_phone 503-7086x356\", \"503-7086x356\", \"611-037-9309\", store_address , store_email , store_name , dept_store_id  | departments : dept_store_id , department_id , department_name  | order_items : product_id , order_id , order_item_id  | product_suppliers : product_id , supplier_id , date_supplied_from , total_value_purchased , date_supplied_to , total_amount_purchased  | staff_department_assignments : date_assigned_from , date_assigned_to , staff_id , job_title_code , department_id "}, {"db_id": "aircraft", "query": "select avg_international_passengers from airport_international_passengers", "query_toks": ["SELECT", "avg", "(", "International_Passengers", ")", "FROM", "airport"], "query_toks_no_value": ["select", "avg", "(", "international_passengers", ")", "from", "airport"], "question": "What is the average number of international passengers of all airports?", "question_toks": ["What", "is", "the", "average", "number", "of", "international", "passengers", "of", "all", "airports", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 21, false], null]]]], "union": null, "where": []}, "primary_key": {"airport": "airport_id"}, "orig_query": "select avg(international_passengers) from airport", "split_map": {"airport": ["max_international_passengers", "min_international_passengers", "avg_international_passengers", "total_international_passengers"]}, "schema_with_content": "pilot : pilot_id (12, 7, 10), name (\"Winnifred Boyle\", \"Maxwell Graham\", \"Katheryn Gorczany IV\"), age (29, 37, 29) | aircraft : aircraft (\"CH-53E Super Stallion\", \"CH-53E Super Stallion\", \"Robinson R-22\"), description (\"Tandem rotor helicopter\", \"Light utility helicopter\", \"Turboshaft utility helicopter\"), max_disk_loading (\"2.6 lb/ft\u00c2\u00b2 (14 kg/m\u00c2\u00b2)\", \"14.5 lb/ft\u00c2\u00b2 (71 kg/m\u00c2\u00b2)\", \"15 lb/ft\u00c2\u00b2 (72 kg/m\u00c2\u00b2)\"), max_gross_weight (\"50,000 lb (22,680 kg)\", \"3,200 lb (1,451 kg)\", \"50,000 lb (22,680 kg)\"), total_disk_area (\"872 ft\u00c2\u00b2 (81.1 m\u00c2\u00b2)\", \"5,655 ft\u00c2\u00b2 (526 m\u00c2\u00b2)\", \"4,900 ft\u00c2\u00b2 (460 m\u00c2\u00b2)\"), aircraft_id (4, 4, 1) | match : round (2.0, 3.0, 1.0), winning_aircraft (\"3\", \"4\", \"3\"), country (\"Canada\", \"United Arab Emirates\", \"Canada\"), date (\"June 5\u00e2\u0080\u00936\", \"April 17\u00e2\u0080\u009318\", \"August 7\u00e2\u0080\u00938\"), location (\"River Danube , Budapest\", \"Windsor , Ontario\", \"New York City\"), winning_pilot (\"4\", \"2\", \"1\"), fastest_qualifying (\"Cancelled\", \"Nigel Lamb\", \"Nigel Lamb\") | airport : aircraft_movements (117859.0, 478693.0, 112227.0), domestic_passengers (3730963.0, 5281038.0, 1471538.0), %_change_2007 (\"0.5%\", \"2.9%\", \"0.5%\"), freight_metric_tonnes (40518.0, 261507.0, 3546.0), total_passengers (8178891.0, 22360364.0, 5620673.0), transit_passengers (156246.0, 14524.0, 14524.0), airport_id (3, 9, 7), airport_name (\"London Heathrow\", \"Bristol\", \"Birmingham Airport\"), international_passengers (5057051.0, 18119230.0, 3711140.0) | airport_international_passengers : avg_international_passengers (5057051.0, 18119230.0, 3711140.0), airport_name (\"London Heathrow\", \"Bristol\", \"Birmingham Airport\"), max_international_passengers (5057051.0, 18119230.0, 3711140.0), total_passengers (8178891.0, 22360364.0, 5620673.0), min_international_passengers (5057051.0, 18119230.0, 3711140.0), total_international_passengers (5057051.0, 18119230.0, 3711140.0), %_change_2007 (\"0.5%\", \"2.9%\", \"0.5%\"), airport_id (3, 9, 7), domestic_passengers (3730963.0, 5281038.0, 1471538.0), transit_passengers (156246.0, 14524.0, 14524.0), aircraft_movements (117859.0, 478693.0, 112227.0), freight_metric_tonnes (40518.0, 261507.0, 3546.0) | airport_aircraft : id (3, 2, 3), airport_id (6, 2, 2), aircraft_id (1, 2, 3)", "schema_without_content": "pilot : pilot_id , name , age  | aircraft : aircraft , description , max_disk_loading \", \"14.5 lb/ft\u00c2\u00b2 \", \"15 lb/ft\u00c2\u00b2 \", max_gross_weight \", \"3,200 lb \", \"50,000 lb \", total_disk_area \", \"5,655 ft\u00c2\u00b2 \", \"4,900 ft\u00c2\u00b2 \", aircraft_id  | match : round , winning_aircraft , country , date , location , winning_pilot , fastest_qualifying  | airport : aircraft_movements , domestic_passengers , %_change_2007 , freight_metric_tonnes , total_passengers , transit_passengers , airport_id , airport_name , international_passengers  | airport_international_passengers : avg_international_passengers , airport_name , max_international_passengers , total_passengers , min_international_passengers , total_international_passengers , %_change_2007 , airport_id , domestic_passengers , transit_passengers , aircraft_movements , freight_metric_tonnes  | airport_aircraft : id , airport_id , aircraft_id "}, {"db_id": "aircraft", "query": "select avg_international_passengers from airport_international_passengers", "query_toks": ["SELECT", "avg", "(", "International_Passengers", ")", "FROM", "airport"], "query_toks_no_value": ["select", "avg", "(", "international_passengers", ")", "from", "airport"], "question": "What is the average number of international passengers for an airport?", "question_toks": ["What", "is", "the", "average", "number", "of", "international", "passengers", "for", "an", "airport", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 21, false], null]]]], "union": null, "where": []}, "primary_key": {"airport": "airport_id"}, "orig_query": "select avg(international_passengers) from airport", "split_map": {"airport": ["max_international_passengers", "min_international_passengers", "avg_international_passengers", "total_international_passengers"]}, "schema_with_content": "pilot : name (\"Della Lindgren\", \"Blaise Muller\", \"Mr. Cristian Halvorson II\"), age (33, 31, 33), pilot_id (6, 6, 9) | aircraft : total_disk_area (\"8,495 ft\u00c2\u00b2 (789 m\u00c2\u00b2)\", \"872 ft\u00c2\u00b2 (81.1 m\u00c2\u00b2)\", \"872 ft\u00c2\u00b2 (81.1 m\u00c2\u00b2)\"), max_gross_weight (\"123,500 lb (56,000 kg)\", \"50,000 lb (22,680 kg)\", \"123,500 lb (56,000 kg)\"), aircraft (\"Bell 206B3 JetRanger\", \"Robinson R-22\", \"Mil Mi-26\"), description (\"Turboshaft utility helicopter\", \"Light utility helicopter\", \"Light utility helicopter\"), max_disk_loading (\"8.8 lb/ft\u00c2\u00b2 (43 kg/m\u00c2\u00b2)\", \"8.8 lb/ft\u00c2\u00b2 (43 kg/m\u00c2\u00b2)\", \"2.6 lb/ft\u00c2\u00b2 (14 kg/m\u00c2\u00b2)\"), aircraft_id (2, 1, 5) | match : round (7.0, 5.0, 4.0), winning_pilot (\"9\", \"9\", \"2\"), date (\"April 17\u00e2\u0080\u009318\", \"Cancelled\", \"May 8\u00e2\u0080\u00939\"), fastest_qualifying (\"Cancelled\", \"Hannes Arch\", \"Hannes Arch\"), location (\"River Danube , Budapest\", \"River Danube , Budapest\", \"Mina' Zayid , Abu Dhabi\"), country (\"United Arab Emirates\", \"Germany\", \"Germany\"), winning_aircraft (\"1\", \"5\", \"5\") | airport : international_passengers (18119230.0, 8105162.0, 3711140.0), %_change_2007 (\"2.9%\", \"2.6%\", \"3.8%\"), airport_id (3, 7, 10), domestic_passengers (5281038.0, 5562516.0, 4192121.0), transit_passengers (19989.0, 50889.0, 43873.0), airport_name (\"London Heathrow\", \"Manchester\", \"Edinburgh\"), aircraft_movements (112227.0, 263653.0, 263653.0), total_passengers (5620673.0, 10180734.0, 67054745.0), freight_metric_tonnes (3546.0, 12418.0, 1397054.0) | airport_international_passengers : airport_id (3, 7, 10), airport_name (\"London Heathrow\", \"Manchester\", \"Edinburgh\"), avg_international_passengers (18119230.0, 8105162.0, 3711140.0), total_international_passengers (18119230.0, 8105162.0, 3711140.0), %_change_2007 (\"2.9%\", \"2.6%\", \"3.8%\"), total_passengers (5620673.0, 10180734.0, 67054745.0), min_international_passengers (18119230.0, 8105162.0, 3711140.0), max_international_passengers (18119230.0, 8105162.0, 3711140.0), domestic_passengers (5281038.0, 5562516.0, 4192121.0), transit_passengers (19989.0, 50889.0, 43873.0), aircraft_movements (112227.0, 263653.0, 263653.0), freight_metric_tonnes (3546.0, 12418.0, 1397054.0) | airport_aircraft : aircraft_id (1, 5, 1), airport_id (6, 9, 1), id (2, 3, 4)", "schema_without_content": "pilot : name , age , pilot_id  | aircraft : total_disk_area \", \"872 ft\u00c2\u00b2 \", \"872 ft\u00c2\u00b2 \", max_gross_weight \", \"50,000 lb \", \"123,500 lb \", aircraft , description , max_disk_loading \", \"8.8 lb/ft\u00c2\u00b2 \", \"2.6 lb/ft\u00c2\u00b2 \", aircraft_id  | match : round , winning_pilot , date , fastest_qualifying , location , country , winning_aircraft  | airport : international_passengers , %_change_2007 , airport_id , domestic_passengers , transit_passengers , airport_name , aircraft_movements , total_passengers , freight_metric_tonnes  | airport_international_passengers : airport_id , airport_name , avg_international_passengers , total_international_passengers , %_change_2007 , total_passengers , min_international_passengers , max_international_passengers , domestic_passengers , transit_passengers , aircraft_movements , freight_metric_tonnes  | airport_aircraft : aircraft_id , airport_id , id "}, {"db_id": "aircraft", "query": "select total_domestic_passengers from airport_domestic_passengers where airport_name like \"%London%\"", "query_toks": ["SELECT", "sum", "(", "Domestic_Passengers", ")", "FROM", "airport", "WHERE", "Airport_Name", "LIKE", "``", "%", "London", "%", "''"], "query_toks_no_value": ["select", "sum", "(", "domestic_passengers", ")", "from", "airport", "where", "airport_name", "like", "value"], "question": "What are the total number of Domestic Passengers of airports that contain the word \"London\".", "question_toks": ["What", "are", "the", "total", "number", "of", "Domestic", "Passengers", "of", "airports", "that", "contain", "the", "word", "``", "London", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 18, false], null], "\"%London%\"", null]]}, "primary_key": {"airport": "airport_id"}, "orig_query": "select sum(domestic_passengers) from airport where airport_name like \"%London%\"", "split_map": {"airport": ["max_domestic_passengers", "min_domestic_passengers", "avg_domestic_passengers", "total_domestic_passengers"]}, "schema_with_content": "pilot : name (\"Mr. Cristian Halvorson II\", \"Della Lindgren\", \"Maxwell Graham\"), pilot_id (10, 9, 9), age (20, 20, 25) | aircraft : aircraft (\"Mil Mi-26\", \"Robinson R-22\", \"CH-53E Super Stallion\"), max_gross_weight (\"73,500 lb (33,300 kg)\", \"123,500 lb (56,000 kg)\", \"1,370 lb (635 kg)\"), description (\"Light utility helicopter\", \"Light utility helicopter\", \"Heavy-lift helicopter\"), max_disk_loading (\"2.6 lb/ft\u00c2\u00b2 (14 kg/m\u00c2\u00b2)\", \"14.5 lb/ft\u00c2\u00b2 (71 kg/m\u00c2\u00b2)\", \"3.7 lb/ft\u00c2\u00b2 (18 kg/m\u00c2\u00b2)\"), aircraft_id (4, 4, 1), total_disk_area (\"4,900 ft\u00c2\u00b2 (460 m\u00c2\u00b2)\", \"8,495 ft\u00c2\u00b2 (789 m\u00c2\u00b2)\", \"4,900 ft\u00c2\u00b2 (460 m\u00c2\u00b2)\") | match : winning_pilot (\"1\", \"1\", \"4\"), country (\"Brazil\", \"Hungary\", \"Hungary\"), winning_aircraft (\"4\", \"3\", \"5\"), fastest_qualifying (\"Paul Bonhomme\", \"Nigel Lamb\", \"Nigel Lamb\"), round (6.0, 4.0, 1.0), location (\"Windsor , Ontario\", \"New York City\", \"River Danube , Budapest\"), date (\"April 17\u00e2\u0080\u009318\", \"Cancelled\", \"June 5\u00e2\u0080\u00936\") | airport : aircraft_movements (125550.0, 204610.0, 125550.0), international_passengers (5057051.0, 8105162.0, 4870184.0), %_change_2007 (\"2.9%\", \"5.7%\", \"4.3%\"), domestic_passengers (1171605.0, 2943719.0, 1171605.0), total_passengers (9627589.0, 21219195.0, 6267114.0), airport_id (5, 10, 10), freight_metric_tonnes (197738.0, 1397054.0, 12418.0), airport_name (\"Bristol\", \"Manchester\", \"Edinburgh\"), transit_passengers (156246.0, 4395.0, 19989.0) | airport_domestic_passengers : total_domestic_passengers (1171605.0, 2943719.0, 1171605.0), airport_name (\"Bristol\", \"Manchester\", \"Edinburgh\"), max_domestic_passengers (1171605.0, 2943719.0, 1171605.0), airport_id (5, 10, 10), avg_domestic_passengers (1171605.0, 2943719.0, 1171605.0), total_passengers (9627589.0, 21219195.0, 6267114.0), %_change_2007 (\"2.9%\", \"5.7%\", \"4.3%\"), international_passengers (5057051.0, 8105162.0, 4870184.0), min_domestic_passengers (1171605.0, 2943719.0, 1171605.0), transit_passengers (156246.0, 4395.0, 19989.0), aircraft_movements (125550.0, 204610.0, 125550.0), freight_metric_tonnes (197738.0, 1397054.0, 12418.0) | airport_aircraft : id (2, 2, 2), aircraft_id (3, 2, 2), airport_id (9, 1, 2)", "schema_without_content": "pilot : name , pilot_id , age  | aircraft : aircraft , max_gross_weight \", \"123,500 lb \", \"1,370 lb \", description , max_disk_loading \", \"14.5 lb/ft\u00c2\u00b2 \", \"3.7 lb/ft\u00c2\u00b2 \", aircraft_id , total_disk_area \", \"8,495 ft\u00c2\u00b2 \", \"4,900 ft\u00c2\u00b2 \" | match : winning_pilot , country , winning_aircraft , fastest_qualifying , round , location , date  | airport : aircraft_movements , international_passengers , %_change_2007 , domestic_passengers , total_passengers , airport_id , freight_metric_tonnes , airport_name , transit_passengers  | airport_domestic_passengers : total_domestic_passengers , airport_name , max_domestic_passengers , airport_id , avg_domestic_passengers , total_passengers , %_change_2007 , international_passengers , min_domestic_passengers , transit_passengers , aircraft_movements , freight_metric_tonnes  | airport_aircraft : id , aircraft_id , airport_id "}, {"db_id": "aircraft", "query": "select total_domestic_passengers from airport_domestic_passengers where airport_name like \"%London%\"", "query_toks": ["SELECT", "sum", "(", "Domestic_Passengers", ")", "FROM", "airport", "WHERE", "Airport_Name", "LIKE", "``", "%", "London", "%", "''"], "query_toks_no_value": ["select", "sum", "(", "domestic_passengers", ")", "from", "airport", "where", "airport_name", "like", "value"], "question": "What are the total number of domestic passengers at all London airports?", "question_toks": ["What", "are", "the", "total", "number", "of", "domestic", "passengers", "at", "all", "London", "airports", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 18, false], null], "\"%London%\"", null]]}, "primary_key": {"airport": "airport_id"}, "orig_query": "select sum(domestic_passengers) from airport where airport_name like \"%London%\"", "split_map": {"airport": ["max_domestic_passengers", "min_domestic_passengers", "avg_domestic_passengers", "total_domestic_passengers"]}, "schema_with_content": "pilot : pilot_id (4, 7, 5), name (\"Ayana Spencer\", \"Della Lindgren\", \"Elisha Hickle V\"), age (20, 20, 33) | aircraft : aircraft (\"Mil Mi-26\", \"CH-53E Super Stallion\", \"CH-53E Super Stallion\"), max_disk_loading (\"14.5 lb/ft\u00c2\u00b2 (71 kg/m\u00c2\u00b2)\", \"14.5 lb/ft\u00c2\u00b2 (71 kg/m\u00c2\u00b2)\", \"8.8 lb/ft\u00c2\u00b2 (43 kg/m\u00c2\u00b2)\"), aircraft_id (3, 1, 4), total_disk_area (\"497 ft\u00c2\u00b2 (46.2 m\u00c2\u00b2)\", \"5,655 ft\u00c2\u00b2 (526 m\u00c2\u00b2)\", \"872 ft\u00c2\u00b2 (81.1 m\u00c2\u00b2)\"), max_gross_weight (\"3,200 lb (1,451 kg)\", \"123,500 lb (56,000 kg)\", \"123,500 lb (56,000 kg)\"), description (\"Tandem rotor helicopter\", \"Tandem rotor helicopter\", \"Tandem rotor helicopter\") | match : location (\"Windsor , Ontario\", \"River Danube , Budapest\", \"Windsor , Ontario\"), date (\"June 19\u00e2\u0080\u009320\", \"June 5\u00e2\u0080\u00936\", \"Cancelled\"), fastest_qualifying (\"Nigel Lamb\", \"Paul Bonhomme\", \"Paul Bonhomme\"), country (\"United Arab Emirates\", \"Canada\", \"Australia\"), winning_pilot (\"1\", \"9\", \"9\"), winning_aircraft (\"5\", \"3\", \"5\"), round (3.0, 6.0, 2.0) | airport : total_passengers (9006702.0, 21219195.0, 5620673.0), freight_metric_tonnes (261507.0, 12192.0, 197738.0), international_passengers (8853224.0, 3711140.0, 3943139.0), transit_passengers (147791.0, 19989.0, 4395.0), %_change_2007 (\"2.6%\", \"1.5%\", \"0.5%\"), aircraft_movements (100087.0, 263653.0, 76517.0), airport_id (8, 10, 10), domestic_passengers (3730963.0, 1171605.0, 1171605.0), airport_name (\"Manchester\", \"Glasgow International\", \"Manchester\") | airport_domestic_passengers : avg_domestic_passengers (3730963.0, 1171605.0, 1171605.0), airport_id (8, 10, 10), %_change_2007 (\"2.6%\", \"1.5%\", \"0.5%\"), max_domestic_passengers (3730963.0, 1171605.0, 1171605.0), total_passengers (9006702.0, 21219195.0, 5620673.0), airport_name (\"Manchester\", \"Glasgow International\", \"Manchester\"), total_domestic_passengers (3730963.0, 1171605.0, 1171605.0), min_domestic_passengers (3730963.0, 1171605.0, 1171605.0), international_passengers (8853224.0, 3711140.0, 3943139.0), transit_passengers (147791.0, 19989.0, 4395.0), aircraft_movements (100087.0, 263653.0, 76517.0), freight_metric_tonnes (261507.0, 12192.0, 197738.0) | airport_aircraft : aircraft_id (5, 5, 2), id (3, 2, 4), airport_id (1, 1, 9)", "schema_without_content": "pilot : pilot_id , name , age  | aircraft : aircraft , max_disk_loading \", \"14.5 lb/ft\u00c2\u00b2 \", \"8.8 lb/ft\u00c2\u00b2 \", aircraft_id , total_disk_area \", \"5,655 ft\u00c2\u00b2 \", \"872 ft\u00c2\u00b2 \", max_gross_weight \", \"123,500 lb \", \"123,500 lb \", description  | match : location , date , fastest_qualifying , country , winning_pilot , winning_aircraft , round  | airport : total_passengers , freight_metric_tonnes , international_passengers , transit_passengers , %_change_2007 , aircraft_movements , airport_id , domestic_passengers , airport_name  | airport_domestic_passengers : avg_domestic_passengers , airport_id , %_change_2007 , max_domestic_passengers , total_passengers , airport_name , total_domestic_passengers , min_domestic_passengers , international_passengers , transit_passengers , aircraft_movements , freight_metric_tonnes  | airport_aircraft : aircraft_id , id , airport_id "}, {"db_id": "aircraft", "query": "select max_transit_passengers, min_transit_passengers from airport_transit_passengers", "query_toks": ["SELECT", "max", "(", "Transit_Passengers", ")", ",", "min", "(", "Transit_Passengers", ")", "FROM", "airport"], "query_toks_no_value": ["select", "max", "(", "transit_passengers", ")", ",", "min", "(", "transit_passengers", ")", "from", "airport"], "question": "What are the maximum and minimum number of transit passengers of all aiports.", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "number", "of", "transit", "passengers", "of", "all", "aiports", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 23, false], null]], [2, [0, [0, 23, false], null]]]], "union": null, "where": []}, "primary_key": {"airport": "airport_id"}, "orig_query": "select max(transit_passengers), min(transit_passengers) from airport", "split_map": {"airport": ["max_transit_passengers", "min_transit_passengers", "avg_transit_passengers", "total_transit_passengers"]}, "schema_with_content": "pilot : name (\"Maxwell Graham\", \"Katheryn Gorczany IV\", \"Maxwell Graham\"), age (25, 31, 37), pilot_id (6, 12, 7) | aircraft : description (\"Light utility helicopter\", \"Heavy-lift helicopter\", \"Light utility helicopter\"), max_gross_weight (\"50,000 lb (22,680 kg)\", \"73,500 lb (33,300 kg)\", \"1,370 lb (635 kg)\"), max_disk_loading (\"15 lb/ft\u00c2\u00b2 (72 kg/m\u00c2\u00b2)\", \"3.7 lb/ft\u00c2\u00b2 (18 kg/m\u00c2\u00b2)\", \"2.6 lb/ft\u00c2\u00b2 (14 kg/m\u00c2\u00b2)\"), aircraft_id (5, 1, 3), total_disk_area (\"8,495 ft\u00c2\u00b2 (789 m\u00c2\u00b2)\", \"4,900 ft\u00c2\u00b2 (460 m\u00c2\u00b2)\", \"8,495 ft\u00c2\u00b2 (789 m\u00c2\u00b2)\"), aircraft (\"CH-53E Super Stallion\", \"Bell 206B3 JetRanger\", \"CH-53E Super Stallion\") | match : country (\"United States\", \"United Arab Emirates\", \"Hungary\"), round (6.0, 1.0, 2.0), winning_pilot (\"2\", \"9\", \"6\"), location (\"EuroSpeedway Lausitz\", \"EuroSpeedway Lausitz\", \"New York City\"), date (\"Cancelled\", \"June 5\u00e2\u0080\u00936\", \"June 5\u00e2\u0080\u00936\"), winning_aircraft (\"4\", \"5\", \"3\"), fastest_qualifying (\"Hannes Arch\", \"Hannes Arch\", \"Nigel Lamb\") | airport : airport_name (\"Bristol\", \"Bristol\", \"Bristol\"), %_change_2007 (\"6.0%\", \"3.8%\", \"3.8%\"), domestic_passengers (746094.0, 1471538.0, 5281038.0), aircraft_movements (193282.0, 193282.0, 117859.0), total_passengers (21219195.0, 67054745.0, 67054745.0), freight_metric_tonnes (141781.0, 3546.0, 141781.0), international_passengers (8105162.0, 8853224.0, 8853224.0), transit_passengers (19989.0, 38458.0, 156246.0), airport_id (2, 2, 8) | airport_transit_passengers : %_change_2007 (\"6.0%\", \"3.8%\", \"3.8%\"), airport_id (2, 2, 8), min_transit_passengers (19989.0, 38458.0, 156246.0), avg_transit_passengers (19989.0, 38458.0, 156246.0), domestic_passengers (746094.0, 1471538.0, 5281038.0), max_transit_passengers (19989.0, 38458.0, 156246.0), international_passengers (8105162.0, 8853224.0, 8853224.0), total_passengers (21219195.0, 67054745.0, 67054745.0), total_transit_passengers (19989.0, 38458.0, 156246.0), airport_name (\"Bristol\", \"Bristol\", \"Bristol\"), aircraft_movements (193282.0, 193282.0, 117859.0), freight_metric_tonnes (141781.0, 3546.0, 141781.0) | airport_aircraft : id (3, 1, 3), aircraft_id (3, 3, 1), airport_id (9, 1, 2)", "schema_without_content": "pilot : name , age , pilot_id  | aircraft : description , max_gross_weight \", \"73,500 lb \", \"1,370 lb \", max_disk_loading \", \"3.7 lb/ft\u00c2\u00b2 \", \"2.6 lb/ft\u00c2\u00b2 \", aircraft_id , total_disk_area \", \"4,900 ft\u00c2\u00b2 \", \"8,495 ft\u00c2\u00b2 \", aircraft  | match : country , round , winning_pilot , location , date , winning_aircraft , fastest_qualifying  | airport : airport_name , %_change_2007 , domestic_passengers , aircraft_movements , total_passengers , freight_metric_tonnes , international_passengers , transit_passengers , airport_id  | airport_transit_passengers : %_change_2007 , airport_id , min_transit_passengers , avg_transit_passengers , domestic_passengers , max_transit_passengers , international_passengers , total_passengers , total_transit_passengers , airport_name , aircraft_movements , freight_metric_tonnes  | airport_aircraft : id , aircraft_id , airport_id "}, {"db_id": "aircraft", "query": "select max_transit_passengers, min_transit_passengers from airport_transit_passengers", "query_toks": ["SELECT", "max", "(", "Transit_Passengers", ")", ",", "min", "(", "Transit_Passengers", ")", "FROM", "airport"], "query_toks_no_value": ["select", "max", "(", "transit_passengers", ")", ",", "min", "(", "transit_passengers", ")", "from", "airport"], "question": "What is the maximum and mininum number of transit passengers for all airports?", "question_toks": ["What", "is", "the", "maximum", "and", "mininum", "number", "of", "transit", "passengers", "for", "all", "airports", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 23, false], null]], [2, [0, [0, 23, false], null]]]], "union": null, "where": []}, "primary_key": {"airport": "airport_id"}, "orig_query": "select max(transit_passengers), min(transit_passengers) from airport", "split_map": {"airport": ["max_transit_passengers", "min_transit_passengers", "avg_transit_passengers", "total_transit_passengers"]}, "schema_with_content": "pilot : name (\"Della Lindgren\", \"Blaise Muller\", \"Mr. Cristian Halvorson II\"), age (25, 33, 30), pilot_id (10, 7, 2) | aircraft : aircraft (\"Robinson R-22\", \"Robinson R-22\", \"CH-47D Chinook\"), max_disk_loading (\"14.5 lb/ft\u00c2\u00b2 (71 kg/m\u00c2\u00b2)\", \"2.6 lb/ft\u00c2\u00b2 (14 kg/m\u00c2\u00b2)\", \"15 lb/ft\u00c2\u00b2 (72 kg/m\u00c2\u00b2)\"), total_disk_area (\"497 ft\u00c2\u00b2 (46.2 m\u00c2\u00b2)\", \"8,495 ft\u00c2\u00b2 (789 m\u00c2\u00b2)\", \"872 ft\u00c2\u00b2 (81.1 m\u00c2\u00b2)\"), max_gross_weight (\"3,200 lb (1,451 kg)\", \"1,370 lb (635 kg)\", \"123,500 lb (56,000 kg)\"), description (\"Tandem rotor helicopter\", \"Heavy-lift helicopter\", \"Turboshaft utility helicopter\"), aircraft_id (2, 5, 3) | match : winning_aircraft (\"4\", \"2\", \"1\"), country (\"United States\", \"United Arab Emirates\", \"Hungary\"), location (\"New York City\", \"New York City\", \"Windsor , Ontario\"), round (1.0, 6.0, 7.0), fastest_qualifying (\"Paul Bonhomme\", \"Paul Bonhomme\", \"Nigel Lamb\"), winning_pilot (\"4\", \"6\", \"6\"), date (\"April 17\u00e2\u0080\u009318\", \"Cancelled\", \"May 8\u00e2\u0080\u00939\") | airport : %_change_2007 (\"2.6%\", \"0.5%\", \"6.0%\"), transit_passengers (38458.0, 156246.0, 19989.0), freight_metric_tonnes (3546.0, 1397054.0, 3.0), domestic_passengers (5281038.0, 1171605.0, 1471538.0), total_passengers (6267114.0, 67054745.0, 6267114.0), aircraft_movements (193282.0, 117859.0, 100087.0), airport_id (8, 6, 1), airport_name (\"Birmingham Airport\", \"Manchester\", \"Manchester\"), international_passengers (5057051.0, 30431051.0, 3943139.0) | airport_transit_passengers : international_passengers (5057051.0, 30431051.0, 3943139.0), total_transit_passengers (38458.0, 156246.0, 19989.0), avg_transit_passengers (38458.0, 156246.0, 19989.0), airport_id (8, 6, 1), total_passengers (6267114.0, 67054745.0, 6267114.0), domestic_passengers (5281038.0, 1171605.0, 1471538.0), airport_name (\"Birmingham Airport\", \"Manchester\", \"Manchester\"), max_transit_passengers (38458.0, 156246.0, 19989.0), min_transit_passengers (38458.0, 156246.0, 19989.0), %_change_2007 (\"2.6%\", \"0.5%\", \"6.0%\"), aircraft_movements (193282.0, 117859.0, 100087.0), freight_metric_tonnes (3546.0, 1397054.0, 3.0) | airport_aircraft : id (4, 2, 3), aircraft_id (3, 3, 2), airport_id (1, 9, 2)", "schema_without_content": "pilot : name , age , pilot_id  | aircraft : aircraft , max_disk_loading \", \"2.6 lb/ft\u00c2\u00b2 \", \"15 lb/ft\u00c2\u00b2 \", total_disk_area \", \"8,495 ft\u00c2\u00b2 \", \"872 ft\u00c2\u00b2 \", max_gross_weight \", \"1,370 lb \", \"123,500 lb \", description , aircraft_id  | match : winning_aircraft , country , location , round , fastest_qualifying , winning_pilot , date  | airport : %_change_2007 , transit_passengers , freight_metric_tonnes , domestic_passengers , total_passengers , aircraft_movements , airport_id , airport_name , international_passengers  | airport_transit_passengers : international_passengers , total_transit_passengers , avg_transit_passengers , airport_id , total_passengers , domestic_passengers , airport_name , max_transit_passengers , min_transit_passengers , %_change_2007 , aircraft_movements , freight_metric_tonnes  | airport_aircraft : id , aircraft_id , airport_id "}, {"db_id": "local_govt_and_lot", "query": "select max_date_moved_in from residents_date_moved_in", "query_toks": ["SELECT", "max", "(", "date_moved_in", ")", "FROM", "Residents"], "query_toks_no_value": ["select", "max", "(", "date_moved_in", ")", "from", "residents"], "question": "When is the last day any resident moved in?", "question_toks": ["When", "is", "the", "last", "day", "any", "resident", "moved", "in", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"residents": "resident_id"}, "orig_query": "select max(date_moved_in) from residents", "split_map": {"residents": ["max_date_moved_in", "min_date_moved_in", "avg_date_moved_in", "total_date_moved_in"]}, "schema_with_content": "customers : customer_id (63, 87, 76), customer_details (\"Mr. Raul Prosacco\", \"Jayme Marquardt\", \"Kyleigh Schuster\") | properties : other_details (\"USA\"), property_type_code (\"apartment\", \"house\", \"flat\"), property_address (\"2580 Yundt Plains\", \"129 Chasity Brook\", \"5983 Fleta Throughway\"), property_id (586, 107, 849) | residents : date_moved_out (\"2017-12-30 23:55:10\", \"2017-10-10 02:25:53\", \"2017-10-23 16:40:19\"), date_moved_in (\"2017-06-17 15:43:33\", \"2015-03-27 12:00:00\", \"2016-09-27 12:00:00\"), property_id (954, 748, 120), other_details (\"Prof. Nasir Hoppe\", \"Terrill Bernhard\", \"Elroy Schuster\"), resident_id (43, 10, 88) | residents_date_moved_in : property_id (954, 748, 120), total_date_moved_in (\"2017-06-17 15:43:33\", \"2015-03-27 12:00:00\", \"2016-09-27 12:00:00\"), min_date_moved_in (\"2017-06-17 15:43:33\", \"2015-03-27 12:00:00\", \"2016-09-27 12:00:00\"), avg_date_moved_in (\"2017-06-17 15:43:33\", \"2015-03-27 12:00:00\", \"2016-09-27 12:00:00\"), resident_id (43, 10, 88), max_date_moved_in (\"2017-06-17 15:43:33\", \"2015-03-27 12:00:00\", \"2016-09-27 12:00:00\"), date_moved_out (\"2017-12-30 23:55:10\", \"2017-10-10 02:25:53\", \"2017-10-23 16:40:19\"), other_details (\"Prof. Nasir Hoppe\", \"Terrill Bernhard\", \"Elroy Schuster\") | organizations : organization_id (7, 8, 10), organization_details (\"Reinger, Hudson and Nolan Group\", \"Denesik and Sons Party\", \"Robel-Schulist Group\"), parent_organization_id (7, 8) | services : service_details (\"Satisfied\", \"Unsatisfied\"), service_type_code (\"Moving Out\", \"Moving Out\", \"Moving Out\"), service_id (87, 29, 41), organization_id (10, 7, 8) | residents_services : date_requested (\"2016-04-27 14:51:07\", \"2016-10-13 04:15:54\", \"2016-12-16 06:08:10\"), date_provided (\"2018-01-30 09:58:57\", \"2018-02-26 00:27:11\", \"2017-11-13 10:28:34\"), property_id (954, 669, 445), date_moved_in (\"2017-06-17 15:43:33\", \"2015-03-27 12:00:00\", \"2016-09-27 12:00:00\"), resident_id (6, 83, 47), service_id (29, 65, 29), other_details (\"Satisfied\", \"Unsatisfied\") | things : organization_id (8, 10, 7), service_details (\"Unsatisfied\", \"Satisfied\"), thing_id (14, 14, 10), type_of_thing_code (\"Electronics\", \"Commen\", \"Furniture\"), service_type_code (\"Check\", \"Cleanning\") | customer_events : thing_id (92, 14, 10), date_moved_in (\"2015-03-27 12:00:00\", \"2016-09-27 12:00:00\"), customer_id (31, 19, 79), resident_id (23, 45, 67), property_id (954, 748, 748), customer_event_id (166, 606, 627) | customer_event_notes : property_id (791, 879, 445), resident_id (88, 37, 67), date_moved_in (\"2016-11-23 05:53:40\", \"2016-07-10 04:09:56\", \"2017-04-12 19:47:08\"), customer_event_note_id (21, 65, 55), service_type_code (\"Cleanning\", \"Check\"), customer_event_id (591, 216, 70) | timed_status_of_things : date_and_date (\"2016-09-06 16:31:13\", \"2016-11-24 12:44:00\", \"2017-11-27 06:32:46\"), status_of_thing_code (\"Open\", \"Close\", \"In Progress\"), thing_id (10, 84, 85) | timed_locations_of_things : thing_id (14, 2, 26), location_code (\"064 Charles Mou\", \"1316 Morgan Spr\", \"2677 Runolfsson\"), date_and_time (\"2017-08-31 13:54:13\", \"2017-11-26 00:13:44\", \"2017-03-19 19:28:13\")", "schema_without_content": "customers : customer_id , customer_details  | properties : other_details , property_type_code , property_address , property_id  | residents : date_moved_out , date_moved_in , property_id , other_details , resident_id  | residents_date_moved_in : property_id , total_date_moved_in , min_date_moved_in , avg_date_moved_in , resident_id , max_date_moved_in , date_moved_out , other_details  | organizations : organization_id , organization_details , parent_organization_id  | services : service_details , service_type_code , service_id , organization_id  | residents_services : date_requested , date_provided , property_id , date_moved_in , resident_id , service_id , other_details  | things : organization_id , service_details , thing_id , type_of_thing_code , service_type_code  | customer_events : thing_id , date_moved_in , customer_id , resident_id , property_id , customer_event_id  | customer_event_notes : property_id , resident_id , date_moved_in , customer_event_note_id , service_type_code , customer_event_id  | timed_status_of_things : date_and_date , status_of_thing_code , thing_id  | timed_locations_of_things : thing_id , location_code , date_and_time "}, {"db_id": "school_player", "query": "select avg_enrollment from school_enrollment", "query_toks": ["SELECT", "avg", "(", "Enrollment", ")", "FROM", "school"], "query_toks_no_value": ["select", "avg", "(", "enrollment", ")", "from", "school"], "question": "What is the average enrollment of schools?", "question_toks": ["What", "is", "the", "average", "enrollment", "of", "schools", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, "primary_key": {"school": "school_id"}, "orig_query": "select avg(enrollment) from school", "split_map": {"school": ["max_enrollment", "min_enrollment", "avg_enrollment", "total_enrollment"]}, "schema_with_content": "school : year_entered_competition (1929.0, 1944.0), enrollment (1850.0, 2200.0, 2200.0), founded (1918.0, 1924.0, 1924.0), boys_or_girls (\"Boys\", \"Boys only to Yr 9 Co-ed Year 10 to 12\"), day_or_boarding (\"Day\", \"Day & Boarding\"), school_id (5, 6, 5), location (\"Bellevue Hill\", \"Waverley\", \"Wahroonga\"), school_colors (\"Red, White & Blue\", \"Black & Blue\", \"Green and White\"), denomination (\"Catholic\", \"Anglican\", \"Uniting Church\"), school (\"St Aloysius' College\", \"St Aloysius' College\", \"St Aloysius' College\") | school_enrollment : min_enrollment (1850.0, 2200.0, 2200.0), school_id (5, 6, 5), school (\"St Aloysius' College\", \"St Aloysius' College\", \"St Aloysius' College\"), avg_enrollment (1850.0, 2200.0, 2200.0), location (\"Bellevue Hill\", \"Waverley\", \"Wahroonga\"), total_enrollment (1850.0, 2200.0, 2200.0), max_enrollment (1850.0, 2200.0, 2200.0), founded (1918.0, 1924.0, 1924.0), denomination (\"Catholic\", \"Anglican\", \"Uniting Church\"), boys_or_girls (\"Boys\", \"Boys only to Yr 9 Co-ed Year 10 to 12\"), day_or_boarding (\"Day\", \"Day & Boarding\"), year_entered_competition (1929.0, 1944.0), school_colors (\"Red, White & Blue\", \"Black & Blue\", \"Green and White\") | school_details : school_id (4, 2, 4), division (\"Division 1\", \"Division 3\", \"Division 2\"), nickname (\"Tigers\", \"Tigers\", \"Raiders\"), league (\"DSHA\"), class (\"Flight A\", \"Flight B\", \"Fight A\"), colors (\"Maroon and White\", \"Blue and Gold\", \"Dark Green and White\") | school_performance : class_aa (\"Wheeler\", \"Lindsay\", \"Henrietta\"), class_a (\"Martin's Mill\", \"Winters\", \"Utopia\"), school_id (3, 5, 6), school_year (\"1995-96\", \"2007-08\", \"1999-2000\") | player : school_id (1, 3, 6), position (\"Second baseman\", \"First Baseman\", \"Outfielder\"), player_id (23, 2, 13), team (\"St. Louis Cardinals\", \"Minnesota Twins\", \"Washington Nationals\"), age (17, 15, 17), player (\"Allan Dykstra\", \"Yonder Alonso\", \"Kyle Skipworth\")", "schema_without_content": "school : year_entered_competition , enrollment , founded , boys_or_girls , day_or_boarding , school_id , location , school_colors , denomination , school  | school_enrollment : min_enrollment , school_id , school , avg_enrollment , location , total_enrollment , max_enrollment , founded , denomination , boys_or_girls , day_or_boarding , year_entered_competition , school_colors  | school_details : school_id , division , nickname , league , class , colors  | school_performance : class_aa , class_a , school_id , school_year  | player : school_id , position , player_id , team , age , player "}, {"db_id": "school_player", "query": "select avg_enrollment from school_enrollment", "query_toks": ["SELECT", "avg", "(", "Enrollment", ")", "FROM", "school"], "query_toks_no_value": ["select", "avg", "(", "enrollment", ")", "from", "school"], "question": "Take the average of the school enrollment.", "question_toks": ["Take", "the", "average", "of", "the", "school", "enrollment", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, "primary_key": {"school": "school_id"}, "orig_query": "select avg(enrollment) from school", "split_map": {"school": ["max_enrollment", "min_enrollment", "avg_enrollment", "total_enrollment"]}, "schema_with_content": "school : day_or_boarding (\"Day\", \"Day & Boarding\"), boys_or_girls (\"Boys\", \"Boys only to Yr 9 Co-ed Year 10 to 12\"), denomination (\"Catholic\", \"Anglican\", \"Uniting Church\"), year_entered_competition (1929.0, 1944.0), enrollment (2300.0, 1000.0, 2300.0), school (\"Knox Grammar School\", \"Waverley College\", \"Cranbrook School\"), location (\"Milsons Point\", \"Wahroonga\", \"Wahroonga\"), school_colors (\"Black & Blue\", \"Red & Blue\", \"Red, White & Blue\"), founded (1913.0, 1913.0, 1913.0), school_id (3, 3, 4) | school_enrollment : location (\"Milsons Point\", \"Wahroonga\", \"Wahroonga\"), school (\"Knox Grammar School\", \"Waverley College\", \"Cranbrook School\"), avg_enrollment (2300.0, 1000.0, 2300.0), total_enrollment (2300.0, 1000.0, 2300.0), max_enrollment (2300.0, 1000.0, 2300.0), min_enrollment (2300.0, 1000.0, 2300.0), school_id (3, 3, 4), founded (1913.0, 1913.0, 1913.0), denomination (\"Catholic\", \"Anglican\", \"Uniting Church\"), boys_or_girls (\"Boys\", \"Boys only to Yr 9 Co-ed Year 10 to 12\"), day_or_boarding (\"Day\", \"Day & Boarding\"), year_entered_competition (1929.0, 1944.0), school_colors (\"Black & Blue\", \"Red & Blue\", \"Red, White & Blue\") | school_details : league (\"DSHA\"), nickname (\"Silver Eagles\", \"Seahawks\", \"Auks\"), class (\"Flight A\", \"Flight B\", \"Fight A\"), division (\"Division 1\", \"Division 3\", \"Division 2\"), school_id (3, 3, 4), colors (\"Garnet and White\", \"Maroon and White\", \"Silver and Maroon\") | school_performance : school_id (5, 1, 3), class_aa (\"Bishop\", \"Blanco\", \"Lindsay\"), school_year (\"1997-98\", \"1996-97\", \"1999-2000\"), class_a (\"Wheeler\", \"Happy\", \"Wheeler\") | player : team (\"Texas Rangers\", \"Milwaukee Brewers\", \"Chicago Cubs\"), school_id (3, 5, 4), player (\"Jemile Weeks\", \"Eric Hosmer\", \"Brett Wallace\"), position (\"Catcher\", \"First baseman\", \"Catcher\"), player_id (7, 22, 14), age (17, 14, 14)", "schema_without_content": "school : day_or_boarding , boys_or_girls , denomination , year_entered_competition , enrollment , school , location , school_colors , founded , school_id  | school_enrollment : location , school , avg_enrollment , total_enrollment , max_enrollment , min_enrollment , school_id , founded , denomination , boys_or_girls , day_or_boarding , year_entered_competition , school_colors  | school_details : league , nickname , class , division , school_id , colors  | school_performance : school_id , class_aa , school_year , class_a  | player : team , school_id , player , position , player_id , age "}, {"db_id": "store_product", "query": "select total_city_population from district_city_population order by city_area desc limit 3", "query_toks": ["SELECT", "sum", "(", "city_population", ")", "FROM", "district", "ORDER", "BY", "city_area", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "sum", "(", "city_population", ")", "from", "district", "order", "by", "city_area", "desc", "limit", "value"], "question": "Find the total population of the top 3 districts with the largest area.", "question_toks": ["Find", "the", "total", "population", "of", "the", "top", "3", "districts", "with", "the", "largest", "area", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 18, false], null]]], "select": [false, [[4, [0, [0, 17, false], null]]]], "union": null, "where": []}, "primary_key": {"district": "district_id"}, "orig_query": "select sum(city_population) from district order by city_area desc limit 3", "split_map": {"district": ["max_city_population", "min_city_population", "avg_city_population", "total_city_population"]}, "schema_with_content": "product : pages_per_minute_color (3.0, 30.0, 10.0), dpi (600.0), product_id (5, 3, 2), dimensions (\"303 x 94 x 60\", \"301 x 160 x 158\", \"301 x 160 x 158\"), max_page_size (\"A4\", \"216mm x 356mm\", \"216mm x 355mm\"), interface (\"USB 2.0\"), product (\"Canon imageFORMULA P-150\", \"Canon imageFORMULA P-150\", \"Fujitsu fi-6130 A4 Series Scanner\") | store : area_size (7.23, 179.84, 26.69), number_of_product_category (990.0, 1170.0, 1170.0), ranking (9, 9, 1), store_name (\"Blackville\", \"Miramichi\", \"Doaktown\"), store_id (2, 4, 3), type (\"City Mall\", \"Village Store\") | district : city_population (530438.0, 530438.0, 165038.0), city_area (18.0, 15.0, 38.0), district_id (5, 12, 15), headquartered_city (\"Chakwal City\", \"Bahawalnagar City\", \"Khanewal City\"), district_name (\"Bahawalnagar District\", \"Faisalabad District\", \"Jhang District\") | district_city_population : total_city_population (530438.0, 530438.0, 165038.0), district_id (5, 12, 15), district_name (\"Bahawalnagar District\", \"Faisalabad District\", \"Jhang District\"), avg_city_population (530438.0, 530438.0, 165038.0), max_city_population (530438.0, 530438.0, 165038.0), headquartered_city (\"Chakwal City\", \"Bahawalnagar City\", \"Khanewal City\"), min_city_population (530438.0, 530438.0, 165038.0), city_area (18.0, 15.0, 38.0) | store_product : product_id (3, 3, 1), store_id (1, 1, 5) | store_district : district_id (3, 3, 4), store_id (5, 5, 2)", "schema_without_content": "product : pages_per_minute_color , dpi , product_id , dimensions , max_page_size , interface , product  | store : area_size , number_of_product_category , ranking , store_name , store_id , type  | district : city_population , city_area , district_id , headquartered_city , district_name  | district_city_population : total_city_population , district_id , district_name , avg_city_population , max_city_population , headquartered_city , min_city_population , city_area  | store_product : product_id , store_id  | store_district : district_id , store_id "}, {"db_id": "store_product", "query": "select total_city_population from district_city_population order by city_area desc limit 3", "query_toks": ["SELECT", "sum", "(", "city_population", ")", "FROM", "district", "ORDER", "BY", "city_area", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "sum", "(", "city_population", ")", "from", "district", "order", "by", "city_area", "desc", "limit", "value"], "question": "What is the total number of residents for the districts with the 3 largest areas?", "question_toks": ["What", "is", "the", "total", "number", "of", "residents", "for", "the", "districts", "with", "the", "3", "largest", "areas", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 18, false], null]]], "select": [false, [[4, [0, [0, 17, false], null]]]], "union": null, "where": []}, "primary_key": {"district": "district_id"}, "orig_query": "select sum(city_population) from district order by city_area desc limit 3", "split_map": {"district": ["max_city_population", "min_city_population", "avg_city_population", "total_city_population"]}, "schema_with_content": "product : product (\"Xerox Travel Scanner 100\", \"Canon imageFORMULA P-150\", \"Fujitsu fi-6130 A4 Series Scanner\"), dpi (600.0), pages_per_minute_color (4.0, 4.0, 30.0), product_id (5, 6, 4), dimensions (\"301 x 160 x 158\", \"300 x 50 x 45\", \"298 x 209 x 99\"), max_page_size (\"A4\", \"216mm x 356mm\", \"216mm x 355mm\"), interface (\"USB 2.0\") | store : number_of_product_category (1170.0, 1170.0, 1170.0), store_id (3, 5, 5), ranking (10, 2, 3), store_name (\"Rogersville\", \"Miramichi\", \"Miramichi\"), type (\"City Mall\", \"Village Store\"), area_size (28.74, 179.84, 7.23) | district : city_population (2793721.0, 165936.0, 314617.0), headquartered_city (\"Jhelum City\", \"Dera Ghazi Khan City\", \"Jhang City\"), district_name (\"Khanewal District\", \"Bahawalnagar District\", \"Gujranwala District\"), district_id (9, 11, 7), city_area (15.0, 22.0, 20.0) | district_city_population : district_id (9, 11, 7), headquartered_city (\"Jhelum City\", \"Dera Ghazi Khan City\", \"Jhang City\"), district_name (\"Khanewal District\", \"Bahawalnagar District\", \"Gujranwala District\"), min_city_population (2793721.0, 165936.0, 314617.0), total_city_population (2793721.0, 165936.0, 314617.0), avg_city_population (2793721.0, 165936.0, 314617.0), max_city_population (2793721.0, 165936.0, 314617.0), city_area (15.0, 22.0, 20.0) | store_product : store_id (3, 5, 3), product_id (2, 1, 4) | store_district : store_id (1, 5, 2), district_id (3, 15, 11)", "schema_without_content": "product : product , dpi , pages_per_minute_color , product_id , dimensions , max_page_size , interface  | store : number_of_product_category , store_id , ranking , store_name , type , area_size  | district : city_population , headquartered_city , district_name , district_id , city_area  | district_city_population : district_id , headquartered_city , district_name , min_city_population , total_city_population , avg_city_population , max_city_population , city_area  | store_product : store_id , product_id  | store_district : store_id , district_id "}, {"db_id": "store_product", "query": "select avg_pages_per_minute_color from product_pages_per_minute_color", "query_toks": ["SELECT", "avg", "(", "pages_per_minute_color", ")", "FROM", "product"], "query_toks_no_value": ["select", "avg", "(", "pages_per_minute_color", ")", "from", "product"], "question": "What is the average pages per minute color?", "question_toks": ["What", "is", "the", "average", "pages", "per", "minute", "color", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"product": "product_id"}, "orig_query": "select avg(pages_per_minute_color) from product", "split_map": {"product": ["max_pages_per_minute_color", "min_pages_per_minute_color", "avg_pages_per_minute_color", "total_pages_per_minute_color"]}, "schema_with_content": "product : dimensions (\"300 x 50 x 45\", \"300 x 50 x 45\", \"303 x 94 x 60\"), max_page_size (\"A4\", \"216mm x 356mm\", \"216mm x 355mm\"), interface (\"USB 2.0\"), product_id (4, 3, 4), dpi (600.0), pages_per_minute_color (4.0, 36.0, 28.0), product (\"Plustek MobileOffice D28 Corporate\", \"Xerox Travel Scanner 100\", \"Fujitsu fi-6130 A4 Series Scanner\") | product_pages_per_minute_color : max_pages_per_minute_color (4.0, 36.0, 28.0), dimensions (\"300 x 50 x 45\", \"300 x 50 x 45\", \"303 x 94 x 60\"), avg_pages_per_minute_color (4.0, 36.0, 28.0), min_pages_per_minute_color (4.0, 36.0, 28.0), product (\"Plustek MobileOffice D28 Corporate\", \"Xerox Travel Scanner 100\", \"Fujitsu fi-6130 A4 Series Scanner\"), product_id (4, 3, 4), dpi (600.0), total_pages_per_minute_color (4.0, 36.0, 28.0), max_page_size (\"A4\", \"216mm x 356mm\", \"216mm x 355mm\"), interface (\"USB 2.0\") | store : store_id (1, 4, 3), number_of_product_category (1170.0, 793.0, 1678.0), store_name (\"Neguac\", \"Blackville\", \"Blackville\"), area_size (28.74, 21.73, 26.69), type (\"City Mall\", \"Village Store\"), ranking (9, 9, 9) | district : headquartered_city (\"Khanewal City\", \"Bhakkar City\", \"Bahawalpur City\"), district_name (\"Gujrat District\", \"Jhang District\", \"Jhang District\"), city_population (94620.0, 314617.0, 530438.0), city_area (10.0, 20.0, 38.0), district_id (11, 3, 3) | store_product : product_id (2, 6, 2), store_id (5, 3, 5) | store_district : store_id (4, 1, 5), district_id (4, 3, 15)", "schema_without_content": "product : dimensions , max_page_size , interface , product_id , dpi , pages_per_minute_color , product  | product_pages_per_minute_color : max_pages_per_minute_color , dimensions , avg_pages_per_minute_color , min_pages_per_minute_color , product , product_id , dpi , total_pages_per_minute_color , max_page_size , interface  | store : store_id , number_of_product_category , store_name , area_size , type , ranking  | district : headquartered_city , district_name , city_population , city_area , district_id  | store_product : product_id , store_id  | store_district : store_id , district_id "}, {"db_id": "store_product", "query": "select avg_pages_per_minute_color from product_pages_per_minute_color", "query_toks": ["SELECT", "avg", "(", "pages_per_minute_color", ")", "FROM", "product"], "query_toks_no_value": ["select", "avg", "(", "pages_per_minute_color", ")", "from", "product"], "question": "What is the average number of pages per minute color?", "question_toks": ["What", "is", "the", "average", "number", "of", "pages", "per", "minute", "color", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"product": "product_id"}, "orig_query": "select avg(pages_per_minute_color) from product", "split_map": {"product": ["max_pages_per_minute_color", "min_pages_per_minute_color", "avg_pages_per_minute_color", "total_pages_per_minute_color"]}, "schema_with_content": "product : max_page_size (\"A4\", \"216mm x 356mm\", \"216mm x 355mm\"), interface (\"USB 2.0\"), pages_per_minute_color (30.0, 4.0, 30.0), product_id (3, 2, 4), dpi (600.0), dimensions (\"298 x 209 x 99\", \"303 x 94 x 60\", \"303 x 94 x 60\"), product (\"Canon DR-2080C\", \"Xerox Travel Scanner 100\", \"ScanShell 3000DN\") | product_pages_per_minute_color : product (\"Canon DR-2080C\", \"Xerox Travel Scanner 100\", \"ScanShell 3000DN\"), min_pages_per_minute_color (30.0, 4.0, 30.0), dpi (600.0), avg_pages_per_minute_color (30.0, 4.0, 30.0), total_pages_per_minute_color (30.0, 4.0, 30.0), product_id (3, 2, 4), max_pages_per_minute_color (30.0, 4.0, 30.0), dimensions (\"298 x 209 x 99\", \"303 x 94 x 60\", \"303 x 94 x 60\"), max_page_size (\"A4\", \"216mm x 356mm\", \"216mm x 355mm\"), interface (\"USB 2.0\") | store : type (\"City Mall\", \"Village Store\"), ranking (10, 2, 2), store_id (4, 1, 1), area_size (26.69, 179.84, 26.69), number_of_product_category (1678.0, 1170.0, 990.0), store_name (\"Doaktown\", \"Miramichi\", \"Neguac\") | district : district_name (\"Kasur District\", \"Bahawalnagar District\", \"Faisalabad District\"), headquartered_city (\"Khanewal City\", \"Jhang City\", \"Jhang City\"), district_id (14, 5, 9), city_population (2793721.0, 365198.0, 2793721.0), city_area (147.0, 15.0, 22.0) | store_product : product_id (4, 6, 2), store_id (5, 1, 3) | store_district : store_id (1, 1, 5), district_id (11, 3, 4)", "schema_without_content": "product : max_page_size , interface , pages_per_minute_color , product_id , dpi , dimensions , product  | product_pages_per_minute_color : product , min_pages_per_minute_color , dpi , avg_pages_per_minute_color , total_pages_per_minute_color , product_id , max_pages_per_minute_color , dimensions , max_page_size , interface  | store : type , ranking , store_id , area_size , number_of_product_category , store_name  | district : district_name , headquartered_city , district_id , city_population , city_area  | store_product : product_id , store_id  | store_district : store_id , district_id "}, {"db_id": "store_product", "query": "select total_city_population from district_city_population where city_area > (select avg(city_area)from district)", "query_toks": ["SELECT", "sum", "(", "city_population", ")", "FROM", "district", "WHERE", "city_area", ">", "(", "SELECT", "avg", "(", "city_area", ")", "FROM", "district", ")"], "query_toks_no_value": ["select", "sum", "(", "city_population", ")", "from", "district", "where", "city_area", ">", "(", "select", "avg", "(", "city_area", ")", "from", "district", ")"], "question": "Find the total population of the districts where the area is bigger than the average city area.", "question_toks": ["Find", "the", "total", "population", "of", "the", "districts", "where", "the", "area", "is", "bigger", "than", "the", "average", "city", "area", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 18, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 18, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"district": "district_id"}, "orig_query": "select sum(city_population) from district where city_area > (select avg(city_area) from district)", "split_map": {"district": ["max_city_population", "min_city_population", "avg_city_population", "total_city_population"]}, "schema_with_content": "product : max_page_size (\"A4\", \"216mm x 356mm\", \"216mm x 355mm\"), pages_per_minute_color (28.0, 30.0, 3.0), dimensions (\"300 x 50 x 45\", \"298 x 209 x 99\", \"301 x 160 x 158\"), interface (\"USB 2.0\"), dpi (600.0), product_id (1, 5, 1), product (\"Fujitsu fi-6130 A4 Series Scanner\", \"ScanShell 3000DN\", \"Canon imageFORMULA P-150\") | store : type (\"City Mall\", \"Village Store\"), ranking (2, 9, 3), store_id (4, 2, 3), store_name (\"Doaktown\", \"Doaktown\", \"Doaktown\"), number_of_product_category (17811.0, 793.0, 990.0), area_size (21.73, 28.74, 21.73) | district : district_id (10, 8, 15), city_population (165936.0, 1526168.0, 113524.0), district_name (\"Chiniot District\", \"Chakwal District\", \"Kasur District\"), city_area (75.0, 18.0, 38.0), headquartered_city (\"Jhelum City\", \"Faisalabad City\", \"Attock City\") | district_city_population : min_city_population (165936.0, 1526168.0, 113524.0), max_city_population (165936.0, 1526168.0, 113524.0), headquartered_city (\"Jhelum City\", \"Faisalabad City\", \"Attock City\"), avg_city_population (165936.0, 1526168.0, 113524.0), district_id (10, 8, 15), district_name (\"Chiniot District\", \"Chakwal District\", \"Kasur District\"), total_city_population (165936.0, 1526168.0, 113524.0), city_area (75.0, 18.0, 38.0) | store_product : product_id (1, 4, 1), store_id (1, 5, 1) | store_district : store_id (2, 2, 1), district_id (4, 3, 3)", "schema_without_content": "product : max_page_size , pages_per_minute_color , dimensions , interface , dpi , product_id , product  | store : type , ranking , store_id , store_name , number_of_product_category , area_size  | district : district_id , city_population , district_name , city_area , headquartered_city  | district_city_population : min_city_population , max_city_population , headquartered_city , avg_city_population , district_id , district_name , total_city_population , city_area  | store_product : product_id , store_id  | store_district : store_id , district_id "}, {"db_id": "store_product", "query": "select total_city_population from district_city_population where city_area > (select avg(city_area)from district)", "query_toks": ["SELECT", "sum", "(", "city_population", ")", "FROM", "district", "WHERE", "city_area", ">", "(", "SELECT", "avg", "(", "city_area", ")", "FROM", "district", ")"], "query_toks_no_value": ["select", "sum", "(", "city_population", ")", "from", "district", "where", "city_area", ">", "(", "select", "avg", "(", "city_area", ")", "from", "district", ")"], "question": "What is the total population for all the districts that have an area larger tahn the average city area?", "question_toks": ["What", "is", "the", "total", "population", "for", "all", "the", "districts", "that", "have", "an", "area", "larger", "tahn", "the", "average", "city", "area", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 18, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 18, false], null]]]], "union": null, "where": []}, null]]}, "primary_key": {"district": "district_id"}, "orig_query": "select sum(city_population) from district where city_area > (select avg(city_area) from district)", "split_map": {"district": ["max_city_population", "min_city_population", "avg_city_population", "total_city_population"]}, "schema_with_content": "product : product_id (4, 3, 3), dimensions (\"303 x 94 x 60\", \"301 x 160 x 158\", \"298 x 209 x 99\"), max_page_size (\"A4\", \"216mm x 356mm\", \"216mm x 355mm\"), pages_per_minute_color (30.0, 3.0, 28.0), product (\"Fujitsu fi-6130 A4 Series Scanner\", \"Fujitsu fi-6130 A4 Series Scanner\", \"Fujitsu fi-6130 A4 Series Scanner\"), interface (\"USB 2.0\"), dpi (600.0) | store : type (\"City Mall\", \"Village Store\"), store_id (2, 2, 1), number_of_product_category (1170.0, 17811.0, 990.0), area_size (179.84, 26.69, 179.84), ranking (10, 3, 2), store_name (\"Doaktown\", \"Neguac\", \"Miramichi\") | district : district_name (\"Attock District\", \"Faisalabad District\", \"Bhakkar District\"), district_id (14, 10, 13), city_population (365198.0, 1526168.0, 328512.0), headquartered_city (\"Bahawalpur City\", \"Bhakkar City\", \"Dera Ghazi Khan City\"), city_area (22.0, 147.0, 12.0) | district_city_population : district_id (14, 10, 13), headquartered_city (\"Bahawalpur City\", \"Bhakkar City\", \"Dera Ghazi Khan City\"), district_name (\"Attock District\", \"Faisalabad District\", \"Bhakkar District\"), min_city_population (365198.0, 1526168.0, 328512.0), total_city_population (365198.0, 1526168.0, 328512.0), avg_city_population (365198.0, 1526168.0, 328512.0), max_city_population (365198.0, 1526168.0, 328512.0), city_area (22.0, 147.0, 12.0) | store_product : store_id (2, 3, 1), product_id (6, 4, 2) | store_district : store_id (1, 1, 2), district_id (11, 15, 11)", "schema_without_content": "product : product_id , dimensions , max_page_size , pages_per_minute_color , product , interface , dpi  | store : type , store_id , number_of_product_category , area_size , ranking , store_name  | district : district_name , district_id , city_population , headquartered_city , city_area  | district_city_population : district_id , headquartered_city , district_name , min_city_population , total_city_population , avg_city_population , max_city_population , city_area  | store_product : store_id , product_id  | store_district : store_id , district_id "}, {"db_id": "soccer_2", "query": "select total_enr from college_enr", "query_toks": ["SELECT", "sum", "(", "enr", ")", "FROM", "College"], "query_toks_no_value": ["select", "sum", "(", "enr", ")", "from", "college"], "question": "What is the total enrollment number of all colleges?", "question_toks": ["What", "is", "the", "total", "enrollment", "number", "of", "all", "colleges", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"college": "cname"}, "orig_query": "select sum(enr) from college", "split_map": {"college": ["max_enr", "min_enr", "avg_enr", "total_enr"]}, "schema_with_content": "college : state (\"LA\", \"FL\", \"LA\"), enr (22000, 18000, 19000), cname (\"FSU\", \"OU\", \"ASU\") | college_enr : cname (\"FSU\", \"OU\", \"ASU\"), total_enr (22000, 18000, 19000), max_enr (22000, 18000, 19000), state (\"LA\", \"FL\", \"LA\"), min_enr (22000, 18000, 19000), avg_enr (22000, 18000, 19000) | player : pid (10001, 20002, 20002), ycard (\"no\", \"yes\"), hs (300, 1600, 1600), pname (\"Drago\", \"Drago\", \"Drago\") | tryout : pid (20002, 30003, 50005), decision (\"no\", \"yes\"), cname (\"FSU\", \"ASU\", \"OU\"), ppos (\"goalie\", \"striker\", \"mid\")", "schema_without_content": "college : state , enr , cname  | college_enr : cname , total_enr , max_enr , state , min_enr , avg_enr  | player : pid , ycard , hs , pname  | tryout : pid , decision , cname , ppos "}, {"db_id": "soccer_2", "query": "select total_enr from college_enr", "query_toks": ["SELECT", "sum", "(", "enr", ")", "FROM", "College"], "query_toks_no_value": ["select", "sum", "(", "enr", ")", "from", "college"], "question": "How many students are enrolled in college?", "question_toks": ["How", "many", "students", "are", "enrolled", "in", "college", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"college": "cname"}, "orig_query": "select sum(enr) from college", "split_map": {"college": ["max_enr", "min_enr", "avg_enr", "total_enr"]}, "schema_with_content": "college : enr (19000, 19000, 18000), cname (\"FSU\", \"OU\", \"LSU\"), state (\"LA\", \"AZ\", \"LA\") | college_enr : min_enr (19000, 19000, 18000), total_enr (19000, 19000, 18000), max_enr (19000, 19000, 18000), state (\"LA\", \"AZ\", \"LA\"), avg_enr (19000, 19000, 18000), cname (\"FSU\", \"OU\", \"LSU\") | player : hs (300, 1200, 1600), pname (\"David\", \"Blake\", \"Andrew\"), pid (40002, 30003, 30003), ycard (\"no\", \"yes\") | tryout : decision (\"no\", \"yes\"), cname (\"OU\", \"FSU\", \"OU\"), ppos (\"goalie\", \"striker\", \"mid\"), pid (40004, 20002, 30003)", "schema_without_content": "college : enr , cname , state  | college_enr : min_enr , total_enr , max_enr , state , avg_enr , cname  | player : hs , pname , pid , ycard  | tryout : decision , cname , ppos , pid "}, {"db_id": "soccer_2", "query": "select avg_enr from college_enr", "query_toks": ["SELECT", "avg", "(", "enr", ")", "FROM", "College"], "query_toks_no_value": ["select", "avg", "(", "enr", ")", "from", "college"], "question": "What is the average enrollment number?", "question_toks": ["What", "is", "the", "average", "enrollment", "number", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"college": "cname"}, "orig_query": "select avg(enr) from college", "split_map": {"college": ["max_enr", "min_enr", "avg_enr", "total_enr"]}, "schema_with_content": "college : enr (12000, 18000, 18000), cname (\"LSU\", \"ASU\", \"FSU\"), state (\"OK\", \"LA\", \"LA\") | college_enr : max_enr (12000, 18000, 18000), state (\"OK\", \"LA\", \"LA\"), avg_enr (12000, 18000, 18000), cname (\"LSU\", \"ASU\", \"FSU\"), min_enr (12000, 18000, 18000), total_enr (12000, 18000, 18000) | player : ycard (\"no\", \"yes\"), pid (50005, 50005, 30003), pname (\"Drago\", \"Charles\", \"David\"), hs (1600, 600, 1200) | tryout : pid (40004, 10001, 40004), decision (\"no\", \"yes\"), cname (\"OU\", \"ASU\", \"OU\"), ppos (\"goalie\", \"striker\", \"mid\")", "schema_without_content": "college : enr , cname , state  | college_enr : max_enr , state , avg_enr , cname , min_enr , total_enr  | player : ycard , pid , pname , hs  | tryout : pid , decision , cname , ppos "}, {"db_id": "soccer_2", "query": "select avg_enr from college_enr", "query_toks": ["SELECT", "avg", "(", "enr", ")", "FROM", "College"], "query_toks_no_value": ["select", "avg", "(", "enr", ")", "from", "college"], "question": "How many students, on average, does each college have enrolled?", "question_toks": ["How", "many", "students", ",", "on", "average", ",", "does", "each", "college", "have", "enrolled", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"college": "cname"}, "orig_query": "select avg(enr) from college", "split_map": {"college": ["max_enr", "min_enr", "avg_enr", "total_enr"]}, "schema_with_content": "college : cname (\"LSU\", \"LSU\", \"ASU\"), enr (19000, 18000, 22000), state (\"AZ\", \"LA\", \"FL\") | college_enr : max_enr (19000, 18000, 22000), total_enr (19000, 18000, 22000), state (\"AZ\", \"LA\", \"FL\"), cname (\"LSU\", \"LSU\", \"ASU\"), avg_enr (19000, 18000, 22000), min_enr (19000, 18000, 22000) | player : ycard (\"no\", \"yes\"), pname (\"Blake\", \"David\", \"Blake\"), hs (300, 1600, 300), pid (40004, 50005, 30003) | tryout : pid (40004, 20002, 40004), cname (\"FSU\", \"LSU\", \"FSU\"), decision (\"no\", \"yes\"), ppos (\"goalie\", \"striker\", \"mid\")", "schema_without_content": "college : cname , enr , state  | college_enr : max_enr , total_enr , state , cname , avg_enr , min_enr  | player : ycard , pname , hs , pid  | tryout : pid , cname , decision , ppos "}, {"db_id": "soccer_2", "query": "select avg_hs from player_hs", "query_toks": ["SELECT", "avg", "(", "HS", ")", "FROM", "Player"], "query_toks_no_value": ["select", "avg", "(", "hs", ")", "from", "player"], "question": "What is the average training hours of all players?", "question_toks": ["What", "is", "the", "average", "training", "hours", "of", "all", "players", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"player": "pid"}, "orig_query": "select avg(hs) from player", "split_map": {"player": ["max_hs", "min_hs", "avg_hs", "total_hs"]}, "schema_with_content": "college : state (\"FL\", \"OK\", \"FL\"), cname (\"FSU\", \"LSU\", \"ASU\"), enr (19000, 22000, 18000) | player : pname (\"Andrew\", \"David\", \"Andrew\"), pid (40002, 30003, 40004), ycard (\"no\", \"yes\"), hs (1200, 1200, 600) | player_hs : max_hs (1200, 1200, 600), total_hs (1200, 1200, 600), min_hs (1200, 1200, 600), pname (\"Andrew\", \"David\", \"Andrew\"), ycard (\"no\", \"yes\"), pid (40002, 30003, 40004), avg_hs (1200, 1200, 600) | tryout : ppos (\"goalie\", \"striker\", \"mid\"), decision (\"no\", \"yes\"), cname (\"FSU\", \"LSU\", \"LSU\"), pid (50005, 20002, 10001)", "schema_without_content": "college : state , cname , enr  | player : pname , pid , ycard , hs  | player_hs : max_hs , total_hs , min_hs , pname , ycard , pid , avg_hs  | tryout : ppos , decision , cname , pid "}, {"db_id": "soccer_2", "query": "select avg_hs from player_hs", "query_toks": ["SELECT", "avg", "(", "HS", ")", "FROM", "Player"], "query_toks_no_value": ["select", "avg", "(", "hs", ")", "from", "player"], "question": "How many hours do the players train on average?", "question_toks": ["How", "many", "hours", "do", "the", "players", "train", "on", "average", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"player": "pid"}, "orig_query": "select avg(hs) from player", "split_map": {"player": ["max_hs", "min_hs", "avg_hs", "total_hs"]}, "schema_with_content": "college : enr (18000, 18000, 12000), cname (\"FSU\", \"OU\", \"OU\"), state (\"LA\", \"FL\", \"AZ\") | player : ycard (\"no\", \"yes\"), pname (\"Eddie\", \"Andrew\", \"David\"), pid (40002, 10001, 40002), hs (1600, 600, 1200) | player_hs : min_hs (1600, 600, 1200), pname (\"Eddie\", \"Andrew\", \"David\"), pid (40002, 10001, 40002), max_hs (1600, 600, 1200), total_hs (1600, 600, 1200), ycard (\"no\", \"yes\"), avg_hs (1600, 600, 1200) | tryout : ppos (\"goalie\", \"striker\", \"mid\"), cname (\"OU\", \"ASU\", \"ASU\"), decision (\"no\", \"yes\"), pid (20002, 40004, 30003)", "schema_without_content": "college : enr , cname , state  | player : ycard , pname , pid , hs  | player_hs : min_hs , pname , pid , max_hs , total_hs , ycard , avg_hs  | tryout : ppos , cname , decision , pid "}, {"db_id": "soccer_2", "query": "select avg_hs, max_hs, min_hs from player_hs", "query_toks": ["SELECT", "avg", "(", "HS", ")", ",", "max", "(", "HS", ")", ",", "min", "(", "HS", ")", "FROM", "Player"], "query_toks_no_value": ["select", "avg", "(", "hs", ")", ",", "max", "(", "hs", ")", ",", "min", "(", "hs", ")", "from", "player"], "question": "Find the max, average and min training hours of all players.", "question_toks": ["Find", "the", "max", ",", "average", "and", "min", "training", "hours", "of", "all", "players", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 7, false], null]], [1, [0, [0, 7, false], null]], [2, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"player": "pid"}, "orig_query": "select avg(hs), max(hs), min(hs) from player", "split_map": {"player": ["max_hs", "min_hs", "avg_hs", "total_hs"]}, "schema_with_content": "college : state (\"OK\", \"OK\", \"AZ\"), enr (12000, 19000, 18000), cname (\"FSU\", \"ASU\", \"LSU\") | player : pid (10001, 10001, 30003), pname (\"Charles\", \"Andrew\", \"David\"), hs (1200, 300, 1600), ycard (\"no\", \"yes\") | player_hs : total_hs (1200, 300, 1600), ycard (\"no\", \"yes\"), max_hs (1200, 300, 1600), avg_hs (1200, 300, 1600), pid (10001, 10001, 30003), pname (\"Charles\", \"Andrew\", \"David\"), min_hs (1200, 300, 1600) | tryout : decision (\"no\", \"yes\"), pid (10001, 20002, 50005), ppos (\"goalie\", \"striker\", \"mid\"), cname (\"ASU\", \"OU\", \"OU\")", "schema_without_content": "college : state , enr , cname  | player : pid , pname , hs , ycard  | player_hs : total_hs , ycard , max_hs , avg_hs , pid , pname , min_hs  | tryout : decision , pid , ppos , cname "}, {"db_id": "soccer_2", "query": "select avg_hs, max_hs, min_hs from player_hs", "query_toks": ["SELECT", "avg", "(", "HS", ")", ",", "max", "(", "HS", ")", ",", "min", "(", "HS", ")", "FROM", "Player"], "query_toks_no_value": ["select", "avg", "(", "hs", ")", ",", "max", "(", "hs", ")", ",", "min", "(", "hs", ")", "from", "player"], "question": "What is the average, maximum, and minimum for the number of hours spent training?", "question_toks": ["What", "is", "the", "average", ",", "maximum", ",", "and", "minimum", "for", "the", "number", "of", "hours", "spent", "training", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 7, false], null]], [1, [0, [0, 7, false], null]], [2, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"player": "pid"}, "orig_query": "select avg(hs), max(hs), min(hs) from player", "split_map": {"player": ["max_hs", "min_hs", "avg_hs", "total_hs"]}, "schema_with_content": "college : enr (19000, 22000, 12000), cname (\"ASU\", \"LSU\", \"FSU\"), state (\"AZ\", \"OK\", \"AZ\") | player : hs (300, 600, 1600), ycard (\"no\", \"yes\"), pname (\"Charles\", \"David\", \"Charles\"), pid (20002, 20002, 50005) | player_hs : max_hs (300, 600, 1600), pname (\"Charles\", \"David\", \"Charles\"), ycard (\"no\", \"yes\"), min_hs (300, 600, 1600), pid (20002, 20002, 50005), total_hs (300, 600, 1600), avg_hs (300, 600, 1600) | tryout : pid (20002, 30003, 40004), cname (\"FSU\", \"ASU\", \"ASU\"), ppos (\"goalie\", \"striker\", \"mid\"), decision (\"no\", \"yes\")", "schema_without_content": "college : enr , cname , state  | player : hs , ycard , pname , pid  | player_hs : max_hs , pname , ycard , min_hs , pid , total_hs , avg_hs  | tryout : pid , cname , ppos , decision "}, {"db_id": "soccer_2", "query": "select avg_enr from college_enr where state = 'FL'", "query_toks": ["SELECT", "avg", "(", "enr", ")", "FROM", "College", "WHERE", "state", "=", "'FL", "'"], "query_toks_no_value": ["select", "avg", "(", "enr", ")", "from", "college", "where", "state", "=", "value"], "question": "What is average enrollment of colleges in the state FL?", "question_toks": ["What", "is", "average", "enrollment", "of", "colleges", "in", "the", "state", "FL", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"FL\"", null]]}, "primary_key": {"college": "cname"}, "orig_query": "select avg(enr) from college where state = 'FL'", "split_map": {"college": ["max_enr", "min_enr", "avg_enr", "total_enr"]}, "schema_with_content": "college : cname (\"FSU\", \"ASU\", \"LSU\"), enr (19000, 22000, 18000), state (\"OK\", \"FL\", \"AZ\") | college_enr : avg_enr (19000, 22000, 18000), cname (\"FSU\", \"ASU\", \"LSU\"), max_enr (19000, 22000, 18000), total_enr (19000, 22000, 18000), min_enr (19000, 22000, 18000), state (\"OK\", \"FL\", \"AZ\") | player : pid (40004, 30003, 30003), pname (\"Charles\", \"Charles\", \"Charles\"), ycard (\"no\", \"yes\"), hs (1200, 1200, 300) | tryout : ppos (\"goalie\", \"striker\", \"mid\"), decision (\"no\", \"yes\"), pid (40004, 50005, 10001), cname (\"ASU\", \"FSU\", \"LSU\")", "schema_without_content": "college : cname , enr , state  | college_enr : avg_enr , cname , max_enr , total_enr , min_enr , state  | player : pid , pname , ycard , hs  | tryout : ppos , decision , pid , cname "}, {"db_id": "soccer_2", "query": "select avg_enr from college_enr where state = 'FL'", "query_toks": ["SELECT", "avg", "(", "enr", ")", "FROM", "College", "WHERE", "state", "=", "'FL", "'"], "query_toks_no_value": ["select", "avg", "(", "enr", ")", "from", "college", "where", "state", "=", "value"], "question": "What is average number of students enrolled in Florida colleges?", "question_toks": ["What", "is", "average", "number", "of", "students", "enrolled", "in", "Florida", "colleges", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"FL\"", null]]}, "primary_key": {"college": "cname"}, "orig_query": "select avg(enr) from college where state = 'FL'", "split_map": {"college": ["max_enr", "min_enr", "avg_enr", "total_enr"]}, "schema_with_content": "college : state (\"FL\", \"OK\", \"FL\"), cname (\"FSU\", \"LSU\", \"ASU\"), enr (12000, 18000, 12000) | college_enr : cname (\"FSU\", \"LSU\", \"ASU\"), total_enr (12000, 18000, 12000), avg_enr (12000, 18000, 12000), min_enr (12000, 18000, 12000), max_enr (12000, 18000, 12000), state (\"FL\", \"OK\", \"FL\") | player : pid (20002, 10001, 10001), hs (1200, 1200, 300), ycard (\"no\", \"yes\"), pname (\"Drago\", \"Andrew\", \"Charles\") | tryout : cname (\"LSU\", \"OU\", \"ASU\"), ppos (\"goalie\", \"striker\", \"mid\"), decision (\"no\", \"yes\"), pid (50005, 40004, 40004)", "schema_without_content": "college : state , cname , enr  | college_enr : cname , total_enr , avg_enr , min_enr , max_enr , state  | player : pid , hs , ycard , pname  | tryout : cname , ppos , decision , pid "}, {"db_id": "soccer_2", "query": "select cname, state, min_enr from college_enr group by state", "query_toks": ["SELECT", "cName", ",", "state", ",", "min", "(", "enr", ")", "FROM", "college", "GROUP", "BY", "state"], "query_toks_no_value": ["select", "cname", ",", "state", ",", "min", "(", "enr", ")", "from", "college", "group", "by", "state"], "question": "What is the name of school that has the smallest enrollment in each state?", "question_toks": ["What", "is", "the", "name", "of", "school", "that", "has", "the", "smallest", "enrollment", "in", "each", "state", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [2, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"college": "cname"}, "orig_query": "select cname, state, min(enr) from college group by state", "split_map": {"college": ["max_enr", "min_enr", "avg_enr", "total_enr"]}, "schema_with_content": "college : state (\"AZ\", \"LA\", \"FL\"), cname (\"LSU\", \"FSU\", \"OU\"), enr (18000, 22000, 19000) | college_enr : cname (\"LSU\", \"FSU\", \"OU\"), max_enr (18000, 22000, 19000), min_enr (18000, 22000, 19000), total_enr (18000, 22000, 19000), state (\"AZ\", \"LA\", \"FL\"), avg_enr (18000, 22000, 19000) | player : pname (\"Andrew\", \"David\", \"Eddie\"), pid (50005, 20002, 30003), hs (1200, 1200, 1200), ycard (\"no\", \"yes\") | tryout : decision (\"no\", \"yes\"), ppos (\"goalie\", \"striker\", \"mid\"), cname (\"FSU\", \"ASU\", \"LSU\"), pid (30003, 40004, 10001)", "schema_without_content": "college : state , cname , enr  | college_enr : cname , max_enr , min_enr , total_enr , state , avg_enr  | player : pname , pid , hs , ycard  | tryout : decision , ppos , cname , pid "}, {"db_id": "soccer_2", "query": "select cname, state, min_enr from college_enr group by state", "query_toks": ["SELECT", "cName", ",", "state", ",", "min", "(", "enr", ")", "FROM", "college", "GROUP", "BY", "state"], "query_toks_no_value": ["select", "cname", ",", "state", ",", "min", "(", "enr", ")", "from", "college", "group", "by", "state"], "question": "What is the name of the school with smallest enrollment size per state?", "question_toks": ["What", "is", "the", "name", "of", "the", "school", "with", "smallest", "enrollment", "size", "per", "state", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [2, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"college": "cname"}, "orig_query": "select cname, state, min(enr) from college group by state", "split_map": {"college": ["max_enr", "min_enr", "avg_enr", "total_enr"]}, "schema_with_content": "college : enr (19000, 19000, 12000), state (\"OK\", \"OK\", \"OK\"), cname (\"OU\", \"FSU\", \"OU\") | college_enr : max_enr (19000, 19000, 12000), total_enr (19000, 19000, 12000), cname (\"OU\", \"FSU\", \"OU\"), avg_enr (19000, 19000, 12000), state (\"OK\", \"OK\", \"OK\"), min_enr (19000, 19000, 12000) | player : hs (1600, 1200, 1600), pid (30003, 50005, 10001), pname (\"Eddie\", \"Drago\", \"Charles\"), ycard (\"no\", \"yes\") | tryout : ppos (\"goalie\", \"striker\", \"mid\"), cname (\"OU\", \"OU\", \"FSU\"), decision (\"no\", \"yes\"), pid (30003, 10001, 40004)", "schema_without_content": "college : enr , state , cname  | college_enr : max_enr , total_enr , cname , avg_enr , state , min_enr  | player : hs , pid , pname , ycard  | tryout : ppos , cname , decision , pid "}, {"db_id": "soccer_2", "query": "select total_enr from college_enr where cname not in (select cname from tryout where ppos = \"goalie\")", "query_toks": ["SELECT", "sum", "(", "enr", ")", "FROM", "college", "WHERE", "cName", "NOT", "IN", "(", "SELECT", "cName", "FROM", "tryout", "WHERE", "pPos", "=", "``", "goalie", "''", ")"], "query_toks_no_value": ["select", "sum", "(", "enr", ")", "from", "college", "where", "cname", "not", "in", "(", "select", "cname", "from", "tryout", "where", "ppos", "=", "value", ")"], "question": "What is the total number of enrollment of schools that do not have any goalie player?", "question_toks": ["What", "is", "the", "total", "number", "of", "enrollment", "of", "schools", "that", "do", "not", "have", "any", "goalie", "player", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 3, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"goalie\"", null]]}, null]]}, "primary_key": {"college": "cname"}, "orig_query": "select sum(enr) from college where cname not in (select cname from tryout where ppos = \"goalie\")", "split_map": {"college": ["max_enr", "min_enr", "avg_enr", "total_enr"]}, "schema_with_content": "college : cname (\"ASU\", \"OU\", \"FSU\"), state (\"AZ\", \"AZ\", \"AZ\"), enr (22000, 22000, 18000) | college_enr : avg_enr (22000, 22000, 18000), min_enr (22000, 22000, 18000), state (\"AZ\", \"AZ\", \"AZ\"), cname (\"ASU\", \"OU\", \"FSU\"), max_enr (22000, 22000, 18000), total_enr (22000, 22000, 18000) | player : pname (\"Blake\", \"Blake\", \"Charles\"), pid (30003, 40002, 40002), ycard (\"no\", \"yes\"), hs (1600, 300, 300) | tryout : cname (\"OU\", \"OU\", \"OU\"), ppos (\"goalie\", \"striker\", \"mid\"), decision (\"no\", \"yes\"), pid (10001, 50005, 30003)", "schema_without_content": "college : cname , state , enr  | college_enr : avg_enr , min_enr , state , cname , max_enr , total_enr  | player : pname , pid , ycard , hs  | tryout : cname , ppos , decision , pid "}, {"db_id": "soccer_2", "query": "select total_enr from college_enr where cname not in (select cname from tryout where ppos = \"goalie\")", "query_toks": ["SELECT", "sum", "(", "enr", ")", "FROM", "college", "WHERE", "cName", "NOT", "IN", "(", "SELECT", "cName", "FROM", "tryout", "WHERE", "pPos", "=", "``", "goalie", "''", ")"], "query_toks_no_value": ["select", "sum", "(", "enr", ")", "from", "college", "where", "cname", "not", "in", "(", "select", "cname", "from", "tryout", "where", "ppos", "=", "value", ")"], "question": "What is the total number of students enrolled in schools without any goalies?", "question_toks": ["What", "is", "the", "total", "number", "of", "students", "enrolled", "in", "schools", "without", "any", "goalies", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 3, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"goalie\"", null]]}, null]]}, "primary_key": {"college": "cname"}, "orig_query": "select sum(enr) from college where cname not in (select cname from tryout where ppos = \"goalie\")", "split_map": {"college": ["max_enr", "min_enr", "avg_enr", "total_enr"]}, "schema_with_content": "college : enr (22000, 18000, 12000), state (\"FL\", \"FL\", \"OK\"), cname (\"LSU\", \"ASU\", \"OU\") | college_enr : avg_enr (22000, 18000, 12000), cname (\"LSU\", \"ASU\", \"OU\"), state (\"FL\", \"FL\", \"OK\"), min_enr (22000, 18000, 12000), max_enr (22000, 18000, 12000), total_enr (22000, 18000, 12000) | player : pid (10001, 20002, 30003), ycard (\"no\", \"yes\"), hs (300, 300, 1600), pname (\"Charles\", \"Charles\", \"David\") | tryout : ppos (\"goalie\", \"striker\", \"mid\"), decision (\"no\", \"yes\"), cname (\"FSU\", \"ASU\", \"OU\"), pid (50005, 40004, 50005)", "schema_without_content": "college : enr , state , cname  | college_enr : avg_enr , cname , state , min_enr , max_enr , total_enr  | player : pid , ycard , hs , pname  | tryout : ppos , decision , cname , pid "}, {"db_id": "device", "query": "select avg_quantity from stock_quantity", "query_toks": ["SELECT", "avg", "(", "Quantity", ")", "FROM", "stock"], "query_toks_no_value": ["select", "avg", "(", "quantity", ")", "from", "stock"], "question": "What is the average quantity of stocks?", "question_toks": ["What", "is", "the", "average", "quantity", "of", "stocks", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]]]], "union": null, "where": []}, "primary_key": {"stock": "shop_id"}, "orig_query": "select avg(quantity) from stock", "split_map": {"stock": ["max_quantity", "min_quantity", "avg_quantity", "total_quantity"]}, "schema_with_content": "device : device_id (4, 2, 6), package_version (\"4.7.0.208\", \"4.7.0.208\", \"5.0.0.808\"), device (\"Apple\", \"Apple\", \"Galaxy\"), carrier (\"Vodafone AU\", \"Verizon Wireless\", \"Bell Mobility\"), software_platform (\"Android\", \"iOS\"), applications (\"5.0.0.419\", \"4.7.0.151\", \"5.0.0.419\") | shop : open_year (2017, 2014, 2015), location (\"Cymmer\", \"Wattstown\", \"Maerdy\"), open_date (\"10 June\", \"8 November\", \"27 January\"), shop_name (\"Naval repair\", \"Dinas Device\", \"Naval repair\"), shop_id (12, 6, 11) | stock : quantity (100, 100, 56), shop_id (1, 2, 4), device_id (4, 6) | stock_quantity : min_quantity (100, 100, 56), shop_id (1, 2, 4), max_quantity (100, 100, 56), total_quantity (100, 100, 56), device_id (4, 6), avg_quantity (100, 100, 56)", "schema_without_content": "device : device_id , package_version , device , carrier , software_platform , applications  | shop : open_year , location , open_date , shop_name , shop_id  | stock : quantity , shop_id , device_id  | stock_quantity : min_quantity , shop_id , max_quantity , total_quantity , device_id , avg_quantity "}, {"db_id": "device", "query": "select avg_quantity from stock_quantity", "query_toks": ["SELECT", "avg", "(", "Quantity", ")", "FROM", "stock"], "query_toks_no_value": ["select", "avg", "(", "quantity", ")", "from", "stock"], "question": "Give the average quantity of stocks.", "question_toks": ["Give", "the", "average", "quantity", "of", "stocks", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]]]], "union": null, "where": []}, "primary_key": {"stock": "shop_id"}, "orig_query": "select avg(quantity) from stock", "split_map": {"stock": ["max_quantity", "min_quantity", "avg_quantity", "total_quantity"]}, "schema_with_content": "device : package_version (\"5.0.0.808\", \"5.0.0.328\", \"5.0.0.328\"), applications (\"5.0.0.419\", \"5.0.0.328\", \"5.0.0.419\"), device_id (6, 3, 6), software_platform (\"Android\", \"iOS\"), device (\"Samsung\", \"Xiaomi\", \"BlackBerry Storm 9530\"), carrier (\"Iusacell\", \"Iusacell\", \"Bell Mobility\") | shop : location (\"Gelli\", \"Dinas\", \"Penygraig\"), shop_id (9, 2, 7), open_date (\"1 January\", \"23\u00e2\u0080\u009324 December\", \"24 February\"), open_year (2015, 2017, 2017), shop_name (\"Best Buy\", \"Apple\", \"Naval's shop\") | stock : quantity (124, 200, 124), shop_id (11, 11, 2), device_id (4, 6) | stock_quantity : max_quantity (124, 200, 124), min_quantity (124, 200, 124), device_id (4, 6), avg_quantity (124, 200, 124), shop_id (11, 11, 2), total_quantity (124, 200, 124)", "schema_without_content": "device : package_version , applications , device_id , software_platform , device , carrier  | shop : location , shop_id , open_date , open_year , shop_name  | stock : quantity , shop_id , device_id  | stock_quantity : max_quantity , min_quantity , device_id , avg_quantity , shop_id , total_quantity "}, {"db_id": "cre_Drama_Workshop_Groups", "query": "select min_order_quantity, avg_order_quantity, max_order_quantity from invoices_order_quantity", "query_toks": ["SELECT", "min", "(", "Order_Quantity", ")", ",", "avg", "(", "Order_Quantity", ")", ",", "max", "(", "Order_Quantity", ")", "FROM", "INVOICES"], "query_toks_no_value": ["select", "min", "(", "order_quantity", ")", ",", "avg", "(", "order_quantity", ")", ",", "max", "(", "order_quantity", ")", "from", "invoices"], "question": "Show the minimum, average, maximum order quantity of all invoices.", "question_toks": ["Show", "the", "minimum", ",", "average", ",", "maximum", "order", "quantity", "of", "all", "invoices", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 14]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 81, false], null]], [5, [0, [0, 81, false], null]], [1, [0, [0, 81, false], null]]]], "union": null, "where": []}, "primary_key": {"invoices": "invoice_id"}, "orig_query": "select min(order_quantity), avg(order_quantity), max(order_quantity) from invoices", "split_map": {"invoices": ["max_order_quantity", "min_order_quantity", "avg_order_quantity", "total_order_quantity"]}, "schema_with_content": "ref_payment_methods : payment_method_description (\"credit\", \"debit\", \"Visa\"), payment_method_code (\"American E\", \"MasterCard\", \"Visa\") | ref_service_types : parent_service_type_code (\"1\"), service_type_description (\"provide filming service\", \"provide adv promoting service\", \"provide filming service\"), service_type_code (\"1\", \"3\", \"3\") | addresses : city_town (\"Jasthaven\", \"Nataliamouth\", \"Desireefort\"), state_county (\"Ohio\", \"Alabama\", \"WestVirginia\"), line_2 (\"Suite 311\", \"Suite 583\", \"Suite 583\"), address_id (\"74\", \"207\", \"286\"), other_details (None), line_1 (\"70561 Vicenta Islands Apt. 873\", \"70561 Vicenta Islands Apt. 873\", \"809 Izabella Islands\") | products : product_name (\"photo\", \"film\", \"dinning\"), product_id (\"232\", \"46\", \"81\"), product_price (1577, 4082352, 157216), product_description (None), other_product_service_details (None) | marketing_regions : marketing_region_descriptrion (\"Our largest market\", \"Our target market\", \"Our target market\"), marketing_region_code (\"US\", \"US\", \"CA\"), marketing_region_name (\"Russia\", \"India\", \"China\"), other_details (None) | clients : client_id (631, 508, 735), address_id (74, 383, 98), other_details (\"VIP\", None, \"Super VIP\"), customer_phone (\"581.457.6800\", \"(995)964-6385\", \"+12(5)4915316228\"), customer_email_address (\"hudson.kristina@example.net\", \"lacy92@example.com\", \"qaltenwerth@example.com\"), customer_name (\"Alvis\", \"Genesis\", \"Clifford\") | drama_workshop_groups : store_email_address (\"kole.torp@example.org\", \"quigley.queen@example.org\", \"quigley.queen@example.org\"), store_phone (\"(422)705-5633\", \"499-032-2149\", \"(411)133-9128\"), marketing_region_code (\"DE\", \"ES\", \"RU\"), address_id (369, 266, 98), currency_code (\"EU\", \"USD\"), workshop_group_id (176, 954, 382), store_name (\"Uhuels Fruit\", \"Harry Beef\", \"Orn News\"), other_details (None, \"Good\", \"Bad\") | performers : address_id (314, 314, 110), other_details (None, \"Did not pay\", \"Pay good tips\"), performer_id (798, 433, 904), customer_name (\"Sid\", \"Shawna\", \"Jeanie\"), customer_phone (\"1-417-019-8634\", \"320.705.7190x0354\", \"08639382978\"), customer_email_address (\"clotilde04@example.net\", \"cokuneva@example.com\", \"okub@example.org\") | customers : customer_id (\"556\", \"516\", \"714\"), customer_phone (\"+46(5)7576252034\", \"1-463-121-4086x655\", \"624-096-7791\"), customer_email_address (\"clemens43@example.org\", \"ggrant@example.com\", \"jerde.harmon@example.com\"), other_details (None, \"VIP\"), customer_name (\"Alek\", \"Wade\", \"Daryl\"), address_id (201, 230, 74) | stores : marketing_region_code (\"IN\", \"CN\", \"CN\"), store_phone (\"893-457-3102x4293\", \"1-678-902-9434x1148\", \"605-319-8245\"), store_name (\"Shery Photo\", \"Adan Dinning\", \"Adam Photo\"), address_id (266, 369, 110), other_details (None, \"4 stars\", \"5 stars\"), store_email_address (\"lurline24@example.org\", \"adan93@example.com\", \"fkuvalis@example.net\"), store_id (\"512\", \"291\", \"150\") | bookings : workshop_group_id (\"954\", \"708\", \"838\"), other_order_details (None), actual_delivery_date (\"1982-04-18 02:59:08\", \"1986-10-04 13:31:10\", \"1971-01-13 13:24:52\"), planned_delivery_date (\"2017-04-27 00:16:00\", \"1999-05-11 01:26:06\", \"1999-05-11 01:26:06\"), booking_id (11, 4, 12), store_id (8, 9, 7), status_code (\"good\", \"stop\"), customer_id (953, 776, 953), order_date (\"1995-02-02 15:52:57\", \"1995-02-02 15:52:57\", \"2016-12-12 10:43:01\") | performers_in_bookings : performer_id (882, 976, 376), order_id (9, 11, 15) | customer_orders : order_date (\"1999-11-20 18:48:05\", \"1973-02-16 19:28:34\", \"2000-07-03 21:41:50\"), other_order_details (None), order_id (4, 12, 9), actual_delivery_date (\"2003-12-16 23:37:19\", \"1996-04-13 19:05:34\", \"1993-09-16 23:20:05\"), customer_id (712, 418, 556), planned_delivery_date (\"1987-03-21 18:50:27\", \"1990-09-25 07:14:01\", \"1977-07-08 16:35:46\"), store_id (344, 444, 150) | order_items : order_item_id (2, 1, 9), other_item_details (None), order_quantity (\"1\", \"2\"), product_id (156, 300, 233), order_id (11, 4, 7) | invoices : payment_method_code (\"MasterCard\", \"Visa\", \"American E\"), invoice_id (733, 777, 212), order_quantity (\"2\", \"1\"), product_id (2, 6, 9), order_item_id (9, 1, 9), other_item_details (None), order_id (1, 3, 1) | invoices_order_quantity : total_order_quantity (\"2\", \"1\"), product_id (2, 6, 9), payment_method_code (\"MasterCard\", \"Visa\", \"American E\"), invoice_id (733, 777, 212), avg_order_quantity (\"2\", \"1\"), min_order_quantity (\"2\", \"1\"), max_order_quantity (\"2\", \"1\"), order_id (1, 3, 1), other_item_details (None), order_item_id (9, 1, 9) | services : other_product_service_details (None), service_type_code (\"1\", \"1\", \"1\"), workshop_group_id (954, 470, 405), product_name (\"film\", \"dinning\", \"photo\"), service_id (219, 662, 219), product_description (None), product_price (2704.4719, 84063402.4351, 187358.6469) | bookings_services : order_id (8, 4, 1), product_id (396, 779, 630) | invoice_items : order_quantity (2, 6), product_id (396, 191), other_item_details (None, \"Good quality\"), order_id (1, 4), invoice_item_id (1, 2), order_item_id (5, 6), invoice_id (128, 162)", "schema_without_content": "ref_payment_methods : payment_method_description , payment_method_code  | ref_service_types : parent_service_type_code , service_type_description , service_type_code  | addresses : city_town , state_county , line_2 , address_id , other_details , line_1  | products : product_name , product_id , product_price , product_description , other_product_service_details  | marketing_regions : marketing_region_descriptrion , marketing_region_code , marketing_region_name , other_details  | clients : client_id , address_id , other_details , customer_phone 964-6385\", \"+124915316228\", customer_email_address , customer_name  | drama_workshop_groups : store_email_address , store_phone 705-5633\", \"499-032-2149\", \"133-9128\", marketing_region_code , address_id , currency_code , workshop_group_id , store_name , other_details  | performers : address_id , other_details , performer_id , customer_name , customer_phone , customer_email_address  | customers : customer_id , customer_phone 7576252034\", \"1-463-121-4086x655\", \"624-096-7791\", customer_email_address , other_details , customer_name , address_id  | stores : marketing_region_code , store_phone , store_name , address_id , other_details , store_email_address , store_id  | bookings : workshop_group_id , other_order_details , actual_delivery_date , planned_delivery_date , booking_id , store_id , status_code , customer_id , order_date  | performers_in_bookings : performer_id , order_id  | customer_orders : order_date , other_order_details , order_id , actual_delivery_date , customer_id , planned_delivery_date , store_id  | order_items : order_item_id , other_item_details , order_quantity , product_id , order_id  | invoices : payment_method_code , invoice_id , order_quantity , product_id , order_item_id , other_item_details , order_id  | invoices_order_quantity : total_order_quantity , product_id , payment_method_code , invoice_id , avg_order_quantity , min_order_quantity , max_order_quantity , order_id , other_item_details , order_item_id  | services : other_product_service_details , service_type_code , workshop_group_id , product_name , service_id , product_description , product_price  | bookings_services : order_id , product_id  | invoice_items : order_quantity , product_id , other_item_details , order_id , invoice_item_id , order_item_id , invoice_id "}, {"db_id": "cre_Drama_Workshop_Groups", "query": "select min_order_quantity, avg_order_quantity, max_order_quantity from invoices_order_quantity", "query_toks": ["SELECT", "min", "(", "Order_Quantity", ")", ",", "avg", "(", "Order_Quantity", ")", ",", "max", "(", "Order_Quantity", ")", "FROM", "INVOICES"], "query_toks_no_value": ["select", "min", "(", "order_quantity", ")", ",", "avg", "(", "order_quantity", ")", ",", "max", "(", "order_quantity", ")", "from", "invoices"], "question": "What are the minimum, average, and maximum quantities ordered? Check all the invoices.", "question_toks": ["What", "are", "the", "minimum", ",", "average", ",", "and", "maximum", "quantities", "ordered", "?", "Check", "all", "the", "invoices", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 14]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 81, false], null]], [5, [0, [0, 81, false], null]], [1, [0, [0, 81, false], null]]]], "union": null, "where": []}, "primary_key": {"invoices": "invoice_id"}, "orig_query": "select min(order_quantity), avg(order_quantity), max(order_quantity) from invoices", "split_map": {"invoices": ["max_order_quantity", "min_order_quantity", "avg_order_quantity", "total_order_quantity"]}, "schema_with_content": "ref_payment_methods : payment_method_description (\"credit\", \"debit\", \"Visa\"), payment_method_code (\"American E\", \"MasterCard\", \"Visa\") | ref_service_types : service_type_code (\"3\", \"1\", \"1\"), service_type_description (\"provide filming service\", \"provide photo service\", \"provide photo service\"), parent_service_type_code (\"1\") | addresses : line_1 (\"70561 Vicenta Islands Apt. 873\", \"8682 Boyle Glen\", \"77667 Nathan Union Apt. 606\"), other_details (None), state_county (\"Oklahoma\", \"WestVirginia\", \"Alaska\"), city_town (\"New Jaquelinmouth\", \"Cronaborough\", \"North Antonina\"), address_id (\"374\", \"19\", \"19\"), line_2 (\"Apt. 460\", \"Suite 846\", \"Apt. 741\") | products : product_id (\"233\", \"232\", \"300\"), product_name (\"photo\", \"film\", \"dinning\"), product_price (17622723, 22082866, 900), product_description (None), other_product_service_details (None) | marketing_regions : marketing_region_code (\"MX\", \"IN\", \"US\"), marketing_region_name (\"Spain\", \"India\", \"Spain\"), marketing_region_descriptrion (\"Our target market\", \"Our target market\", \"\"), other_details (None) | clients : customer_email_address (\"white.alysa@example.com\", \"cleora.strosin@example.org\", \"strosin.keara@example.com\"), address_id (110, 74, 369), customer_phone (\"1-299-766-5382x3122\", \"08761812417\", \"+63(3)8897932425\"), other_details (\"VIP\", None, \"Super VIP\"), customer_name (\"Vita\", \"Vita\", \"Arvid\"), client_id (868, 508, 527) | drama_workshop_groups : store_phone (\"+60(6)8081312118\", \"+60(6)8081312118\", \"334-591-4561x465\"), store_email_address (\"harry.nicolas@example.org\", \"breitenberg.veda@example.com\", \"quigley.queen@example.org\"), workshop_group_id (735, 176, 431), currency_code (\"EU\", \"USD\"), other_details (None, \"Good\", \"Bad\"), marketing_region_code (\"DE\", \"ES\", \"FR\"), address_id (124, 383, 369), store_name (\"Orn News\", \"Roo Place\", \"Welch Flower\") | performers : other_details (None, \"Did not pay\", \"Pay good tips\"), performer_id (376, 808, 341), customer_email_address (\"ferry.carolina@example.net\", \"wisozk.john@example.org\", \"ferry.carolina@example.net\"), customer_name (\"Dariana\", \"Tyrique\", \"Issac\"), address_id (314, 374, 124), customer_phone (\"893-536-8857\", \"320.705.7190x0354\", \"342-389-0010x682\") | customers : customer_email_address (\"jerde.harmon@example.com\", \"ggrant@example.com\", \"hickle.jazmyn@example.org\"), other_details (None, \"VIP\"), customer_name (\"Daryl\", \"Ephraim\", \"Elwyn\"), customer_id (\"793\", \"712\", \"546\"), address_id (286, 148, 369), customer_phone (\"1-463-121-4086x655\", \"903.657.6967x467\", \"(191)727-6065x6351\") | stores : address_id (74, 110, 230), other_details (\"5 stars\", \"5 stars\", None), store_phone (\"893-457-3102x4293\", \"127.870.0753x54565\", \"127.870.0753x54565\"), store_email_address (\"fkuvalis@example.net\", \"carmel04@example.com\", \"fjacobson@example.com\"), store_id (\"518\", \"236\", \"444\"), marketing_region_code (\"FR\", \"CN\", \"CN\"), store_name (\"Adam Photo\", \"FJA Filming\", \"Lur Photo\") | bookings : actual_delivery_date (\"2016-04-30 11:45:39\", \"1985-09-02 11:34:39\", \"1976-01-08 07:19:23\"), store_id (4, 8, 6), customer_id (605, 868, 508), planned_delivery_date (\"2016-06-06 20:35:14\", \"1979-07-19 19:44:01\", \"2016-06-06 20:35:14\"), booking_id (2, 6, 8), order_date (\"2007-08-05 15:46:29\", \"1996-09-14 10:17:55\", \"2007-08-05 15:46:29\"), workshop_group_id (\"685\", \"954\", \"954\"), other_order_details (None), status_code (\"good\", \"stop\") | performers_in_bookings : performer_id (798, 341, 808), order_id (9, 9, 13) | customer_orders : store_id (229, 229, 444), actual_delivery_date (\"1996-02-16 04:20:17\", \"2004-04-23 21:19:39\", \"1992-07-21 22:11:11\"), order_id (5, 2, 15), customer_id (556, 516, 516), planned_delivery_date (\"2012-05-19 00:38:52\", \"1996-08-26 19:19:59\", \"1987-03-21 18:50:27\"), other_order_details (None), order_date (\"2003-06-24 11:44:51\", \"2008-04-02 18:00:15\", \"1979-09-01 06:29:01\") | order_items : product_id (216, 156, 81), order_item_id (4, 14, 13), order_quantity (\"1\", \"2\"), other_item_details (None), order_id (7, 2, 6) | invoices : other_item_details (None), payment_method_code (\"MasterCard\", \"Visa\", \"American E\"), order_quantity (\"2\", \"1\"), invoice_id (612, 128, 398), order_item_id (1, 5, 9), product_id (8, 8, 8), order_id (1, 12, 13) | invoices_order_quantity : avg_order_quantity (\"2\", \"1\"), order_id (1, 12, 13), product_id (8, 8, 8), invoice_id (612, 128, 398), max_order_quantity (\"2\", \"1\"), payment_method_code (\"MasterCard\", \"Visa\", \"American E\"), min_order_quantity (\"2\", \"1\"), total_order_quantity (\"2\", \"1\"), other_item_details (None), order_item_id (1, 5, 9) | services : product_price (7299.6747, 19845767.8923, 187358.6469), service_id (662, 779, 414), product_description (None), product_name (\"film\", \"dinning\", \"photo\"), service_type_code (\"2\", \"1\", \"3\"), workshop_group_id (431, 838, 415), other_product_service_details (None) | bookings_services : order_id (1, 5, 1), product_id (779, 597, 779) | invoice_items : other_item_details (None, \"Good quality\"), invoice_id (128, 162), order_id (1, 4), invoice_item_id (1, 2), order_quantity (2, 6), order_item_id (5, 6), product_id (396, 191)", "schema_without_content": "ref_payment_methods : payment_method_description , payment_method_code  | ref_service_types : service_type_code , service_type_description , parent_service_type_code  | addresses : line_1 , other_details , state_county , city_town , address_id , line_2  | products : product_id , product_name , product_price , product_description , other_product_service_details  | marketing_regions : marketing_region_code , marketing_region_name , marketing_region_descriptrion , other_details  | clients : customer_email_address , address_id , customer_phone 8897932425\", other_details , customer_name , client_id  | drama_workshop_groups : store_phone 8081312118\", \"+608081312118\", \"334-591-4561x465\", store_email_address , workshop_group_id , currency_code , other_details , marketing_region_code , address_id , store_name  | performers : other_details , performer_id , customer_email_address , customer_name , address_id , customer_phone  | customers : customer_email_address , other_details , customer_name , customer_id , address_id , customer_phone 727-6065x6351\" | stores : address_id , other_details , store_phone , store_email_address , store_id , marketing_region_code , store_name  | bookings : actual_delivery_date , store_id , customer_id , planned_delivery_date , booking_id , order_date , workshop_group_id , other_order_details , status_code  | performers_in_bookings : performer_id , order_id  | customer_orders : store_id , actual_delivery_date , order_id , customer_id , planned_delivery_date , other_order_details , order_date  | order_items : product_id , order_item_id , order_quantity , other_item_details , order_id  | invoices : other_item_details , payment_method_code , order_quantity , invoice_id , order_item_id , product_id , order_id  | invoices_order_quantity : avg_order_quantity , order_id , product_id , invoice_id , max_order_quantity , payment_method_code , min_order_quantity , total_order_quantity , other_item_details , order_item_id  | services : product_price , service_id , product_description , product_name , service_type_code , workshop_group_id , other_product_service_details  | bookings_services : order_id , product_id  | invoice_items : other_item_details , invoice_id , order_id , invoice_item_id , order_quantity , order_item_id , product_id "}, {"db_id": "cre_Drama_Workshop_Groups", "query": "select product_name, avg_product_price from products_product_price group by product_name", "query_toks": ["SELECT", "Product_Name", ",", "avg", "(", "Product_Price", ")", "FROM", "PRODUCTS", "GROUP", "BY", "Product_Name"], "query_toks_no_value": ["select", "product_name", ",", "avg", "(", "product_price", ")", "from", "products", "group", "by", "product_name"], "question": "What are the different product names? What is the average product price for each of them?", "question_toks": ["What", "are", "the", "different", "product", "names", "?", "What", "is", "the", "average", "product", "price", "for", "each", "of", "them", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [5, [0, [0, 14, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "product_id"}, "orig_query": "select product_name, avg(product_price) from products group by product_name", "split_map": {"products": ["max_product_price", "min_product_price", "avg_product_price", "total_product_price"]}, "schema_with_content": "ref_payment_methods : payment_method_description (\"credit\", \"debit\", \"Visa\"), payment_method_code (\"American E\", \"MasterCard\", \"Visa\") | ref_service_types : service_type_description (\"provide filming service\", \"provide photo service\", \"provide filming service\"), service_type_code (\"4\", \"2\", \"1\"), parent_service_type_code (\"1\") | addresses : other_details (None), line_2 (\"Apt. 136\", \"Apt. 861\", \"Apt. 012\"), city_town (\"East Aracely\", \"West Sherwoodstad\", \"West Sherwoodstad\"), state_county (\"Oklahoma\", \"Kentucky\", \"Arizona\"), line_1 (\"2082 Runolfsson Cliffs\", \"545 Lula Mission\", \"391 Vandervort Fall Apt. 446\"), address_id (\"383\", \"74\", \"98\") | products : other_product_service_details (None), product_description (None), product_id (\"273\", \"83\", \"233\"), product_price (17622723, 50828, 22082866), product_name (\"photo\", \"film\", \"dinning\") | products_product_price : min_product_price (17622723, 50828, 22082866), product_id (\"273\", \"83\", \"233\"), total_product_price (17622723, 50828, 22082866), max_product_price (17622723, 50828, 22082866), product_name (\"photo\", \"film\", \"dinning\"), avg_product_price (17622723, 50828, 22082866), product_description (None), other_product_service_details (None) | marketing_regions : marketing_region_name (\"Mexico\", \"France\", \"India\"), marketing_region_descriptrion (\"Our main market\", \"\", \"\"), other_details (None), marketing_region_code (\"CN\", \"ES\", \"FR\") | clients : client_id (938, 478, 527), address_id (362, 383, 98), other_details (\"VIP\", None, \"Super VIP\"), customer_name (\"Marquis\", \"Rory\", \"Jack\"), customer_email_address (\"kbailey@example.com\", \"jklocko@example.net\", \"white.alysa@example.com\"), customer_phone (\"(651)611-6111x61144\", \"+12(5)4915316228\", \"1-431-563-2576x9849\") | drama_workshop_groups : other_details (None, \"Good\", \"Bad\"), workshop_group_id (685, 382, 176), currency_code (\"EU\", \"USD\"), address_id (374, 180, 124), store_name (\"Orn News\", \"Orn News\", \"Welch Flower\"), marketing_region_code (\"FR\", \"FR\", \"PT\"), store_email_address (\"harry.nicolas@example.org\", \"breitenberg.veda@example.com\", \"hansen.krista@example.net\"), store_phone (\"(256)743-0310\", \"(636)443-4067\", \"(020)161-0983x567\") | performers : address_id (207, 374, 207), customer_phone (\"893-536-8857\", \"320.705.7190x0354\", \"08639382978\"), other_details (None, \"Did not pay\", \"Pay good tips\"), customer_name (\"Dariana\", \"Doyle\", \"Trudie\"), performer_id (153, 415, 376), customer_email_address (\"clotilde04@example.net\", \"clotilde04@example.net\", \"preston45@example.net\") | customers : other_details (None, \"VIP\"), customer_email_address (\"keanu70@example.net\", \"gage.johns@example.org\", \"ggrant@example.com\"), customer_name (\"Elwyn\", \"Federico\", \"Jacques\"), customer_id (\"957\", \"712\", \"556\"), customer_phone (\"+46(5)7576252034\", \"398.352.1753\", \"056.568.7725\"), address_id (383, 207, 266) | stores : address_id (230, 230, 266), store_id (\"291\", \"512\", \"344\"), other_details (None, None, None), marketing_region_code (\"RU\", \"IN\", \"ES\"), store_name (\"Carmol Photo\", \"Adam Photo\", \"Shery Photo\"), store_email_address (\"rborer@example.org\", \"rborer@example.org\", \"carmel04@example.com\"), store_phone (\"605-319-8245\", \"086-705-8793\", \"896-931-9633x869\") | bookings : planned_delivery_date (\"1989-01-05 19:24:45\", \"1972-06-25 15:51:34\", \"2009-07-09 09:18:38\"), other_order_details (None), booking_id (10, 8, 6), customer_id (776, 868, 953), store_id (1, 7, 4), status_code (\"good\", \"stop\"), order_date (\"1992-05-11 23:22:41\", \"1976-10-24 07:40:47\", \"2007-08-05 15:46:29\"), actual_delivery_date (\"1983-02-07 20:27:10\", \"1985-09-02 11:34:39\", \"1976-01-08 07:19:23\"), workshop_group_id (\"176\", \"405\", \"136\") | performers_in_bookings : order_id (8, 1, 13), performer_id (976, 650, 904) | customer_orders : order_id (4, 14, 6), store_id (231, 344, 344), planned_delivery_date (\"1996-08-26 19:19:59\", \"2014-06-18 09:42:23\", \"1977-07-08 16:35:46\"), order_date (\"1999-11-20 18:48:05\", \"1979-09-01 06:29:01\", \"1985-05-29 01:20:18\"), actual_delivery_date (\"1998-08-22 17:57:32\", \"2003-12-16 23:37:19\", \"1992-07-21 22:11:11\"), customer_id (516, 712, 546), other_order_details (None) | order_items : other_item_details (None), order_item_id (13, 6, 14), product_id (179, 300, 300), order_id (15, 10, 11), order_quantity (\"1\", \"2\") | invoices : payment_method_code (\"MasterCard\", \"Visa\", \"American E\"), invoice_id (128, 272, 548), other_item_details (None), order_id (11, 4, 8), product_id (9, 9, 9), order_quantity (\"2\", \"1\"), order_item_id (5, 3, 4) | services : service_type_code (\"4\", \"1\", \"4\"), service_id (421, 220, 191), workshop_group_id (431, 735, 431), product_name (\"film\", \"dinning\", \"photo\"), product_description (None), other_product_service_details (None), product_price (31862.0853, 8004.988, 5396.2935) | bookings_services : order_id (1, 13, 5), product_id (640, 414, 597) | invoice_items : order_id (1, 4), invoice_item_id (1, 2), other_item_details (None, \"Good quality\"), order_quantity (2, 6), product_id (396, 191), invoice_id (128, 162), order_item_id (5, 6)", "schema_without_content": "ref_payment_methods : payment_method_description , payment_method_code  | ref_service_types : service_type_description , service_type_code , parent_service_type_code  | addresses : other_details , line_2 , city_town , state_county , line_1 , address_id  | products : other_product_service_details , product_description , product_id , product_price , product_name  | products_product_price : min_product_price , product_id , total_product_price , max_product_price , product_name , avg_product_price , product_description , other_product_service_details  | marketing_regions : marketing_region_name , marketing_region_descriptrion , other_details , marketing_region_code  | clients : client_id , address_id , other_details , customer_name , customer_email_address , customer_phone 611-6111x61144\", \"+124915316228\", \"1-431-563-2576x9849\" | drama_workshop_groups : other_details , workshop_group_id , currency_code , address_id , store_name , marketing_region_code , store_email_address , store_phone 743-0310\", \"443-4067\", \"161-0983x567\" | performers : address_id , customer_phone , other_details , customer_name , performer_id , customer_email_address  | customers : other_details , customer_email_address , customer_name , customer_id , customer_phone 7576252034\", \"398.352.1753\", \"056.568.7725\", address_id  | stores : address_id , store_id , other_details , marketing_region_code , store_name , store_email_address , store_phone  | bookings : planned_delivery_date , other_order_details , booking_id , customer_id , store_id , status_code , order_date , actual_delivery_date , workshop_group_id  | performers_in_bookings : order_id , performer_id  | customer_orders : order_id , store_id , planned_delivery_date , order_date , actual_delivery_date , customer_id , other_order_details  | order_items : other_item_details , order_item_id , product_id , order_id , order_quantity  | invoices : payment_method_code , invoice_id , other_item_details , order_id , product_id , order_quantity , order_item_id  | services : service_type_code , service_id , workshop_group_id , product_name , product_description , other_product_service_details , product_price  | bookings_services : order_id , product_id  | invoice_items : order_id , invoice_item_id , other_item_details , order_quantity , product_id , invoice_id , order_item_id "}, {"db_id": "cre_Drama_Workshop_Groups", "query": "select product_name, avg_product_price from products_product_price group by product_name", "query_toks": ["SELECT", "Product_Name", ",", "avg", "(", "Product_Price", ")", "FROM", "PRODUCTS", "GROUP", "BY", "Product_Name"], "query_toks_no_value": ["select", "product_name", ",", "avg", "(", "product_price", ")", "from", "products", "group", "by", "product_name"], "question": "For each distinct product name, show its average product price.", "question_toks": ["For", "each", "distinct", "product", "name", ",", "show", "its", "average", "product", "price", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [5, [0, [0, 14, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "product_id"}, "orig_query": "select product_name, avg(product_price) from products group by product_name", "split_map": {"products": ["max_product_price", "min_product_price", "avg_product_price", "total_product_price"]}, "schema_with_content": "ref_payment_methods : payment_method_description (\"credit\", \"debit\", \"Visa\"), payment_method_code (\"American E\", \"MasterCard\", \"Visa\") | ref_service_types : service_type_description (\"provide dinning service\", \"provide dinning service\", \"provide photo service\"), service_type_code (\"2\", \"2\", \"1\"), parent_service_type_code (\"1\") | addresses : line_1 (\"51237 Maiya Center\", \"788 Flossie Junction Apt. 770\", \"391 Vandervort Fall Apt. 446\"), other_details (None), line_2 (\"Suite 583\", \"Apt. 107\", \"Apt. 460\"), address_id (\"110\", \"207\", \"369\"), state_county (\"SouthDakota\", \"Delaware\", \"Maryland\"), city_town (\"South Birdie\", \"Monahanshire\", \"Purdyville\") | products : other_product_service_details (None), product_description (None), product_id (\"273\", \"154\", \"233\"), product_price (50828, 17622723, 1432324), product_name (\"photo\", \"film\", \"dinning\") | products_product_price : product_id (\"273\", \"154\", \"233\"), avg_product_price (50828, 17622723, 1432324), max_product_price (50828, 17622723, 1432324), product_name (\"photo\", \"film\", \"dinning\"), total_product_price (50828, 17622723, 1432324), min_product_price (50828, 17622723, 1432324), product_description (None), other_product_service_details (None) | marketing_regions : marketing_region_code (\"CA\", \"CA\", \"US\"), marketing_region_descriptrion (\"Our target market\", \"Our target market\", \"Our target market\"), marketing_region_name (\"France\", \"Mexico\", \"France\"), other_details (None) | clients : customer_phone (\"(651)611-6111x61144\", \"+12(5)4915316228\", \"1-479-550-1510x89172\"), customer_name (\"Vita\", \"Vita\", \"Marquis\"), customer_email_address (\"boyer.carleton@example.com\", \"westley30@example.net\", \"alba04@example.com\"), other_details (\"VIP\", None, \"Super VIP\"), address_id (180, 180, 110), client_id (628, 605, 509) | drama_workshop_groups : store_name (\"Kessler Exploration\", \"Hansen Print\", \"Kling Workshop\"), other_details (None, \"Good\", \"Bad\"), store_email_address (\"welch.colby@example.net\", \"welch.colby@example.net\", \"welch.colby@example.net\"), currency_code (\"EU\", \"USD\"), address_id (374, 230, 201), store_phone (\"(256)743-0310\", \"(020)161-0983x567\", \"(020)161-0983x567\"), marketing_region_code (\"MX\", \"DE\", \"MX\"), workshop_group_id (708, 470, 415) | performers : performer_id (798, 656, 808), customer_email_address (\"preston45@example.net\", \"anderson34@example.net\", \"krogahn@example.com\"), other_details (None, \"Did not pay\", \"Pay good tips\"), customer_phone (\"472.072.6649x4161\", \"08639382978\", \"342-389-0010x682\"), address_id (148, 192, 124), customer_name (\"Dariana\", \"Issac\", \"Destiney\") | customers : customer_email_address (\"keanu70@example.net\", \"clemens43@example.org\", \"eleannon@example.org\"), customer_phone (\"+46(5)7576252034\", \"03189033909\", \"(191)727-6065x6351\"), other_details (None, \"VIP\"), customer_name (\"Robert\", \"Elwyn\", \"Davonte\"), customer_id (\"823\", \"418\", \"516\"), address_id (98, 148, 98) | stores : store_phone (\"1-327-185-9368\", \"(941)444-7666x7089\", \"893-457-3102x4293\"), store_email_address (\"adan93@example.com\", \"carmel04@example.com\", \"fkuvalis@example.net\"), store_id (\"421\", \"444\", \"512\"), other_details (None, None, None), marketing_region_code (\"IN\", \"FR\", \"ES\"), address_id (230, 369, 266), store_name (\"Fred Dinning\", \"Adam Photo\", \"Rob Dinning\") | bookings : order_date (\"1992-05-11 23:22:41\", \"1976-08-20 00:33:08\", \"1992-11-26 18:11:10\"), workshop_group_id (\"405\", \"708\", \"954\"), other_order_details (None), status_code (\"good\", \"stop\"), customer_id (776, 938, 508), planned_delivery_date (\"1974-05-07 21:40:39\", \"1989-01-05 19:24:45\", \"1989-01-05 19:24:45\"), actual_delivery_date (\"1982-04-18 02:59:08\", \"1990-03-16 19:38:47\", \"1989-11-17 00:32:13\"), store_id (4, 8, 9), booking_id (4, 6, 2) | performers_in_bookings : order_id (1, 8, 4), performer_id (954, 954, 313) | customer_orders : planned_delivery_date (\"2004-04-24 01:52:57\", \"1994-11-12 04:49:11\", \"2014-06-18 09:42:23\"), actual_delivery_date (\"1996-02-16 04:20:17\", \"1972-08-15 19:12:14\", \"2004-04-23 21:19:39\"), customer_id (546, 546, 304), order_date (\"1998-03-10 14:01:00\", \"1999-11-20 18:48:05\", \"1979-09-01 06:29:01\"), other_order_details (None), order_id (11, 11, 3), store_id (518, 229, 229) | order_items : order_quantity (\"1\", \"2\"), order_item_id (15, 14, 12), order_id (1, 2, 2), other_item_details (None), product_id (46, 81, 156) | invoices : other_item_details (None), order_item_id (3, 7, 1), payment_method_code (\"MasterCard\", \"Visa\", \"American E\"), product_id (8, 4, 9), invoice_id (398, 612, 733), order_id (6, 4, 7), order_quantity (\"2\", \"1\") | services : product_description (None), service_id (191, 662, 597), product_price (19845767.8923, 2704.4719, 8004.988), product_name (\"film\", \"dinning\", \"photo\"), service_type_code (\"1\", \"2\", \"2\"), other_product_service_details (None), workshop_group_id (708, 838, 405) | bookings_services : product_id (630, 773, 414), order_id (1, 1, 1) | invoice_items : invoice_item_id (1, 2), order_quantity (2, 6), product_id (396, 191), order_item_id (5, 6), other_item_details (None, \"Good quality\"), order_id (1, 4), invoice_id (128, 162)", "schema_without_content": "ref_payment_methods : payment_method_description , payment_method_code  | ref_service_types : service_type_description , service_type_code , parent_service_type_code  | addresses : line_1 , other_details , line_2 , address_id , state_county , city_town  | products : other_product_service_details , product_description , product_id , product_price , product_name  | products_product_price : product_id , avg_product_price , max_product_price , product_name , total_product_price , min_product_price , product_description , other_product_service_details  | marketing_regions : marketing_region_code , marketing_region_descriptrion , marketing_region_name , other_details  | clients : customer_phone 611-6111x61144\", \"+124915316228\", \"1-479-550-1510x89172\", customer_name , customer_email_address , other_details , address_id , client_id  | drama_workshop_groups : store_name , other_details , store_email_address , currency_code , address_id , store_phone 743-0310\", \"161-0983x567\", \"161-0983x567\", marketing_region_code , workshop_group_id  | performers : performer_id , customer_email_address , other_details , customer_phone , address_id , customer_name  | customers : customer_email_address , customer_phone 7576252034\", \"03189033909\", \"727-6065x6351\", other_details , customer_name , customer_id , address_id  | stores : store_phone 444-7666x7089\", \"893-457-3102x4293\", store_email_address , store_id , other_details , marketing_region_code , address_id , store_name  | bookings : order_date , workshop_group_id , other_order_details , status_code , customer_id , planned_delivery_date , actual_delivery_date , store_id , booking_id  | performers_in_bookings : order_id , performer_id  | customer_orders : planned_delivery_date , actual_delivery_date , customer_id , order_date , other_order_details , order_id , store_id  | order_items : order_quantity , order_item_id , order_id , other_item_details , product_id  | invoices : other_item_details , order_item_id , payment_method_code , product_id , invoice_id , order_id , order_quantity  | services : product_description , service_id , product_price , product_name , service_type_code , other_product_service_details , workshop_group_id  | bookings_services : product_id , order_id  | invoice_items : invoice_item_id , order_quantity , product_id , order_item_id , other_item_details , order_id , invoice_id "}, {"db_id": "cre_Drama_Workshop_Groups", "query": "select avg_order_quantity from invoices_order_quantity where payment_method_code = \"MasterCard\"", "query_toks": ["SELECT", "avg", "(", "Order_Quantity", ")", "FROM", "Invoices", "WHERE", "payment_method_code", "=", "``", "MasterCard", "''"], "query_toks_no_value": ["select", "avg", "(", "order_quantity", ")", "from", "invoices", "where", "payment_method_code", "=", "value"], "question": "What is the average quantities ordered with payment method code \"MasterCard\" on invoices?", "question_toks": ["What", "is", "the", "average", "quantities", "ordered", "with", "payment", "method", "code", "``", "MasterCard", "''", "on", "invoices", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 14]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 81, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 79, false], null], "\"MasterCard\"", null]]}, "primary_key": {"invoices": "invoice_id"}, "orig_query": "select avg(order_quantity) from invoices where payment_method_code = \"MasterCard\"", "split_map": {"invoices": ["max_order_quantity", "min_order_quantity", "avg_order_quantity", "total_order_quantity"]}, "schema_with_content": "ref_payment_methods : payment_method_description (\"credit\", \"debit\", \"Visa\"), payment_method_code (\"American E\", \"MasterCard\", \"Visa\") | ref_service_types : service_type_code (\"1\", \"1\", \"4\"), service_type_description (\"provide adv promoting service\", \"provide adv promoting service\", \"provide dinning service\"), parent_service_type_code (\"1\") | addresses : other_details (None), city_town (\"Jasthaven\", \"Jasthaven\", \"Lindberg\"), state_county (\"Oklahoma\", \"Arizona\", \"Alaska\"), line_2 (\"Suite 184\", \"Suite 570\", \"Apt. 136\"), line_1 (\"809 Izabella Islands\", \"545 Lula Mission\", \"4753 Dach Highway\"), address_id (\"180\", \"230\", \"266\") | products : other_product_service_details (None), product_name (\"photo\", \"film\", \"dinning\"), product_price (22, 1577, 49097627), product_id (\"300\", \"216\", \"21\"), product_description (None) | marketing_regions : marketing_region_code (\"IN\", \"CN\", \"FR\"), marketing_region_descriptrion (\"Our target market\", \"\", \"Our main market\"), other_details (None), marketing_region_name (\"Mexico\", \"Spain\", \"France\") | clients : customer_phone (\"1-048-214-4640x64380\", \"398-003-6983x1691\", \"1-299-766-5382x3122\"), client_id (478, 953, 508), customer_email_address (\"considine.shyanne@example.net\", \"conn.josiane@example.com\", \"jklocko@example.net\"), other_details (\"VIP\", None, \"Super VIP\"), address_id (15, 383, 98), customer_name (\"Urban\", \"Vita\", \"Alvis\") | drama_workshop_groups : store_name (\"Warino Photo\", \"Roo Place\", \"Uhuels Fruit\"), currency_code (\"EU\", \"USD\"), store_phone (\"793-966-9311x5303\", \"(422)705-5633\", \"(904)958-9909x0087\"), store_email_address (\"amely.ruecker@example.com\", \"welch.colby@example.net\", \"roosevelt61@example.com\"), other_details (None, \"Good\", \"Bad\"), workshop_group_id (838, 838, 954), marketing_region_code (\"RU\", \"RU\", \"DE\"), address_id (207, 98, 383) | performers : customer_name (\"Issac\", \"Ashley\", \"Marques\"), performer_id (650, 832, 808), address_id (180, 124, 39), other_details (None, \"Did not pay\", \"Pay good tips\"), customer_email_address (\"krogahn@example.com\", \"hbreitenberg@example.com\", \"wschroeder@example.org\"), customer_phone (\"782-118-0067\", \"1-417-019-8634\", \"(054)005-5168\") | customers : customer_email_address (\"dudley08@example.net\", \"fheathcote@example.com\", \"nschmidt@example.org\"), customer_name (\"Adelbert\", \"Robert\", \"Elwyn\"), address_id (148, 98, 74), customer_phone (\"620-987-5897\", \"914-915-7483\", \"903.657.6967x467\"), customer_id (\"957\", \"793\", \"518\"), other_details (None, \"VIP\") | stores : address_id (192, 286, 266), store_phone (\"(941)444-7666x7089\", \"896-931-9633x869\", \"+46(1)1411714927\"), store_id (\"421\", \"291\", \"444\"), store_email_address (\"adan93@example.com\", \"lurline24@example.org\", \"shirley07@example.net\"), other_details (\"5 stars\", \"3 stars\", None), store_name (\"Carmol Photo\", \"Lur Photo\", \"Fred Dinning\"), marketing_region_code (\"ES\", \"CN\", \"CA\") | bookings : planned_delivery_date (\"1971-06-29 03:04:47\", \"1974-05-07 21:40:39\", \"2013-03-10 18:47:05\"), order_date (\"1976-10-24 07:40:47\", \"1975-12-30 14:12:32\", \"1975-11-23 06:28:47\"), status_code (\"good\", \"stop\"), store_id (8, 1, 6), actual_delivery_date (\"1989-11-17 00:32:13\", \"1996-10-24 21:15:27\", \"1990-03-16 19:38:47\"), booking_id (14, 11, 6), other_order_details (None), customer_id (605, 508, 938), workshop_group_id (\"735\", \"685\", \"685\") | performers_in_bookings : order_id (9, 8, 1), performer_id (798, 650, 360) | customer_orders : order_date (\"1971-05-12 10:12:46\", \"2011-01-05 08:01:07\", \"1998-03-10 14:01:00\"), planned_delivery_date (\"1979-05-15 03:00:09\", \"1979-05-15 03:00:09\", \"1984-05-07 12:05:33\"), customer_id (516, 556, 240), store_id (421, 344, 344), other_order_details (None), order_id (8, 15, 7), actual_delivery_date (\"1998-08-22 17:57:32\", \"2004-04-23 21:19:39\", \"2015-06-20 20:51:17\") | order_items : other_item_details (None), order_id (4, 15, 15), order_item_id (3, 15, 13), order_quantity (\"1\", \"2\"), product_id (273, 179, 216) | invoices : order_id (12, 1, 6), product_id (6, 3, 8), invoice_id (162, 212, 612), order_quantity (\"2\", \"1\"), payment_method_code (\"MasterCard\", \"Visa\", \"American E\"), order_item_id (7, 4, 1), other_item_details (None) | invoices_order_quantity : product_id (6, 3, 8), total_order_quantity (\"2\", \"1\"), order_id (12, 1, 6), invoice_id (162, 212, 612), payment_method_code (\"MasterCard\", \"Visa\", \"American E\"), max_order_quantity (\"2\", \"1\"), min_order_quantity (\"2\", \"1\"), avg_order_quantity (\"2\", \"1\"), other_item_details (None), order_item_id (7, 4, 1) | services : product_description (None), product_price (7299.6747, 213.9459, 31862.0853), other_product_service_details (None), service_type_code (\"1\", \"3\", \"2\"), product_name (\"film\", \"dinning\", \"photo\"), service_id (773, 630, 525), workshop_group_id (708, 405, 470) | bookings_services : product_id (191, 630, 630), order_id (7, 12, 1) | invoice_items : product_id (396, 191), order_id (1, 4), invoice_item_id (1, 2), order_item_id (5, 6), invoice_id (128, 162), other_item_details (None, \"Good quality\"), order_quantity (2, 6)", "schema_without_content": "ref_payment_methods : payment_method_description , payment_method_code  | ref_service_types : service_type_code , service_type_description , parent_service_type_code  | addresses : other_details , city_town , state_county , line_2 , line_1 , address_id  | products : other_product_service_details , product_name , product_price , product_id , product_description  | marketing_regions : marketing_region_code , marketing_region_descriptrion , other_details , marketing_region_name  | clients : customer_phone , client_id , customer_email_address , other_details , address_id , customer_name  | drama_workshop_groups : store_name , currency_code , store_phone 705-5633\", \"958-9909x0087\", store_email_address , other_details , workshop_group_id , marketing_region_code , address_id  | performers : customer_name , performer_id , address_id , other_details , customer_email_address , customer_phone 005-5168\" | customers : customer_email_address , customer_name , address_id , customer_phone , customer_id , other_details  | stores : address_id , store_phone 444-7666x7089\", \"896-931-9633x869\", \"+461411714927\", store_id , store_email_address , other_details , store_name , marketing_region_code  | bookings : planned_delivery_date , order_date , status_code , store_id , actual_delivery_date , booking_id , other_order_details , customer_id , workshop_group_id  | performers_in_bookings : order_id , performer_id  | customer_orders : order_date , planned_delivery_date , customer_id , store_id , other_order_details , order_id , actual_delivery_date  | order_items : other_item_details , order_id , order_item_id , order_quantity , product_id  | invoices : order_id , product_id , invoice_id , order_quantity , payment_method_code , order_item_id , other_item_details  | invoices_order_quantity : product_id , total_order_quantity , order_id , invoice_id , payment_method_code , max_order_quantity , min_order_quantity , avg_order_quantity , other_item_details , order_item_id  | services : product_description , product_price , other_product_service_details , service_type_code , product_name , service_id , workshop_group_id  | bookings_services : product_id , order_id  | invoice_items : product_id , order_id , invoice_item_id , order_item_id , invoice_id , other_item_details , order_quantity "}, {"db_id": "cre_Drama_Workshop_Groups", "query": "select avg_order_quantity from invoices_order_quantity where payment_method_code = \"MasterCard\"", "query_toks": ["SELECT", "avg", "(", "Order_Quantity", ")", "FROM", "Invoices", "WHERE", "payment_method_code", "=", "``", "MasterCard", "''"], "query_toks_no_value": ["select", "avg", "(", "order_quantity", ")", "from", "invoices", "where", "payment_method_code", "=", "value"], "question": "Check the invoices record and compute the average quantities ordered with the payment method \"MasterCard\".", "question_toks": ["Check", "the", "invoices", "record", "and", "compute", "the", "average", "quantities", "ordered", "with", "the", "payment", "method", "``", "MasterCard", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 14]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 81, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 79, false], null], "\"MasterCard\"", null]]}, "primary_key": {"invoices": "invoice_id"}, "orig_query": "select avg(order_quantity) from invoices where payment_method_code = \"MasterCard\"", "split_map": {"invoices": ["max_order_quantity", "min_order_quantity", "avg_order_quantity", "total_order_quantity"]}, "schema_with_content": "ref_payment_methods : payment_method_code (\"American E\", \"MasterCard\", \"Visa\"), payment_method_description (\"credit\", \"debit\", \"Visa\") | ref_service_types : service_type_description (\"provide filming service\", \"provide filming service\", \"provide adv promoting service\"), parent_service_type_code (\"1\"), service_type_code (\"1\", \"4\", \"1\") | addresses : line_2 (\"Apt. 584\", \"Apt. 352\", \"Suite 271\"), line_1 (\"809 Izabella Islands\", \"8835 Boehm Greens\", \"545 Lula Mission\"), city_town (\"Chrisside\", \"Purdyville\", \"New Jaquelinmouth\"), address_id (\"180\", \"148\", \"201\"), state_county (\"Oklahoma\", \"Pennsylvania\", \"Alaska\"), other_details (None) | products : product_name (\"photo\", \"film\", \"dinning\"), product_id (\"216\", \"300\", \"83\"), product_price (22, 4082352, 50828), other_product_service_details (None), product_description (None) | marketing_regions : marketing_region_code (\"IN\", \"RU\", \"IN\"), marketing_region_name (\"Spain\", \"Canada\", \"United States\"), other_details (None), marketing_region_descriptrion (\"\", \"Our target market\", \"Our target market\") | clients : customer_name (\"Horace\", \"Arvid\", \"Connor\"), client_id (775, 868, 508), customer_email_address (\"considine.shyanne@example.net\", \"lbalistreri@example.net\", \"cleora.strosin@example.org\"), customer_phone (\"1-048-214-4640x64380\", \"1-299-766-5382x3122\", \"(745)818-8559x747\"), address_id (383, 110, 180), other_details (\"VIP\", None, \"Super VIP\") | drama_workshop_groups : store_email_address (\"quigley.queen@example.org\", \"kessler.maximillia@example.net\", \"katherine.kling@example.org\"), workshop_group_id (470, 314, 838), currency_code (\"EU\", \"USD\"), store_phone (\"(256)743-0310\", \"1-811-875-3222\", \"(904)958-9909x0087\"), store_name (\"Amely Cafe\", \"Amely Cafe\", \"Uhuels Fruit\"), marketing_region_code (\"DE\", \"ES\", \"MX\"), other_details (None, \"Good\", \"Bad\"), address_id (286, 207, 207) | performers : other_details (None, \"Did not pay\", \"Pay good tips\"), customer_name (\"Trudie\", \"Trudie\", \"Ashley\"), performer_id (153, 466, 466), customer_phone (\"547.535.3455\", \"1-260-605-6483\", \"(054)005-5168\"), address_id (19, 314, 19), customer_email_address (\"kellen89@example.com\", \"hudson.cristobal@example.net\", \"hudson.cristobal@example.net\") | customers : other_details (None, \"VIP\"), customer_email_address (\"gage.johns@example.org\", \"cassin.cielo@example.org\", \"keanu70@example.net\"), customer_id (\"304\", \"546\", \"418\"), customer_phone (\"(514)659-1318x46123\", \"388.863.3459x0915\", \"(941)313-1839x94608\"), customer_name (\"Adelbert\", \"Robert\", \"Harold\"), address_id (110, 110, 201) | stores : store_email_address (\"fkuvalis@example.net\", \"adan93@example.com\", \"fjacobson@example.com\"), marketing_region_code (\"ES\", \"CA\", \"IN\"), address_id (110, 266, 266), store_name (\"Lur Photo\", \"Lur Photo\", \"Lur Photo\"), store_phone (\"127.870.0753x54565\", \"+46(1)1411714927\", \"086-705-8793\"), other_details (\"5 stars\", None, \"3 stars\"), store_id (\"291\", \"150\", \"444\") | bookings : booking_id (11, 14, 1), other_order_details (None), actual_delivery_date (\"2004-02-22 04:37:14\", \"1996-10-24 21:15:27\", \"1983-07-01 22:10:19\"), status_code (\"good\", \"stop\"), planned_delivery_date (\"1979-07-19 19:44:01\", \"1989-01-05 19:24:45\", \"2014-06-05 10:19:46\"), store_id (7, 5, 9), workshop_group_id (\"176\", \"838\", \"954\"), order_date (\"1996-09-14 10:17:55\", \"1992-11-26 18:11:10\", \"1996-09-14 10:17:55\"), customer_id (423, 735, 776) | performers_in_bookings : performer_id (650, 832, 808), order_id (9, 4, 15) | customer_orders : order_id (6, 6, 14), store_id (444, 512, 150), customer_id (240, 712, 304), actual_delivery_date (\"1996-04-13 19:05:34\", \"1990-11-14 03:53:06\", \"1990-11-14 03:53:06\"), planned_delivery_date (\"1994-08-08 03:08:23\", \"2004-04-24 01:52:57\", \"2004-04-24 01:52:57\"), other_order_details (None), order_date (\"1993-11-22 14:56:28\", \"1971-05-12 10:12:46\", \"2014-07-10 10:56:01\") | order_items : order_item_id (8, 7, 2), order_id (7, 7, 11), order_quantity (\"1\", \"2\"), product_id (81, 233, 300), other_item_details (None) | invoices : order_id (3, 3, 10), other_item_details (None), order_quantity (\"2\", \"1\"), payment_method_code (\"MasterCard\", \"Visa\", \"American E\"), order_item_id (9, 7, 9), product_id (7, 9, 4), invoice_id (406, 483, 272) | invoices_order_quantity : total_order_quantity (\"2\", \"1\"), min_order_quantity (\"2\", \"1\"), invoice_id (406, 483, 272), order_id (3, 3, 10), max_order_quantity (\"2\", \"1\"), avg_order_quantity (\"2\", \"1\"), product_id (7, 9, 4), payment_method_code (\"MasterCard\", \"Visa\", \"American E\"), other_item_details (None), order_item_id (9, 7, 9) | services : other_product_service_details (None), workshop_group_id (176, 708, 735), service_id (840, 798, 414), product_price (3499362.8145, 8004.988, 58932775.8822), product_name (\"film\", \"dinning\", \"photo\"), product_description (None), service_type_code (\"2\", \"3\", \"3\") | bookings_services : product_id (191, 396, 396), order_id (1, 13, 13) | invoice_items : product_id (396, 191), other_item_details (None, \"Good quality\"), order_item_id (5, 6), invoice_item_id (1, 2), invoice_id (128, 162), order_quantity (2, 6), order_id (1, 4)", "schema_without_content": "ref_payment_methods : payment_method_code , payment_method_description  | ref_service_types : service_type_description , parent_service_type_code , service_type_code  | addresses : line_2 , line_1 , city_town , address_id , state_county , other_details  | products : product_name , product_id , product_price , other_product_service_details , product_description  | marketing_regions : marketing_region_code , marketing_region_name , other_details , marketing_region_descriptrion  | clients : customer_name , client_id , customer_email_address , customer_phone 818-8559x747\", address_id , other_details  | drama_workshop_groups : store_email_address , workshop_group_id , currency_code , store_phone 743-0310\", \"1-811-875-3222\", \"958-9909x0087\", store_name , marketing_region_code , other_details , address_id  | performers : other_details , customer_name , performer_id , customer_phone 005-5168\", address_id , customer_email_address  | customers : other_details , customer_email_address , customer_id , customer_phone 659-1318x46123\", \"388.863.3459x0915\", \"313-1839x94608\", customer_name , address_id  | stores : store_email_address , marketing_region_code , address_id , store_name , store_phone 1411714927\", \"086-705-8793\", other_details , store_id  | bookings : booking_id , other_order_details , actual_delivery_date , status_code , planned_delivery_date , store_id , workshop_group_id , order_date , customer_id  | performers_in_bookings : performer_id , order_id  | customer_orders : order_id , store_id , customer_id , actual_delivery_date , planned_delivery_date , other_order_details , order_date  | order_items : order_item_id , order_id , order_quantity , product_id , other_item_details  | invoices : order_id , other_item_details , order_quantity , payment_method_code , order_item_id , product_id , invoice_id  | invoices_order_quantity : total_order_quantity , min_order_quantity , invoice_id , order_id , max_order_quantity , avg_order_quantity , product_id , payment_method_code , other_item_details , order_item_id  | services : other_product_service_details , workshop_group_id , service_id , product_price , product_name , product_description , service_type_code  | bookings_services : product_id , order_id  | invoice_items : product_id , other_item_details , order_item_id , invoice_item_id , invoice_id , order_quantity , order_id "}, {"db_id": "manufactory_1", "query": "select avg_revenue, max_revenue, total_revenue from manufacturers_revenue", "query_toks": ["SELECT", "avg", "(", "revenue", ")", ",", "max", "(", "revenue", ")", ",", "sum", "(", "revenue", ")", "FROM", "manufacturers"], "query_toks_no_value": ["select", "avg", "(", "revenue", ")", ",", "max", "(", "revenue", ")", ",", "sum", "(", "revenue", ")", "from", "manufacturers"], "question": "What are the average, maximum and total revenues of all companies?", "question_toks": ["What", "are", "the", "average", ",", "maximum", "and", "total", "revenues", "of", "all", "companies", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]], [4, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"manufacturers": "code"}, "orig_query": "select avg(revenue), max(revenue), sum(revenue) from manufacturers", "split_map": {"manufacturers": ["max_revenue", "min_revenue", "avg_revenue", "total_revenue"]}, "schema_with_content": "manufacturers : revenue (100.0, 30.0, 130.0), code (4, 2, 4), founder (\"Andy\", \"John\", \"Andy\"), name (\"Hewlett-Packard\", \"Hewlett-Packard\", \"Creative Labs\"), headquarter (\"Tokyo\", \"Los Angeles\", \"Taiwan\") | manufacturers_revenue : name (\"Hewlett-Packard\", \"Hewlett-Packard\", \"Creative Labs\"), avg_revenue (100.0, 30.0, 130.0), total_revenue (100.0, 30.0, 130.0), min_revenue (100.0, 30.0, 130.0), max_revenue (100.0, 30.0, 130.0), code (4, 2, 4), headquarter (\"Tokyo\", \"Los Angeles\", \"Taiwan\"), founder (\"Andy\", \"John\", \"Andy\") | products : code (7, 8, 4), name (\"Floppy disk\", \"Memory\", \"ZIP drive\"), manufacturer (4, 4, 1), price (5, 120, 5)", "schema_without_content": "manufacturers : revenue , code , founder , name , headquarter  | manufacturers_revenue : name , avg_revenue , total_revenue , min_revenue , max_revenue , code , headquarter , founder  | products : code , name , manufacturer , price "}, {"db_id": "manufactory_1", "query": "select avg_revenue, max_revenue, total_revenue from manufacturers_revenue", "query_toks": ["SELECT", "avg", "(", "revenue", ")", ",", "max", "(", "revenue", ")", ",", "sum", "(", "revenue", ")", "FROM", "manufacturers"], "query_toks_no_value": ["select", "avg", "(", "revenue", ")", ",", "max", "(", "revenue", ")", ",", "sum", "(", "revenue", ")", "from", "manufacturers"], "question": "Return the average, maximum, and total revenues across all manufacturers.", "question_toks": ["Return", "the", "average", ",", "maximum", ",", "and", "total", "revenues", "across", "all", "manufacturers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]], [4, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"manufacturers": "code"}, "orig_query": "select avg(revenue), max(revenue), sum(revenue) from manufacturers", "split_map": {"manufacturers": ["max_revenue", "min_revenue", "avg_revenue", "total_revenue"]}, "schema_with_content": "manufacturers : code (3, 3, 4), headquarter (\"Paris\", \"Los Angeles\", \"Beijing\"), founder (\"Mary\", \"Owen\", \"Owen\"), revenue (120.0, 200.0, 120.0), name (\"Sony\", \"Hewlett-Packard\", \"Iomega\") | manufacturers_revenue : founder (\"Mary\", \"Owen\", \"Owen\"), headquarter (\"Paris\", \"Los Angeles\", \"Beijing\"), name (\"Sony\", \"Hewlett-Packard\", \"Iomega\"), max_revenue (120.0, 200.0, 120.0), total_revenue (120.0, 200.0, 120.0), avg_revenue (120.0, 200.0, 120.0), code (3, 3, 4), min_revenue (120.0, 200.0, 120.0) | products : code (2, 7, 3), price (5, 120, 150), manufacturer (2, 6, 2), name (\"Printer\", \"Floppy disk\", \"Hard drive\")", "schema_without_content": "manufacturers : code , headquarter , founder , revenue , name  | manufacturers_revenue : founder , headquarter , name , max_revenue , total_revenue , avg_revenue , code , min_revenue  | products : code , price , manufacturer , name "}, {"db_id": "manufactory_1", "query": "select total_revenue from manufacturers_revenue where headquarter = 'Austin'", "query_toks": ["SELECT", "sum", "(", "revenue", ")", "FROM", "manufacturers", "WHERE", "headquarter", "=", "'Austin", "'"], "query_toks_no_value": ["select", "sum", "(", "revenue", ")", "from", "manufacturers", "where", "headquarter", "=", "value"], "question": "Find the total revenue created by the companies whose headquarter is located at Austin.", "question_toks": ["Find", "the", "total", "revenue", "created", "by", "the", "companies", "whose", "headquarter", "is", "located", "at", "Austin", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"Austin\"", null]]}, "primary_key": {"manufacturers": "code"}, "orig_query": "select sum(revenue) from manufacturers where headquarter = 'Austin'", "split_map": {"manufacturers": ["max_revenue", "min_revenue", "avg_revenue", "total_revenue"]}, "schema_with_content": "manufacturers : name (\"Fujitsu\", \"Hewlett-Packard\", \"Iomega\"), founder (\"Owen\", \"Mary\", \"James\"), revenue (50.0, 30.0, 50.0), headquarter (\"Austin\", \"Austin\", \"Austin\"), code (4, 4, 6) | manufacturers_revenue : total_revenue (50.0, 30.0, 50.0), name (\"Fujitsu\", \"Hewlett-Packard\", \"Iomega\"), code (4, 4, 6), min_revenue (50.0, 30.0, 50.0), headquarter (\"Austin\", \"Austin\", \"Austin\"), founder (\"Owen\", \"Mary\", \"James\"), max_revenue (50.0, 30.0, 50.0), avg_revenue (50.0, 30.0, 50.0) | products : name (\"Floppy disk\", \"Toner cartridge\", \"Monitor\"), manufacturer (1, 2, 3), price (66, 90, 66), code (7, 6, 1)", "schema_without_content": "manufacturers : name , founder , revenue , headquarter , code  | manufacturers_revenue : total_revenue , name , code , min_revenue , headquarter , founder , max_revenue , avg_revenue  | products : name , manufacturer , price , code "}, {"db_id": "manufactory_1", "query": "select total_revenue from manufacturers_revenue where headquarter = 'Austin'", "query_toks": ["SELECT", "sum", "(", "revenue", ")", "FROM", "manufacturers", "WHERE", "headquarter", "=", "'Austin", "'"], "query_toks_no_value": ["select", "sum", "(", "revenue", ")", "from", "manufacturers", "where", "headquarter", "=", "value"], "question": "What is the sum of revenue from companies with headquarters in Austin?", "question_toks": ["What", "is", "the", "sum", "of", "revenue", "from", "companies", "with", "headquarters", "in", "Austin", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"Austin\"", null]]}, "primary_key": {"manufacturers": "code"}, "orig_query": "select sum(revenue) from manufacturers where headquarter = 'Austin'", "split_map": {"manufacturers": ["max_revenue", "min_revenue", "avg_revenue", "total_revenue"]}, "schema_with_content": "manufacturers : headquarter (\"Beijing\", \"Tokyo\", \"Austin\"), revenue (130.0, 120.0, 50.0), code (6, 2, 1), founder (\"John\", \"James\", \"Mary\"), name (\"Hewlett-Packard\", \"Iomega\", \"Creative Labs\") | manufacturers_revenue : avg_revenue (130.0, 120.0, 50.0), total_revenue (130.0, 120.0, 50.0), founder (\"John\", \"James\", \"Mary\"), min_revenue (130.0, 120.0, 50.0), code (6, 2, 1), name (\"Hewlett-Packard\", \"Iomega\", \"Creative Labs\"), max_revenue (130.0, 120.0, 50.0), headquarter (\"Beijing\", \"Tokyo\", \"Austin\") | products : price (120, 150, 120), code (3, 10, 5), manufacturer (5, 3, 4), name (\"ZIP drive\", \"Memory\", \"Toner cartridge\")", "schema_without_content": "manufacturers : headquarter , revenue , code , founder , name  | manufacturers_revenue : avg_revenue , total_revenue , founder , min_revenue , code , name , max_revenue , headquarter  | products : price , code , manufacturer , name "}, {"db_id": "manufactory_1", "query": "select total_revenue from manufacturers_revenue where headquarter = 'Tokyo' or headquarter = 'Taiwan'", "query_toks": ["SELECT", "sum", "(", "revenue", ")", "FROM", "manufacturers", "WHERE", "Headquarter", "=", "'Tokyo", "'", "OR", "Headquarter", "=", "'Taiwan", "'"], "query_toks_no_value": ["select", "sum", "(", "revenue", ")", "from", "manufacturers", "where", "headquarter", "=", "value", "or", "headquarter", "=", "value"], "question": "What is the total revenue of all companies whose main office is at Tokyo or Taiwan?", "question_toks": ["What", "is", "the", "total", "revenue", "of", "all", "companies", "whose", "main", "office", "is", "at", "Tokyo", "or", "Taiwan", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"Tokyo\"", null], "or", [false, 2, [0, [0, 3, false], null], "\"Taiwan\"", null]]}, "primary_key": {"manufacturers": "code"}, "orig_query": "select sum(revenue) from manufacturers where headquarter = 'Tokyo' or headquarter = 'Taiwan'", "split_map": {"manufacturers": ["max_revenue", "min_revenue", "avg_revenue", "total_revenue"]}, "schema_with_content": "manufacturers : code (4, 1, 5), revenue (200.0, 100.0, 50.0), founder (\"Owen\", \"Andy\", \"Mary\"), name (\"Sony\", \"Fujitsu\", \"Sony\"), headquarter (\"Tokyo\", \"Taiwan\", \"Los Angeles\") | manufacturers_revenue : name (\"Sony\", \"Fujitsu\", \"Sony\"), avg_revenue (200.0, 100.0, 50.0), code (4, 1, 5), max_revenue (200.0, 100.0, 50.0), founder (\"Owen\", \"Andy\", \"Mary\"), total_revenue (200.0, 100.0, 50.0), min_revenue (200.0, 100.0, 50.0), headquarter (\"Tokyo\", \"Taiwan\", \"Los Angeles\") | products : manufacturer (6, 1, 6), name (\"CD drive\", \"Printer\", \"Monitor\"), code (1, 2, 2), price (66, 240, 150)", "schema_without_content": "manufacturers : code , revenue , founder , name , headquarter  | manufacturers_revenue : name , avg_revenue , code , max_revenue , founder , total_revenue , min_revenue , headquarter  | products : manufacturer , name , code , price "}, {"db_id": "manufactory_1", "query": "select total_revenue from manufacturers_revenue where headquarter = 'Tokyo' or headquarter = 'Taiwan'", "query_toks": ["SELECT", "sum", "(", "revenue", ")", "FROM", "manufacturers", "WHERE", "Headquarter", "=", "'Tokyo", "'", "OR", "Headquarter", "=", "'Taiwan", "'"], "query_toks_no_value": ["select", "sum", "(", "revenue", ")", "from", "manufacturers", "where", "headquarter", "=", "value", "or", "headquarter", "=", "value"], "question": "Return the total revenue of companies with headquarters in Tokyo or Taiwan.", "question_toks": ["Return", "the", "total", "revenue", "of", "companies", "with", "headquarters", "in", "Tokyo", "or", "Taiwan", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"Tokyo\"", null], "or", [false, 2, [0, [0, 3, false], null], "\"Taiwan\"", null]]}, "primary_key": {"manufacturers": "code"}, "orig_query": "select sum(revenue) from manufacturers where headquarter = 'Tokyo' or headquarter = 'Taiwan'", "split_map": {"manufacturers": ["max_revenue", "min_revenue", "avg_revenue", "total_revenue"]}, "schema_with_content": "manufacturers : revenue (100.0, 130.0, 30.0), headquarter (\"Austin\", \"Taiwan\", \"Paris\"), code (6, 4, 2), name (\"Hewlett-Packard\", \"Sony\", \"Iomega\"), founder (\"Andy\", \"John\", \"Owen\") | manufacturers_revenue : max_revenue (100.0, 130.0, 30.0), code (6, 4, 2), founder (\"Andy\", \"John\", \"Owen\"), headquarter (\"Austin\", \"Taiwan\", \"Paris\"), name (\"Hewlett-Packard\", \"Sony\", \"Iomega\"), total_revenue (100.0, 130.0, 30.0), min_revenue (100.0, 130.0, 30.0), avg_revenue (100.0, 130.0, 30.0) | products : price (5, 270, 5), code (4, 9, 3), manufacturer (5, 4, 3), name (\"Hard drive\", \"DVD drive\", \"ZIP drive\")", "schema_without_content": "manufacturers : revenue , headquarter , code , name , founder  | manufacturers_revenue : max_revenue , code , founder , headquarter , name , total_revenue , min_revenue , avg_revenue  | products : price , code , manufacturer , name "}, {"db_id": "manufactory_1", "query": "select total_revenue from manufacturers_revenue where revenue > (select min(revenue)from manufacturers where headquarter = 'Austin')", "query_toks": ["SELECT", "sum", "(", "revenue", ")", "FROM", "manufacturers", "WHERE", "revenue", ">", "(", "SELECT", "min", "(", "revenue", ")", "FROM", "manufacturers", "WHERE", "headquarter", "=", "'Austin", "'", ")"], "query_toks_no_value": ["select", "sum", "(", "revenue", ")", "from", "manufacturers", "where", "revenue", ">", "(", "select", "min", "(", "revenue", ")", "from", "manufacturers", "where", "headquarter", "=", "value", ")"], "question": "Find the total revenue of companies whose revenue is larger than the revenue of some companies based in Austin.", "question_toks": ["Find", "the", "total", "revenue", "of", "companies", "whose", "revenue", "is", "larger", "than", "the", "revenue", "of", "some", "companies", "based", "in", "Austin", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 5, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"Austin\"", null]]}, null]]}, "primary_key": {"manufacturers": "code"}, "orig_query": "select sum(revenue) from manufacturers where revenue > (select min(revenue) from manufacturers where headquarter = 'Austin')", "split_map": {"manufacturers": ["max_revenue", "min_revenue", "avg_revenue", "total_revenue"]}, "schema_with_content": "manufacturers : name (\"Creative Labs\", \"Fujitsu\", \"Fujitsu\"), revenue (120.0, 30.0, 200.0), code (5, 5, 2), headquarter (\"Tokyo\", \"Paris\", \"Tokyo\"), founder (\"John\", \"John\", \"Owen\") | manufacturers_revenue : founder (\"John\", \"John\", \"Owen\"), headquarter (\"Tokyo\", \"Paris\", \"Tokyo\"), name (\"Creative Labs\", \"Fujitsu\", \"Fujitsu\"), code (5, 5, 2), avg_revenue (120.0, 30.0, 200.0), max_revenue (120.0, 30.0, 200.0), total_revenue (120.0, 30.0, 200.0), min_revenue (120.0, 30.0, 200.0) | products : manufacturer (2, 6, 5), name (\"Monitor\", \"Toner cartridge\", \"Memory\"), code (3, 1, 8), price (66, 270, 5)", "schema_without_content": "manufacturers : name , revenue , code , headquarter , founder  | manufacturers_revenue : founder , headquarter , name , code , avg_revenue , max_revenue , total_revenue , min_revenue  | products : manufacturer , name , code , price "}, {"db_id": "manufactory_1", "query": "select total_revenue from manufacturers_revenue where revenue > (select min(revenue)from manufacturers where headquarter = 'Austin')", "query_toks": ["SELECT", "sum", "(", "revenue", ")", "FROM", "manufacturers", "WHERE", "revenue", ">", "(", "SELECT", "min", "(", "revenue", ")", "FROM", "manufacturers", "WHERE", "headquarter", "=", "'Austin", "'", ")"], "query_toks_no_value": ["select", "sum", "(", "revenue", ")", "from", "manufacturers", "where", "revenue", ">", "(", "select", "min", "(", "revenue", ")", "from", "manufacturers", "where", "headquarter", "=", "value", ")"], "question": "What is the total revenue of companies with revenue greater than the lowest revenue of any manufacturer in Austin?", "question_toks": ["What", "is", "the", "total", "revenue", "of", "companies", "with", "revenue", "greater", "than", "the", "lowest", "revenue", "of", "any", "manufacturer", "in", "Austin", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 5, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"Austin\"", null]]}, null]]}, "primary_key": {"manufacturers": "code"}, "orig_query": "select sum(revenue) from manufacturers where revenue > (select min(revenue) from manufacturers where headquarter = 'Austin')", "split_map": {"manufacturers": ["max_revenue", "min_revenue", "avg_revenue", "total_revenue"]}, "schema_with_content": "manufacturers : founder (\"Robert\", \"Robert\", \"Mary\"), headquarter (\"Austin\", \"Los Angeles\", \"Los Angeles\"), code (4, 6, 3), name (\"Sony\", \"Hewlett-Packard\", \"Winchester\"), revenue (130.0, 120.0, 200.0) | manufacturers_revenue : total_revenue (130.0, 120.0, 200.0), max_revenue (130.0, 120.0, 200.0), name (\"Sony\", \"Hewlett-Packard\", \"Winchester\"), headquarter (\"Austin\", \"Los Angeles\", \"Los Angeles\"), code (4, 6, 3), min_revenue (130.0, 120.0, 200.0), founder (\"Robert\", \"Robert\", \"Mary\"), avg_revenue (130.0, 120.0, 200.0) | products : name (\"Printer\", \"CD drive\", \"DVD burner\"), code (10, 4, 3), manufacturer (2, 4, 4), price (90, 240, 120)", "schema_without_content": "manufacturers : founder , headquarter , code , name , revenue  | manufacturers_revenue : total_revenue , max_revenue , name , headquarter , code , min_revenue , founder , avg_revenue  | products : name , code , manufacturer , price "}, {"db_id": "manufactory_1", "query": "select total_revenue, founder from manufacturers_revenue group by founder", "query_toks": ["SELECT", "sum", "(", "revenue", ")", ",", "founder", "FROM", "manufacturers", "GROUP", "BY", "founder"], "query_toks_no_value": ["select", "sum", "(", "revenue", ")", ",", "founder", "from", "manufacturers", "group", "by", "founder"], "question": "Find the total revenue of companies of each founder.", "question_toks": ["Find", "the", "total", "revenue", "of", "companies", "of", "each", "founder", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}, "primary_key": {"manufacturers": "code"}, "orig_query": "select sum(revenue), founder from manufacturers group by founder", "split_map": {"manufacturers": ["max_revenue", "min_revenue", "avg_revenue", "total_revenue"]}, "schema_with_content": "manufacturers : code (3, 4, 3), headquarter (\"Paris\", \"Tokyo\", \"Beijing\"), founder (\"John\", \"John\", \"Mary\"), name (\"Winchester\", \"Sony\", \"Hewlett-Packard\"), revenue (130.0, 130.0, 120.0) | manufacturers_revenue : min_revenue (130.0, 130.0, 120.0), headquarter (\"Paris\", \"Tokyo\", \"Beijing\"), founder (\"John\", \"John\", \"Mary\"), max_revenue (130.0, 130.0, 120.0), total_revenue (130.0, 130.0, 120.0), avg_revenue (130.0, 130.0, 120.0), name (\"Winchester\", \"Sony\", \"Hewlett-Packard\"), code (3, 4, 3) | products : code (3, 1, 8), price (240, 90, 240), name (\"ZIP drive\", \"ZIP drive\", \"Printer\"), manufacturer (5, 4, 1)", "schema_without_content": "manufacturers : code , headquarter , founder , name , revenue  | manufacturers_revenue : min_revenue , headquarter , founder , max_revenue , total_revenue , avg_revenue , name , code  | products : code , price , name , manufacturer "}, {"db_id": "manufactory_1", "query": "select total_revenue, founder from manufacturers_revenue group by founder", "query_toks": ["SELECT", "sum", "(", "revenue", ")", ",", "founder", "FROM", "manufacturers", "GROUP", "BY", "founder"], "query_toks_no_value": ["select", "sum", "(", "revenue", ")", ",", "founder", "from", "manufacturers", "group", "by", "founder"], "question": "What is the total revenue of companies started by founder?", "question_toks": ["What", "is", "the", "total", "revenue", "of", "companies", "started", "by", "founder", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}, "primary_key": {"manufacturers": "code"}, "orig_query": "select sum(revenue), founder from manufacturers group by founder", "split_map": {"manufacturers": ["max_revenue", "min_revenue", "avg_revenue", "total_revenue"]}, "schema_with_content": "manufacturers : headquarter (\"Paris\", \"Taiwan\", \"Austin\"), code (6, 3, 6), revenue (30.0, 100.0, 30.0), name (\"Fujitsu\", \"Sony\", \"Creative Labs\"), founder (\"Andy\", \"Owen\", \"Mary\") | manufacturers_revenue : max_revenue (30.0, 100.0, 30.0), code (6, 3, 6), total_revenue (30.0, 100.0, 30.0), founder (\"Andy\", \"Owen\", \"Mary\"), avg_revenue (30.0, 100.0, 30.0), headquarter (\"Paris\", \"Taiwan\", \"Austin\"), name (\"Fujitsu\", \"Sony\", \"Creative Labs\"), min_revenue (30.0, 100.0, 30.0) | products : code (4, 9, 3), name (\"ZIP drive\", \"Toner cartridge\", \"CD drive\"), price (66, 180, 66), manufacturer (6, 1, 6)", "schema_without_content": "manufacturers : headquarter , code , revenue , name , founder  | manufacturers_revenue : max_revenue , code , total_revenue , founder , avg_revenue , headquarter , name , min_revenue  | products : code , name , price , manufacturer "}, {"db_id": "manufactory_1", "query": "select name, max_revenue, headquarter from manufacturers_revenue group by headquarter", "query_toks": ["SELECT", "name", ",", "max", "(", "revenue", ")", ",", "Headquarter", "FROM", "manufacturers", "GROUP", "BY", "Headquarter"], "query_toks_no_value": ["select", "name", ",", "max", "(", "revenue", ")", ",", "headquarter", "from", "manufacturers", "group", "by", "headquarter"], "question": "Find the name and revenue of the company that earns the highest revenue in each city.", "question_toks": ["Find", "the", "name", "and", "revenue", "of", "the", "company", "that", "earns", "the", "highest", "revenue", "in", "each", "city", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [1, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"manufacturers": "code"}, "orig_query": "select name, max(revenue), headquarter from manufacturers group by headquarter", "split_map": {"manufacturers": ["max_revenue", "min_revenue", "avg_revenue", "total_revenue"]}, "schema_with_content": "manufacturers : name (\"Iomega\", \"Iomega\", \"Hewlett-Packard\"), code (5, 4, 4), headquarter (\"Paris\", \"Beijing\", \"Beijing\"), revenue (200.0, 30.0, 30.0), founder (\"Robert\", \"Owen\", \"Andy\") | manufacturers_revenue : min_revenue (200.0, 30.0, 30.0), code (5, 4, 4), total_revenue (200.0, 30.0, 30.0), max_revenue (200.0, 30.0, 30.0), headquarter (\"Paris\", \"Beijing\", \"Beijing\"), avg_revenue (200.0, 30.0, 30.0), name (\"Iomega\", \"Iomega\", \"Hewlett-Packard\"), founder (\"Robert\", \"Owen\", \"Andy\") | products : manufacturer (6, 5, 2), price (120, 5, 150), name (\"DVD burner\", \"DVD drive\", \"Memory\"), code (5, 11, 4)", "schema_without_content": "manufacturers : name , code , headquarter , revenue , founder  | manufacturers_revenue : min_revenue , code , total_revenue , max_revenue , headquarter , avg_revenue , name , founder  | products : manufacturer , price , name , code "}, {"db_id": "manufactory_1", "query": "select name, max_revenue, headquarter from manufacturers_revenue group by headquarter", "query_toks": ["SELECT", "name", ",", "max", "(", "revenue", ")", ",", "Headquarter", "FROM", "manufacturers", "GROUP", "BY", "Headquarter"], "query_toks_no_value": ["select", "name", ",", "max", "(", "revenue", ")", ",", "headquarter", "from", "manufacturers", "group", "by", "headquarter"], "question": "What are the names and revenues of the companies with the highest revenues in each headquarter city?", "question_toks": ["What", "are", "the", "names", "and", "revenues", "of", "the", "companies", "with", "the", "highest", "revenues", "in", "each", "headquarter", "city", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [1, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"manufacturers": "code"}, "orig_query": "select name, max(revenue), headquarter from manufacturers group by headquarter", "split_map": {"manufacturers": ["max_revenue", "min_revenue", "avg_revenue", "total_revenue"]}, "schema_with_content": "manufacturers : revenue (30.0, 130.0, 130.0), founder (\"James\", \"James\", \"Robert\"), headquarter (\"Tokyo\", \"Los Angeles\", \"Taiwan\"), code (2, 5, 2), name (\"Winchester\", \"Creative Labs\", \"Winchester\") | manufacturers_revenue : min_revenue (30.0, 130.0, 130.0), headquarter (\"Tokyo\", \"Los Angeles\", \"Taiwan\"), name (\"Winchester\", \"Creative Labs\", \"Winchester\"), avg_revenue (30.0, 130.0, 130.0), founder (\"James\", \"James\", \"Robert\"), code (2, 5, 2), max_revenue (30.0, 130.0, 130.0), total_revenue (30.0, 130.0, 130.0) | products : code (11, 9, 1), price (90, 120, 66), manufacturer (4, 5, 6), name (\"Toner cartridge\", \"DVD drive\", \"DVD drive\")", "schema_without_content": "manufacturers : revenue , founder , headquarter , code , name  | manufacturers_revenue : min_revenue , headquarter , name , avg_revenue , founder , code , max_revenue , total_revenue  | products : code , price , manufacturer , name "}, {"db_id": "manufactory_1", "query": "select total_revenue, name from manufacturers_revenue group by name", "query_toks": ["SELECT", "sum", "(", "revenue", ")", ",", "name", "FROM", "manufacturers", "GROUP", "BY", "name"], "query_toks_no_value": ["select", "sum", "(", "revenue", ")", ",", "name", "from", "manufacturers", "group", "by", "name"], "question": "Find the total revenue for each manufacturer.", "question_toks": ["Find", "the", "total", "revenue", "for", "each", "manufacturer", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}, "primary_key": {"manufacturers": "code"}, "orig_query": "select sum(revenue), name from manufacturers group by name", "split_map": {"manufacturers": ["max_revenue", "min_revenue", "avg_revenue", "total_revenue"]}, "schema_with_content": "manufacturers : headquarter (\"Taiwan\", \"Beijing\", \"Beijing\"), name (\"Creative Labs\", \"Fujitsu\", \"Iomega\"), code (1, 4, 6), founder (\"John\", \"Robert\", \"Andy\"), revenue (120.0, 50.0, 100.0) | manufacturers_revenue : max_revenue (120.0, 50.0, 100.0), total_revenue (120.0, 50.0, 100.0), name (\"Creative Labs\", \"Fujitsu\", \"Iomega\"), code (1, 4, 6), founder (\"John\", \"Robert\", \"Andy\"), headquarter (\"Taiwan\", \"Beijing\", \"Beijing\"), avg_revenue (120.0, 50.0, 100.0), min_revenue (120.0, 50.0, 100.0) | products : manufacturer (1, 1, 2), name (\"Toner cartridge\", \"Memory\", \"ZIP drive\"), price (66, 150, 270), code (9, 2, 8)", "schema_without_content": "manufacturers : headquarter , name , code , founder , revenue  | manufacturers_revenue : max_revenue , total_revenue , name , code , founder , headquarter , avg_revenue , min_revenue  | products : manufacturer , name , price , code "}, {"db_id": "manufactory_1", "query": "select total_revenue, name from manufacturers_revenue group by name", "query_toks": ["SELECT", "sum", "(", "revenue", ")", ",", "name", "FROM", "manufacturers", "GROUP", "BY", "name"], "query_toks_no_value": ["select", "sum", "(", "revenue", ")", ",", "name", "from", "manufacturers", "group", "by", "name"], "question": "What is the total revenue of each manufacturer?", "question_toks": ["What", "is", "the", "total", "revenue", "of", "each", "manufacturer", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}, "primary_key": {"manufacturers": "code"}, "orig_query": "select sum(revenue), name from manufacturers group by name", "split_map": {"manufacturers": ["max_revenue", "min_revenue", "avg_revenue", "total_revenue"]}, "schema_with_content": "manufacturers : name (\"Fujitsu\", \"Sony\", \"Iomega\"), code (1, 4, 4), revenue (200.0, 120.0, 130.0), founder (\"James\", \"John\", \"Owen\"), headquarter (\"Taiwan\", \"Los Angeles\", \"Taiwan\") | manufacturers_revenue : avg_revenue (200.0, 120.0, 130.0), headquarter (\"Taiwan\", \"Los Angeles\", \"Taiwan\"), min_revenue (200.0, 120.0, 130.0), code (1, 4, 4), name (\"Fujitsu\", \"Sony\", \"Iomega\"), founder (\"James\", \"John\", \"Owen\"), max_revenue (200.0, 120.0, 130.0), total_revenue (200.0, 120.0, 130.0) | products : manufacturer (2, 4, 1), code (9, 6, 4), name (\"Hard drive\", \"DVD burner\", \"Memory\"), price (270, 270, 180)", "schema_without_content": "manufacturers : name , code , revenue , founder , headquarter  | manufacturers_revenue : avg_revenue , headquarter , min_revenue , code , name , founder , max_revenue , total_revenue  | products : manufacturer , code , name , price "}, {"db_id": "manufactory_1", "query": "select avg_price from products_price", "query_toks": ["SELECT", "avg", "(", "price", ")", "FROM", "products"], "query_toks_no_value": ["select", "avg", "(", "price", ")", "from", "products"], "question": "Compute the average price of all the products.", "question_toks": ["Compute", "the", "average", "price", "of", "all", "the", "products", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "code"}, "orig_query": "select avg(price) from products", "split_map": {"products": ["max_price", "min_price", "avg_price", "total_price"]}, "schema_with_content": "manufacturers : headquarter (\"Los Angeles\", \"Austin\", \"Beijing\"), name (\"Fujitsu\", \"Winchester\", \"Winchester\"), code (6, 5, 1), founder (\"Owen\", \"Owen\", \"Robert\"), revenue (100.0, 120.0, 120.0) | products : manufacturer (5, 1, 3), name (\"Memory\", \"Printer\", \"DVD drive\"), price (150, 240, 5), code (4, 4, 8) | products_price : max_price (150, 240, 5), name (\"Memory\", \"Printer\", \"DVD drive\"), avg_price (150, 240, 5), code (4, 4, 8), min_price (150, 240, 5), total_price (150, 240, 5), manufacturer (5, 1, 3)", "schema_without_content": "manufacturers : headquarter , name , code , founder , revenue  | products : manufacturer , name , price , code  | products_price : max_price , name , avg_price , code , min_price , total_price , manufacturer "}, {"db_id": "manufactory_1", "query": "select avg_price from products_price", "query_toks": ["SELECT", "avg", "(", "price", ")", "FROM", "products"], "query_toks_no_value": ["select", "avg", "(", "price", ")", "from", "products"], "question": "What is the average price across all products?", "question_toks": ["What", "is", "the", "average", "price", "across", "all", "products", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "code"}, "orig_query": "select avg(price) from products", "split_map": {"products": ["max_price", "min_price", "avg_price", "total_price"]}, "schema_with_content": "manufacturers : headquarter (\"Paris\", \"Taiwan\", \"Taiwan\"), name (\"Hewlett-Packard\", \"Sony\", \"Fujitsu\"), revenue (120.0, 120.0, 50.0), code (1, 4, 6), founder (\"Robert\", \"John\", \"Andy\") | products : manufacturer (3, 1, 6), code (9, 11, 6), price (66, 180, 66), name (\"Printer\", \"DVD drive\", \"Toner cartridge\") | products_price : total_price (66, 180, 66), name (\"Printer\", \"DVD drive\", \"Toner cartridge\"), min_price (66, 180, 66), code (9, 11, 6), avg_price (66, 180, 66), max_price (66, 180, 66), manufacturer (3, 1, 6)", "schema_without_content": "manufacturers : headquarter , name , revenue , code , founder  | products : manufacturer , code , price , name  | products_price : total_price , name , min_price , code , avg_price , max_price , manufacturer "}, {"db_id": "manufactory_1", "query": "select avg_price from products_price where manufacturer = 2", "query_toks": ["SELECT", "avg", "(", "price", ")", "FROM", "products", "WHERE", "Manufacturer", "=", "2"], "query_toks_no_value": ["select", "avg", "(", "price", ")", "from", "products", "where", "manufacturer", "=", "value"], "question": "Compute the average price of all products with manufacturer code equal to 2.", "question_toks": ["Compute", "the", "average", "price", "of", "all", "products", "with", "manufacturer", "code", "equal", "to", "2", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], 2.0, null]]}, "primary_key": {"products": "code"}, "orig_query": "select avg(price) from products where manufacturer = 2", "split_map": {"products": ["max_price", "min_price", "avg_price", "total_price"]}, "schema_with_content": "manufacturers : headquarter (\"Beijing\", \"Tokyo\", \"Beijing\"), revenue (100.0, 120.0, 200.0), founder (\"John\", \"James\", \"John\"), name (\"Sony\", \"Iomega\", \"Sony\"), code (5, 3, 6) | products : code (2, 10, 3), manufacturer (6, 6, 4), price (240, 90, 90), name (\"Monitor\", \"Memory\", \"CD drive\") | products_price : code (2, 10, 3), name (\"Monitor\", \"Memory\", \"CD drive\"), max_price (240, 90, 90), total_price (240, 90, 90), min_price (240, 90, 90), avg_price (240, 90, 90), manufacturer (6, 6, 4)", "schema_without_content": "manufacturers : headquarter , revenue , founder , name , code  | products : code , manufacturer , price , name  | products_price : code , name , max_price , total_price , min_price , avg_price , manufacturer "}, {"db_id": "manufactory_1", "query": "select avg_price from products_price where manufacturer = 2", "query_toks": ["SELECT", "avg", "(", "price", ")", "FROM", "products", "WHERE", "Manufacturer", "=", "2"], "query_toks_no_value": ["select", "avg", "(", "price", ")", "from", "products", "where", "manufacturer", "=", "value"], "question": "What is the average price of products with manufacturer codes equal to 2?", "question_toks": ["What", "is", "the", "average", "price", "of", "products", "with", "manufacturer", "codes", "equal", "to", "2", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], 2.0, null]]}, "primary_key": {"products": "code"}, "orig_query": "select avg(price) from products where manufacturer = 2", "split_map": {"products": ["max_price", "min_price", "avg_price", "total_price"]}, "schema_with_content": "manufacturers : founder (\"Andy\", \"Mary\", \"Robert\"), code (6, 6, 4), headquarter (\"Paris\", \"Beijing\", \"Austin\"), revenue (200.0, 30.0, 200.0), name (\"Sony\", \"Winchester\", \"Fujitsu\") | products : price (66, 270, 90), name (\"ZIP drive\", \"Toner cartridge\", \"Floppy disk\"), manufacturer (3, 1, 4), code (10, 11, 5) | products_price : name (\"ZIP drive\", \"Toner cartridge\", \"Floppy disk\"), max_price (66, 270, 90), min_price (66, 270, 90), code (10, 11, 5), avg_price (66, 270, 90), total_price (66, 270, 90), manufacturer (3, 1, 4)", "schema_without_content": "manufacturers : founder , code , headquarter , revenue , name  | products : price , name , manufacturer , code  | products_price : name , max_price , min_price , code , avg_price , total_price , manufacturer "}, {"db_id": "manufactory_1", "query": "select avg_price, manufacturer from products_price group by manufacturer", "query_toks": ["SELECT", "AVG", "(", "Price", ")", ",", "Manufacturer", "FROM", "Products", "GROUP", "BY", "Manufacturer"], "query_toks_no_value": ["select", "avg", "(", "price", ")", ",", "manufacturer", "from", "products", "group", "by", "manufacturer"], "question": "Select the average price of each manufacturer's products, showing only the manufacturer's code.", "question_toks": ["Select", "the", "average", "price", "of", "each", "manufacturer", "'s", "products", ",", "showing", "only", "the", "manufacturer", "'s", "code", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "code"}, "orig_query": "select avg(price), manufacturer from products group by manufacturer", "split_map": {"products": ["max_price", "min_price", "avg_price", "total_price"]}, "schema_with_content": "manufacturers : founder (\"Mary\", \"Mary\", \"Andy\"), headquarter (\"Austin\", \"Tokyo\", \"Beijing\"), revenue (50.0, 50.0, 130.0), code (3, 6, 6), name (\"Fujitsu\", \"Hewlett-Packard\", \"Hewlett-Packard\") | products : manufacturer (2, 1, 2), name (\"DVD burner\", \"Printer\", \"DVD drive\"), price (66, 240, 120), code (1, 2, 2) | products_price : code (1, 2, 2), avg_price (66, 240, 120), total_price (66, 240, 120), name (\"DVD burner\", \"Printer\", \"DVD drive\"), max_price (66, 240, 120), min_price (66, 240, 120), manufacturer (2, 1, 2)", "schema_without_content": "manufacturers : founder , headquarter , revenue , code , name  | products : manufacturer , name , price , code  | products_price : code , avg_price , total_price , name , max_price , min_price , manufacturer "}, {"db_id": "manufactory_1", "query": "select avg_price, manufacturer from products_price group by manufacturer", "query_toks": ["SELECT", "AVG", "(", "Price", ")", ",", "Manufacturer", "FROM", "Products", "GROUP", "BY", "Manufacturer"], "query_toks_no_value": ["select", "avg", "(", "price", ")", ",", "manufacturer", "from", "products", "group", "by", "manufacturer"], "question": "What are the average prices of products, grouped by manufacturer code?", "question_toks": ["What", "are", "the", "average", "prices", "of", "products", ",", "grouped", "by", "manufacturer", "code", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "code"}, "orig_query": "select avg(price), manufacturer from products group by manufacturer", "split_map": {"products": ["max_price", "min_price", "avg_price", "total_price"]}, "schema_with_content": "manufacturers : headquarter (\"Paris\", \"Beijing\", \"Tokyo\"), revenue (100.0, 50.0, 200.0), code (1, 3, 1), name (\"Creative Labs\", \"Fujitsu\", \"Creative Labs\"), founder (\"Andy\", \"Owen\", \"Mary\") | products : name (\"Hard drive\", \"Monitor\", \"Memory\"), code (8, 7, 8), manufacturer (2, 1, 4), price (5, 120, 240) | products_price : max_price (5, 120, 240), code (8, 7, 8), min_price (5, 120, 240), name (\"Hard drive\", \"Monitor\", \"Memory\"), avg_price (5, 120, 240), total_price (5, 120, 240), manufacturer (2, 1, 4)", "schema_without_content": "manufacturers : headquarter , revenue , code , name , founder  | products : name , code , manufacturer , price  | products_price : max_price , code , min_price , name , avg_price , total_price , manufacturer "}, {"db_id": "manufactory_1", "query": "select code, name, min_price from products_price group by name", "query_toks": ["SELECT", "code", ",", "name", ",", "min", "(", "price", ")", "FROM", "products", "GROUP", "BY", "name"], "query_toks_no_value": ["select", "code", ",", "name", ",", "min", "(", "price", ")", "from", "products", "group", "by", "name"], "question": "Select the code of the product that is cheapest in each product category.", "question_toks": ["Select", "the", "code", "of", "the", "product", "that", "is", "cheapest", "in", "each", "product", "category", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [2, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "code"}, "orig_query": "select code, name, min(price) from products group by name", "split_map": {"products": ["max_price", "min_price", "avg_price", "total_price"]}, "schema_with_content": "manufacturers : code (1, 4, 6), founder (\"Andy\", \"James\", \"John\"), name (\"Hewlett-Packard\", \"Winchester\", \"Fujitsu\"), revenue (30.0, 50.0, 130.0), headquarter (\"Paris\", \"Austin\", \"Paris\") | products : name (\"Toner cartridge\", \"Monitor\", \"Hard drive\"), code (6, 4, 10), manufacturer (1, 1, 2), price (270, 90, 90) | products_price : max_price (270, 90, 90), avg_price (270, 90, 90), name (\"Toner cartridge\", \"Monitor\", \"Hard drive\"), code (6, 4, 10), min_price (270, 90, 90), total_price (270, 90, 90), manufacturer (1, 1, 2)", "schema_without_content": "manufacturers : code , founder , name , revenue , headquarter  | products : name , code , manufacturer , price  | products_price : max_price , avg_price , name , code , min_price , total_price , manufacturer "}, {"db_id": "manufactory_1", "query": "select code, name, min_price from products_price group by name", "query_toks": ["SELECT", "code", ",", "name", ",", "min", "(", "price", ")", "FROM", "products", "GROUP", "BY", "name"], "query_toks_no_value": ["select", "code", ",", "name", ",", "min", "(", "price", ")", "from", "products", "group", "by", "name"], "question": "What are the codes and names of the cheapest products in each category?", "question_toks": ["What", "are", "the", "codes", "and", "names", "of", "the", "cheapest", "products", "in", "each", "category", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [2, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "code"}, "orig_query": "select code, name, min(price) from products group by name", "split_map": {"products": ["max_price", "min_price", "avg_price", "total_price"]}, "schema_with_content": "manufacturers : headquarter (\"Paris\", \"Tokyo\", \"Tokyo\"), founder (\"John\", \"Owen\", \"Owen\"), code (6, 3, 3), revenue (120.0, 200.0, 200.0), name (\"Fujitsu\", \"Sony\", \"Iomega\") | products : name (\"DVD drive\", \"DVD drive\", \"Memory\"), manufacturer (1, 1, 3), code (6, 8, 10), price (5, 240, 66) | products_price : code (6, 8, 10), max_price (5, 240, 66), total_price (5, 240, 66), avg_price (5, 240, 66), name (\"DVD drive\", \"DVD drive\", \"Memory\"), min_price (5, 240, 66), manufacturer (1, 1, 3)", "schema_without_content": "manufacturers : headquarter , founder , code , revenue , name  | products : name , manufacturer , code , price  | products_price : code , max_price , total_price , avg_price , name , min_price , manufacturer "}, {"db_id": "shop_membership", "query": "select min_membership_amount, max_membership_amount from branch_membership_amount where open_year = 2011 or city = 'London'", "query_toks": ["SELECT", "min", "(", "membership_amount", ")", ",", "max", "(", "membership_amount", ")", "FROM", "branch", "WHERE", "open_year", "=", "2011", "OR", "city", "=", "'London", "'"], "query_toks_no_value": ["select", "min", "(", "membership_amount", ")", ",", "max", "(", "membership_amount", ")", "from", "branch", "where", "open_year", "=", "value", "or", "city", "=", "value"], "question": "Show minimum and maximum amount of memberships for all branches opened in 2011 or located at city London.", "question_toks": ["Show", "minimum", "and", "maximum", "amount", "of", "memberships", "for", "all", "branches", "opened", "in", "2011", "or", "located", "at", "city", "London", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 11, false], null]], [1, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], 2011.0, null], "or", [false, 2, [0, [0, 10, false], null], "\"London\"", null]]}, "primary_key": {"branch": "branch_id"}, "orig_query": "select min(membership_amount), max(membership_amount) from branch where open_year = 2011 or city = 'London'", "split_map": {"branch": ["max_membership_amount", "min_membership_amount", "avg_membership_amount", "total_membership_amount"]}, "schema_with_content": "member : member_id (4, 3, 5), hometown (\"Louisville, Kentucky\", \"Columbia, South Carolina\", \"Simpsonville, South Carolina\"), name (\"Braxton Kelley\", \"Corey Peters\", \"Johnny Williams\"), card_number (\"LCB7\", \"RT91\", \"RT91\"), level (6, 4, 2) | branch : open_year (\"2009\", \"2012\", \"2015\"), address_road (\"Brampton Road\", \"Valleys Place\", \"Abbey Rise\"), membership_amount (\"6\", \"112\", \"6\"), city (\"London\", \"Oxford\"), name (\"Taverner\", \"Saint Amant\", \"Alexandre\"), branch_id (4, 3, 4) | branch_membership_amount : city (\"London\", \"Oxford\"), branch_id (4, 3, 4), max_membership_amount (\"6\", \"112\", \"6\"), min_membership_amount (\"6\", \"112\", \"6\"), total_membership_amount (\"6\", \"112\", \"6\"), address_road (\"Brampton Road\", \"Valleys Place\", \"Abbey Rise\"), avg_membership_amount (\"6\", \"112\", \"6\"), open_year (\"2009\", \"2012\", \"2015\"), name (\"Taverner\", \"Saint Amant\", \"Alexandre\") | membership_register_branch : register_year (\"2016\", \"2017\"), branch_id (\"2\", \"6\", \"2\"), member_id (4, 3, 1) | purchase : branch_id (\"2\", \"3\", \"5\"), year (\"2018\", \"2017\"), total_pounds (20.99, 430.29, 20.99), member_id (2, 4, 1)", "schema_without_content": "member : member_id , hometown , name , card_number , level  | branch : open_year , address_road , membership_amount , city , name , branch_id  | branch_membership_amount : city , branch_id , max_membership_amount , min_membership_amount , total_membership_amount , address_road , avg_membership_amount , open_year , name  | membership_register_branch : register_year , branch_id , member_id  | purchase : branch_id , year , total_pounds , member_id "}, {"db_id": "shop_membership", "query": "select min_membership_amount, max_membership_amount from branch_membership_amount where open_year = 2011 or city = 'London'", "query_toks": ["SELECT", "min", "(", "membership_amount", ")", ",", "max", "(", "membership_amount", ")", "FROM", "branch", "WHERE", "open_year", "=", "2011", "OR", "city", "=", "'London", "'"], "query_toks_no_value": ["select", "min", "(", "membership_amount", ")", ",", "max", "(", "membership_amount", ")", "from", "branch", "where", "open_year", "=", "value", "or", "city", "=", "value"], "question": "What are the minimum and maximum membership amounts for all branches that either opened in 2011 or are located in London?", "question_toks": ["What", "are", "the", "minimum", "and", "maximum", "membership", "amounts", "for", "all", "branches", "that", "either", "opened", "in", "2011", "or", "are", "located", "in", "London", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 11, false], null]], [1, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], 2011.0, null], "or", [false, 2, [0, [0, 10, false], null], "\"London\"", null]]}, "primary_key": {"branch": "branch_id"}, "orig_query": "select min(membership_amount), max(membership_amount) from branch where open_year = 2011 or city = 'London'", "split_map": {"branch": ["max_membership_amount", "min_membership_amount", "avg_membership_amount", "total_membership_amount"]}, "schema_with_content": "member : name (\"Matt Lentz\", \"Ventrell Jenkins\", \"Braxton Kelley\"), card_number (\"OLB56\", \"MLB4\", \"RE95\"), level (6, 4, 2), hometown (\"Hiram, Georgia\", \"Collierville, Tennessee\", \"Hiram, Georgia\"), member_id (3, 3, 10) | branch : open_year (\"2012\", \"2009\", \"2015\"), address_road (\"Valleys Place\", \"Cecilia Avenue\", \"Valleys Place\"), branch_id (4, 1, 1), membership_amount (\"31\", \"7\", \"6\"), name (\"Taverner\", \"Popert\", \"Saint Amant\"), city (\"London\", \"Oxford\") | branch_membership_amount : city (\"London\", \"Oxford\"), address_road (\"Valleys Place\", \"Cecilia Avenue\", \"Valleys Place\"), open_year (\"2012\", \"2009\", \"2015\"), avg_membership_amount (\"31\", \"7\", \"6\"), total_membership_amount (\"31\", \"7\", \"6\"), branch_id (4, 1, 1), min_membership_amount (\"31\", \"7\", \"6\"), name (\"Taverner\", \"Popert\", \"Saint Amant\"), max_membership_amount (\"31\", \"7\", \"6\") | membership_register_branch : register_year (\"2016\", \"2017\"), member_id (8, 3, 1), branch_id (\"4\", \"5\", \"6\") | purchase : member_id (6, 4, 3), branch_id (\"6\", \"2\", \"1\"), year (\"2018\", \"2017\"), total_pounds (232.09, 988.09, 20.99)", "schema_without_content": "member : name , card_number , level , hometown , member_id  | branch : open_year , address_road , branch_id , membership_amount , name , city  | branch_membership_amount : city , address_road , open_year , avg_membership_amount , total_membership_amount , branch_id , min_membership_amount , name , max_membership_amount  | membership_register_branch : register_year , member_id , branch_id  | purchase : member_id , branch_id , year , total_pounds "}, {"db_id": "voter_2", "query": "select max_age from student_age", "query_toks": ["SELECT", "max", "(", "Age", ")", "FROM", "STUDENT"], "query_toks_no_value": ["select", "max", "(", "age", ")", "from", "student"], "question": "Find the maximum age of all the students.", "question_toks": ["Find", "the", "maximum", "age", "of", "all", "the", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 4, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stuid"}, "orig_query": "select max(age) from student", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "student : stuid (1024, 1026, 1014), age (27, 21, 27), lname (\"Tai\", \"Han\", \"Nelson\"), advisor (9172, 7134, 8918), sex (\"F\", \"M\"), major (550, 50, 520), city_code (\"PEK\", \"DET\", \"YYZ\"), fname (\"Stacy\", \"Bruce\", \"David\") | student_age : total_age (27, 21, 27), lname (\"Tai\", \"Han\", \"Nelson\"), min_age (27, 21, 27), stuid (1024, 1026, 1014), fname (\"Stacy\", \"Bruce\", \"David\"), avg_age (27, 21, 27), max_age (27, 21, 27), sex (\"F\", \"M\"), major (550, 50, 520), advisor (9172, 7134, 8918), city_code (\"PEK\", \"DET\", \"YYZ\") | voting_record : election_cycle (\"Spring\", \"Fall\"), class_senator_vote (1028, 1018), stuid (1003, 1005, 1003), president_vote (1004, 1014, 1024), registration_date (\"08/30/2013\", \"08/30/2015\", \"08/30/2015\"), treasurer_vote (1035, 1025), secretary_vote (1010, 1020, 1030), vice_president_vote (1007, 1017), class_president_vote (1031, 1021, 1021)", "schema_without_content": "student : stuid , age , lname , advisor , sex , major , city_code , fname  | student_age : total_age , lname , min_age , stuid , fname , avg_age , max_age , sex , major , advisor , city_code  | voting_record : election_cycle , class_senator_vote , stuid , president_vote , registration_date , treasurer_vote , secretary_vote , vice_president_vote , class_president_vote "}, {"db_id": "voter_2", "query": "select max_age from student_age", "query_toks": ["SELECT", "max", "(", "Age", ")", "FROM", "STUDENT"], "query_toks_no_value": ["select", "max", "(", "age", ")", "from", "student"], "question": "What is the oldest age among the students?", "question_toks": ["What", "is", "the", "oldest", "age", "among", "the", "students", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 4, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stuid"}, "orig_query": "select max(age) from student", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "student : stuid (1031, 1031, 1015), age (16, 16, 20), major (550, 540, 520), city_code (\"NAR\", \"NAR\", \"YYZ\"), fname (\"David\", \"Michael\", \"Stacy\"), advisor (8722, 7271, 7723), sex (\"F\", \"M\"), lname (\"Prater\", \"Tai\", \"Gompers\") | student_age : lname (\"Prater\", \"Tai\", \"Gompers\"), min_age (16, 16, 20), max_age (16, 16, 20), total_age (16, 16, 20), fname (\"David\", \"Michael\", \"Stacy\"), stuid (1031, 1031, 1015), avg_age (16, 16, 20), sex (\"F\", \"M\"), major (550, 540, 520), advisor (8722, 7271, 7723), city_code (\"NAR\", \"NAR\", \"YYZ\") | voting_record : secretary_vote (1010, 1020, 1030), election_cycle (\"Spring\", \"Fall\"), class_president_vote (1001, 1001, 1031), class_senator_vote (1028, 1018), treasurer_vote (1035, 1025), stuid (1002, 1004, 1001), registration_date (\"08/30/2013\", \"08/30/2015\", \"08/30/2013\"), vice_president_vote (1007, 1017), president_vote (1004, 1014, 1024)", "schema_without_content": "student : stuid , age , major , city_code , fname , advisor , sex , lname  | student_age : lname , min_age , max_age , total_age , fname , stuid , avg_age , sex , major , advisor , city_code  | voting_record : secretary_vote , election_cycle , class_president_vote , class_senator_vote , treasurer_vote , stuid , registration_date , vice_president_vote , president_vote "}, {"db_id": "voter_2", "query": "select avg_age from student_age where sex = \"F\"", "query_toks": ["SELECT", "avg", "(", "Age", ")", "FROM", "STUDENT", "WHERE", "Sex", "=", "``", "F", "''"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "student", "where", "sex", "=", "value"], "question": "What is the average age of female (sex is F) students?", "question_toks": ["What", "is", "the", "average", "age", "of", "female", "(", "sex", "is", "F", ")", "students", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"F\"", null]]}, "primary_key": {"student": "stuid"}, "orig_query": "select avg(age) from student where sex = \"F\"", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "student : major (520, 520, 600), lname (\"Brown\", \"Goldman\", \"Kumar\"), advisor (8721, 1148, 1148), fname (\"Paul\", \"Sarah\", \"David\"), sex (\"F\", \"M\"), age (22, 21, 19), city_code (\"DAL\", \"PIT\", \"NYC\"), stuid (1020, 1025, 1002) | student_age : fname (\"Paul\", \"Sarah\", \"David\"), lname (\"Brown\", \"Goldman\", \"Kumar\"), total_age (22, 21, 19), min_age (22, 21, 19), max_age (22, 21, 19), stuid (1020, 1025, 1002), avg_age (22, 21, 19), sex (\"F\", \"M\"), major (520, 520, 600), advisor (8721, 1148, 1148), city_code (\"DAL\", \"PIT\", \"NYC\") | voting_record : class_senator_vote (1028, 1018), registration_date (\"08/30/2012\", \"08/30/2015\", \"08/30/2012\"), election_cycle (\"Spring\", \"Fall\"), vice_president_vote (1007, 1017), president_vote (1004, 1014, 1024), secretary_vote (1010, 1020, 1030), treasurer_vote (1035, 1025), stuid (1003, 1003, 1003), class_president_vote (1011, 1001, 1031)", "schema_without_content": "student : major , lname , advisor , fname , sex , age , city_code , stuid  | student_age : fname , lname , total_age , min_age , max_age , stuid , avg_age , sex , major , advisor , city_code  | voting_record : class_senator_vote , registration_date , election_cycle , vice_president_vote , president_vote , secretary_vote , treasurer_vote , stuid , class_president_vote "}, {"db_id": "voter_2", "query": "select avg_age from student_age where sex = \"F\"", "query_toks": ["SELECT", "avg", "(", "Age", ")", "FROM", "STUDENT", "WHERE", "Sex", "=", "``", "F", "''"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "student", "where", "sex", "=", "value"], "question": "Find the average age of female students.", "question_toks": ["Find", "the", "average", "age", "of", "female", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"F\"", null]]}, "primary_key": {"student": "stuid"}, "orig_query": "select avg(age) from student where sex = \"F\"", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "student : age (26, 22, 17), stuid (1010, 1008, 1020), fname (\"George\", \"William\", \"Andy\"), city_code (\"ATL\", \"DAL\", \"BOS\"), lname (\"Davis\", \"Brody\", \"Cheng\"), major (50, 550, 50), advisor (7792, 8772, 2192), sex (\"F\", \"M\") | student_age : total_age (26, 22, 17), stuid (1010, 1008, 1020), avg_age (26, 22, 17), max_age (26, 22, 17), min_age (26, 22, 17), fname (\"George\", \"William\", \"Andy\"), lname (\"Davis\", \"Brody\", \"Cheng\"), sex (\"F\", \"M\"), major (50, 550, 50), advisor (7792, 8772, 2192), city_code (\"ATL\", \"DAL\", \"BOS\") | voting_record : secretary_vote (1010, 1020, 1030), vice_president_vote (1007, 1017), registration_date (\"08/30/2014\", \"08/30/2014\", \"08/30/2015\"), class_senator_vote (1028, 1018), treasurer_vote (1035, 1025), class_president_vote (1001, 1001, 1021), election_cycle (\"Spring\", \"Fall\"), president_vote (1004, 1014, 1024), stuid (1002, 1003, 1004)", "schema_without_content": "student : age , stuid , fname , city_code , lname , major , advisor , sex  | student_age : total_age , stuid , avg_age , max_age , min_age , fname , lname , sex , major , advisor , city_code  | voting_record : secretary_vote , vice_president_vote , registration_date , class_senator_vote , treasurer_vote , class_president_vote , election_cycle , president_vote , stuid "}, {"db_id": "voter_2", "query": "select max_age, min_age from student_age where major = 600", "query_toks": ["SELECT", "max", "(", "Age", ")", ",", "min", "(", "Age", ")", "FROM", "STUDENT", "WHERE", "Major", "=", "600"], "query_toks_no_value": ["select", "max", "(", "age", ")", ",", "min", "(", "age", ")", "from", "student", "where", "major", "=", "value"], "question": "What are the maximum and minimum age of students with major 600?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "age", "of", "students", "with", "major", "600", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 4, false], null]], [2, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], 600.0, null]]}, "primary_key": {"student": "stuid"}, "orig_query": "select max(age), min(age) from student where major = 600", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "student : major (540, 600, 600), sex (\"F\", \"M\"), fname (\"Paul\", \"Shiela\", \"Tracy\"), stuid (1033, 1021, 1026), city_code (\"YYZ\", \"CHI\", \"ATL\"), lname (\"Leighton\", \"Schultz\", \"Andreou\"), age (27, 17, 21), advisor (5718, 8722, 7712) | student_age : min_age (27, 17, 21), fname (\"Paul\", \"Shiela\", \"Tracy\"), max_age (27, 17, 21), total_age (27, 17, 21), avg_age (27, 17, 21), stuid (1033, 1021, 1026), lname (\"Leighton\", \"Schultz\", \"Andreou\"), sex (\"F\", \"M\"), major (540, 600, 600), advisor (5718, 8722, 7712), city_code (\"YYZ\", \"CHI\", \"ATL\") | voting_record : vice_president_vote (1007, 1017), class_president_vote (1031, 1011, 1021), registration_date (\"08/30/2012\", \"08/30/2014\", \"08/30/2014\"), president_vote (1004, 1014, 1024), election_cycle (\"Spring\", \"Fall\"), stuid (1003, 1002, 1004), treasurer_vote (1035, 1025), secretary_vote (1010, 1020, 1030), class_senator_vote (1028, 1018)", "schema_without_content": "student : major , sex , fname , stuid , city_code , lname , age , advisor  | student_age : min_age , fname , max_age , total_age , avg_age , stuid , lname , sex , major , advisor , city_code  | voting_record : vice_president_vote , class_president_vote , registration_date , president_vote , election_cycle , stuid , treasurer_vote , secretary_vote , class_senator_vote "}, {"db_id": "voter_2", "query": "select max_age, min_age from student_age where major = 600", "query_toks": ["SELECT", "max", "(", "Age", ")", ",", "min", "(", "Age", ")", "FROM", "STUDENT", "WHERE", "Major", "=", "600"], "query_toks_no_value": ["select", "max", "(", "age", ")", ",", "min", "(", "age", ")", "from", "student", "where", "major", "=", "value"], "question": "Tell me the ages of the oldest and youngest students studying major 600.", "question_toks": ["Tell", "me", "the", "ages", "of", "the", "oldest", "and", "youngest", "students", "studying", "major", "600", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 4, false], null]], [2, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], 600.0, null]]}, "primary_key": {"student": "stuid"}, "orig_query": "select max(age), min(age) from student where major = 600", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "student : lname (\"Kim\", \"Brody\", \"Rugh\"), sex (\"F\", \"M\"), fname (\"Ian\", \"Dinesh\", \"David\"), age (21, 20, 19), major (600, 550, 550), city_code (\"NAR\", \"DET\", \"HKG\"), stuid (1015, 1012, 1031), advisor (7712, 7792, 7134) | student_age : total_age (21, 20, 19), avg_age (21, 20, 19), fname (\"Ian\", \"Dinesh\", \"David\"), max_age (21, 20, 19), stuid (1015, 1012, 1031), min_age (21, 20, 19), lname (\"Kim\", \"Brody\", \"Rugh\"), sex (\"F\", \"M\"), major (600, 550, 550), advisor (7712, 7792, 7134), city_code (\"NAR\", \"DET\", \"HKG\") | voting_record : registration_date (\"08/30/2015\", \"08/30/2014\", \"08/30/2012\"), election_cycle (\"Spring\", \"Fall\"), secretary_vote (1010, 1020, 1030), class_president_vote (1031, 1011, 1001), vice_president_vote (1007, 1017), class_senator_vote (1028, 1018), stuid (1001, 1002, 1002), president_vote (1004, 1014, 1024), treasurer_vote (1035, 1025)", "schema_without_content": "student : lname , sex , fname , age , major , city_code , stuid , advisor  | student_age : total_age , avg_age , fname , max_age , stuid , min_age , lname , sex , major , advisor , city_code  | voting_record : registration_date , election_cycle , secretary_vote , class_president_vote , vice_president_vote , class_senator_vote , stuid , president_vote , treasurer_vote "}, {"db_id": "swimming", "query": "select avg_capacity from stadium_capacity where opening_year = 2005", "query_toks": ["SELECT", "avg", "(", "capacity", ")", "FROM", "stadium", "WHERE", "opening_year", "=", "2005"], "query_toks_no_value": ["select", "avg", "(", "capacity", ")", "from", "stadium", "where", "opening_year", "=", "value"], "question": "What is the average capacity of the stadiums that were opened in year 2005?", "question_toks": ["What", "is", "the", "average", "capacity", "of", "the", "stadiums", "that", "were", "opened", "in", "year", "2005", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 17, false], null], 2005.0, null]]}, "primary_key": {"stadium": "id"}, "orig_query": "select avg(capacity) from stadium where opening_year = 2005", "split_map": {"stadium": ["max_capacity", "min_capacity", "avg_capacity", "total_capacity"]}, "schema_with_content": "swimmer : meter_300 (\"2:53.46\", \"2:56.02\", \"2:55.90\"), meter_500 (\"4:54.48\", \"4:56.96\", \"4:54.21\"), meter_100 (57.84, 57.84, 57.84), name (\"Ryan Cochrane\", \"Federico Colbertaldo\", \"Ryan Cochrane\"), meter_400 (\"3:57.00\", \"3:55.72\", \"3:57.12\"), meter_600 (\"5:52.92\", \"5:53.53\", \"5:57.10\"), meter_200 (\"1:56.44\", \"1:57.10\", \"1:56.44\"), nationality (\"France\", \"Poland\", \"Italy\"), meter_700 (\"6:57.69\", \"6:53.34\", \"6:52.58\"), id (1, 8, 1), time (\"7:53.43\", \"7:56.56\", \"7:53.43\") | stadium : opening_year (2007, 2006, 2004), city (\"Lyon\", \"Valencia\", \"Valencia\"), name (\"Northumberland Development Project\", \"Baku Olympic Stadium\", \"Baku Olympic Stadium\"), country (\"Spain\", \"Azerbaijan\", \"Russia\"), capacity (65000, 65000, 45015), id (2, 9, 4) | stadium_capacity : min_capacity (65000, 65000, 45015), avg_capacity (65000, 65000, 45015), max_capacity (65000, 65000, 45015), id (2, 9, 4), name (\"Northumberland Development Project\", \"Baku Olympic Stadium\", \"Baku Olympic Stadium\"), total_capacity (65000, 65000, 45015), city (\"Lyon\", \"Valencia\", \"Valencia\"), country (\"Spain\", \"Azerbaijan\", \"Russia\"), opening_year (2007, 2006, 2004) | event : id (6, 4, 6), name (\"World Junior\", \"IPC\", \"FINA\"), year (\"2012\", \"2016\", \"2013\"), stadium_id (4, 2, 8) | record : result (\"NC\", \"Win\", \"Loss\"), id (13, 1, 7), swimmer_id (3, 6, 5), event_id (3, 3, 4)", "schema_without_content": "swimmer : meter_300 , meter_500 , meter_100 , name , meter_400 , meter_600 , meter_200 , nationality , meter_700 , id , time  | stadium : opening_year , city , name , country , capacity , id  | stadium_capacity : min_capacity , avg_capacity , max_capacity , id , name , total_capacity , city , country , opening_year  | event : id , name , year , stadium_id  | record : result , id , swimmer_id , event_id "}, {"db_id": "railway", "query": "select max_level from manager_level where country != \"Australia \"", "query_toks": ["SELECT", "max", "(", "LEVEL", ")", "FROM", "manager", "WHERE", "Country", "!", "=", "``", "Australia", "''"], "query_toks_no_value": ["select", "max", "(", "level", ")", "from", "manager", "where", "country", "!", "=", "value"], "question": "What is the maximum level of managers in countries that are not \"Australia\"?", "question_toks": ["What", "is", "the", "maximum", "level", "of", "managers", "in", "countries", "that", "are", "not", "``", "Australia", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 16, false], null], "\"Australia\t\"", null]]}, "primary_key": {"manager": "manager_id"}, "orig_query": "select max(level) from manager where country != \"Australia \"", "split_map": {"manager": ["max_level", "min_level", "avg_level", "total_level"]}, "schema_with_content": "railway : railway_id (2, 1, 10), built (\"1903\", \"1905\", \"1905\"), objectnumber (\"1975-7006\", \"1975-7018\", \"1975-7005\"), location (\"Bo'ness\", \"York\", \"Toddington\"), wheels (\"4-4-0\", \"2-8-0\", \"4-6-0\"), builder (\"GWR Swindon\", \"GWR Swindon\", \"Avonside\"), railway (\"SECR\", \"SECR\", \"LTSR\") | train : train_id (3, 3, 7), railway_id (5, 3, 2), arrival (\"09:48\", \"13:04\", \"09:48\"), name (\"Sewagram Exp\", \"Ballarshah-Mumbai Pass\", \"Andaman Exp\"), train_num (\"16094\", \"16094\", \"16032\"), from (\"Chennai\", \"Mumbai CST\", \"Kazipet\") | manager : country (\"Scotland\", \"United States\", \"England\"), working_year_starts (\"1999\", \"1999\", \"1985\"), manager_id (6, 6, 4), level (7, 7, 7), name (\"David Duval\", \"David Duval\", \"Tiger Woods\"), age (55, 46, 51) | manager_level : name (\"David Duval\", \"David Duval\", \"Tiger Woods\"), min_level (7, 7, 7), total_level (7, 7, 7), avg_level (7, 7, 7), max_level (7, 7, 7), age (55, 46, 51), manager_id (6, 6, 4), working_year_starts (\"1999\", \"1999\", \"1985\"), country (\"Scotland\", \"United States\", \"England\") | railway_manage : manager_id (3, 4, 4), railway_id (8, 7, 9), from_year (\"2010\", \"2012\", \"2011\")", "schema_without_content": "railway : railway_id , built , objectnumber , location , wheels , builder , railway  | train : train_id , railway_id , arrival , name , train_num , from  | manager : country , working_year_starts , manager_id , level , name , age  | manager_level : name , min_level , total_level , avg_level , max_level , age , manager_id , working_year_starts , country  | railway_manage : manager_id , railway_id , from_year "}, {"db_id": "railway", "query": "select avg_age from manager_age", "query_toks": ["SELECT", "avg", "(", "Age", ")", "FROM", "manager"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "manager"], "question": "What is the average age for all managers?", "question_toks": ["What", "is", "the", "average", "age", "for", "all", "managers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 18, false], null]]]], "union": null, "where": []}, "primary_key": {"manager": "manager_id"}, "orig_query": "select avg(age) from manager", "split_map": {"manager": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "railway : built (\"1904\", \"1910\", \"1910\"), builder (\"GWR Swindon\", \"GNR Doncaster\", \"Stephenson\"), railway_id (4, 5, 8), wheels (\"4-4-0\", \"4-4-0\", \"4-4-2T\"), railway (\"LTSR\", \"GWRWk\", \"GWRWk\"), location (\"Shildon\", \"Swindon\", \"Basingstoke\"), objectnumber (\"1976-7001\", \"1975-7006\", \"1975-7018\") | train : name (\"Wardha-Ballarshah Pass\", \"Nandigram Exp\", \"Wardha-Ballarshah Pass\"), from (\"Lucknow\", \"Lucknow\", \"Chennai\"), train_id (9, 7, 2), arrival (\"09:48\", \"13:28\", \"08:54\"), railway_id (7, 3, 9), train_num (\"12140\", \"12140\", \"12140\") | manager : age (47, 47, 51), country (\"England\", \"Australia\", \"Scotland\"), manager_id (1, 6, 7), working_year_starts (\"1993\", \"2003\", \"2003\"), level (5, 11, 8), name (\"Tiger Woods\", \"Ben Curtis\", \"David Duval\") | manager_age : name (\"Tiger Woods\", \"Ben Curtis\", \"David Duval\"), max_age (47, 47, 51), min_age (47, 47, 51), country (\"England\", \"Australia\", \"Scotland\"), manager_id (1, 6, 7), total_age (47, 47, 51), working_year_starts (\"1993\", \"2003\", \"2003\"), avg_age (47, 47, 51), level (5, 11, 8) | railway_manage : manager_id (2, 1, 2), from_year (\"2010\", \"2012\", \"2011\"), railway_id (8, 9, 2)", "schema_without_content": "railway : built , builder , railway_id , wheels , railway , location , objectnumber  | train : name , from , train_id , arrival , railway_id , train_num  | manager : age , country , manager_id , working_year_starts , level , name  | manager_age : name , max_age , min_age , country , manager_id , total_age , working_year_starts , avg_age , level  | railway_manage : manager_id , from_year , railway_id "}, {"db_id": "customers_and_products_contacts", "query": "select min_product_price, max_product_price, avg_product_price from products_product_price", "query_toks": ["SELECT", "min", "(", "product_price", ")", ",", "max", "(", "product_price", ")", ",", "avg", "(", "product_price", ")", "FROM", "products"], "query_toks_no_value": ["select", "min", "(", "product_price", ")", ",", "max", "(", "product_price", ")", ",", "avg", "(", "product_price", ")", "from", "products"], "question": "Show the minimum, maximum, average price for all products.", "question_toks": ["Show", "the", "minimum", ",", "maximum", ",", "average", "price", "for", "all", "products", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 10, false], null]], [1, [0, [0, 10, false], null]], [5, [0, [0, 10, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "product_id"}, "orig_query": "select min(product_price), max(product_price), avg(product_price) from products", "split_map": {"products": ["max_product_price", "min_product_price", "avg_product_price", "total_product_price"]}, "schema_with_content": "addresses : country (\"USA\"), line_1_number_building (\"794 Doyle Lake Apt. 531\", \"037 Luella Path\", \"044 Greenfelder Fort\"), city (\"Lake Floyd\", \"Lake Katheryn\", \"Lake Floyd\"), address_id (15, 1, 6), state_province_county (\"Colorado\", \"Idaho\", \"Illinois\"), zip_postcode (\"505\", \"740\", \"041\") | products : product_type_code (\"Hardware\", \"Clothes\"), product_name (\"gucci\", \"Sony\", \"gucci\"), product_id (3, 15, 6), product_price (149.95519076938, 77.109961147471, 77.109961147471) | products_product_price : total_product_price (149.95519076938, 77.109961147471, 77.109961147471), min_product_price (149.95519076938, 77.109961147471, 77.109961147471), avg_product_price (149.95519076938, 77.109961147471, 77.109961147471), product_name (\"gucci\", \"Sony\", \"gucci\"), max_product_price (149.95519076938, 77.109961147471, 77.109961147471), product_id (3, 15, 6), product_type_code (\"Hardware\", \"Clothes\") | customers : customer_number (\"233\", \"564\", \"838\"), customer_address (\"4065 Forest Vista Apt. 103\", \"55270 Carter Street Apt. 214\", \"91702 Hilpert Pines Suite 177\"), customer_name (\"Cleo\", \"Shany\", \"Shany\"), customer_phone (\"479-171-6355x66065\", \"1-513-427-0125\", \"529.148.1926\"), customer_id (1, 1, 1), customer_email (\"morton06@example.net\", \"howard27@example.com\", \"dbeahan@example.net\"), payment_method_code (\"Credit Card\", \"Direct Debit\") | contacts : last_name (\"Hills\", \"Stamm\", \"Stamm\"), contact_phone (\"1-613-226-7727\", \"405-058-1659\", \"658.850.7946x9993\"), contact_id (6, 13, 10), gender (\"male\", \"female\"), first_name (\"Skye\", \"Leif\", \"Amani\"), customer_id (14, 8, 6) | customer_address_history : address_id (5, 10, 4), date_from (\"2017-10-25 07:35:59\", \"2011-11-02 17:31:41\", \"2011-11-19 12:17:36\"), date_to (\"2018-03-16 14:49:28\", \"2018-03-24 06:20:36\", \"2018-03-11 21:40:52\"), customer_id (7, 3, 2) | customer_orders : order_id (12, 12, 12), order_date (\"2016-09-17 03:00:47\", \"1971-12-04 19:14:18\", \"2003-01-17 00:06:12\"), order_status_code (\"Completed\", \"Part\"), customer_id (3, 4, 1) | order_items : order_id (14, 4, 9), order_quantity (\"3\", \"9\", \"male\"), product_id (5, 5, 11), order_item_id (1, 12, 9)", "schema_without_content": "addresses : country , line_1_number_building , city , address_id , state_province_county , zip_postcode  | products : product_type_code , product_name , product_id , product_price  | products_product_price : total_product_price , min_product_price , avg_product_price , product_name , max_product_price , product_id , product_type_code  | customers : customer_number , customer_address , customer_name , customer_phone , customer_id , customer_email , payment_method_code  | contacts : last_name , contact_phone , contact_id , gender , first_name , customer_id  | customer_address_history : address_id , date_from , date_to , customer_id  | customer_orders : order_id , order_date , order_status_code , customer_id  | order_items : order_id , order_quantity , product_id , order_item_id "}, {"db_id": "dorm_1", "query": "select avg_age, city_code from student_age group by city_code", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "city_code", "FROM", "student", "GROUP", "BY", "city_code"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "city_code", "from", "student", "group", "by", "city_code"], "question": "Find the average age of all students living in the each city.", "question_toks": ["Find", "the", "average", "age", "of", "all", "students", "living", "in", "the", "each", "city", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stuid"}, "orig_query": "select avg(age), city_code from student group by city_code", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "student : lname (\"Pang\", \"Apap\", \"Pang\"), major (520, 600, 600), fname (\"Jun\", \"David\", \"Linda\"), age (26, 22, 22), advisor (8723, 1148, 8772), city_code (\"BOS\", \"DET\", \"WAS\"), sex (\"F\", \"M\"), stuid (1009, 1020, 1004) | student_age : total_age (26, 22, 22), min_age (26, 22, 22), avg_age (26, 22, 22), lname (\"Pang\", \"Apap\", \"Pang\"), max_age (26, 22, 22), fname (\"Jun\", \"David\", \"Linda\"), stuid (1009, 1020, 1004), sex (\"F\", \"M\"), major (520, 600, 600), advisor (8723, 1148, 8772), city_code (\"BOS\", \"DET\", \"WAS\") | dorm : dormid (110, 140, 140), gender (\"X\", \"M\", \"F\"), student_capacity (40, 400, 400), dorm_name (\"Grad Student Asylum\", \"Bud Jones Hall\", \"Grad Student Asylum\") | dorm_amenity : amenid (922, 901, 903), amenity_name (\"Heat\", \"Heat\", \"4 Walls\") | has_amenity : dormid (110, 140, 100), amenid (901, 931, 932) | lives_in : stuid (1027, 1023, 1023), dormid (160, 110, 110), room_number (112, 208, 112)", "schema_without_content": "student : lname , major , fname , age , advisor , city_code , sex , stuid  | student_age : total_age , min_age , avg_age , lname , max_age , fname , stuid , sex , major , advisor , city_code  | dorm : dormid , gender , student_capacity , dorm_name  | dorm_amenity : amenid , amenity_name  | has_amenity : dormid , amenid  | lives_in : stuid , dormid , room_number "}, {"db_id": "dorm_1", "query": "select avg_age, city_code from student_age group by city_code", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "city_code", "FROM", "student", "GROUP", "BY", "city_code"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "city_code", "from", "student", "group", "by", "city_code"], "question": "What is the average age for each city and what are those cities?", "question_toks": ["What", "is", "the", "average", "age", "for", "each", "city", "and", "what", "are", "those", "cities", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stuid"}, "orig_query": "select avg(age), city_code from student group by city_code", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "student : age (16, 22, 26), advisor (8423, 2192, 8772), major (50, 540, 550), sex (\"F\", \"M\"), lname (\"Kumar\", \"Simms\", \"Leighton\"), city_code (\"ATL\", \"DAL\", \"PHL\"), stuid (1014, 1020, 1011), fname (\"Sarah\", \"Stacy\", \"Paul\") | student_age : stuid (1014, 1020, 1011), total_age (16, 22, 26), min_age (16, 22, 26), lname (\"Kumar\", \"Simms\", \"Leighton\"), max_age (16, 22, 26), avg_age (16, 22, 26), fname (\"Sarah\", \"Stacy\", \"Paul\"), sex (\"F\", \"M\"), major (50, 540, 550), advisor (8423, 2192, 8772), city_code (\"ATL\", \"DAL\", \"PHL\") | dorm : gender (\"X\", \"M\", \"F\"), dorm_name (\"Dorm-plex 2000\", \"Fawlty Towers\", \"Fawlty Towers\"), student_capacity (128, 400, 116), dormid (160, 104, 140) | dorm_amenity : amenity_name (\"Allows Pets\", \"Heat\", \"4 Walls\"), amenid (901, 903, 950) | has_amenity : dormid (140, 104, 117), amenid (902, 950, 930) | lives_in : stuid (1004, 1024, 1016), room_number (3, 333, 405), dormid (100, 104, 104)", "schema_without_content": "student : age , advisor , major , sex , lname , city_code , stuid , fname  | student_age : stuid , total_age , min_age , lname , max_age , avg_age , fname , sex , major , advisor , city_code  | dorm : gender , dorm_name , student_capacity , dormid  | dorm_amenity : amenity_name , amenid  | has_amenity : dormid , amenid  | lives_in : stuid , room_number , dormid "}, {"db_id": "dorm_1", "query": "select avg_age, max_age, sex from student_age group by sex", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "max", "(", "age", ")", ",", "sex", "FROM", "student", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "max", "(", "age", ")", ",", "sex", "from", "student", "group", "by", "sex"], "question": "Find the average and oldest age for students with different sex.", "question_toks": ["Find", "the", "average", "and", "oldest", "age", "for", "students", "with", "different", "sex", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [1, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stuid"}, "orig_query": "select avg(age), max(age), sex from student group by sex", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "student : city_code (\"NYC\", \"BAL\", \"WAS\"), major (50, 550, 600), age (26, 19, 16), stuid (1017, 1020, 1020), advisor (7134, 9172, 7712), lname (\"Tai\", \"Adams\", \"Thornton\"), fname (\"Susan\", \"Bruce\", \"Susan\"), sex (\"F\", \"M\") | student_age : fname (\"Susan\", \"Bruce\", \"Susan\"), stuid (1017, 1020, 1020), max_age (26, 19, 16), avg_age (26, 19, 16), min_age (26, 19, 16), lname (\"Tai\", \"Adams\", \"Thornton\"), total_age (26, 19, 16), sex (\"F\", \"M\"), major (50, 550, 600), advisor (7134, 9172, 7712), city_code (\"NYC\", \"BAL\", \"WAS\") | dorm : dormid (140, 104, 100), gender (\"X\", \"M\", \"F\"), student_capacity (128, 116, 85), dorm_name (\"Grad Student Asylum\", \"Fawlty Towers\", \"Grad Student Asylum\") | dorm_amenity : amenity_name (\"4 Walls\", \"Allows Pets\", \"Air Conditioning\"), amenid (902, 932, 902) | has_amenity : dormid (100, 104, 117), amenid (930, 931, 903) | lives_in : stuid (1008, 1012, 1007), dormid (117, 109, 110), room_number (333, 215, 443)", "schema_without_content": "student : city_code , major , age , stuid , advisor , lname , fname , sex  | student_age : fname , stuid , max_age , avg_age , min_age , lname , total_age , sex , major , advisor , city_code  | dorm : dormid , gender , student_capacity , dorm_name  | dorm_amenity : amenity_name , amenid  | has_amenity : dormid , amenid  | lives_in : stuid , dormid , room_number "}, {"db_id": "dorm_1", "query": "select avg_age, max_age, sex from student_age group by sex", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "max", "(", "age", ")", ",", "sex", "FROM", "student", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "max", "(", "age", ")", ",", "sex", "from", "student", "group", "by", "sex"], "question": "What is the average and oldest age for each gender of student?", "question_toks": ["What", "is", "the", "average", "and", "oldest", "age", "for", "each", "gender", "of", "student", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [1, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stuid"}, "orig_query": "select avg(age), max(age), sex from student group by sex", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "student : advisor (8772, 8772, 7134), age (27, 20, 26), stuid (1033, 1032, 1029), lname (\"Apap\", \"Goldman\", \"Kumar\"), fname (\"Arthur\", \"Michael\", \"Michael\"), city_code (\"CHI\", \"ROC\", \"CHI\"), major (600, 540, 50), sex (\"F\", \"M\") | student_age : max_age (27, 20, 26), stuid (1033, 1032, 1029), avg_age (27, 20, 26), min_age (27, 20, 26), total_age (27, 20, 26), fname (\"Arthur\", \"Michael\", \"Michael\"), lname (\"Apap\", \"Goldman\", \"Kumar\"), sex (\"F\", \"M\"), major (600, 540, 50), advisor (8772, 8772, 7134), city_code (\"CHI\", \"ROC\", \"CHI\") | dorm : dormid (104, 140, 140), student_capacity (40, 40, 355), gender (\"X\", \"M\", \"F\"), dorm_name (\"Fawlty Towers\", \"Smith Hall\", \"Smith Hall\") | dorm_amenity : amenid (932, 950, 931), amenity_name (\"Kitchen in Every Room\", \"4 Walls\", \"Air Conditioning\") | has_amenity : amenid (930, 932, 955), dormid (140, 160, 110) | lives_in : room_number (48, 319, 319), stuid (1002, 1007, 1020), dormid (109, 160, 109)", "schema_without_content": "student : advisor , age , stuid , lname , fname , city_code , major , sex  | student_age : max_age , stuid , avg_age , min_age , total_age , fname , lname , sex , major , advisor , city_code  | dorm : dormid , student_capacity , gender , dorm_name  | dorm_amenity : amenid , amenity_name  | has_amenity : amenid , dormid  | lives_in : room_number , stuid , dormid "}, {"db_id": "dorm_1", "query": "select count(*), avg_age, city_code from student_age group by city_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "FROM", "student", "GROUP", "BY", "city_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "from", "student", "group", "by", "city_code"], "question": "Find the number and average age of students living in each city.", "question_toks": ["Find", "the", "number", "and", "average", "age", "of", "students", "living", "in", "each", "city", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [5, [0, [0, 4, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stuid"}, "orig_query": "select count(*), avg(age), city_code from student group by city_code", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "student : fname (\"Jun\", \"Steven\", \"Linda\"), sex (\"F\", \"M\"), age (19, 27, 26), lname (\"Leighton\", \"Pang\", \"Gompers\"), city_code (\"ROC\", \"YYZ\", \"NYC\"), advisor (8723, 7792, 7723), stuid (1021, 1014, 1012), major (550, 600, 600) | student_age : avg_age (19, 27, 26), lname (\"Leighton\", \"Pang\", \"Gompers\"), fname (\"Jun\", \"Steven\", \"Linda\"), total_age (19, 27, 26), max_age (19, 27, 26), stuid (1021, 1014, 1012), min_age (19, 27, 26), sex (\"F\", \"M\"), major (550, 600, 600), advisor (8723, 7792, 7723), city_code (\"ROC\", \"YYZ\", \"NYC\") | dorm : dormid (109, 100, 140), gender (\"X\", \"M\", \"F\"), dorm_name (\"Grad Student Asylum\", \"Dorm-plex 2000\", \"Dorm-plex 2000\"), student_capacity (256, 40, 400) | dorm_amenity : amenid (902, 903, 922), amenity_name (\"Working Fireplaces\", \"Heat\", \"Roof\") | has_amenity : dormid (140, 109, 160), amenid (902, 955, 902) | lives_in : stuid (1035, 1033, 1028), room_number (334, 332, 211), dormid (109, 140, 100)", "schema_without_content": "student : fname , sex , age , lname , city_code , advisor , stuid , major  | student_age : avg_age , lname , fname , total_age , max_age , stuid , min_age , sex , major , advisor , city_code  | dorm : dormid , gender , dorm_name , student_capacity  | dorm_amenity : amenid , amenity_name  | has_amenity : dormid , amenid  | lives_in : stuid , room_number , dormid "}, {"db_id": "dorm_1", "query": "select count(*), avg_age, city_code from student_age group by city_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "FROM", "student", "GROUP", "BY", "city_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "from", "student", "group", "by", "city_code"], "question": "How many students live in each city and what are their average ages?", "question_toks": ["How", "many", "students", "live", "in", "each", "city", "and", "what", "are", "their", "average", "ages", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [5, [0, [0, 4, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stuid"}, "orig_query": "select count(*), avg(age), city_code from student group by city_code", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "student : major (540, 520, 540), fname (\"Paul\", \"Sarah\", \"Lisa\"), sex (\"F\", \"M\"), city_code (\"BOS\", \"LOS\", \"PHL\"), stuid (1003, 1026, 1026), lname (\"Han\", \"Woods\", \"Rugh\"), advisor (7792, 2192, 7792), age (22, 21, 19) | student_age : min_age (22, 21, 19), lname (\"Han\", \"Woods\", \"Rugh\"), max_age (22, 21, 19), total_age (22, 21, 19), fname (\"Paul\", \"Sarah\", \"Lisa\"), avg_age (22, 21, 19), stuid (1003, 1026, 1026), sex (\"F\", \"M\"), major (540, 520, 540), advisor (7792, 2192, 7792), city_code (\"BOS\", \"LOS\", \"PHL\") | dorm : gender (\"X\", \"M\", \"F\"), dorm_name (\"Dorm-plex 2000\", \"Dorm-plex 2000\", \"Grad Student Asylum\"), dormid (104, 140, 109), student_capacity (85, 128, 355) | dorm_amenity : amenid (932, 932, 901), amenity_name (\"Kitchen in Every Room\", \"Air Conditioning\", \"4 Walls\") | has_amenity : amenid (922, 931, 932), dormid (104, 109, 110) | lives_in : stuid (1020, 1004, 1024), room_number (105, 332, 443), dormid (160, 110, 110)", "schema_without_content": "student : major , fname , sex , city_code , stuid , lname , advisor , age  | student_age : min_age , lname , max_age , total_age , fname , avg_age , stuid , sex , major , advisor , city_code  | dorm : gender , dorm_name , dormid , student_capacity  | dorm_amenity : amenid , amenity_name  | has_amenity : amenid , dormid  | lives_in : stuid , room_number , dormid "}, {"db_id": "dorm_1", "query": "select count(*), avg_age, city_code from student_age where sex = 'M' group by city_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "FROM", "student", "WHERE", "sex", "=", "'M", "'", "GROUP", "BY", "city_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "from", "student", "where", "sex", "=", "value", "group", "by", "city_code"], "question": "Find the average age and number of male students (with sex M) from each city.", "question_toks": ["Find", "the", "average", "age", "and", "number", "of", "male", "students", "(", "with", "sex", "M", ")", "from", "each", "city", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [5, [0, [0, 4, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"M\"", null]]}, "primary_key": {"student": "stuid"}, "orig_query": "select count(*), avg(age), city_code from student where sex = 'M' group by city_code", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "student : age (22, 20, 27), fname (\"Mark\", \"Susan\", \"Charles\"), lname (\"Leighton\", \"Han\", \"Brown\"), major (50, 100, 550), stuid (1015, 1010, 1031), city_code (\"YYZ\", \"SFO\", \"HOU\"), advisor (7134, 8723, 9172), sex (\"F\", \"M\") | student_age : max_age (22, 20, 27), lname (\"Leighton\", \"Han\", \"Brown\"), stuid (1015, 1010, 1031), total_age (22, 20, 27), fname (\"Mark\", \"Susan\", \"Charles\"), min_age (22, 20, 27), avg_age (22, 20, 27), sex (\"F\", \"M\"), major (50, 100, 550), advisor (7134, 8723, 9172), city_code (\"YYZ\", \"SFO\", \"HOU\") | dorm : gender (\"X\", \"M\", \"F\"), student_capacity (85, 116, 116), dorm_name (\"Fawlty Towers\", \"Dorm-plex 2000\", \"University Hovels\"), dormid (117, 100, 117) | dorm_amenity : amenid (904, 909, 930), amenity_name (\"Working Fireplaces\", \"Roof\", \"Pub in Basement\") | has_amenity : amenid (909, 950, 904), dormid (110, 110, 140) | lives_in : stuid (1017, 1027, 1008), dormid (100, 160, 104), room_number (102, 319, 48)", "schema_without_content": "student : age , fname , lname , major , stuid , city_code , advisor , sex  | student_age : max_age , lname , stuid , total_age , fname , min_age , avg_age , sex , major , advisor , city_code  | dorm : gender , student_capacity , dorm_name , dormid  | dorm_amenity : amenid , amenity_name  | has_amenity : amenid , dormid  | lives_in : stuid , dormid , room_number "}, {"db_id": "dorm_1", "query": "select count(*), avg_age, city_code from student_age where sex = 'M' group by city_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "FROM", "student", "WHERE", "sex", "=", "'M", "'", "GROUP", "BY", "city_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "from", "student", "where", "sex", "=", "value", "group", "by", "city_code"], "question": "What is the average age and how many male students are there in each city?", "question_toks": ["What", "is", "the", "average", "age", "and", "how", "many", "male", "students", "are", "there", "in", "each", "city", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [5, [0, [0, 4, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"M\"", null]]}, "primary_key": {"student": "stuid"}, "orig_query": "select count(*), avg(age), city_code from student where sex = 'M' group by city_code", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "student : age (26, 19, 27), major (520, 50, 540), city_code (\"CHI\", \"LON\", \"SFO\"), lname (\"Smith\", \"Wilson\", \"Smith\"), stuid (1006, 1024, 1005), advisor (7271, 9172, 8741), fname (\"Andy\", \"Lisa\", \"Jandy\"), sex (\"F\", \"M\") | student_age : avg_age (26, 19, 27), stuid (1006, 1024, 1005), lname (\"Smith\", \"Wilson\", \"Smith\"), fname (\"Andy\", \"Lisa\", \"Jandy\"), max_age (26, 19, 27), total_age (26, 19, 27), min_age (26, 19, 27), sex (\"F\", \"M\"), major (520, 50, 540), advisor (7271, 9172, 8741), city_code (\"CHI\", \"LON\", \"SFO\") | dorm : dorm_name (\"Grad Student Asylum\", \"Dorm-plex 2000\", \"Bud Jones Hall\"), gender (\"X\", \"M\", \"F\"), student_capacity (85, 256, 400), dormid (117, 100, 109) | dorm_amenity : amenity_name (\"Air Conditioning\", \"Carpeted Rooms\", \"Carpeted Rooms\"), amenid (904, 931, 900) | has_amenity : dormid (104, 117, 160), amenid (901, 931, 901) | lives_in : dormid (109, 110, 109), room_number (112, 3, 443), stuid (1011, 1031, 1035)", "schema_without_content": "student : age , major , city_code , lname , stuid , advisor , fname , sex  | student_age : avg_age , stuid , lname , fname , max_age , total_age , min_age , sex , major , advisor , city_code  | dorm : dorm_name , gender , student_capacity , dormid  | dorm_amenity : amenity_name , amenid  | has_amenity : dormid , amenid  | lives_in : dormid , room_number , stuid "}, {"db_id": "customer_complaints", "query": "select avg_product_price, product_category_code from products_product_price group by product_category_code", "query_toks": ["SELECT", "avg", "(", "product_price", ")", ",", "product_category_code", "FROM", "products", "GROUP", "BY", "product_category_code"], "query_toks_no_value": ["select", "avg", "(", "product_price", ")", ",", "product_category_code", "from", "products", "group", "by", "product_category_code"], "question": "What is the average price of the products for each category?", "question_toks": ["What", "is", "the", "average", "price", "of", "the", "products", "for", "each", "category", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 22, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "product_id"}, "orig_query": "select avg(product_price), product_category_code from products group by product_category_code", "split_map": {"products": ["max_product_price", "min_product_price", "avg_product_price", "total_product_price"]}, "schema_with_content": "staff : first_name (\"Ward\", \"Dorian\", \"Mikel\"), phone_number (\"142-311-6503x206\", \"1-132-839-9409x288\", \"751-262-8424x575\"), staff_id (117, 120, 119), last_name (\"Erdman\", \"Oberbrunner\", \"Boehm\"), gender (\"0\", \"1\"), email_address (\"ohintz@example.org\", \"marcelle.ritchie@example.com\", \"reichel.armani@example.org\") | customers : address_line_2 (\"Suite 035\", \"Apt. 828\", \"Apt. 245\"), customer_type_code (\"Good Credit Rating\", \"Defaults on payments\"), customer_id (117, 119, 113), address_line_1 (\"425 Roman Tunnel\", \"72144 Katlynn Flat Suite 512\", \"518 Mann Park\"), town_city (\"Sauerberg\", \"Funkstad\", \"Funkstad\"), phone_number (\"044-468-4549\", \"044-468-4549\", \"548.373.3603x59134\"), state (\"Tennessee\", \"Iowa\", \"Pennsylvania\"), email_address (\"rzulauf@example.org\", \"hsteuber@example.org\", \"paige.hyatt@example.com\") | products : product_description (\"Blue tooth mouse\", \"American novel\", \"American novel\"), date_product_first_available (\"1988-09-29 17:54:50\", \"1994-12-18 15:13:19\", \"1994-12-18 15:13:19\"), product_name (\"The Great Gatsby\", \"The Great Gatsby\", \"The Great Gatsby\"), date_product_discontinued (\"1997-07-02 18:26:16\", \"1987-12-20 13:46:16\", \"1991-08-20 05:22:31\"), product_category_code (\"Food\", \"Book\", \"Hardware\"), product_id (117, 118, 117), parent_product_id (3, 8, 4), product_price (23.35, 35, 2.88) | products_product_price : date_product_discontinued (\"1997-07-02 18:26:16\", \"1987-12-20 13:46:16\", \"1991-08-20 05:22:31\"), product_id (117, 118, 117), date_product_first_available (\"1988-09-29 17:54:50\", \"1994-12-18 15:13:19\", \"1994-12-18 15:13:19\"), product_category_code (\"Food\", \"Book\", \"Hardware\"), max_product_price (23.35, 35, 2.88), min_product_price (23.35, 35, 2.88), product_name (\"The Great Gatsby\", \"The Great Gatsby\", \"The Great Gatsby\"), product_description (\"Blue tooth mouse\", \"American novel\", \"American novel\"), avg_product_price (23.35, 35, 2.88), parent_product_id (3, 8, 4), total_product_price (23.35, 35, 2.88) | complaints : date_complaint_raised (\"2002-07-18 10:59:35\", \"2007-10-14 21:50:43\", \"1973-02-10 22:55:56\"), staff_id (118, 116, 120), complaint_id (11, 6, 12), complaint_status_code (\"Closed\", \"New\", \"Open\"), complaint_type_code (\"Product Failure\", \"Product Unusable\"), complaint_outcome_code (\"OK\"), date_complaint_closed (\"2013-09-14 02:59:10\", \"1975-10-11 05:54:30\", \"1976-04-19 11:03:06\"), product_id (120, 120, 118), customer_id (118, 113, 120)", "schema_without_content": "staff : first_name , phone_number , staff_id , last_name , gender , email_address  | customers : address_line_2 , customer_type_code , customer_id , address_line_1 , town_city , phone_number , state , email_address  | products : product_description , date_product_first_available , product_name , date_product_discontinued , product_category_code , product_id , parent_product_id , product_price  | products_product_price : date_product_discontinued , product_id , date_product_first_available , product_category_code , max_product_price , min_product_price , product_name , product_description , avg_product_price , parent_product_id , total_product_price  | complaints : date_complaint_raised , staff_id , complaint_id , complaint_status_code , complaint_type_code , complaint_outcome_code , date_complaint_closed , product_id , customer_id "}, {"db_id": "customer_complaints", "query": "select avg_product_price, product_category_code from products_product_price group by product_category_code", "query_toks": ["SELECT", "avg", "(", "product_price", ")", ",", "product_category_code", "FROM", "products", "GROUP", "BY", "product_category_code"], "query_toks_no_value": ["select", "avg", "(", "product_price", ")", ",", "product_category_code", "from", "products", "group", "by", "product_category_code"], "question": "Return the average price of products that have each category code.", "question_toks": ["Return", "the", "average", "price", "of", "products", "that", "have", "each", "category", "code", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 22, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}, "primary_key": {"products": "product_id"}, "orig_query": "select avg(product_price), product_category_code from products group by product_category_code", "split_map": {"products": ["max_product_price", "min_product_price", "avg_product_price", "total_product_price"]}, "schema_with_content": "staff : first_name (\"Dorian\", \"Bradly\", \"Mikel\"), staff_id (117, 115, 117), phone_number (\"751-262-8424x575\", \"(379)551-0838x146\", \"751-262-8424x575\"), last_name (\"Hahn\", \"Hahn\", \"Lynch\"), email_address (\"reichel.armani@example.org\", \"glen.borer@example.com\", \"marcelle.ritchie@example.com\"), gender (\"0\", \"1\") | customers : customer_type_code (\"Good Credit Rating\", \"Defaults on payments\"), state (\"Pennsylvania\", \"Kansas\", \"Pennsylvania\"), address_line_1 (\"05355 Marcelle Radial\", \"518 Mann Park\", \"92189 Gulgowski Ranch Apt. 683\"), town_city (\"North Alisaville\", \"North Alisaville\", \"Tyreekhaven\"), address_line_2 (\"Apt. 495\", \"Suite 054\", \"Suite 959\"), email_address (\"rzulauf@example.org\", \"lavonne.frami@example.com\", \"hsteuber@example.org\"), customer_id (114, 114, 116), phone_number (\"548.373.3603x59134\", \"470-803-0244\", \"044-468-4549\") | products : date_product_first_available (\"1988-09-29 17:54:50\", \"1998-06-20 15:04:11\", \"1974-06-25 12:26:47\"), product_name (\"Chocolate\", \"Keyboard\", \"Mouse\"), product_price (35, 109.99, 23.35), product_id (117, 118, 117), parent_product_id (9, 8, 9), product_description (\"American novel\", \"Blue tooth mouse\", \"Blue tooth mouse\"), product_category_code (\"Food\", \"Book\", \"Hardware\"), date_product_discontinued (\"1997-07-02 18:26:16\", \"1980-06-26 10:40:19\", \"1991-08-20 05:22:31\") | products_product_price : max_product_price (35, 109.99, 23.35), product_name (\"Chocolate\", \"Keyboard\", \"Mouse\"), parent_product_id (9, 8, 9), date_product_first_available (\"1988-09-29 17:54:50\", \"1998-06-20 15:04:11\", \"1974-06-25 12:26:47\"), product_id (117, 118, 117), date_product_discontinued (\"1997-07-02 18:26:16\", \"1980-06-26 10:40:19\", \"1991-08-20 05:22:31\"), product_description (\"American novel\", \"Blue tooth mouse\", \"Blue tooth mouse\"), avg_product_price (35, 109.99, 23.35), min_product_price (35, 109.99, 23.35), product_category_code (\"Food\", \"Book\", \"Hardware\"), total_product_price (35, 109.99, 23.35) | complaints : complaint_id (4, 2, 5), date_complaint_raised (\"1977-08-06 00:31:19\", \"1977-08-06 00:31:19\", \"2002-07-18 10:59:35\"), date_complaint_closed (\"2000-08-17 17:02:48\", \"1970-10-14 00:57:25\", \"2013-09-14 02:59:10\"), customer_id (115, 116, 118), complaint_outcome_code (\"OK\"), complaint_type_code (\"Product Failure\", \"Product Unusable\"), complaint_status_code (\"Closed\", \"New\", \"Open\"), product_id (118, 118, 117), staff_id (118, 118, 117)", "schema_without_content": "staff : first_name , staff_id , phone_number 551-0838x146\", \"751-262-8424x575\", last_name , email_address , gender  | customers : customer_type_code , state , address_line_1 , town_city , address_line_2 , email_address , customer_id , phone_number  | products : date_product_first_available , product_name , product_price , product_id , parent_product_id , product_description , product_category_code , date_product_discontinued  | products_product_price : max_product_price , product_name , parent_product_id , date_product_first_available , product_id , date_product_discontinued , product_description , avg_product_price , min_product_price , product_category_code , total_product_price  | complaints : complaint_id , date_complaint_raised , date_complaint_closed , customer_id , complaint_outcome_code , complaint_type_code , complaint_status_code , product_id , staff_id "}, {"db_id": "workshop_paper", "query": "select avg_scores from submission_scores", "query_toks": ["SELECT", "avg", "(", "Scores", ")", "FROM", "submission"], "query_toks_no_value": ["select", "avg", "(", "scores", ")", "from", "submission"], "question": "What is the average score of submissions?", "question_toks": ["What", "is", "the", "average", "score", "of", "submissions", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"submission": "submission_id"}, "orig_query": "select avg(scores) from submission", "split_map": {"submission": ["max_scores", "min_scores", "avg_scores", "total_scores"]}, "schema_with_content": "workshop : venue (\"Istanbul Turkey\", \"New York USA\", \"London UK\"), workshop_id (1, 6, 3), date (\"August 18, 2007\", \"August 25, 2007\", \"August 21, 2007\"), name (\"2008 qualification\", \"2008 qualification\", \"2008 qualification\") | submission : author (\"Jeff Lloyd\", \"Rick Engles\", \"Steve Raible\"), college (\"Georgia\", \"Georgia Tech\", \"West Texas State\"), scores (78.0, 79.0, 92.0), submission_id (9, 4, 9) | submission_scores : total_scores (78.0, 79.0, 92.0), submission_id (9, 4, 9), avg_scores (78.0, 79.0, 92.0), min_scores (78.0, 79.0, 92.0), max_scores (78.0, 79.0, 92.0), author (\"Jeff Lloyd\", \"Rick Engles\", \"Steve Raible\"), college (\"Georgia\", \"Georgia Tech\", \"West Texas State\") | acceptance : submission_id (3, 1, 3), result (\"Accepted\", \"Rejected\"), workshop_id (3, 1, 6)", "schema_without_content": "workshop : venue , workshop_id , date , name  | submission : author , college , scores , submission_id  | submission_scores : total_scores , submission_id , avg_scores , min_scores , max_scores , author , college  | acceptance : submission_id , result , workshop_id "}, {"db_id": "workshop_paper", "query": "select avg_scores from submission_scores", "query_toks": ["SELECT", "avg", "(", "Scores", ")", "FROM", "submission"], "query_toks_no_value": ["select", "avg", "(", "scores", ")", "from", "submission"], "question": "Compute the average score of submissions.", "question_toks": ["Compute", "the", "average", "score", "of", "submissions", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]]]], "union": null, "where": []}, "primary_key": {"submission": "submission_id"}, "orig_query": "select avg(scores) from submission", "split_map": {"submission": ["max_scores", "min_scores", "avg_scores", "total_scores"]}, "schema_with_content": "workshop : workshop_id (2, 1, 5), name (\"2007 qualification\", \"ABC 2007\", \"ABC 2007\"), date (\"August 18, 2007\", \"July 5, 2011\", \"August 21, 2007\"), venue (\"London UK\", \"Istanbul Turkey\", \"London UK\") | submission : submission_id (7, 10, 7), college (\"Temple\", \"Notre Dame\", \"Georgia Tech\"), author (\"Steve Raible\", \"Sammy Green\", \"Sammy Green\"), scores (93.0, 92.0, 82.0) | submission_scores : avg_scores (93.0, 92.0, 82.0), submission_id (7, 10, 7), total_scores (93.0, 92.0, 82.0), min_scores (93.0, 92.0, 82.0), max_scores (93.0, 92.0, 82.0), author (\"Steve Raible\", \"Sammy Green\", \"Sammy Green\"), college (\"Temple\", \"Notre Dame\", \"Georgia Tech\") | acceptance : submission_id (5, 3, 5), workshop_id (5, 2, 5), result (\"Accepted\", \"Rejected\")", "schema_without_content": "workshop : workshop_id , name , date , venue  | submission : submission_id , college , author , scores  | submission_scores : avg_scores , submission_id , total_scores , min_scores , max_scores , author , college  | acceptance : submission_id , workshop_id , result "}, {"db_id": "tracking_share_transactions", "query": "select max_amount_of_transaction from transactions_amount_of_transaction", "query_toks": ["SELECT", "max", "(", "amount_of_transaction", ")", "FROM", "TRANSACTIONS"], "query_toks_no_value": ["select", "max", "(", "amount_of_transaction", ")", "from", "transactions"], "question": "Show the maximum amount of transaction.", "question_toks": ["Show", "the", "maximum", "amount", "of", "transaction", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 12, false], null]]]], "union": null, "where": []}, "primary_key": {"transactions": "transaction_id"}, "orig_query": "select max(amount_of_transaction) from transactions", "split_map": {"transactions": ["max_amount_of_transaction", "min_amount_of_transaction", "avg_amount_of_transaction", "total_amount_of_transaction"]}, "schema_with_content": "investors : investor_id (17, 2, 6), investor_details (\"j\", \"q\", \"q\") | lots : investor_id (1, 6, 9), lot_id (9, 3, 14), lot_details (\"m\", \"h\", \"z\") | ref_transaction_types : transaction_type_description (\"Sale\", \"Purchase\"), transaction_type_code (\"PUR\", \"SALE\") | transactions : share_count (\"674529892\", \"9\", \"\"), amount_of_transaction (27.257, 8.9, 0), date_of_transaction (\"2000-04-03 20:55:43\", \"1977-08-13 02:18:47\", \"1981-01-28 08:07:03\"), investor_id (18, 3, 14), transaction_id (7, 1, 9), transaction_type_code (\"SALE\", \"PUR\"), other_details (None) | transactions_amount_of_transaction : min_amount_of_transaction (27.257, 8.9, 0), transaction_type_code (\"SALE\", \"PUR\"), total_amount_of_transaction (27.257, 8.9, 0), avg_amount_of_transaction (27.257, 8.9, 0), date_of_transaction (\"2000-04-03 20:55:43\", \"1977-08-13 02:18:47\", \"1981-01-28 08:07:03\"), transaction_id (7, 1, 9), investor_id (18, 3, 14), max_amount_of_transaction (27.257, 8.9, 0), share_count (\"674529892\", \"9\", \"\"), other_details (None) | sales : sales_transaction_id (6, 14, 2), sales_details (\"x\", \"o\", \"s\") | purchases : purchase_transaction_id (12, 10, 2), purchase_details (\"i\", \"i\", \"r\") | transactions_lots : lot_id (10, 3, 3), transaction_id (6, 10, 10)", "schema_without_content": "investors : investor_id , investor_details  | lots : investor_id , lot_id , lot_details  | ref_transaction_types : transaction_type_description , transaction_type_code  | transactions : share_count , amount_of_transaction , date_of_transaction , investor_id , transaction_id , transaction_type_code , other_details  | transactions_amount_of_transaction : min_amount_of_transaction , transaction_type_code , total_amount_of_transaction , avg_amount_of_transaction , date_of_transaction , transaction_id , investor_id , max_amount_of_transaction , share_count , other_details  | sales : sales_transaction_id , sales_details  | purchases : purchase_transaction_id , purchase_details  | transactions_lots : lot_id , transaction_id "}, {"db_id": "tracking_share_transactions", "query": "select total_share_count from transactions_share_count", "query_toks": ["SELECT", "sum", "(", "share_count", ")", "FROM", "TRANSACTIONS"], "query_toks_no_value": ["select", "sum", "(", "share_count", ")", "from", "transactions"], "question": "What is the total share of transactions?", "question_toks": ["What", "is", "the", "total", "share", "of", "transactions", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 13, false], null]]]], "union": null, "where": []}, "primary_key": {"transactions": "transaction_id"}, "orig_query": "select sum(share_count) from transactions", "split_map": {"transactions": ["max_share_count", "min_share_count", "avg_share_count", "total_share_count"]}, "schema_with_content": "investors : investor_id (7, 12, 11), investor_details (\"b\", \"q\", \"o\") | lots : lot_details (\"x\", \"q\", \"z\"), investor_id (10, 9, 16), lot_id (1, 5, 14) | ref_transaction_types : transaction_type_code (\"PUR\", \"SALE\"), transaction_type_description (\"Sale\", \"Purchase\") | transactions : investor_id (7, 8, 20), share_count (\"674529892\", \"587\", \"1654756\"), other_details (None), amount_of_transaction (4.5263, 4.5263, 48777.969), date_of_transaction (\"2001-11-28 15:06:25\", \"1982-06-06 17:19:00\", \"1985-10-08 13:13:39\"), transaction_type_code (\"SALE\", \"PUR\"), transaction_id (2, 3, 3) | transactions_share_count : transaction_type_code (\"SALE\", \"PUR\"), date_of_transaction (\"2001-11-28 15:06:25\", \"1982-06-06 17:19:00\", \"1985-10-08 13:13:39\"), avg_share_count (\"674529892\", \"587\", \"1654756\"), transaction_id (2, 3, 3), max_share_count (\"674529892\", \"587\", \"1654756\"), amount_of_transaction (4.5263, 4.5263, 48777.969), min_share_count (\"674529892\", \"587\", \"1654756\"), investor_id (7, 8, 20), total_share_count (\"674529892\", \"587\", \"1654756\"), other_details (None) | sales : sales_transaction_id (4, 10, 5), sales_details (\"s\", \"a\", \"f\") | purchases : purchase_details (\"a\", \"x\", \"i\"), purchase_transaction_id (5, 11, 15) | transactions_lots : transaction_id (10, 15, 12), lot_id (4, 10, 8)", "schema_without_content": "investors : investor_id , investor_details  | lots : lot_details , investor_id , lot_id  | ref_transaction_types : transaction_type_code , transaction_type_description  | transactions : investor_id , share_count , other_details , amount_of_transaction , date_of_transaction , transaction_type_code , transaction_id  | transactions_share_count : transaction_type_code , date_of_transaction , avg_share_count , transaction_id , max_share_count , amount_of_transaction , min_share_count , investor_id , total_share_count , other_details  | sales : sales_transaction_id , sales_details  | purchases : purchase_details , purchase_transaction_id  | transactions_lots : transaction_id , lot_id "}, {"db_id": "tracking_share_transactions", "query": "select avg_amount_of_transaction from transactions_amount_of_transaction where transaction_type_code = \"SALE\"", "query_toks": ["SELECT", "avg", "(", "amount_of_transaction", ")", "FROM", "TRANSACTIONS", "WHERE", "transaction_type_code", "=", "``", "SALE", "''"], "query_toks_no_value": ["select", "avg", "(", "amount_of_transaction", ")", "from", "transactions", "where", "transaction_type_code", "=", "value"], "question": "Show the average amount of transactions with type code \"SALE\".", "question_toks": ["Show", "the", "average", "amount", "of", "transactions", "with", "type", "code", "``", "SALE", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"SALE\"", null]]}, "primary_key": {"transactions": "transaction_id"}, "orig_query": "select avg(amount_of_transaction) from transactions where transaction_type_code = \"SALE\"", "split_map": {"transactions": ["max_amount_of_transaction", "min_amount_of_transaction", "avg_amount_of_transaction", "total_amount_of_transaction"]}, "schema_with_content": "investors : investor_details (\"y\", \"q\", \"w\"), investor_id (7, 14, 15) | lots : lot_details (\"h\", \"z\", \"h\"), investor_id (6, 20, 9), lot_id (7, 3, 5) | ref_transaction_types : transaction_type_description (\"Sale\", \"Purchase\"), transaction_type_code (\"PUR\", \"SALE\") | transactions : transaction_id (4, 15, 13), amount_of_transaction (0, 1, 1), transaction_type_code (\"SALE\", \"PUR\"), other_details (None), share_count (\"8718572\", \"8040\", \"587\"), investor_id (2, 17, 17), date_of_transaction (\"2004-01-18 20:37:50\", \"2002-09-13 03:04:56\", \"1977-08-13 02:18:47\") | transactions_amount_of_transaction : max_amount_of_transaction (0, 1, 1), transaction_type_code (\"SALE\", \"PUR\"), total_amount_of_transaction (0, 1, 1), min_amount_of_transaction (0, 1, 1), date_of_transaction (\"2004-01-18 20:37:50\", \"2002-09-13 03:04:56\", \"1977-08-13 02:18:47\"), transaction_id (4, 15, 13), investor_id (2, 17, 17), avg_amount_of_transaction (0, 1, 1), share_count (\"8718572\", \"8040\", \"587\"), other_details (None) | sales : sales_details (\"s\", \"x\", \"y\"), sales_transaction_id (13, 14, 8) | purchases : purchase_details (\"i\", \"c\", \"c\"), purchase_transaction_id (9, 12, 6) | transactions_lots : transaction_id (3, 7, 7), lot_id (4, 14, 9)", "schema_without_content": "investors : investor_details , investor_id  | lots : lot_details , investor_id , lot_id  | ref_transaction_types : transaction_type_description , transaction_type_code  | transactions : transaction_id , amount_of_transaction , transaction_type_code , other_details , share_count , investor_id , date_of_transaction  | transactions_amount_of_transaction : max_amount_of_transaction , transaction_type_code , total_amount_of_transaction , min_amount_of_transaction , date_of_transaction , transaction_id , investor_id , avg_amount_of_transaction , share_count , other_details  | sales : sales_details , sales_transaction_id  | purchases : purchase_details , purchase_transaction_id  | transactions_lots : transaction_id , lot_id "}, {"db_id": "tracking_share_transactions", "query": "select min_amount_of_transaction from transactions_amount_of_transaction where transaction_type_code = \"PUR\" and share_count > 50", "query_toks": ["SELECT", "min", "(", "amount_of_transaction", ")", "FROM", "TRANSACTIONS", "WHERE", "transaction_type_code", "=", "``", "PUR", "''", "AND", "share_count", ">", "50"], "query_toks_no_value": ["select", "min", "(", "amount_of_transaction", ")", "from", "transactions", "where", "transaction_type_code", "=", "value", "and", "share_count", ">", "value"], "question": "Show the minimum amount of transactions whose type code is \"PUR\" and whose share count is bigger than 50.", "question_toks": ["Show", "the", "minimum", "amount", "of", "transactions", "whose", "type", "code", "is", "``", "PUR", "''", "and", "whose", "share", "count", "is", "bigger", "than", "50", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"PUR\"", null], "and", [false, 3, [0, [0, 13, false], null], 50.0, null]]}, "primary_key": {"transactions": "transaction_id"}, "orig_query": "select min(amount_of_transaction) from transactions where transaction_type_code = \"PUR\" and share_count > 50", "split_map": {"transactions": ["max_amount_of_transaction", "min_amount_of_transaction", "avg_amount_of_transaction", "total_amount_of_transaction"]}, "schema_with_content": "investors : investor_details (\"i\", \"l\", \"q\"), investor_id (11, 2, 19) | lots : investor_id (7, 13, 13), lot_id (14, 7, 1), lot_details (\"q\", \"m\", \"q\") | ref_transaction_types : transaction_type_code (\"PUR\", \"SALE\"), transaction_type_description (\"Sale\", \"Purchase\") | transactions : transaction_type_code (\"SALE\", \"PUR\"), other_details (None), transaction_id (2, 2, 3), investor_id (6, 3, 3), date_of_transaction (\"2004-01-18 20:37:50\", \"1977-08-13 02:18:47\", \"1982-06-06 17:19:00\"), share_count (\"930\", \"930\", \"96178\"), amount_of_transaction (27.257, 207484122.2796, 207484122.2796) | transactions_amount_of_transaction : transaction_type_code (\"SALE\", \"PUR\"), investor_id (6, 3, 3), max_amount_of_transaction (27.257, 207484122.2796, 207484122.2796), transaction_id (2, 2, 3), avg_amount_of_transaction (27.257, 207484122.2796, 207484122.2796), min_amount_of_transaction (27.257, 207484122.2796, 207484122.2796), date_of_transaction (\"2004-01-18 20:37:50\", \"1977-08-13 02:18:47\", \"1982-06-06 17:19:00\"), total_amount_of_transaction (27.257, 207484122.2796, 207484122.2796), share_count (\"930\", \"930\", \"96178\"), other_details (None) | sales : sales_details (\"f\", \"e\", \"p\"), sales_transaction_id (9, 7, 1) | purchases : purchase_transaction_id (11, 15, 5), purchase_details (\"x\", \"x\", \"r\") | transactions_lots : transaction_id (6, 2, 10), lot_id (11, 1, 8)", "schema_without_content": "investors : investor_details , investor_id  | lots : investor_id , lot_id , lot_details  | ref_transaction_types : transaction_type_code , transaction_type_description  | transactions : transaction_type_code , other_details , transaction_id , investor_id , date_of_transaction , share_count , amount_of_transaction  | transactions_amount_of_transaction : transaction_type_code , investor_id , max_amount_of_transaction , transaction_id , avg_amount_of_transaction , min_amount_of_transaction , date_of_transaction , total_amount_of_transaction , share_count , other_details  | sales : sales_details , sales_transaction_id  | purchases : purchase_transaction_id , purchase_details  | transactions_lots : transaction_id , lot_id "}, {"db_id": "tracking_share_transactions", "query": "select max_share_count from transactions_share_count where amount_of_transaction < 10000", "query_toks": ["SELECT", "max", "(", "share_count", ")", "FROM", "TRANSACTIONS", "WHERE", "amount_of_transaction", "<", "10000"], "query_toks_no_value": ["select", "max", "(", "share_count", ")", "from", "transactions", "where", "amount_of_transaction", "<", "value"], "question": "Show the maximum share count of transactions where the amount is smaller than 10000", "question_toks": ["Show", "the", "maximum", "share", "count", "of", "transactions", "where", "the", "amount", "is", "smaller", "than", "10000"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 12, false], null], 10000.0, null]]}, "primary_key": {"transactions": "transaction_id"}, "orig_query": "select max(share_count) from transactions where amount_of_transaction < 10000", "split_map": {"transactions": ["max_share_count", "min_share_count", "avg_share_count", "total_share_count"]}, "schema_with_content": "investors : investor_details (\"c\", \"t\", \"z\"), investor_id (1, 4, 15) | lots : lot_details (\"x\", \"d\", \"q\"), lot_id (15, 12, 6), investor_id (6, 1, 16) | ref_transaction_types : transaction_type_description (\"Sale\", \"Purchase\"), transaction_type_code (\"PUR\", \"SALE\") | transactions : other_details (None), investor_id (19, 20, 20), date_of_transaction (\"2002-04-07 20:28:37\", \"2001-11-28 15:06:25\", \"1985-10-08 13:13:39\"), transaction_type_code (\"SALE\", \"PUR\"), amount_of_transaction (1, 27.257, 207484122.2796), share_count (\"674529892\", \"96178\", \"8040\"), transaction_id (8, 8, 10) | transactions_share_count : total_share_count (\"674529892\", \"96178\", \"8040\"), transaction_type_code (\"SALE\", \"PUR\"), max_share_count (\"674529892\", \"96178\", \"8040\"), transaction_id (8, 8, 10), investor_id (19, 20, 20), amount_of_transaction (1, 27.257, 207484122.2796), avg_share_count (\"674529892\", \"96178\", \"8040\"), min_share_count (\"674529892\", \"96178\", \"8040\"), date_of_transaction (\"2002-04-07 20:28:37\", \"2001-11-28 15:06:25\", \"1985-10-08 13:13:39\"), other_details (None) | sales : sales_transaction_id (9, 9, 10), sales_details (\"y\", \"s\", \"t\") | purchases : purchase_transaction_id (5, 3, 15), purchase_details (\"a\", \"x\", \"c\") | transactions_lots : lot_id (11, 4, 3), transaction_id (6, 7, 14)", "schema_without_content": "investors : investor_details , investor_id  | lots : lot_details , lot_id , investor_id  | ref_transaction_types : transaction_type_description , transaction_type_code  | transactions : other_details , investor_id , date_of_transaction , transaction_type_code , amount_of_transaction , share_count , transaction_id  | transactions_share_count : total_share_count , transaction_type_code , max_share_count , transaction_id , investor_id , amount_of_transaction , avg_share_count , min_share_count , date_of_transaction , other_details  | sales : sales_transaction_id , sales_details  | purchases : purchase_transaction_id , purchase_details  | transactions_lots : lot_id , transaction_id "}, {"db_id": "tracking_share_transactions", "query": "select transaction_type_code, avg_amount_of_transaction from transactions_amount_of_transaction group by transaction_type_code", "query_toks": ["SELECT", "transaction_type_code", ",", "avg", "(", "amount_of_transaction", ")", "FROM", "TRANSACTIONS", "GROUP", "BY", "transaction_type_code"], "query_toks_no_value": ["select", "transaction_type_code", ",", "avg", "(", "amount_of_transaction", ")", "from", "transactions", "group", "by", "transaction_type_code"], "question": "Show the average transaction amount for different transaction types.", "question_toks": ["Show", "the", "average", "transaction", "amount", "for", "different", "transaction", "types", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [5, [0, [0, 12, false], null]]]], "union": null, "where": []}, "primary_key": {"transactions": "transaction_id"}, "orig_query": "select transaction_type_code, avg(amount_of_transaction) from transactions group by transaction_type_code", "split_map": {"transactions": ["max_amount_of_transaction", "min_amount_of_transaction", "avg_amount_of_transaction", "total_amount_of_transaction"]}, "schema_with_content": "investors : investor_details (\"t\", \"i\", \"r\"), investor_id (8, 19, 18) | lots : lot_id (15, 15, 15), lot_details (\"d\", \"r\", \"s\"), investor_id (16, 1, 10) | ref_transaction_types : transaction_type_code (\"PUR\", \"SALE\"), transaction_type_description (\"Sale\", \"Purchase\") | transactions : transaction_id (13, 1, 7), share_count (\"1654756\", \"8040\", \"\"), other_details (None), date_of_transaction (\"1977-08-17 13:13:30\", \"1983-11-01 17:57:27\", \"1981-01-28 08:07:03\"), transaction_type_code (\"SALE\", \"PUR\"), investor_id (8, 7, 19), amount_of_transaction (27.257, 4.5263, 27.257) | transactions_amount_of_transaction : min_amount_of_transaction (27.257, 4.5263, 27.257), investor_id (8, 7, 19), transaction_type_code (\"SALE\", \"PUR\"), transaction_id (13, 1, 7), total_amount_of_transaction (27.257, 4.5263, 27.257), date_of_transaction (\"1977-08-17 13:13:30\", \"1983-11-01 17:57:27\", \"1981-01-28 08:07:03\"), avg_amount_of_transaction (27.257, 4.5263, 27.257), max_amount_of_transaction (27.257, 4.5263, 27.257), share_count (\"1654756\", \"8040\", \"\"), other_details (None) | sales : sales_transaction_id (14, 1, 1), sales_details (\"x\", \"o\", \"p\") | purchases : purchase_transaction_id (14, 2, 7), purchase_details (\"c\", \"o\", \"i\") | transactions_lots : transaction_id (1, 14, 1), lot_id (4, 14, 4)", "schema_without_content": "investors : investor_details , investor_id  | lots : lot_id , lot_details , investor_id  | ref_transaction_types : transaction_type_code , transaction_type_description  | transactions : transaction_id , share_count , other_details , date_of_transaction , transaction_type_code , investor_id , amount_of_transaction  | transactions_amount_of_transaction : min_amount_of_transaction , investor_id , transaction_type_code , transaction_id , total_amount_of_transaction , date_of_transaction , avg_amount_of_transaction , max_amount_of_transaction , share_count , other_details  | sales : sales_transaction_id , sales_details  | purchases : purchase_transaction_id , purchase_details  | transactions_lots : transaction_id , lot_id "}, {"db_id": "tracking_share_transactions", "query": "select transaction_type_code, max_share_count, min_share_count from transactions_share_count group by transaction_type_code", "query_toks": ["SELECT", "transaction_type_code", ",", "max", "(", "share_count", ")", ",", "min", "(", "share_count", ")", "FROM", "TRANSACTIONS", "GROUP", "BY", "transaction_type_code"], "query_toks_no_value": ["select", "transaction_type_code", ",", "max", "(", "share_count", ")", ",", "min", "(", "share_count", ")", "from", "transactions", "group", "by", "transaction_type_code"], "question": "Show the maximum and minimum share count of different transaction types.", "question_toks": ["Show", "the", "maximum", "and", "minimum", "share", "count", "of", "different", "transaction", "types", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [1, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]]]], "union": null, "where": []}, "primary_key": {"transactions": "transaction_id"}, "orig_query": "select transaction_type_code, max(share_count), min(share_count) from transactions group by transaction_type_code", "split_map": {"transactions": ["max_share_count", "min_share_count", "avg_share_count", "total_share_count"]}, "schema_with_content": "investors : investor_id (20, 17, 4), investor_details (\"b\", \"o\", \"q\") | lots : investor_id (19, 7, 19), lot_details (\"m\", \"h\", \"r\"), lot_id (13, 11, 2) | ref_transaction_types : transaction_type_code (\"PUR\", \"SALE\"), transaction_type_description (\"Sale\", \"Purchase\") | transactions : amount_of_transaction (207484122.2796, 8.9, 8.9), transaction_id (11, 6, 1), share_count (\"\", \"8580\", \"8040\"), investor_id (14, 18, 2), transaction_type_code (\"SALE\", \"PUR\"), date_of_transaction (\"2000-04-03 20:55:43\", \"1983-11-01 17:57:27\", \"1977-08-17 13:13:30\"), other_details (None) | transactions_share_count : investor_id (14, 18, 2), avg_share_count (\"\", \"8580\", \"8040\"), amount_of_transaction (207484122.2796, 8.9, 8.9), total_share_count (\"\", \"8580\", \"8040\"), min_share_count (\"\", \"8580\", \"8040\"), max_share_count (\"\", \"8580\", \"8040\"), transaction_type_code (\"SALE\", \"PUR\"), date_of_transaction (\"2000-04-03 20:55:43\", \"1983-11-01 17:57:27\", \"1977-08-17 13:13:30\"), transaction_id (11, 6, 1), other_details (None) | sales : sales_transaction_id (6, 2, 9), sales_details (\"t\", \"e\", \"n\") | purchases : purchase_details (\"r\", \"z\", \"c\"), purchase_transaction_id (9, 12, 2) | transactions_lots : lot_id (8, 4, 14), transaction_id (1, 12, 2)", "schema_without_content": "investors : investor_id , investor_details  | lots : investor_id , lot_details , lot_id  | ref_transaction_types : transaction_type_code , transaction_type_description  | transactions : amount_of_transaction , transaction_id , share_count , investor_id , transaction_type_code , date_of_transaction , other_details  | transactions_share_count : investor_id , avg_share_count , amount_of_transaction , total_share_count , min_share_count , max_share_count , transaction_type_code , date_of_transaction , transaction_id , other_details  | sales : sales_transaction_id , sales_details  | purchases : purchase_details , purchase_transaction_id  | transactions_lots : lot_id , transaction_id "}, {"db_id": "tracking_share_transactions", "query": "select investor_id, avg_share_count from transactions_share_count group by investor_id", "query_toks": ["SELECT", "investor_id", ",", "avg", "(", "share_count", ")", "FROM", "TRANSACTIONS", "GROUP", "BY", "investor_id"], "query_toks_no_value": ["select", "investor_id", ",", "avg", "(", "share_count", ")", "from", "transactions", "group", "by", "investor_id"], "question": "Show the average share count of transactions for different investors.", "question_toks": ["Show", "the", "average", "share", "count", "of", "transactions", "for", "different", "investors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [5, [0, [0, 13, false], null]]]], "union": null, "where": []}, "primary_key": {"transactions": "transaction_id"}, "orig_query": "select investor_id, avg(share_count) from transactions group by investor_id", "split_map": {"transactions": ["max_share_count", "min_share_count", "avg_share_count", "total_share_count"]}, "schema_with_content": "investors : investor_details (\"k\", \"o\", \"j\"), investor_id (5, 16, 14) | lots : lot_details (\"x\", \"s\", \"d\"), lot_id (2, 13, 10), investor_id (9, 10, 20) | ref_transaction_types : transaction_type_description (\"Sale\", \"Purchase\"), transaction_type_code (\"PUR\", \"SALE\") | transactions : transaction_type_code (\"SALE\", \"PUR\"), investor_id (6, 18, 19), amount_of_transaction (1, 27.257, 183.2), other_details (None), date_of_transaction (\"2004-01-18 20:37:50\", \"1988-09-16 19:02:51\", \"1983-11-01 17:57:27\"), transaction_id (4, 15, 1), share_count (\"674529892\", \"587\", \"674529892\") | transactions_share_count : amount_of_transaction (1, 27.257, 183.2), avg_share_count (\"674529892\", \"587\", \"674529892\"), transaction_id (4, 15, 1), total_share_count (\"674529892\", \"587\", \"674529892\"), max_share_count (\"674529892\", \"587\", \"674529892\"), date_of_transaction (\"2004-01-18 20:37:50\", \"1988-09-16 19:02:51\", \"1983-11-01 17:57:27\"), transaction_type_code (\"SALE\", \"PUR\"), investor_id (6, 18, 19), min_share_count (\"674529892\", \"587\", \"674529892\"), other_details (None) | sales : sales_details (\"p\", \"n\", \"p\"), sales_transaction_id (11, 14, 10) | purchases : purchase_transaction_id (5, 7, 10), purchase_details (\"o\", \"r\", \"a\") | transactions_lots : lot_id (15, 14, 11), transaction_id (3, 3, 15)", "schema_without_content": "investors : investor_details , investor_id  | lots : lot_details , lot_id , investor_id  | ref_transaction_types : transaction_type_description , transaction_type_code  | transactions : transaction_type_code , investor_id , amount_of_transaction , other_details , date_of_transaction , transaction_id , share_count  | transactions_share_count : amount_of_transaction , avg_share_count , transaction_id , total_share_count , max_share_count , date_of_transaction , transaction_type_code , investor_id , min_share_count , other_details  | sales : sales_details , sales_transaction_id  | purchases : purchase_transaction_id , purchase_details  | transactions_lots : lot_id , transaction_id "}, {"db_id": "tracking_share_transactions", "query": "select investor_id, avg_share_count from transactions_share_count group by investor_id order by avg(share_count)", "query_toks": ["SELECT", "investor_id", ",", "avg", "(", "share_count", ")", "FROM", "TRANSACTIONS", "GROUP", "BY", "investor_id", "ORDER", "BY", "avg", "(", "share_count", ")"], "query_toks_no_value": ["select", "investor_id", ",", "avg", "(", "share_count", ")", "from", "transactions", "group", "by", "investor_id", "order", "by", "avg", "(", "share_count", ")"], "question": "Show the average share count of transactions each each investor, ordered by average share count.", "question_toks": ["Show", "the", "average", "share", "count", "of", "transactions", "each", "each", "investor", ",", "ordered", "by", "average", "share", "count", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [5, 13, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [5, [0, [0, 13, false], null]]]], "union": null, "where": []}, "primary_key": {"transactions": "transaction_id"}, "orig_query": "select investor_id, avg(share_count) from transactions group by investor_id order by avg(share_count)", "split_map": {"transactions": ["max_share_count", "min_share_count", "avg_share_count", "total_share_count"]}, "schema_with_content": "investors : investor_details (\"c\", \"z\", \"l\"), investor_id (3, 19, 4) | lots : lot_id (7, 9, 10), investor_id (20, 16, 19), lot_details (\"r\", \"r\", \"r\") | ref_transaction_types : transaction_type_description (\"Sale\", \"Purchase\"), transaction_type_code (\"PUR\", \"SALE\") | transactions : date_of_transaction (\"1981-01-28 08:07:03\", \"1977-08-17 13:13:30\", \"2004-01-18 20:37:50\"), other_details (None), transaction_id (2, 13, 7), investor_id (14, 7, 8), amount_of_transaction (183.2, 78035671.4424, 1), transaction_type_code (\"SALE\", \"PUR\"), share_count (\"8580\", \"93191\", \"674529892\") | transactions_share_count : transaction_id (2, 13, 7), min_share_count (\"8580\", \"93191\", \"674529892\"), max_share_count (\"8580\", \"93191\", \"674529892\"), transaction_type_code (\"SALE\", \"PUR\"), avg_share_count (\"8580\", \"93191\", \"674529892\"), amount_of_transaction (183.2, 78035671.4424, 1), investor_id (14, 7, 8), total_share_count (\"8580\", \"93191\", \"674529892\"), date_of_transaction (\"1981-01-28 08:07:03\", \"1977-08-17 13:13:30\", \"2004-01-18 20:37:50\"), other_details (None) | sales : sales_transaction_id (3, 14, 12), sales_details (\"s\", \"o\", \"p\") | purchases : purchase_transaction_id (4, 2, 7), purchase_details (\"t\", \"r\", \"c\") | transactions_lots : lot_id (15, 9, 4), transaction_id (1, 10, 15)", "schema_without_content": "investors : investor_details , investor_id  | lots : lot_id , investor_id , lot_details  | ref_transaction_types : transaction_type_description , transaction_type_code  | transactions : date_of_transaction , other_details , transaction_id , investor_id , amount_of_transaction , transaction_type_code , share_count  | transactions_share_count : transaction_id , min_share_count , max_share_count , transaction_type_code , avg_share_count , amount_of_transaction , investor_id , total_share_count , date_of_transaction , other_details  | sales : sales_transaction_id , sales_details  | purchases : purchase_transaction_id , purchase_details  | transactions_lots : lot_id , transaction_id "}, {"db_id": "tracking_share_transactions", "query": "select investor_id, avg_amount_of_transaction from transactions_amount_of_transaction group by investor_id", "query_toks": ["SELECT", "investor_id", ",", "avg", "(", "amount_of_transaction", ")", "FROM", "TRANSACTIONS", "GROUP", "BY", "investor_id"], "query_toks_no_value": ["select", "investor_id", ",", "avg", "(", "amount_of_transaction", ")", "from", "transactions", "group", "by", "investor_id"], "question": "Show the average amount of transactions for different investors.", "question_toks": ["Show", "the", "average", "amount", "of", "transactions", "for", "different", "investors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [5, [0, [0, 12, false], null]]]], "union": null, "where": []}, "primary_key": {"transactions": "transaction_id"}, "orig_query": "select investor_id, avg(amount_of_transaction) from transactions group by investor_id", "split_map": {"transactions": ["max_amount_of_transaction", "min_amount_of_transaction", "avg_amount_of_transaction", "total_amount_of_transaction"]}, "schema_with_content": "investors : investor_id (7, 6, 5), investor_details (\"i\", \"c\", \"t\") | lots : investor_id (16, 13, 1), lot_details (\"s\", \"q\", \"h\"), lot_id (7, 6, 9) | ref_transaction_types : transaction_type_description (\"Sale\", \"Purchase\"), transaction_type_code (\"PUR\", \"SALE\") | transactions : transaction_id (10, 13, 9), share_count (\"\", \"8040\", \"1654756\"), date_of_transaction (\"1977-08-13 02:18:47\", \"2004-01-18 20:37:50\", \"1985-10-08 13:13:39\"), transaction_type_code (\"SALE\", \"PUR\"), other_details (None), amount_of_transaction (822.803, 48777.969, 0), investor_id (7, 17, 18) | transactions_amount_of_transaction : total_amount_of_transaction (822.803, 48777.969, 0), investor_id (7, 17, 18), min_amount_of_transaction (822.803, 48777.969, 0), avg_amount_of_transaction (822.803, 48777.969, 0), max_amount_of_transaction (822.803, 48777.969, 0), transaction_type_code (\"SALE\", \"PUR\"), date_of_transaction (\"1977-08-13 02:18:47\", \"2004-01-18 20:37:50\", \"1985-10-08 13:13:39\"), transaction_id (10, 13, 9), share_count (\"\", \"8040\", \"1654756\"), other_details (None) | sales : sales_transaction_id (12, 12, 15), sales_details (\"p\", \"a\", \"s\") | purchases : purchase_transaction_id (12, 10, 12), purchase_details (\"l\", \"o\", \"x\") | transactions_lots : lot_id (11, 15, 11), transaction_id (15, 3, 10)", "schema_without_content": "investors : investor_id , investor_details  | lots : investor_id , lot_details , lot_id  | ref_transaction_types : transaction_type_description , transaction_type_code  | transactions : transaction_id , share_count , date_of_transaction , transaction_type_code , other_details , amount_of_transaction , investor_id  | transactions_amount_of_transaction : total_amount_of_transaction , investor_id , min_amount_of_transaction , avg_amount_of_transaction , max_amount_of_transaction , transaction_type_code , date_of_transaction , transaction_id , share_count , other_details  | sales : sales_transaction_id , sales_details  | purchases : purchase_transaction_id , purchase_details  | transactions_lots : lot_id , transaction_id "}, {"db_id": "cre_Theme_park", "query": "select avg_price_range from hotels_price_range where star_rating_code = \"5\" and pets_allowed_yn = 1", "query_toks": ["SELECT", "avg", "(", "price_range", ")", "FROM", "HOTELS", "WHERE", "star_rating_code", "=", "``", "5", "''", "AND", "pets_allowed_yn", "=", "1"], "query_toks_no_value": ["select", "avg", "(", "price_range", ")", "from", "hotels", "where", "star_rating_code", "=", "value", "and", "pets_allowed_yn", "=", "value"], "question": "Show the average price range of hotels that have 5 star ratings and allow pets.", "question_toks": ["Show", "the", "average", "price", "range", "of", "hotels", "that", "have", "5", "star", "ratings", "and", "allow", "pets", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"5\"", null], "and", [false, 2, [0, [0, 15, false], null], 1.0, null]]}, "primary_key": {"hotels": "hotel_id"}, "orig_query": "select avg(price_range) from hotels where star_rating_code = \"5\" and pets_allowed_yn = 1", "split_map": {"hotels": ["max_price_range", "min_price_range", "avg_price_range", "total_price_range"]}, "schema_with_content": "ref_hotel_star_ratings : star_rating_description (\"star\"), star_rating_code (\"1\", \"1\", \"5\") | locations : other_details (None), address (\"4411 Sabrina Radial Suite 582\", \"0692 Georgiana Pass\", \"4908 Reinger Vista\"), location_name (\"African Adventure\", \"Astro Orbiter\", \"American Adventure\"), location_id (861, 867, 650) | ref_attraction_types : attraction_type_description (\"museum\", \"garden\", \"museum\"), attraction_type_code (\"6\", \"2\", \"2\") | visitors : tourist_id (513, 500, 610), tourist_details (\"Lizzie\", \"Aleen\", \"Lizzie\") | features : feature_id (528, 528, 955), feature_details (\"parking\", \"shopping\", \"garden\") | hotels : other_hotel_details (None), star_rating_code (\"1\", \"1\", \"4\"), price_range (766712918.96763, 43.729525, 250548014.90329), pets_allowed_yn (\"1\", \"\"), hotel_id (144, 442, 420) | hotels_price_range : star_rating_code (\"1\", \"1\", \"4\"), hotel_id (144, 442, 420), avg_price_range (766712918.96763, 43.729525, 250548014.90329), min_price_range (766712918.96763, 43.729525, 250548014.90329), total_price_range (766712918.96763, 43.729525, 250548014.90329), max_price_range (766712918.96763, 43.729525, 250548014.90329), pets_allowed_yn (\"1\", \"\"), other_hotel_details (None) | tourist_attractions : other_details (None), opening_hours (None), location_id (417, 868, 759), how_to_get_there (\"bus\", \"walk\", \"shuttle\"), description (None), name (\"exploration trial\", \"presidents hall\", \"flying elephant\"), attraction_type_code (\"3\", \"9\", \"9\"), tourist_attraction_id (8429, 6523, 9360) | street_markets : market_id (6852, 7067), market_details (\"Broadway\", \"Fish Farm Market\") | shops : shop_id (8449, 8698, 8449), shop_details (\"soup\", \"see food\", \"see food\") | museums : museum_id (2113, 2701, 5076), museum_details (\"Yale Center for British Art\", \"The Metropolitan Museum of Art\", \"MoMA\") | royal_family : royal_family_id (9561, 9919), royal_family_details (None) | theme_parks : theme_park_details (\"Disney\", \"Sea World\", \"Universal Studios\"), theme_park_id (5265, 6476, 6523) | visits : tourist_id (513, 500, 439), visit_date (\"2010-10-04 01:34:12\", \"2013-08-06 05:35:51\", \"1989-08-24 20:26:37\"), visit_details (\"\"), visit_id (866, 866, 977), tourist_attraction_id (6653, 8698, 6476) | photos : filename (\"762\", \"820\", \"259\"), photo_id (211, 437, 428), tourist_attraction_id (5076, 2701, 8449), name (\"din4\", \"din4\", \"din1\"), description (None), other_details (None) | staff : other_details (None), tourist_attraction_id (7067, 9561, 9561), staff_id (952, 952, 595), name (\"Lenore\", \"Phoebe\", \"Whitney\") | tourist_attraction_features : feature_id (523, 523, 681), tourist_attraction_id (6476, 6476, 9561)", "schema_without_content": "ref_hotel_star_ratings : star_rating_description , star_rating_code  | locations : other_details , address , location_name , location_id  | ref_attraction_types : attraction_type_description , attraction_type_code  | visitors : tourist_id , tourist_details  | features : feature_id , feature_details  | hotels : other_hotel_details , star_rating_code , price_range , pets_allowed_yn , hotel_id  | hotels_price_range : star_rating_code , hotel_id , avg_price_range , min_price_range , total_price_range , max_price_range , pets_allowed_yn , other_hotel_details  | tourist_attractions : other_details , opening_hours , location_id , how_to_get_there , description , name , attraction_type_code , tourist_attraction_id  | street_markets : market_id , market_details  | shops : shop_id , shop_details  | museums : museum_id , museum_details  | royal_family : royal_family_id , royal_family_details  | theme_parks : theme_park_details , theme_park_id  | visits : tourist_id , visit_date , visit_details , visit_id , tourist_attraction_id  | photos : filename , photo_id , tourist_attraction_id , name , description , other_details  | staff : other_details , tourist_attraction_id , staff_id , name  | tourist_attraction_features : feature_id , tourist_attraction_id "}, {"db_id": "cre_Theme_park", "query": "select avg_price_range from hotels_price_range where star_rating_code = \"5\" and pets_allowed_yn = 1", "query_toks": ["SELECT", "avg", "(", "price_range", ")", "FROM", "HOTELS", "WHERE", "star_rating_code", "=", "``", "5", "''", "AND", "pets_allowed_yn", "=", "1"], "query_toks_no_value": ["select", "avg", "(", "price_range", ")", "from", "hotels", "where", "star_rating_code", "=", "value", "and", "pets_allowed_yn", "=", "value"], "question": "What is the average price range of five star hotels that allow pets?", "question_toks": ["What", "is", "the", "average", "price", "range", "of", "five", "star", "hotels", "that", "allow", "pets", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"5\"", null], "and", [false, 2, [0, [0, 15, false], null], 1.0, null]]}, "primary_key": {"hotels": "hotel_id"}, "orig_query": "select avg(price_range) from hotels where star_rating_code = \"5\" and pets_allowed_yn = 1", "split_map": {"hotels": ["max_price_range", "min_price_range", "avg_price_range", "total_price_range"]}, "schema_with_content": "ref_hotel_star_ratings : star_rating_code (\"5\", \"5\", \"1\"), star_rating_description (\"star\") | locations : location_name (\"Butterflies\", \"Soak Station\", \"The Barnstormer\"), location_id (650, 603, 759), other_details (None), address (\"254 Ottilie Junction\", \"959 Feest Glen Suite 523\", \"4908 Reinger Vista\") | ref_attraction_types : attraction_type_description (\"adventure\", \"park\", \"gallery\"), attraction_type_code (\"2\", \"5\", \"2\") | visitors : tourist_id (841, 399, 500), tourist_details (\"Newell\", \"Jarrell\", \"Newell\") | features : feature_details (\"parking\", \"garden\", \"garden\"), feature_id (681, 955, 528) | hotels : star_rating_code (\"4\", \"1\", \"4\"), price_range (9393.86291219, 48525.4530675, 289775.7331715), other_hotel_details (None), hotel_id (331, 514, 373), pets_allowed_yn (\"1\", \"\") | hotels_price_range : total_price_range (9393.86291219, 48525.4530675, 289775.7331715), star_rating_code (\"4\", \"1\", \"4\"), max_price_range (9393.86291219, 48525.4530675, 289775.7331715), pets_allowed_yn (\"1\", \"\"), avg_price_range (9393.86291219, 48525.4530675, 289775.7331715), hotel_id (331, 514, 373), min_price_range (9393.86291219, 48525.4530675, 289775.7331715), other_hotel_details (None) | tourist_attractions : other_details (None), description (None), name (\"exploration trial\", \"jungle cruise\", \"presidents hall\"), tourist_attraction_id (5265, 2113, 9360), attraction_type_code (\"6\", \"5\", \"3\"), location_id (858, 417, 759), opening_hours (None), how_to_get_there (\"bus\", \"walk\", \"shuttle\") | street_markets : market_id (6852, 7067), market_details (\"Broadway\", \"Fish Farm Market\") | shops : shop_id (9360, 9360, 9360), shop_details (\"Flower\", \"see food\", \"Flower\") | museums : museum_details (\"Yale Center for British Art\", \"The Metropolitan Museum of Art\", \"MoMA\"), museum_id (2113, 2701, 5076) | royal_family : royal_family_id (9561, 9919), royal_family_details (None) | theme_parks : theme_park_details (\"Disney\", \"Sea World\", \"Universal Studios\"), theme_park_id (5265, 6476, 6523) | visits : visit_details (\"\"), visit_date (\"1990-08-15 14:24:10\", \"1989-08-24 20:26:37\", \"2004-08-21 03:06:14\"), tourist_id (610, 377, 841), tourist_attraction_id (6476, 6523, 6852), visit_id (416, 273, 612) | photos : name (\"din3\", \"game3\", \"park2\"), tourist_attraction_id (6653, 5076, 8429), description (None), other_details (None), filename (\"141\", \"695\", \"864\"), photo_id (525, 550, 332) | staff : other_details (None), name (\"Eunice\", \"Aurore\", \"Gina\"), tourist_attraction_id (6653, 9360, 6852), staff_id (860, 532, 491) | tourist_attraction_features : tourist_attraction_id (7067, 8449, 7067), feature_id (543, 681, 955)", "schema_without_content": "ref_hotel_star_ratings : star_rating_code , star_rating_description  | locations : location_name , location_id , other_details , address  | ref_attraction_types : attraction_type_description , attraction_type_code  | visitors : tourist_id , tourist_details  | features : feature_details , feature_id  | hotels : star_rating_code , price_range , other_hotel_details , hotel_id , pets_allowed_yn  | hotels_price_range : total_price_range , star_rating_code , max_price_range , pets_allowed_yn , avg_price_range , hotel_id , min_price_range , other_hotel_details  | tourist_attractions : other_details , description , name , tourist_attraction_id , attraction_type_code , location_id , opening_hours , how_to_get_there  | street_markets : market_id , market_details  | shops : shop_id , shop_details  | museums : museum_details , museum_id  | royal_family : royal_family_id , royal_family_details  | theme_parks : theme_park_details , theme_park_id  | visits : visit_details , visit_date , tourist_id , tourist_attraction_id , visit_id  | photos : name , tourist_attraction_id , description , other_details , filename , photo_id  | staff : other_details , name , tourist_attraction_id , staff_id  | tourist_attraction_features : tourist_attraction_id , feature_id "}, {"db_id": "cre_Theme_park", "query": "select star_rating_code, avg_price_range from hotels_price_range group by star_rating_code", "query_toks": ["SELECT", "star_rating_code", ",", "avg", "(", "price_range", ")", "FROM", "HOTELS", "GROUP", "BY", "star_rating_code"], "query_toks_no_value": ["select", "star_rating_code", ",", "avg", "(", "price_range", ")", "from", "hotels", "group", "by", "star_rating_code"], "question": "Show the average price of hotels for each star rating code.", "question_toks": ["Show", "the", "average", "price", "of", "hotels", "for", "each", "star", "rating", "code", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [5, [0, [0, 16, false], null]]]], "union": null, "where": []}, "primary_key": {"hotels": "hotel_id"}, "orig_query": "select star_rating_code, avg(price_range) from hotels group by star_rating_code", "split_map": {"hotels": ["max_price_range", "min_price_range", "avg_price_range", "total_price_range"]}, "schema_with_content": "ref_hotel_star_ratings : star_rating_description (\"star\"), star_rating_code (\"2\", \"1\", \"5\") | locations : location_id (759, 885, 368), location_name (\"American Adventure\", \"African Adventure\", \"African Adventure\"), other_details (None), address (\"53815 Sawayn Tunnel Apt. 297\", \"254 Ottilie Junction\", \"4908 Reinger Vista\") | ref_attraction_types : attraction_type_description (\"adventure\", \"museum\", \"gallery\"), attraction_type_code (\"2\", \"6\", \"6\") | visitors : tourist_details (\"Vincent\", \"Lizzie\", \"Nettie\"), tourist_id (377, 779, 241) | features : feature_id (681, 528, 681), feature_details (\"shopping\", \"park\", \"cafe\") | hotels : hotel_id (331, 172, 379), star_rating_code (\"3\", \"1\", \"2\"), price_range (5390.432113, 5526556.6412, \"\"), other_hotel_details (None), pets_allowed_yn (\"1\", \"\") | hotels_price_range : min_price_range (5390.432113, 5526556.6412, \"\"), pets_allowed_yn (\"1\", \"\"), avg_price_range (5390.432113, 5526556.6412, \"\"), hotel_id (331, 172, 379), total_price_range (5390.432113, 5526556.6412, \"\"), star_rating_code (\"3\", \"1\", \"2\"), max_price_range (5390.432113, 5526556.6412, \"\"), other_hotel_details (None) | tourist_attractions : other_details (None), description (None), location_id (759, 868, 603), name (\"parking\", \"cafe\", \"fun shops\"), tourist_attraction_id (8429, 2113, 9919), how_to_get_there (\"bus\", \"walk\", \"shuttle\"), attraction_type_code (\"2\", \"9\", \"2\"), opening_hours (None) | street_markets : market_id (6852, 7067), market_details (\"Broadway\", \"Fish Farm Market\") | shops : shop_details (\"Flower\", \"see food\", \"coffee\"), shop_id (8698, 8698, 9360) | museums : museum_details (\"Yale Center for British Art\", \"The Metropolitan Museum of Art\", \"MoMA\"), museum_id (2113, 2701, 5076) | royal_family : royal_family_details (None), royal_family_id (9561, 9919) | theme_parks : theme_park_id (5265, 6476, 6523), theme_park_details (\"Disney\", \"Sea World\", \"Universal Studios\") | visits : tourist_id (211, 377, 541), visit_date (\"2010-10-04 01:34:12\", \"1989-08-24 20:26:37\", \"1990-11-12 00:54:50\"), tourist_attraction_id (6852, 2701, 6852), visit_details (\"\"), visit_id (302, 273, 268) | photos : other_details (None), tourist_attraction_id (8449, 9561, 9561), description (None), name (\"din2\", \"park3\", \"game2\"), filename (\"538\", \"128\", \"863\"), photo_id (558, 534, 550) | staff : other_details (None), name (\"Carmella\", \"Elouise\", \"Beth\"), tourist_attraction_id (9561, 6476, 7067), staff_id (952, 532, 170) | tourist_attraction_features : tourist_attraction_id (6852, 9919, 8449), feature_id (681, 543, 955)", "schema_without_content": "ref_hotel_star_ratings : star_rating_description , star_rating_code  | locations : location_id , location_name , other_details , address  | ref_attraction_types : attraction_type_description , attraction_type_code  | visitors : tourist_details , tourist_id  | features : feature_id , feature_details  | hotels : hotel_id , star_rating_code , price_range , other_hotel_details , pets_allowed_yn  | hotels_price_range : min_price_range , pets_allowed_yn , avg_price_range , hotel_id , total_price_range , star_rating_code , max_price_range , other_hotel_details  | tourist_attractions : other_details , description , location_id , name , tourist_attraction_id , how_to_get_there , attraction_type_code , opening_hours  | street_markets : market_id , market_details  | shops : shop_details , shop_id  | museums : museum_details , museum_id  | royal_family : royal_family_details , royal_family_id  | theme_parks : theme_park_id , theme_park_details  | visits : tourist_id , visit_date , tourist_attraction_id , visit_details , visit_id  | photos : other_details , tourist_attraction_id , description , name , filename , photo_id  | staff : other_details , name , tourist_attraction_id , staff_id  | tourist_attraction_features : tourist_attraction_id , feature_id "}, {"db_id": "cre_Theme_park", "query": "select star_rating_code, avg_price_range from hotels_price_range group by star_rating_code", "query_toks": ["SELECT", "star_rating_code", ",", "avg", "(", "price_range", ")", "FROM", "HOTELS", "GROUP", "BY", "star_rating_code"], "query_toks_no_value": ["select", "star_rating_code", ",", "avg", "(", "price_range", ")", "from", "hotels", "group", "by", "star_rating_code"], "question": "What is the average price range of hotels for each each star rating code?", "question_toks": ["What", "is", "the", "average", "price", "range", "of", "hotels", "for", "each", "each", "star", "rating", "code", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [5, [0, [0, 16, false], null]]]], "union": null, "where": []}, "primary_key": {"hotels": "hotel_id"}, "orig_query": "select star_rating_code, avg(price_range) from hotels group by star_rating_code", "split_map": {"hotels": ["max_price_range", "min_price_range", "avg_price_range", "total_price_range"]}, "schema_with_content": "ref_hotel_star_ratings : star_rating_description (\"star\"), star_rating_code (\"5\", \"3\", \"2\") | locations : location_id (759, 650, 867), address (\"88271 Barrows Union Suite 203\", \"53815 Sawayn Tunnel Apt. 297\", \"770 Edd Lane Apt. 098\"), location_name (\"Space Spin\", \"Astro Orbiter\", \"Coral Reefs\"), other_details (None) | ref_attraction_types : attraction_type_description (\"garden\", \"adventure\", \"garden\"), attraction_type_code (\"9\", \"3\", \"2\") | visitors : tourist_id (359, 399, 545), tourist_details (\"Laurence\", \"Newell\", \"Lizzie\") | features : feature_details (\"garden\", \"shopping\", \"parking\"), feature_id (955, 681, 955) | hotels : pets_allowed_yn (\"1\", \"\"), star_rating_code (\"1\", \"4\", \"5\"), price_range (2914989.571, 38014975.47848, \"\"), other_hotel_details (None), hotel_id (421, 264, 379) | hotels_price_range : min_price_range (2914989.571, 38014975.47848, \"\"), avg_price_range (2914989.571, 38014975.47848, \"\"), pets_allowed_yn (\"1\", \"\"), total_price_range (2914989.571, 38014975.47848, \"\"), max_price_range (2914989.571, 38014975.47848, \"\"), hotel_id (421, 264, 379), star_rating_code (\"1\", \"4\", \"5\"), other_hotel_details (None) | tourist_attractions : name (\"flying elephant\", \"exploration trial\", \"presidents hall\"), tourist_attraction_id (9919, 8449, 7067), attraction_type_code (\"2\", \"9\", \"9\"), how_to_get_there (\"bus\", \"walk\", \"shuttle\"), other_details (None), location_id (867, 661, 417), description (None), opening_hours (None) | street_markets : market_id (6852, 7067), market_details (\"Broadway\", \"Fish Farm Market\") | shops : shop_id (8449, 8698, 8449), shop_details (\"Flower\", \"soup\", \"soup\") | museums : museum_id (2113, 2701, 5076), museum_details (\"Yale Center for British Art\", \"The Metropolitan Museum of Art\", \"MoMA\") | royal_family : royal_family_id (9561, 9919), royal_family_details (None) | theme_parks : theme_park_id (5265, 6476, 6523), theme_park_details (\"Disney\", \"Sea World\", \"Universal Studios\") | visits : visit_date (\"2007-09-03 04:30:01\", \"2007-09-03 04:30:01\", \"1990-08-15 14:24:10\"), visit_id (381, 781, 909), visit_details (\"\"), tourist_id (211, 610, 377), tourist_attraction_id (6852, 2701, 8698) | photos : name (\"game1\", \"game2\", \"park1\"), description (None), tourist_attraction_id (8449, 6523, 8698), photo_id (435, 435, 537), filename (\"141\", \"864\", \"453\"), other_details (None) | staff : tourist_attraction_id (5265, 2113, 2701), name (\"Beth\", \"Phoebe\", \"Cortney\"), other_details (None), staff_id (219, 532, 595) | tourist_attraction_features : tourist_attraction_id (8429, 6523, 6523), feature_id (681, 543, 681)", "schema_without_content": "ref_hotel_star_ratings : star_rating_description , star_rating_code  | locations : location_id , address , location_name , other_details  | ref_attraction_types : attraction_type_description , attraction_type_code  | visitors : tourist_id , tourist_details  | features : feature_details , feature_id  | hotels : pets_allowed_yn , star_rating_code , price_range , other_hotel_details , hotel_id  | hotels_price_range : min_price_range , avg_price_range , pets_allowed_yn , total_price_range , max_price_range , hotel_id , star_rating_code , other_hotel_details  | tourist_attractions : name , tourist_attraction_id , attraction_type_code , how_to_get_there , other_details , location_id , description , opening_hours  | street_markets : market_id , market_details  | shops : shop_id , shop_details  | museums : museum_id , museum_details  | royal_family : royal_family_id , royal_family_details  | theme_parks : theme_park_id , theme_park_details  | visits : visit_date , visit_id , visit_details , tourist_id , tourist_attraction_id  | photos : name , description , tourist_attraction_id , photo_id , filename , other_details  | staff : tourist_attraction_id , name , other_details , staff_id  | tourist_attraction_features : tourist_attraction_id , feature_id "}, {"db_id": "cre_Theme_park", "query": "select pets_allowed_yn, avg_price_range from hotels_price_range group by pets_allowed_yn", "query_toks": ["SELECT", "pets_allowed_yn", ",", "avg", "(", "price_range", ")", "FROM", "HOTELS", "GROUP", "BY", "pets_allowed_yn"], "query_toks_no_value": ["select", "pets_allowed_yn", ",", "avg", "(", "price_range", ")", "from", "hotels", "group", "by", "pets_allowed_yn"], "question": "Show the average price of hotels for different pet policy.", "question_toks": ["Show", "the", "average", "price", "of", "hotels", "for", "different", "pet", "policy", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [5, [0, [0, 16, false], null]]]], "union": null, "where": []}, "primary_key": {"hotels": "hotel_id"}, "orig_query": "select pets_allowed_yn, avg(price_range) from hotels group by pets_allowed_yn", "split_map": {"hotels": ["max_price_range", "min_price_range", "avg_price_range", "total_price_range"]}, "schema_with_content": "ref_hotel_star_ratings : star_rating_description (\"star\"), star_rating_code (\"1\", \"4\", \"4\") | locations : location_id (603, 885, 603), other_details (None), location_name (\"Shark World\", \"Shark World\", \"African Animals\"), address (\"4510 Schuster Stream Apt. 613\", \"4908 Reinger Vista\", \"3374 Sarina Manor\") | ref_attraction_types : attraction_type_code (\"6\", \"2\", \"5\"), attraction_type_description (\"gallery\", \"museum\", \"park\") | visitors : tourist_id (545, 841, 610), tourist_details (\"Graciela\", \"Jarrell\", \"Teresa\") | features : feature_id (543, 681, 681), feature_details (\"cafe\", \"parking\", \"parking\") | hotels : pets_allowed_yn (\"1\", \"\"), hotel_id (314, 473, 331), price_range (5526556.6412, 5390.432113, \"\"), other_hotel_details (None), star_rating_code (\"2\", \"5\", \"4\") | hotels_price_range : star_rating_code (\"2\", \"5\", \"4\"), pets_allowed_yn (\"1\", \"\"), avg_price_range (5526556.6412, 5390.432113, \"\"), max_price_range (5526556.6412, 5390.432113, \"\"), min_price_range (5526556.6412, 5390.432113, \"\"), hotel_id (314, 473, 331), total_price_range (5526556.6412, 5390.432113, \"\"), other_hotel_details (None) | tourist_attractions : description (None), tourist_attraction_id (8449, 6476, 5265), opening_hours (None), how_to_get_there (\"bus\", \"walk\", \"shuttle\"), other_details (None), name (\"cafe\", \"art museum\", \"cafe\"), location_id (417, 858, 867), attraction_type_code (\"9\", \"5\", \"6\") | street_markets : market_id (6852, 7067), market_details (\"Broadway\", \"Fish Farm Market\") | shops : shop_details (\"coffee\", \"coffee\", \"coffee\"), shop_id (8429, 8429, 8449) | museums : museum_details (\"Yale Center for British Art\", \"The Metropolitan Museum of Art\", \"MoMA\"), museum_id (2113, 2701, 5076) | royal_family : royal_family_id (9561, 9919), royal_family_details (None) | theme_parks : theme_park_details (\"Disney\", \"Sea World\", \"Universal Studios\"), theme_park_id (5265, 6476, 6523) | visits : visit_id (729, 977, 977), visit_details (\"\"), tourist_attraction_id (6523, 8429, 5076), visit_date (\"1998-05-12 00:50:20\", \"1990-11-12 00:54:50\", \"2013-08-06 05:35:51\"), tourist_id (439, 500, 541) | photos : tourist_attraction_id (5076, 5265, 2701), description (None), photo_id (332, 534, 558), filename (\"148\", \"148\", \"702\"), name (\"din1\", \"din3\", \"fun4\"), other_details (None) | staff : other_details (None), name (\"Eunice\", \"Lenore\", \"Gina\"), tourist_attraction_id (6653, 6653, 8698), staff_id (310, 667, 310) | tourist_attraction_features : feature_id (523, 543, 955), tourist_attraction_id (5076, 5265, 7067)", "schema_without_content": "ref_hotel_star_ratings : star_rating_description , star_rating_code  | locations : location_id , other_details , location_name , address  | ref_attraction_types : attraction_type_code , attraction_type_description  | visitors : tourist_id , tourist_details  | features : feature_id , feature_details  | hotels : pets_allowed_yn , hotel_id , price_range , other_hotel_details , star_rating_code  | hotels_price_range : star_rating_code , pets_allowed_yn , avg_price_range , max_price_range , min_price_range , hotel_id , total_price_range , other_hotel_details  | tourist_attractions : description , tourist_attraction_id , opening_hours , how_to_get_there , other_details , name , location_id , attraction_type_code  | street_markets : market_id , market_details  | shops : shop_details , shop_id  | museums : museum_details , museum_id  | royal_family : royal_family_id , royal_family_details  | theme_parks : theme_park_details , theme_park_id  | visits : visit_id , visit_details , tourist_attraction_id , visit_date , tourist_id  | photos : tourist_attraction_id , description , photo_id , filename , name , other_details  | staff : other_details , name , tourist_attraction_id , staff_id  | tourist_attraction_features : feature_id , tourist_attraction_id "}, {"db_id": "cre_Theme_park", "query": "select pets_allowed_yn, avg_price_range from hotels_price_range group by pets_allowed_yn", "query_toks": ["SELECT", "pets_allowed_yn", ",", "avg", "(", "price_range", ")", "FROM", "HOTELS", "GROUP", "BY", "pets_allowed_yn"], "query_toks_no_value": ["select", "pets_allowed_yn", ",", "avg", "(", "price_range", ")", "from", "hotels", "group", "by", "pets_allowed_yn"], "question": "What are the average prices of hotels grouped by their pet policy.", "question_toks": ["What", "are", "the", "average", "prices", "of", "hotels", "grouped", "by", "their", "pet", "policy", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [5, [0, [0, 16, false], null]]]], "union": null, "where": []}, "primary_key": {"hotels": "hotel_id"}, "orig_query": "select pets_allowed_yn, avg(price_range) from hotels group by pets_allowed_yn", "split_map": {"hotels": ["max_price_range", "min_price_range", "avg_price_range", "total_price_range"]}, "schema_with_content": "ref_hotel_star_ratings : star_rating_code (\"2\", \"4\", \"1\"), star_rating_description (\"star\") | locations : other_details (None), location_name (\"Coral Reefs\", \"Film Festival\", \"Film Festival\"), address (\"959 Feest Glen Suite 523\", \"0692 Georgiana Pass\", \"14034 Kohler Drive\"), location_id (368, 740, 333) | ref_attraction_types : attraction_type_code (\"3\", \"5\", \"6\"), attraction_type_description (\"gallery\", \"museum\", \"museum\") | visitors : tourist_details (\"Elnora\", \"Tevin\", \"Newell\"), tourist_id (359, 359, 513) | features : feature_id (528, 528, 955), feature_details (\"cafe\", \"shopping\", \"cafe\") | hotels : price_range (2374.7971074, 2374.7971074, 289775.7331715), pets_allowed_yn (\"1\", \"\"), other_hotel_details (None), hotel_id (350, 222, 442), star_rating_code (\"2\", \"5\", \"4\") | hotels_price_range : avg_price_range (2374.7971074, 2374.7971074, 289775.7331715), star_rating_code (\"2\", \"5\", \"4\"), max_price_range (2374.7971074, 2374.7971074, 289775.7331715), min_price_range (2374.7971074, 2374.7971074, 289775.7331715), hotel_id (350, 222, 442), pets_allowed_yn (\"1\", \"\"), total_price_range (2374.7971074, 2374.7971074, 289775.7331715), other_hotel_details (None) | tourist_attractions : other_details (None), attraction_type_code (\"9\", \"9\", \"5\"), how_to_get_there (\"bus\", \"walk\", \"shuttle\"), tourist_attraction_id (8449, 9360, 9919), description (None), opening_hours (None), location_id (661, 655, 661), name (\"US museum\", \"cafe\", \"impressions de France\") | street_markets : market_details (\"Broadway\", \"Fish Farm Market\"), market_id (6852, 7067) | shops : shop_id (8429, 8698, 8429), shop_details (\"Flower\", \"soup\", \"coffee\") | museums : museum_id (2113, 2701, 5076), museum_details (\"Yale Center for British Art\", \"The Metropolitan Museum of Art\", \"MoMA\") | royal_family : royal_family_id (9561, 9919), royal_family_details (None) | theme_parks : theme_park_id (5265, 6476, 6523), theme_park_details (\"Disney\", \"Sea World\", \"Universal Studios\") | visits : visit_date (\"1998-05-12 00:50:20\", \"2010-10-04 01:34:12\", \"1971-12-16 06:41:26\"), tourist_attraction_id (8429, 6653, 6653), tourist_id (841, 545, 513), visit_details (\"\"), visit_id (937, 416, 937) | photos : tourist_attraction_id (8698, 8449, 8698), filename (\"538\", \"538\", \"060\"), name (\"din3\", \"park3\", \"fun2\"), photo_id (327, 437, 596), other_details (None), description (None) | staff : name (\"Janet\", \"Janet\", \"Astrid\"), other_details (None), staff_id (470, 860, 604), tourist_attraction_id (9561, 6476, 5265) | tourist_attraction_features : feature_id (543, 523, 523), tourist_attraction_id (9919, 8429, 8449)", "schema_without_content": "ref_hotel_star_ratings : star_rating_code , star_rating_description  | locations : other_details , location_name , address , location_id  | ref_attraction_types : attraction_type_code , attraction_type_description  | visitors : tourist_details , tourist_id  | features : feature_id , feature_details  | hotels : price_range , pets_allowed_yn , other_hotel_details , hotel_id , star_rating_code  | hotels_price_range : avg_price_range , star_rating_code , max_price_range , min_price_range , hotel_id , pets_allowed_yn , total_price_range , other_hotel_details  | tourist_attractions : other_details , attraction_type_code , how_to_get_there , tourist_attraction_id , description , opening_hours , location_id , name  | street_markets : market_details , market_id  | shops : shop_id , shop_details  | museums : museum_id , museum_details  | royal_family : royal_family_id , royal_family_details  | theme_parks : theme_park_id , theme_park_details  | visits : visit_date , tourist_attraction_id , tourist_id , visit_details , visit_id  | photos : tourist_attraction_id , filename , name , photo_id , other_details , description  | staff : name , other_details , staff_id , tourist_attraction_id  | tourist_attraction_features : feature_id , tourist_attraction_id "}, {"db_id": "game_1", "query": "select major, avg_age, min_age, max_age from student_age group by major", "query_toks": ["SELECT", "major", ",", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "FROM", "Student", "GROUP", "BY", "major"], "query_toks_no_value": ["select", "major", ",", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "student", "group", "by", "major"], "question": "Show the average, minimum, and maximum age for different majors.", "question_toks": ["Show", "the", "average", ",", "minimum", ",", "and", "maximum", "age", "for", "different", "majors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [5, [0, [0, 4, false], null]], [2, [0, [0, 4, false], null]], [1, [0, [0, 4, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stuid"}, "orig_query": "select major, avg(age), min(age), max(age) from student group by major", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "student : lname (\"Kumar\", \"Simms\", \"Gompers\"), sex (\"F\", \"M\"), city_code (\"NYC\", \"SFO\", \"BAL\"), stuid (1033, 1003, 1002), fname (\"David\", \"Paul\", \"Derek\"), advisor (5718, 7723, 1148), age (17, 21, 22), major (600, 550, 600) | student_age : total_age (17, 21, 22), max_age (17, 21, 22), fname (\"David\", \"Paul\", \"Derek\"), stuid (1033, 1003, 1002), avg_age (17, 21, 22), min_age (17, 21, 22), lname (\"Kumar\", \"Simms\", \"Gompers\"), sex (\"F\", \"M\"), major (600, 550, 600), advisor (5718, 7723, 1148), city_code (\"NYC\", \"SFO\", \"BAL\") | video_games : gameid (5, 2, 3), gname (\"Europe is the Universe\", \"The Vanishing of Eric Calder\", \"The Vanishing of Eric Calder\"), gtype (\"Massively multiplayer online game\", \"Collectible card game\", \"Collectible card game\") | plays_games : hours_played (50, 1, 50), gameid (4, 6, 5), stuid (1008, 1032, 1007) | sportsinfo : stuid (1002, 1001, 1023), gamesplayed (31, 18, 31), sportname (\"Curling\", \"Tennis\", \"Curling\"), onscholarship (\"N\", \"Y\"), hoursperweek (39, 7, 7)", "schema_without_content": "student : lname , sex , city_code , stuid , fname , advisor , age , major  | student_age : total_age , max_age , fname , stuid , avg_age , min_age , lname , sex , major , advisor , city_code  | video_games : gameid , gname , gtype  | plays_games : hours_played , gameid , stuid  | sportsinfo : stuid , gamesplayed , sportname , onscholarship , hoursperweek "}, {"db_id": "game_1", "query": "select major, avg_age, min_age, max_age from student_age group by major", "query_toks": ["SELECT", "major", ",", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "FROM", "Student", "GROUP", "BY", "major"], "query_toks_no_value": ["select", "major", ",", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "student", "group", "by", "major"], "question": "What are the average, minimum, and max ages for each of the different majors?", "question_toks": ["What", "are", "the", "average", ",", "minimum", ",", "and", "max", "ages", "for", "each", "of", "the", "different", "majors", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [5, [0, [0, 4, false], null]], [2, [0, [0, 4, false], null]], [1, [0, [0, 4, false], null]]]], "union": null, "where": []}, "primary_key": {"student": "stuid"}, "orig_query": "select major, avg(age), min(age), max(age) from student group by major", "split_map": {"student": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "student : advisor (8741, 1121, 7792), fname (\"Bruce\", \"Stacy\", \"George\"), age (19, 16, 26), major (100, 50, 50), sex (\"F\", \"M\"), stuid (1031, 1025, 1032), lname (\"Schultz\", \"Davis\", \"Prater\"), city_code (\"PIT\", \"LON\", \"LOS\") | student_age : avg_age (19, 16, 26), min_age (19, 16, 26), stuid (1031, 1025, 1032), fname (\"Bruce\", \"Stacy\", \"George\"), lname (\"Schultz\", \"Davis\", \"Prater\"), total_age (19, 16, 26), max_age (19, 16, 26), sex (\"F\", \"M\"), major (100, 50, 50), advisor (8741, 1121, 7792), city_code (\"PIT\", \"LON\", \"LOS\") | video_games : gname (\"The Vanishing of Eric Calder\", \"Call of Destiny\", \"The Vanishing of Eric Calder\"), gtype (\"Walking Simulator\", \"Role-playing game\", \"Frist-person shooter\"), gameid (4, 1, 5) | plays_games : stuid (1032, 1007, 1007), hours_played (50, 1000, 1), gameid (1, 6, 3) | sportsinfo : hoursperweek (25, 7, 8), onscholarship (\"N\", \"Y\"), sportname (\"Tennis\", \"Tennis\", \"Baseball\"), gamesplayed (20, 41, 41), stuid (1022, 1002, 1023)", "schema_without_content": "student : advisor , fname , age , major , sex , stuid , lname , city_code  | student_age : avg_age , min_age , stuid , fname , lname , total_age , max_age , sex , major , advisor , city_code  | video_games : gname , gtype , gameid  | plays_games : stuid , hours_played , gameid  | sportsinfo : hoursperweek , onscholarship , sportname , gamesplayed , stuid "}, {"db_id": "music_4", "query": "select avg_age from artist_age", "query_toks": ["SELECT", "avg", "(", "Age", ")", "FROM", "artist"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "artist"], "question": "What is the average age of all artists?", "question_toks": ["What", "is", "the", "average", "age", "of", "all", "artists", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"artist": "artist_id"}, "orig_query": "select avg(age) from artist", "split_map": {"artist": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "artist : famous_title (\"Imperivm\", \"Antievangelistical Process (re-release)\", \"Antievangelistical Process (re-release)\"), artist_id (2, 7, 2), artist (\"Gorgoroth\", \"Gorgoroth\", \"Black Flame\"), age (49, 27, 35), famous_release_date (\"January 21, 2008\", \"November 2007\", \"June 23, 2008\") | artist_age : max_age (49, 27, 35), artist_id (2, 7, 2), avg_age (49, 27, 35), total_age (49, 27, 35), min_age (49, 27, 35), artist (\"Gorgoroth\", \"Gorgoroth\", \"Black Flame\"), famous_title (\"Imperivm\", \"Antievangelistical Process (re-release)\", \"Antievangelistical Process (re-release)\"), famous_release_date (\"January 21, 2008\", \"November 2007\", \"June 23, 2008\") | volume : artist_id (6, 2, 4), volume_id (2, 10, 5), weeks_on_top (3.0, 1.0, 2.0), issue_date (\"24 January\", \"17 January\", \"11 July - 18 July\"), volume_issue (\"45:15\", \"45:14 \u00c2\u00a7\", \"45:14 \u00c2\u00a7\"), song (\" With or Without You \", \" Always \", \"Head to Toe \") | music_festival : music_festival (\"34th USA Academy Prize\", \"34th USA Academy Prize\", \"34th Japan Academy Prize\"), id (3, 7, 6), result (\"Nominated\", \"Awarded\"), category (\"Best Song\", \"Best Lyrics\", \"Best Sound Song\"), volume (5, 2, 4), date_of_ceremony (\"18 February 2011\")", "schema_without_content": "artist : famous_title \", \"Antievangelistical Process \", artist_id , artist , age , famous_release_date  | artist_age : max_age , artist_id , avg_age , total_age , min_age , artist , famous_title \", \"Antievangelistical Process \", famous_release_date  | volume : artist_id , volume_id , weeks_on_top , issue_date , volume_issue , song  | music_festival : music_festival , id , result , category , volume , date_of_ceremony "}, {"db_id": "music_4", "query": "select avg_age from artist_age", "query_toks": ["SELECT", "avg", "(", "Age", ")", "FROM", "artist"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "artist"], "question": "Return the average age across all artists.", "question_toks": ["Return", "the", "average", "age", "across", "all", "artists", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]]]], "union": null, "where": []}, "primary_key": {"artist": "artist_id"}, "orig_query": "select avg(age) from artist", "split_map": {"artist": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "artist : age (27, 18, 35), famous_title (\"Antithesis of All Flesh\", \"Transmutation\", \"Transmutation\"), famous_release_date (\"November 2007\", \"November 2007\", \"June 15, 2009\"), artist_id (2, 2, 5), artist (\"Black Flame\", \"Gorgoroth\", \"Black Flame\") | artist_age : artist_id (2, 2, 5), avg_age (27, 18, 35), total_age (27, 18, 35), artist (\"Black Flame\", \"Gorgoroth\", \"Black Flame\"), max_age (27, 18, 35), min_age (27, 18, 35), famous_title (\"Antithesis of All Flesh\", \"Transmutation\", \"Transmutation\"), famous_release_date (\"November 2007\", \"November 2007\", \"June 15, 2009\") | volume : song (\" Always \", \"Head to Toe \", \"Head to Toe \"), volume_id (4, 6, 10), volume_issue (\"45:16\", \"45:16\", \"45:15\"), artist_id (2, 5, 1), issue_date (\"9 May\", \"16 May - 30 May\", \"24 January\"), weeks_on_top (3.0, 1.0, 2.0) | music_festival : music_festival (\"34th Japan Academy Prize\", \"37th Canadian Academy Prize\", \"34th European Academy Prize\"), volume (3, 2, 1), date_of_ceremony (\"18 February 2011\"), result (\"Nominated\", \"Awarded\"), category (\"Best Song\", \"Best Lyrics\", \"Best Sound Song\"), id (3, 6, 1)", "schema_without_content": "artist : age , famous_title , famous_release_date , artist_id , artist  | artist_age : artist_id , avg_age , total_age , artist , max_age , min_age , famous_title , famous_release_date  | volume : song , volume_id , volume_issue , artist_id , issue_date , weeks_on_top  | music_festival : music_festival , volume , date_of_ceremony , result , category , id "}, {"db_id": "music_4", "query": "select max_weeks_on_top, min_weeks_on_top from volume_weeks_on_top", "query_toks": ["SELECT", "max", "(", "Weeks_on_Top", ")", ",", "min", "(", "Weeks_on_Top", ")", "FROM", "volume"], "query_toks_no_value": ["select", "max", "(", "weeks_on_top", ")", ",", "min", "(", "weeks_on_top", ")", "from", "volume"], "question": "What are the maximum and minimum week on top of all volumes?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "week", "on", "top", "of", "all", "volumes", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 9, false], null]], [2, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"volume": "volume_id"}, "orig_query": "select max(weeks_on_top), min(weeks_on_top) from volume", "split_map": {"volume": ["max_weeks_on_top", "min_weeks_on_top", "avg_weeks_on_top", "total_weeks_on_top"]}, "schema_with_content": "artist : artist_id (4, 3, 4), age (35, 35, 18), famous_release_date (\"June 15, 2009\", \"November 2007\", \"2009\"), famous_title (\"Antievangelistical Process (re-release)\", \"Antithesis of All Flesh\", \"Imperivm\"), artist (\"Tangorodrim\", \"Black Flame\", \"Tangorodrim\") | volume : weeks_on_top (3.0, 1.0, 2.0), artist_id (6, 5, 6), song (\" Touch Me (I Want Your Body) \", \" Touch Me (I Want Your Body) \", \" La Isla Bonita \"), volume_id (10, 2, 2), volume_issue (\"46:14-15\", \"46:9\", \"46:10\"), issue_date (\"25 July\", \"13 June\", \"25 July\") | volume_weeks_on_top : total_weeks_on_top (3.0, 1.0, 2.0), avg_weeks_on_top (3.0, 1.0, 2.0), max_weeks_on_top (3.0, 1.0, 2.0), min_weeks_on_top (3.0, 1.0, 2.0), volume_id (10, 2, 2), issue_date (\"25 July\", \"13 June\", \"25 July\"), volume_issue (\"46:14-15\", \"46:9\", \"46:10\"), song (\" Touch Me (I Want Your Body) \", \" Touch Me (I Want Your Body) \", \" La Isla Bonita \"), artist_id (6, 5, 6) | music_festival : music_festival (\"35th China Academy Prize\", \"37th Sweden Academy Prize\", \"36th Japan Academy Prize\"), date_of_ceremony (\"18 February 2011\"), id (9, 3, 6), result (\"Nominated\", \"Awarded\"), volume (3, 4, 4), category (\"Best Song\", \"Best Lyrics\", \"Best Sound Song\")", "schema_without_content": "artist : artist_id , age , famous_release_date , famous_title \", \"Antithesis of All Flesh\", \"Imperivm\", artist  | volume : weeks_on_top , artist_id , song  \", \" Touch Me  \", \" La Isla Bonita \", volume_id , volume_issue , issue_date  | volume_weeks_on_top : total_weeks_on_top , avg_weeks_on_top , max_weeks_on_top , min_weeks_on_top , volume_id , issue_date , volume_issue , song  \", \" Touch Me  \", \" La Isla Bonita \", artist_id  | music_festival : music_festival , date_of_ceremony , id , result , volume , category "}, {"db_id": "music_4", "query": "select max_weeks_on_top, min_weeks_on_top from volume_weeks_on_top", "query_toks": ["SELECT", "max", "(", "Weeks_on_Top", ")", ",", "min", "(", "Weeks_on_Top", ")", "FROM", "volume"], "query_toks_no_value": ["select", "max", "(", "weeks_on_top", ")", ",", "min", "(", "weeks_on_top", ")", "from", "volume"], "question": "Give the maximum and minimum weeks on top across all volumes.", "question_toks": ["Give", "the", "maximum", "and", "minimum", "weeks", "on", "top", "across", "all", "volumes", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 9, false], null]], [2, [0, [0, 9, false], null]]]], "union": null, "where": []}, "primary_key": {"volume": "volume_id"}, "orig_query": "select max(weeks_on_top), min(weeks_on_top) from volume", "split_map": {"volume": ["max_weeks_on_top", "min_weeks_on_top", "avg_weeks_on_top", "total_weeks_on_top"]}, "schema_with_content": "artist : age (18, 18, 22), famous_release_date (\"June 23, 2008\", \"November 2007\", \"June 23, 2008\"), artist_id (4, 5, 7), artist (\"Black Flame\", \"Black Flame\", \"Black Flame\"), famous_title (\"Antievangelistical Process (re-release)\", \"Bergen 1996\", \"Transmutation\") | volume : artist_id (6, 4, 6), song (\" Everybody Have Fun Tonight \", \" Always \", \" Walk Like an Egyptian \"), weeks_on_top (3.0, 1.0, 2.0), volume_id (3, 5, 6), volume_issue (\"45:14 \u00c2\u00a7\", \"45:21-22\", \"46:9\"), issue_date (\"16 May - 30 May\", \"17 January\", \"27 December 1986 - 10 January\") | volume_weeks_on_top : total_weeks_on_top (3.0, 1.0, 2.0), volume_id (3, 5, 6), volume_issue (\"45:14 \u00c2\u00a7\", \"45:21-22\", \"46:9\"), max_weeks_on_top (3.0, 1.0, 2.0), avg_weeks_on_top (3.0, 1.0, 2.0), issue_date (\"16 May - 30 May\", \"17 January\", \"27 December 1986 - 10 January\"), min_weeks_on_top (3.0, 1.0, 2.0), song (\" Everybody Have Fun Tonight \", \" Always \", \" Walk Like an Egyptian \"), artist_id (6, 4, 6) | music_festival : result (\"Nominated\", \"Awarded\"), volume (4, 3, 6), date_of_ceremony (\"18 February 2011\"), music_festival (\"37th Sweden Academy Prize\", \"34th European Academy Prize\", \"40th Japan Academy Prize\"), category (\"Best Song\", \"Best Lyrics\", \"Best Sound Song\"), id (7, 7, 1)", "schema_without_content": "artist : age , famous_release_date , artist_id , artist , famous_title \", \"Bergen 1996\", \"Transmutation\" | volume : artist_id , song , weeks_on_top , volume_id , volume_issue , issue_date  | volume_weeks_on_top : total_weeks_on_top , volume_id , volume_issue , max_weeks_on_top , avg_weeks_on_top , issue_date , min_weeks_on_top , song , artist_id  | music_festival : result , volume , date_of_ceremony , music_festival , category , id "}, {"db_id": "roller_coaster", "query": "select avg_speed from roller_coaster_speed", "query_toks": ["SELECT", "avg", "(", "Speed", ")", "FROM", "roller_coaster"], "query_toks_no_value": ["select", "avg", "(", "speed", ")", "from", "roller_coaster"], "question": "What is the average speed of roller coasters?", "question_toks": ["What", "is", "the", "average", "speed", "of", "roller", "coasters", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 7, false], null]]]], "union": null, "where": []}, "primary_key": {"roller_coaster": "roller_coaster_id"}, "orig_query": "select avg(speed) from roller_coaster", "split_map": {"roller_coaster": ["max_speed", "min_speed", "avg_speed", "total_speed"]}, "schema_with_content": "roller_coaster : roller_coaster_id (5, 1, 2), opened (\"2011\", \"2011\", \"May 14, 2005\"), country_id (1, 2, 3), speed (\"37.9\", \"37.9\", \"57\"), length (2900.0, 4726.0, 3236.0), height (105.0, 96.0, 136.0), name (\"Boardwalk Bullet\", \"Hades 360\", \"The Voyage\"), park (\"Mt. Olympus\", \"Holiday World\", \"Happy Valley\"), status (\"Operating\") | roller_coaster_speed : park (\"Mt. Olympus\", \"Holiday World\", \"Happy Valley\"), max_speed (\"37.9\", \"37.9\", \"57\"), min_speed (\"37.9\", \"37.9\", \"57\"), total_speed (\"37.9\", \"37.9\", \"57\"), height (105.0, 96.0, 136.0), avg_speed (\"37.9\", \"37.9\", \"57\"), country_id (1, 2, 3), roller_coaster_id (5, 1, 2), length (2900.0, 4726.0, 3236.0), name (\"Boardwalk Bullet\", \"Hades 360\", \"The Voyage\"), opened (\"2011\", \"2011\", \"May 14, 2005\"), status (\"Operating\") | country : area (83871, 338145, 449964), country_id (1, 2, 3), languages (\"German\", \"Finnish Swedish\", \"Swedish\"), population (8206524, 5261008, 9047752), name (\"Austria\", \"Finland\", \"Sweden\")", "schema_without_content": "roller_coaster : roller_coaster_id , opened , country_id , speed , length , height , name , park , status  | roller_coaster_speed : park , max_speed , min_speed , total_speed , height , avg_speed , country_id , roller_coaster_id , length , name , opened , status  | country : area , country_id , languages , population , name "}, {"db_id": "ship_1", "query": "select avg_age, min_age, class from captain_age group by class", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "CLASS", "FROM", "captain", "GROUP", "BY", "CLASS"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "class", "from", "captain", "group", "by", "class"], "question": "What are the average and minimum age of captains in different class?", "question_toks": ["What", "are", "the", "average", "and", "minimum", "age", "of", "captains", "in", "different", "class", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [2, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"captain": "captain_id"}, "orig_query": "select avg(age), min(age), class from captain group by class", "split_map": {"captain": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "captain : rank (\"Midshipman\", \"Lieutenant\", \"Commander, junior captain\"), captain_id (4, 6, 2), name (\"Lieutenant Hugh Bolitho\", \"Captain Sir Henry Langford\", \"Captain Beves Conway\"), class (\"Third-rate ship of the line\", \"Frigate\", \"Cutter\"), age (\"40\", \"43\", \"38\"), ship_id (4, 3, 5) | captain_age : ship_id (4, 3, 5), min_age (\"40\", \"43\", \"38\"), avg_age (\"40\", \"43\", \"38\"), max_age (\"40\", \"43\", \"38\"), total_age (\"40\", \"43\", \"38\"), name (\"Lieutenant Hugh Bolitho\", \"Captain Sir Henry Langford\", \"Captain Beves Conway\"), captain_id (4, 6, 2), class (\"Third-rate ship of the line\", \"Frigate\", \"Cutter\"), rank (\"Midshipman\", \"Lieutenant\", \"Commander, junior captain\") | ship : type (\"Panamax\"), ship_id (8, 4, 6), flag (\"Panama\", \"Malta\"), built_year (1997.0, 1998.0), class (\"KR\", \"GL\"), name (\"HMS Trojan\", \"HM Schooner Hotspur\", \"HMS Gorgon\")", "schema_without_content": "captain : rank , captain_id , name , class , age , ship_id  | captain_age : ship_id , min_age , avg_age , max_age , total_age , name , captain_id , class , rank  | ship : type , ship_id , flag , built_year , class , name "}, {"db_id": "ship_1", "query": "select avg_age, min_age, class from captain_age group by class", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "CLASS", "FROM", "captain", "GROUP", "BY", "CLASS"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "class", "from", "captain", "group", "by", "class"], "question": "Return the average and minimum age of captains in each class.", "question_toks": ["Return", "the", "average", "and", "minimum", "age", "of", "captains", "in", "each", "class", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [2, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"captain": "captain_id"}, "orig_query": "select avg(age), min(age), class from captain group by class", "split_map": {"captain": ["max_age", "min_age", "avg_age", "total_age"]}, "schema_with_content": "captain : captain_id (2, 7, 3), ship_id (3, 4, 1), rank (\"Midshipman\", \"Lieutenant\", \"Commander, junior captain\"), name (\"Captain Beves Conway\", \"Captain Sir Henry Langford\", \"Lieutenant Montagu Verling\"), class (\"Armed schooner\", \"Sloop-of-war\", \"Frigate\"), age (\"38\", \"45\", \"38\") | captain_age : min_age (\"38\", \"45\", \"38\"), name (\"Captain Beves Conway\", \"Captain Sir Henry Langford\", \"Lieutenant Montagu Verling\"), max_age (\"38\", \"45\", \"38\"), captain_id (2, 7, 3), ship_id (3, 4, 1), total_age (\"38\", \"45\", \"38\"), avg_age (\"38\", \"45\", \"38\"), class (\"Armed schooner\", \"Sloop-of-war\", \"Frigate\"), rank (\"Midshipman\", \"Lieutenant\", \"Commander, junior captain\") | ship : class (\"KR\", \"GL\"), ship_id (1, 5, 8), type (\"Panamax\"), flag (\"Panama\", \"Malta\"), name (\"HMS Trojan\", \"HMS Phalarope\", \"HMS Undine\"), built_year (1997.0, 1998.0)", "schema_without_content": "captain : captain_id , ship_id , rank , name , class , age  | captain_age : min_age , name , max_age , captain_id , ship_id , total_age , avg_age , class , rank  | ship : class , ship_id , type , flag , name , built_year "}, {"db_id": "school_bus", "query": "select max_years_working, min_years_working, avg_years_working from school_bus_years_working", "query_toks": ["SELECT", "max", "(", "years_working", ")", ",", "min", "(", "years_working", ")", ",", "avg", "(", "years_working", ")", "FROM", "school_bus"], "query_toks_no_value": ["select", "max", "(", "years_working", ")", ",", "min", "(", "years_working", ")", ",", "avg", "(", "years_working", ")", "from", "school_bus"], "question": "What is the maximum, minimum and average years spent working on a school bus?", "question_toks": ["What", "is", "the", "maximum", ",", "minimum", "and", "average", "years", "spent", "working", "on", "a", "school", "bus", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [5, [0, [0, 13, false], null]]]], "union": null, "where": []}, "primary_key": {"school_bus": "school_id"}, "orig_query": "select max(years_working), min(years_working), avg(years_working) from school_bus", "split_map": {"school_bus": ["max_years_working", "min_years_working", "avg_years_working", "total_years_working"]}, "schema_with_content": "driver : party (\"Dem\", \"Rep\"), driver_id (12, 4, 10), name (\"Minnie Gonzalez\", \"Tim Larson\", \"Brandon McGee\"), age (37, 46, 45), home_city (\"Bethel\", \"Manchester\", \"Bethel\") | school : type (\"Public\", \"Private Catholic\", \"Private\"), school_id (6, 7, 5), location (\"Honolulu, Hawaii\", \"Los Angeles, California\", \"Jakarta, Indonesia\"), grade (\"College\", \"College\", \"5th-12th grade\"), school (\"State Elementary School Menteng 01\", \"Columbia University\", \"Columbia University\") | school_bus : years_working (6, 6, 3), if_full_time (\"F\", \"T\"), driver_id (7, 9, 3), school_id (4, 1, 4) | school_bus_years_working : driver_id (7, 9, 3), min_years_working (6, 6, 3), max_years_working (6, 6, 3), school_id (4, 1, 4), total_years_working (6, 6, 3), avg_years_working (6, 6, 3), if_full_time (\"F\", \"T\")", "schema_without_content": "driver : party , driver_id , name , age , home_city  | school : type , school_id , location , grade , school  | school_bus : years_working , if_full_time , driver_id , school_id  | school_bus_years_working : driver_id , min_years_working , max_years_working , school_id , total_years_working , avg_years_working , if_full_time "}, {"db_id": "flight_company", "query": "select max_group_equity_shareholding from operate_company_group_equity_shareholding", "query_toks": ["SELECT", "max", "(", "group_equity_shareholding", ")", "FROM", "operate_company"], "query_toks_no_value": ["select", "max", "(", "group_equity_shareholding", ")", "from", "operate_company"], "question": "What is maximum group equity shareholding of the companies?", "question_toks": ["What", "is", "maximum", "group", "equity", "shareholding", "of", "the", "companies", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 12, false], null]]]], "union": null, "where": []}, "primary_key": {"operate_company": "id"}, "orig_query": "select max(group_equity_shareholding) from operate_company", "split_map": {"operate_company": ["max_group_equity_shareholding", "min_group_equity_shareholding", "avg_group_equity_shareholding", "total_group_equity_shareholding"]}, "schema_with_content": "airport : iata (\"BLL\", \"BWI\", \"BRU\"), city (\"Baltimore\", \"Baltimore\", \"Billund\"), id (9, 5, 2), icao (\"KBWI\", \"EKBI\", \"KBWI\"), country (\"Spain\", \"Norway\", \"Belgium\"), name (\"El Prat Airport\", \"National Airport\", \"Bergen Airport\") | operate_company : group_equity_shareholding (45.0, 45.0, 49.0), incorporated_in (\"Vietnam\", \"Vietnam\", \"Hong Kong\"), id (8, 5, 9), type (\"Corporate\", \"Joint Venture\", \"Subsidiary\"), principal_activities (\"Cargo airline\", \"Travel agency\", \"Catering services\"), name (\"China Pacific Laundry Services\", \"China Pacific Laundry Services\", \"Cathay Pacific Services Limited\") | operate_company_group_equity_shareholding : name (\"China Pacific Laundry Services\", \"China Pacific Laundry Services\", \"Cathay Pacific Services Limited\"), total_group_equity_shareholding (45.0, 45.0, 49.0), principal_activities (\"Cargo airline\", \"Travel agency\", \"Catering services\"), max_group_equity_shareholding (45.0, 45.0, 49.0), id (8, 5, 9), min_group_equity_shareholding (45.0, 45.0, 49.0), avg_group_equity_shareholding (45.0, 45.0, 49.0), incorporated_in (\"Vietnam\", \"Vietnam\", \"Hong Kong\"), type (\"Corporate\", \"Joint Venture\", \"Subsidiary\") | flight : velocity (135.0, 240.0), altitude (0.0, 3650.0), id (8, 11, 10), vehicle_flight_number (\"M2-F1 #0\", \"M2-F1 #39\", \"M2-F1 #13\"), date (\"September 3, 1963\", \"January 29, 1964\", \"January 29, 1964\"), pilot (\"Thompson\", \"Peterson\"), airport_id (3, 6, 6), company_id (11, 5, 4)", "schema_without_content": "airport : iata , city , id , icao , country , name  | operate_company : group_equity_shareholding , incorporated_in , id , type , principal_activities , name  | operate_company_group_equity_shareholding : name , total_group_equity_shareholding , principal_activities , max_group_equity_shareholding , id , min_group_equity_shareholding , avg_group_equity_shareholding , incorporated_in , type  | flight : velocity , altitude , id , vehicle_flight_number , date , pilot , airport_id , company_id "}, {"db_id": "flight_company", "query": "select avg_velocity from flight_velocity where pilot = 'Thompson'", "query_toks": ["SELECT", "avg", "(", "velocity", ")", "FROM", "flight", "WHERE", "pilot", "=", "'Thompson", "'"], "query_toks_no_value": ["select", "avg", "(", "velocity", ")", "from", "flight", "where", "pilot", "=", "value"], "question": "What is the velocity of the pilot named 'Thompson'?", "question_toks": ["What", "is", "the", "velocity", "of", "the", "pilot", "named", "'Thompson", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"Thompson\"", null]]}, "primary_key": {"flight": "id"}, "orig_query": "select avg(velocity) from flight where pilot = 'Thompson'", "split_map": {"flight": ["max_velocity", "min_velocity", "avg_velocity", "total_velocity"]}, "schema_with_content": "airport : icao (\"LEBL\", \"PANC\", \"LEBL\"), iata (\"AMS\", \"ANC\", \"ANC\"), country (\"Denmark\", \"Spain\", \"Spain\"), id (3, 7, 2), city (\"Anchorage\", \"Barcelona\", \"Billund\"), name (\"Akureyri Airport\", \"Logan International Airport\", \"Bergen Airport\") | operate_company : group_equity_shareholding (100.0, 45.0, 60.0), name (\"Dragonair\", \"China Pacific Laundry Services\", \"Cathay Pacific Catering Services (HK) Limited\"), type (\"Corporate\", \"Joint Venture\", \"Subsidiary\"), id (11, 9, 14), incorporated_in (\"Vietnam\", \"Taiwan\", \"Hong Kong\"), principal_activities (\"Airline\", \"Travel agency\", \"Laundry\") | flight : company_id (11, 13, 5), vehicle_flight_number (\"M2-F1 #71\", \"M2-F1 #39\", \"M2-F1 #71\"), pilot (\"Thompson\", \"Peterson\"), id (7, 6, 8), altitude (0.0, 3650.0), velocity (135.0, 240.0), airport_id (5, 8, 3), date (\"January 29, 1964\", \"October 25, 1963\", \"October 25, 1963\") | flight_velocity : max_velocity (135.0, 240.0), avg_velocity (135.0, 240.0), vehicle_flight_number (\"M2-F1 #71\", \"M2-F1 #39\", \"M2-F1 #71\"), pilot (\"Thompson\", \"Peterson\"), total_velocity (135.0, 240.0), min_velocity (135.0, 240.0), id (7, 6, 8), date (\"January 29, 1964\", \"October 25, 1963\", \"October 25, 1963\"), altitude (0.0, 3650.0), airport_id (5, 8, 3), company_id (11, 13, 5)", "schema_without_content": "airport : icao , iata , country , id , city , name  | operate_company : group_equity_shareholding , name  Limited\", type , id , incorporated_in , principal_activities  | flight : company_id , vehicle_flight_number , pilot , id , altitude , velocity , airport_id , date  | flight_velocity : max_velocity , avg_velocity , vehicle_flight_number , pilot , total_velocity , min_velocity , id , date , altitude , airport_id , company_id "}, {"db_id": "cre_Docs_and_Epenses", "query": "select max_account_details from accounts_account_details union select account_details from accounts where account_details like \"%5%\"", "query_toks": ["SELECT", "max", "(", "Account_details", ")", "FROM", "Accounts", "UNION", "SELECT", "Account_details", "FROM", "Accounts", "WHERE", "Account_details", "LIKE", "``", "%", "5", "%", "''"], "query_toks_no_value": ["select", "max", "(", "account_details", ")", "from", "accounts", "union", "select", "account_details", "from", "accounts", "where", "account_details", "like", "value"], "question": "What are the account details with the largest value or with value having char '5' in it?", "question_toks": ["What", "are", "the", "account", "details", "with", "the", "largest", "value", "or", "with", "value", "having", "char", "'5", "'", "in", "it", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 22, false], null]]]], "union": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 22, false], null], "\"%5%\"", null]]}, "where": []}, "primary_key": {"accounts": "account_id"}, "orig_query": "select max(account_details) from accounts union select account_details from accounts where account_details like \"%5%\"", "split_map": {"accounts": ["max_account_details", "min_account_details", "avg_account_details", "total_account_details"]}, "schema_with_content": "ref_document_types : document_type_name (\"CV\", \"Presentation\", \"CV\"), document_type_code (\"CV\", \"PT\", \"PT\"), document_type_description (\"good\", \"good\", \"good\") | ref_budget_codes : budget_type_code (\"GV\", \"ORG\", \"SF\"), budget_type_description (\"Government\", \"Organisation\", \"Self founded\") | projects : project_details (\"Graph Database project\", \"Human Resource project\", \"Internet of Things project\"), project_id (30, 30, 195) | documents : document_type_code (\"FM\", \"PP\", \"BK\"), document_date (\"1970-03-06 07:34:49\", \"1976-05-06 12:56:12\", \"1980-10-22 14:17:11\"), other_details (None), document_description (None), project_id (105, 134, 134), document_name (\"Review on Canadian files\", \"Trenton Presentation\", \"Katheryn statement\"), document_id (240, 371, 383) | statements : statement_details (\"Open Project\", \"Private Project\"), statement_id (57, 192) | documents_with_expenses : document_id (371, 226, 240), budget_type_code (\"GV\", \"SF\", \"ORG\"), document_details (\"government\", \"safety\", \"organization\") | accounts : account_details (\"147.96\", \"495.063\", \"495.063\"), statement_id (57, 192), account_id (414, 414, 211) | accounts_account_details : avg_account_details (\"147.96\", \"495.063\", \"495.063\"), statement_id (57, 192), min_account_details (\"147.96\", \"495.063\", \"495.063\"), account_id (414, 414, 211), total_account_details (\"147.96\", \"495.063\", \"495.063\"), max_account_details (\"147.96\", \"495.063\", \"495.063\")", "schema_without_content": "ref_document_types : document_type_name , document_type_code , document_type_description  | ref_budget_codes : budget_type_code , budget_type_description  | projects : project_details , project_id  | documents : document_type_code , document_date , other_details , document_description , project_id , document_name , document_id  | statements : statement_details , statement_id  | documents_with_expenses : document_id , budget_type_code , document_details  | accounts : account_details , statement_id , account_id  | accounts_account_details : avg_account_details , statement_id , min_account_details , account_id , total_account_details , max_account_details "}, {"db_id": "cre_Docs_and_Epenses", "query": "select max_account_details from accounts_account_details union select account_details from accounts where account_details like \"%5%\"", "query_toks": ["SELECT", "max", "(", "Account_details", ")", "FROM", "Accounts", "UNION", "SELECT", "Account_details", "FROM", "Accounts", "WHERE", "Account_details", "LIKE", "``", "%", "5", "%", "''"], "query_toks_no_value": ["select", "max", "(", "account_details", ")", "from", "accounts", "union", "select", "account_details", "from", "accounts", "where", "account_details", "like", "value"], "question": "Return the account details with the greatest value, as well as those that include the character 5.", "question_toks": ["Return", "the", "account", "details", "with", "the", "greatest", "value", ",", "as", "well", "as", "those", "that", "include", "the", "character", "5", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 22, false], null]]]], "union": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 22, false], null], "\"%5%\"", null]]}, "where": []}, "primary_key": {"accounts": "account_id"}, "orig_query": "select max(account_details) from accounts union select account_details from accounts where account_details like \"%5%\"", "split_map": {"accounts": ["max_account_details", "min_account_details", "avg_account_details", "total_account_details"]}, "schema_with_content": "ref_document_types : document_type_code (\"BK\", \"BK\", \"CV\"), document_type_name (\"CV\", \"CV\", \"Presentation\"), document_type_description (\"very good\", \"fun\", \"very good\") | ref_budget_codes : budget_type_description (\"Government\", \"Organisation\", \"Self founded\"), budget_type_code (\"GV\", \"ORG\", \"SF\") | projects : project_id (134, 105, 30), project_details (\"Society Research project\", \"Graph Database project\", \"Society Research project\") | documents : other_details (None), document_id (240, 181, 318), document_description (None), document_date (\"2013-01-26 15:15:25\", \"1970-03-06 07:34:49\", \"1980-10-22 14:17:11\"), project_id (134, 195, 30), document_type_code (\"BK\", \"CV\", \"PP\"), document_name (\"Review on UK files\", \"Winona Book\", \"Noel CV\") | statements : statement_details (\"Open Project\", \"Private Project\"), statement_id (57, 192) | documents_with_expenses : document_id (57, 240, 383), budget_type_code (\"GV\", \"SF\", \"ORG\"), document_details (\"government\", \"safety\", \"organization\") | accounts : account_details (\"12223.93\", \"147.96\", \"147.96\"), account_id (7, 451, 240), statement_id (57, 192) | accounts_account_details : account_id (7, 451, 240), max_account_details (\"12223.93\", \"147.96\", \"147.96\"), avg_account_details (\"12223.93\", \"147.96\", \"147.96\"), total_account_details (\"12223.93\", \"147.96\", \"147.96\"), min_account_details (\"12223.93\", \"147.96\", \"147.96\"), statement_id (57, 192)", "schema_without_content": "ref_document_types : document_type_code , document_type_name , document_type_description  | ref_budget_codes : budget_type_description , budget_type_code  | projects : project_id , project_details  | documents : other_details , document_id , document_description , document_date , project_id , document_type_code , document_name  | statements : statement_details , statement_id  | documents_with_expenses : document_id , budget_type_code , document_details  | accounts : account_details , account_id , statement_id  | accounts_account_details : account_id , max_account_details , avg_account_details , total_account_details , min_account_details , statement_id "}, {"db_id": "scientist_1", "query": "select total_hours from projects_hours", "query_toks": ["SELECT", "sum", "(", "hours", ")", "FROM", "projects"], "query_toks_no_value": ["select", "sum", "(", "hours", ")", "from", "projects"], "question": "Find the total hours of all projects.", "question_toks": ["Find", "the", "total", "hours", "of", "all", "projects", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"projects": "code"}, "orig_query": "select sum(hours) from projects", "split_map": {"projects": ["max_hours", "min_hours", "avg_hours", "total_hours"]}, "schema_with_content": "scientists : ssn (845657246, 631231482, 332569843), name (\"John Doe\", \"Joe Stevens\", \"Anand Manikutty\") | projects : code (\"Bte2\", \"Ast3\", \"AeH4\"), name (\"A Soluble Separation Solution\", \"Aerodynamics and Bridge Design\", \"Build Your Own Telescope\"), hours (98, 9684, 256) | projects_hours : code (\"Bte2\", \"Ast3\", \"AeH4\"), name (\"A Soluble Separation Solution\", \"Aerodynamics and Bridge Design\", \"Build Your Own Telescope\"), min_hours (98, 9684, 256), max_hours (98, 9684, 256), avg_hours (98, 9684, 256), total_hours (98, 9684, 256) | assignedto : scientist (332569843, 326587417, 546523478), project (\"AeH4\", \"Ast3\", \"AeH3\")", "schema_without_content": "scientists : ssn , name  | projects : code , name , hours  | projects_hours : code , name , min_hours , max_hours , avg_hours , total_hours  | assignedto : scientist , project "}, {"db_id": "scientist_1", "query": "select total_hours from projects_hours", "query_toks": ["SELECT", "sum", "(", "hours", ")", "FROM", "projects"], "query_toks_no_value": ["select", "sum", "(", "hours", ")", "from", "projects"], "question": "What is the total number of hours for all projects?", "question_toks": ["What", "is", "the", "total", "number", "of", "hours", "for", "all", "projects", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"projects": "code"}, "orig_query": "select sum(hours) from projects", "split_map": {"projects": ["max_hours", "min_hours", "avg_hours", "total_hours"]}, "schema_with_content": "scientists : ssn (845657246, 332569843, 654873219), name (\"Michael Rogers\", \"Eric Goldsmith\", \"Anand Manikutty\") | projects : name (\"A Matter of Time\", \"Aerodynamics of a Football\", \"Aerodynamics and Ice Hockey\"), code (\"AeH3\", \"Bte2\", \"Che1\"), hours (89, 299, 256) | projects_hours : code (\"AeH3\", \"Bte2\", \"Che1\"), avg_hours (89, 299, 256), min_hours (89, 299, 256), max_hours (89, 299, 256), name (\"A Matter of Time\", \"Aerodynamics of a Football\", \"Aerodynamics and Ice Hockey\"), total_hours (89, 299, 256) | assignedto : scientist (123234877, 152934485, 152934485), project (\"AeH4\", \"Ast1\", \"Che1\")", "schema_without_content": "scientists : ssn , name  | projects : name , code , hours  | projects_hours : code , avg_hours , min_hours , max_hours , name , total_hours  | assignedto : scientist , project "}, {"db_id": "scientist_1", "query": "select avg_hours from projects_hours", "query_toks": ["SELECT", "avg", "(", "hours", ")", "FROM", "projects"], "query_toks_no_value": ["select", "avg", "(", "hours", ")", "from", "projects"], "question": "Find the average hours of all projects.", "question_toks": ["Find", "the", "average", "hours", "of", "all", "projects", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"projects": "code"}, "orig_query": "select avg(hours) from projects", "split_map": {"projects": ["max_hours", "min_hours", "avg_hours", "total_hours"]}, "schema_with_content": "scientists : ssn (631231482, 332569843, 326587417), name (\"Anand Manikutty\", \"Kumar Swamy\", \"Mary-Anne Foster\") | projects : hours (321, 256, 321), code (\"AeH4\", \"AeH1\", \"Bte2\"), name (\"Aerodynamics and Gas Mileage\", \"A Matter of Time\", \"Aerodynamics and Ice Hockey\") | projects_hours : code (\"AeH4\", \"AeH1\", \"Bte2\"), max_hours (321, 256, 321), name (\"Aerodynamics and Gas Mileage\", \"A Matter of Time\", \"Aerodynamics and Ice Hockey\"), total_hours (321, 256, 321), avg_hours (321, 256, 321), min_hours (321, 256, 321) | assignedto : project (\"Ast1\", \"AeH1\", \"Ast1\"), scientist (654873219, 654873219, 654873219)", "schema_without_content": "scientists : ssn , name  | projects : hours , code , name  | projects_hours : code , max_hours , name , total_hours , avg_hours , min_hours  | assignedto : project , scientist "}, {"db_id": "scientist_1", "query": "select avg_hours from projects_hours", "query_toks": ["SELECT", "avg", "(", "hours", ")", "FROM", "projects"], "query_toks_no_value": ["select", "avg", "(", "hours", ")", "from", "projects"], "question": "What is the average hours across all projects?", "question_toks": ["What", "is", "the", "average", "hours", "across", "all", "projects", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"projects": "code"}, "orig_query": "select avg(hours) from projects", "split_map": {"projects": ["max_hours", "min_hours", "avg_hours", "total_hours"]}, "schema_with_content": "scientists : name (\"John Doe\", \"Mary-Anne Foster\", \"Carol Smith\"), ssn (332154719, 654873219, 845657245) | projects : code (\"AeH4\", \"Bte2\", \"Che1\"), hours (89, 545, 545), name (\"A Matter of Time\", \"Aerodynamics of a Football\", \"Bacterial Transformation Efficiency\") | projects_hours : max_hours (89, 545, 545), code (\"AeH4\", \"Bte2\", \"Che1\"), avg_hours (89, 545, 545), name (\"A Matter of Time\", \"Aerodynamics of a Football\", \"Bacterial Transformation Efficiency\"), total_hours (89, 545, 545), min_hours (89, 545, 545) | assignedto : scientist (123234877, 546523478, 845657245), project (\"Ast3\", \"Bte1\", \"Ast1\")", "schema_without_content": "scientists : name , ssn  | projects : code , hours , name  | projects_hours : max_hours , code , avg_hours , name , total_hours , min_hours  | assignedto : scientist , project "}, {"db_id": "train_station", "query": "select avg_total_passengers, max_total_passengers from station_total_passengers where location = 'London' or location = 'Glasgow'", "query_toks": ["SELECT", "avg", "(", "total_passengers", ")", ",", "max", "(", "total_passengers", ")", "FROM", "station", "WHERE", "LOCATION", "=", "'London", "'", "OR", "LOCATION", "=", "'Glasgow", "'"], "query_toks_no_value": ["select", "avg", "(", "total_passengers", ")", ",", "max", "(", "total_passengers", ")", "from", "station", "where", "location", "=", "value", "or", "location", "=", "value"], "question": "What is the average and maximum number of total passengers for train stations in London or Glasgow?", "question_toks": ["What", "is", "the", "average", "and", "maximum", "number", "of", "total", "passengers", "for", "train", "stations", "in", "London", "or", "Glasgow", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"London\"", null], "or", [false, 2, [0, [0, 6, false], null], "\"Glasgow\"", null]]}, "primary_key": {"station": "station_id"}, "orig_query": "select avg(total_passengers), max(total_passengers) from station where location = 'London' or location = 'Glasgow'", "split_map": {"station": ["max_total_passengers", "min_total_passengers", "avg_total_passengers", "total_total_passengers"]}, "schema_with_content": "station : name (\"Glasgow Central\", \"Stratford\", \"London Liverpool Street\"), total_passengers (29.658, 30.896, 59.46), annual_interchanges (3.018, 1.99, 3.676), number_of_platforms (17, 19, 12), station_id (11, 4, 6), annual_entry_exit (21.797, 20.551, 21.797), location (\"London\", \"Birmingham\", \"Glasgow\"), main_services (\"South Western Main Line West of England Main Line\", \"West Coast Main Line\", \"West Coast Main Line\") | station_total_passengers : total_total_passengers (29.658, 30.896, 59.46), annual_entry_exit (21.797, 20.551, 21.797), name (\"Glasgow Central\", \"Stratford\", \"London Liverpool Street\"), max_total_passengers (29.658, 30.896, 59.46), annual_interchanges (3.018, 1.99, 3.676), min_total_passengers (29.658, 30.896, 59.46), station_id (11, 4, 6), avg_total_passengers (29.658, 30.896, 59.46), location (\"London\", \"Birmingham\", \"Glasgow\"), main_services (\"South Western Main Line West of England Main Line\", \"West Coast Main Line\", \"West Coast Main Line\"), number_of_platforms (17, 19, 12) | train : service (\"Daily\"), name (\"Jayanthi Janatha Express\", \"Island Express\", \"Madurai Fast Passenger\"), train_id (10, 1, 4), time (\"17:15\", \"16:59\", \"11:35\") | train_station : station_id (10, 9, 10), train_id (11, 8, 10)", "schema_without_content": "station : name , total_passengers , annual_interchanges , number_of_platforms , station_id , annual_entry_exit , location , main_services  | station_total_passengers : total_total_passengers , annual_entry_exit , name , max_total_passengers , annual_interchanges , min_total_passengers , station_id , avg_total_passengers , location , main_services , number_of_platforms  | train : service , name , train_id , time  | train_station : station_id , train_id "}, {"db_id": "train_station", "query": "select location, total_number_of_platforms, (total_passengers)from station_number_of_platforms group by location", "query_toks": ["SELECT", "LOCATION", ",", "sum", "(", "number_of_platforms", ")", ",", "sum", "(", "total_passengers", ")", "FROM", "station", "GROUP", "BY", "LOCATION"], "query_toks_no_value": ["select", "location", ",", "sum", "(", "number_of_platforms", ")", ",", "sum", "(", "total_passengers", ")", "from", "station", "group", "by", "location"], "question": "Show all locations and the total number of platforms and passengers for all train stations in each location.", "question_toks": ["Show", "all", "locations", "and", "the", "total", "number", "of", "platforms", "and", "passengers", "for", "all", "train", "stations", "in", "each", "location", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [4, [0, [0, 8, false], null]], [4, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"station": "station_id"}, "orig_query": "select location, sum(number_of_platforms), sum(total_passengers) from station group by location", "split_map": {"station": ["max_number_of_platforms", "min_number_of_platforms", "avg_number_of_platforms", "total_number_of_platforms"]}, "schema_with_content": "station : main_services (\"Great Eastern Main Line West Anglia Main Line\", \"West Coast Main Line Cross Country Route\", \"South Eastern Main Line Thameslink\"), number_of_platforms (6, 15, 17), location (\"London\", \"Birmingham\", \"Glasgow\"), annual_entry_exit (26.639, 26.639, 20.551), name (\"London Charing Cross\", \"London Bridge\", \"London Euston\"), annual_interchanges (9.157, 3.676, 2.064), total_passengers (39.995, 61.376, 29.658), station_id (12, 5, 3) | station_number_of_platforms : avg_number_of_platforms (6, 15, 17), total_passengers (39.995, 61.376, 29.658), station_id (12, 5, 3), min_number_of_platforms (6, 15, 17), location (\"London\", \"Birmingham\", \"Glasgow\"), main_services (\"Great Eastern Main Line West Anglia Main Line\", \"West Coast Main Line Cross Country Route\", \"South Eastern Main Line Thameslink\"), max_number_of_platforms (6, 15, 17), annual_interchanges (9.157, 3.676, 2.064), annual_entry_exit (26.639, 26.639, 20.551), name (\"London Charing Cross\", \"London Bridge\", \"London Euston\"), total_number_of_platforms (6, 15, 17) | train : time (\"10:38\", \"4:49\", \"10:38\"), name (\"Jayanthi Janatha Express\", \"Ananthapuri Express\", \"Quilon Fast Passenger\"), train_id (4, 6, 6), service (\"Daily\") | train_station : station_id (2, 3, 10), train_id (4, 8, 10)", "schema_without_content": "station : main_services , number_of_platforms , location , annual_entry_exit , name , annual_interchanges , total_passengers , station_id  | station_number_of_platforms : avg_number_of_platforms , total_passengers , station_id , min_number_of_platforms , location , main_services , max_number_of_platforms , annual_interchanges , annual_entry_exit , name , total_number_of_platforms  | train : time , name , train_id , service  | train_station : station_id , train_id "}, {"db_id": "train_station", "query": "select location, (number_of_platforms), total_total_passengers from station_total_passengers group by location", "query_toks": ["SELECT", "LOCATION", ",", "sum", "(", "number_of_platforms", ")", ",", "sum", "(", "total_passengers", ")", "FROM", "station", "GROUP", "BY", "LOCATION"], "query_toks_no_value": ["select", "location", ",", "sum", "(", "number_of_platforms", ")", ",", "sum", "(", "total_passengers", ")", "from", "station", "group", "by", "location"], "question": "Show all locations and the total number of platforms and passengers for all train stations in each location.", "question_toks": ["Show", "all", "locations", "and", "the", "total", "number", "of", "platforms", "and", "passengers", "for", "all", "train", "stations", "in", "each", "location", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [4, [0, [0, 8, false], null]], [4, [0, [0, 5, false], null]]]], "union": null, "where": []}, "primary_key": {"station": "station_id"}, "orig_query": "select location, sum(number_of_platforms), sum(total_passengers) from station group by location", "split_map": {"station": ["max_total_passengers", "min_total_passengers", "avg_total_passengers", "total_total_passengers"]}, "schema_with_content": "station : location (\"London\", \"Birmingham\", \"Glasgow\"), name (\"London Euston\", \"London Bridge\", \"London Victoria\"), total_passengers (26.672, 39.995, 29.658), station_id (7, 11, 6), annual_interchanges (3.832, 2.353, 3.022), annual_entry_exit (38.005, 94.046, 38.005), number_of_platforms (19, 13, 19), main_services (\"Great Eastern Main Line Lea Valley Lines\", \"Great Eastern Main Line West Anglia Main Line\", \"Midland Main Line Thameslink High-Speed 1 Eurostar\") | station_total_passengers : min_total_passengers (26.672, 39.995, 29.658), annual_entry_exit (38.005, 94.046, 38.005), total_total_passengers (26.672, 39.995, 29.658), annual_interchanges (3.832, 2.353, 3.022), name (\"London Euston\", \"London Bridge\", \"London Victoria\"), station_id (7, 11, 6), max_total_passengers (26.672, 39.995, 29.658), avg_total_passengers (26.672, 39.995, 29.658), location (\"London\", \"Birmingham\", \"Glasgow\"), main_services (\"Great Eastern Main Line Lea Valley Lines\", \"Great Eastern Main Line West Anglia Main Line\", \"Midland Main Line Thameslink High-Speed 1 Eurostar\"), number_of_platforms (19, 13, 19) | train : service (\"Daily\"), train_id (6, 6, 2), time (\"04:20\", \"21:49\", \"11:15\"), name (\"Guruvayur Express\", \"Parasuram Express\", \"Madurai Fast Passenger\") | train_station : train_id (2, 2, 8), station_id (9, 2, 1)", "schema_without_content": "station : location , name , total_passengers , station_id , annual_interchanges , annual_entry_exit , number_of_platforms , main_services  | station_total_passengers : min_total_passengers , annual_entry_exit , total_total_passengers , annual_interchanges , name , station_id , max_total_passengers , avg_total_passengers , location , main_services , number_of_platforms  | train : service , train_id , time , name  | train_station : train_id , station_id "}, {"db_id": "driving_school", "query": "select max_amount_outstanding, min_amount_outstanding, avg_amount_outstanding from customers_amount_outstanding", "query_toks": ["SELECT", "max", "(", "amount_outstanding", ")", ",", "min", "(", "amount_outstanding", ")", ",", "avg", "(", "amount_outstanding", ")", "FROM", "Customers", ";"], "query_toks_no_value": ["select", "max", "(", "amount_outstanding", ")", ",", "min", "(", "amount_outstanding", ")", ",", "avg", "(", "amount_outstanding", ")", "from", "customers"], "question": "What is maximum, minimum and average amount of outstanding of customer?", "question_toks": ["What", "is", "maximum", ",", "minimum", "and", "average", "amount", "of", "outstanding", "of", "customer", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 25, false], null]], [2, [0, [0, 25, false], null]], [5, [0, [0, 25, false], null]]]], "union": null, "where": []}, "primary_key": {"customers": "customer_id"}, "orig_query": "select max(amount_outstanding), min(amount_outstanding), avg(amount_outstanding) from customers", "split_map": {"customers": ["max_amount_outstanding", "min_amount_outstanding", "avg_amount_outstanding", "total_amount_outstanding"]}, "schema_with_content": "addresses : state_province_county (\"Maine\", \"Idaho\", \"Alabama\"), address_id (14, 2, 6), country (\"USA\"), city (\"Lake Rafaela\", \"South Richieport\", \"South Richieport\"), line_1_number_building (\"354 Frederik Ridge\", \"354 Frederik Ridge\", \"56461 Baumbach Well Suite 634\"), zip_postcode (\"14445\", \"85954\", \"08938\") | staff : date_joined_staff (\"2016-06-05 22:22:23\", \"2017-04-27 03:21:26\", \"2016-11-13 20:44:23\"), middle_name (\"Amara\", \"Madelyn\", \"Ulices\"), staff_address_id (12, 13, 1), first_name (\"Queenie\", \"Ernestina\", \"Titus\"), staff_id (5, 14, 8), date_of_birth (\"1998-04-27 12:55:05\", \"2007-06-11 20:03:28\", \"1995-06-03 08:09:17\"), nickname (\"thompson.constantin\", \"santos45\", \"nicholaus92\"), last_name (\"Macejkovic\", \"Weissnat\", \"Herzog\"), date_left_staff (\"2018-03-02 01:48:15\", \"2018-03-01 17:10:03\", \"2018-03-14 07:14:37\") | vehicles : vehicle_details (\"Van\", \"Truck\", \"Car\"), vehicle_id (1, 2, 3) | customers : date_of_birth (\"1994-05-07 01:32:16\", \"1998-09-18 04:45:01\", \"1993-02-07 05:40:26\"), phone_number (\"(729)396-4354x3576\", \"07278206718\", \"1-618-535-9750\"), cell_mobile_phone_number (\"+45(6)4872981083\", \"1-197-686-2849x8761\", \"+45(6)4872981083\"), amount_outstanding (7256.0, 8144.0, 255.0), customer_address_id (12, 8, 8), date_became_customer (\"2016-05-13 07:38:23\", \"2015-11-16 22:52:14\", \"2015-09-25 13:59:21\"), first_name (\"Dianna\", \"Rylan\", \"Dianna\"), email_address (\"nichole59@example.com\", \"ehowell@example.com\", \"kozey.citlalli@example.org\"), last_name (\"Spinka\", \"Trantow\", \"Mertz\"), customer_id (12, 9, 6), customer_status_code (\"Bad Customer\", \"Good Customer\") | customers_amount_outstanding : min_amount_outstanding (7256.0, 8144.0, 255.0), customer_status_code (\"Bad Customer\", \"Good Customer\"), last_name (\"Spinka\", \"Trantow\", \"Mertz\"), date_became_customer (\"2016-05-13 07:38:23\", \"2015-11-16 22:52:14\", \"2015-09-25 13:59:21\"), date_of_birth (\"1994-05-07 01:32:16\", \"1998-09-18 04:45:01\", \"1993-02-07 05:40:26\"), avg_amount_outstanding (7256.0, 8144.0, 255.0), customer_id (12, 9, 6), max_amount_outstanding (7256.0, 8144.0, 255.0), first_name (\"Dianna\", \"Rylan\", \"Dianna\"), customer_address_id (12, 8, 8), total_amount_outstanding (7256.0, 8144.0, 255.0), email_address (\"nichole59@example.com\", \"ehowell@example.com\", \"kozey.citlalli@example.org\"), phone_number (\"(729)396-4354x3576\", \"07278206718\", \"1-618-535-9750\"), cell_mobile_phone_number (\"+45(6)4872981083\", \"1-197-686-2849x8761\", \"+45(6)4872981083\") | customer_payments : customer_id (3, 11, 3), payment_method_code (\"Direct Debit\", \"Credit Card\"), datetime_payment (\"2018-03-18 13:48:13\", \"2018-02-15 16:38:49\", \"2018-02-01 06:15:31\"), amount_payment (9886.62, 4610.26, 9414.74) | lessons : staff_id (8, 14, 3), lesson_time (\"3\", \"6\", \"3\"), customer_id (11, 11, 10), vehicle_id (3, 2, 1), lesson_status_code (\"Cancelled\", \"Completed\"), lesson_id (7, 14, 8), lesson_date (\"2018-03-16 07:08:52\", \"2018-03-21 06:48:45\", \"2018-03-16 07:08:52\"), price (456.0, 446.0, 446.0)", "schema_without_content": "addresses : state_province_county , address_id , country , city , line_1_number_building , zip_postcode  | staff : date_joined_staff , middle_name , staff_address_id , first_name , staff_id , date_of_birth , nickname , last_name , date_left_staff  | vehicles : vehicle_details , vehicle_id  | customers : date_of_birth , phone_number 396-4354x3576\", \"07278206718\", \"1-618-535-9750\", cell_mobile_phone_number 4872981083\", \"1-197-686-2849x8761\", \"+454872981083\", amount_outstanding , customer_address_id , date_became_customer , first_name , email_address , last_name , customer_id , customer_status_code  | customers_amount_outstanding : min_amount_outstanding , customer_status_code , last_name , date_became_customer , date_of_birth , avg_amount_outstanding , customer_id , max_amount_outstanding , first_name , customer_address_id , total_amount_outstanding , email_address , phone_number 396-4354x3576\", \"07278206718\", \"1-618-535-9750\", cell_mobile_phone_number 4872981083\", \"1-197-686-2849x8761\", \"+454872981083\" | customer_payments : customer_id , payment_method_code , datetime_payment , amount_payment  | lessons : staff_id , lesson_time , customer_id , vehicle_id , lesson_status_code , lesson_id , lesson_date , price "}, {"db_id": "driving_school", "query": "select max_amount_outstanding, min_amount_outstanding, avg_amount_outstanding from customers_amount_outstanding", "query_toks": ["SELECT", "max", "(", "amount_outstanding", ")", ",", "min", "(", "amount_outstanding", ")", ",", "avg", "(", "amount_outstanding", ")", "FROM", "Customers", ";"], "query_toks_no_value": ["select", "max", "(", "amount_outstanding", ")", ",", "min", "(", "amount_outstanding", ")", ",", "avg", "(", "amount_outstanding", ")", "from", "customers"], "question": "What is the maximum, minimum, and average amount of money outsanding for all customers?", "question_toks": ["What", "is", "the", "maximum", ",", "minimum", ",", "and", "average", "amount", "of", "money", "outsanding", "for", "all", "customers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 25, false], null]], [2, [0, [0, 25, false], null]], [5, [0, [0, 25, false], null]]]], "union": null, "where": []}, "primary_key": {"customers": "customer_id"}, "orig_query": "select max(amount_outstanding), min(amount_outstanding), avg(amount_outstanding) from customers", "split_map": {"customers": ["max_amount_outstanding", "min_amount_outstanding", "avg_amount_outstanding", "total_amount_outstanding"]}, "schema_with_content": "addresses : line_1_number_building (\"29085 Dejah Pine Suite 059\", \"7089 Mueller Forks\", \"43235 Jazmin Mountain Suite 251\"), zip_postcode (\"08938\", \"27559\", \"00005\"), state_province_county (\"Kentucky\", \"Connecticut\", \"Kentucky\"), address_id (5, 7, 6), country (\"USA\"), city (\"New Bernieceburgh\", \"Lockmanfurt\", \"Lake Elaina\") | staff : first_name (\"Eulalia\", \"Queenie\", \"Eulalia\"), staff_address_id (12, 7, 13), last_name (\"Mraz\", \"Maggio\", \"Turner\"), middle_name (\"Stephania\", \"Icie\", \"Stephania\"), date_of_birth (\"2000-11-16 06:55:12\", \"1994-05-17 05:32:11\", \"1996-03-09 08:19:49\"), staff_id (5, 1, 9), nickname (\"ymiller\", \"edwin.hudson\", \"sbrown\"), date_joined_staff (\"2018-01-02 12:24:24\", \"2016-11-05 01:43:52\", \"2017-02-20 18:45:20\"), date_left_staff (\"2018-03-14 07:14:37\", \"2018-03-09 05:08:35\", \"2018-03-01 17:10:03\") | vehicles : vehicle_id (1, 2, 3), vehicle_details (\"Van\", \"Truck\", \"Car\") | customers : last_name (\"Mertz\", \"Sanford\", \"Schmeler\"), date_became_customer (\"2015-11-16 22:52:14\", \"2017-11-25 01:42:26\", \"2015-09-25 13:59:21\"), amount_outstanding (9447.0, 9447.0, 9332.0), customer_address_id (9, 10, 1), email_address (\"ehowell@example.com\", \"karina.carroll@example.net\", \"mayert.judy@example.com\"), customer_id (15, 14, 13), customer_status_code (\"Bad Customer\", \"Good Customer\"), cell_mobile_phone_number (\"081-097-3684\", \"(630)964-2426\", \"200.830.8723\"), phone_number (\"206-054-0689x05861\", \"1-875-045-0806\", \"1-618-535-9750\"), date_of_birth (\"1996-08-30 06:17:50\", \"1993-03-08 08:48:42\", \"1993-03-08 08:48:42\"), first_name (\"Amya\", \"Dameon\", \"Millie\") | customers_amount_outstanding : last_name (\"Mertz\", \"Sanford\", \"Schmeler\"), customer_id (15, 14, 13), first_name (\"Amya\", \"Dameon\", \"Millie\"), date_of_birth (\"1996-08-30 06:17:50\", \"1993-03-08 08:48:42\", \"1993-03-08 08:48:42\"), avg_amount_outstanding (9447.0, 9447.0, 9332.0), max_amount_outstanding (9447.0, 9447.0, 9332.0), date_became_customer (\"2015-11-16 22:52:14\", \"2017-11-25 01:42:26\", \"2015-09-25 13:59:21\"), customer_status_code (\"Bad Customer\", \"Good Customer\"), total_amount_outstanding (9447.0, 9447.0, 9332.0), min_amount_outstanding (9447.0, 9447.0, 9332.0), customer_address_id (9, 10, 1), email_address (\"ehowell@example.com\", \"karina.carroll@example.net\", \"mayert.judy@example.com\"), phone_number (\"206-054-0689x05861\", \"1-875-045-0806\", \"1-618-535-9750\"), cell_mobile_phone_number (\"081-097-3684\", \"(630)964-2426\", \"200.830.8723\") | customer_payments : customer_id (4, 12, 11), payment_method_code (\"Direct Debit\", \"Credit Card\"), amount_payment (6782.84, 4610.26, 5475.26), datetime_payment (\"2018-03-12 13:31:36\", \"2018-03-18 13:48:13\", \"2018-02-05 18:44:46\") | lessons : price (223.0, 495.0, 295.0), lesson_status_code (\"Cancelled\", \"Completed\"), customer_id (9, 10, 10), lesson_date (\"2018-03-21 06:48:45\", \"2018-03-17 19:02:07\", \"2018-03-05 18:05:31\"), lesson_id (2, 6, 2), vehicle_id (3, 2, 1), lesson_time (\"5\", \"3\", \"3\"), staff_id (14, 15, 4)", "schema_without_content": "addresses : line_1_number_building , zip_postcode , state_province_county , address_id , country , city  | staff : first_name , staff_address_id , last_name , middle_name , date_of_birth , staff_id , nickname , date_joined_staff , date_left_staff  | vehicles : vehicle_id , vehicle_details  | customers : last_name , date_became_customer , amount_outstanding , customer_address_id , email_address , customer_id , customer_status_code , cell_mobile_phone_number 964-2426\", \"200.830.8723\", phone_number , date_of_birth , first_name  | customers_amount_outstanding : last_name , customer_id , first_name , date_of_birth , avg_amount_outstanding , max_amount_outstanding , date_became_customer , customer_status_code , total_amount_outstanding , min_amount_outstanding , customer_address_id , email_address , phone_number , cell_mobile_phone_number 964-2426\", \"200.830.8723\" | customer_payments : customer_id , payment_method_code , amount_payment , datetime_payment  | lessons : price , lesson_status_code , customer_id , lesson_date , lesson_id , vehicle_id , lesson_time , staff_id "}, {"db_id": "flight_4", "query": "select max_elevation from airports_elevation where country = 'Iceland'", "query_toks": ["SELECT", "max", "(", "elevation", ")", "FROM", "airports", "WHERE", "country", "=", "'Iceland", "'"], "query_toks_no_value": ["select", "max", "(", "elevation", ")", "from", "airports", "where", "country", "=", "value"], "question": "What is the maximum elevation of all airports in the country of Iceland?", "question_toks": ["What", "is", "the", "maximum", "elevation", "of", "all", "airports", "in", "the", "country", "of", "Iceland", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"Iceland\"", null]]}, "primary_key": {"airports": "apid"}, "orig_query": "select max(elevation) from airports where country = 'Iceland'", "split_map": {"airports": ["max_elevation", "min_elevation", "avg_elevation", "total_elevation"]}, "schema_with_content": "routes : dst_ap (\"SQ\", \"OTH\", \"CED\"), src_ap (\"CT\", \"YBG\", \"HOV\"), src_apid (6368, 4063, 2322), airline (\"8I\", \"HK\", \"3K\"), dst_apid (6792, 4328, 2856), alid (2765, 218, 2748), rid (55472, 64375, 41805), codeshare (None, \"Y\") | airports : country (\"Cameroon\", \"Venezuela\", \"Kuwait\"), elevation (2010, 24, 103), iata (\"ULD\", \"NGS\", \"HBI\"), x (1.7605600357100002, 8.616319656369999, 82.11100006103516), apid (9890, 5673, 2389), y (12.6361999512, 46.86027778, 41.901000977), name (\"Tatalina LRRS Airport\", \"Long Akah Airport\", \"Mayumba Airport\"), icao (\"LFQJ\", \"NZWP\", \"KFLV\"), city (\"Sam Neua\", \"Newport\", \"Port Moller\") | airports_elevation : avg_elevation (2010, 24, 103), min_elevation (2010, 24, 103), x (1.7605600357100002, 8.616319656369999, 82.11100006103516), max_elevation (2010, 24, 103), country (\"Cameroon\", \"Venezuela\", \"Kuwait\"), y (12.6361999512, 46.86027778, 41.901000977), total_elevation (2010, 24, 103), name (\"Tatalina LRRS Airport\", \"Long Akah Airport\", \"Mayumba Airport\"), apid (9890, 5673, 2389), city (\"Sam Neua\", \"Newport\", \"Port Moller\"), iata (\"ULD\", \"NGS\", \"HBI\"), icao (\"LFQJ\", \"NZWP\", \"KFLV\") | airlines : country (\"Burundi\", \"South Sudan\", \"Finland\"), active (\"Y\", \"N\"), callsign (\"AEROMEXPRESS\", \"SUN PACIFIC\", \"DISPATCH\"), name (\"Ultrair\", \"Charlotte Air National Guard\", \"Soonair Lines\"), icao (\"AZX\", \"TTE\", \"GLB\"), alid (3891, 382, 2792), iata (\"JG\", \"JY\", \"PQ\")", "schema_without_content": "routes : dst_ap , src_ap , src_apid , airline , dst_apid , alid , rid , codeshare  | airports : country , elevation , iata , x , apid , y , name , icao , city  | airports_elevation : avg_elevation , min_elevation , x , max_elevation , country , y , total_elevation , name , apid , city , iata , icao  | airlines : country , active , callsign , name , icao , alid , iata "}, {"db_id": "flight_4", "query": "select max_elevation from airports_elevation where country = 'Iceland'", "query_toks": ["SELECT", "max", "(", "elevation", ")", "FROM", "airports", "WHERE", "country", "=", "'Iceland", "'"], "query_toks_no_value": ["select", "max", "(", "elevation", ")", "from", "airports", "where", "country", "=", "value"], "question": "What is the highest elevation of an airport in the country of Iceland?", "question_toks": ["What", "is", "the", "highest", "elevation", "of", "an", "airport", "in", "the", "country", "of", "Iceland", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"Iceland\"", null]]}, "primary_key": {"airports": "apid"}, "orig_query": "select max(elevation) from airports where country = 'Iceland'", "split_map": {"airports": ["max_elevation", "min_elevation", "avg_elevation", "total_elevation"]}, "schema_with_content": "routes : src_apid (3204, 6209, 8238), rid (66691, 38889, 14803), dst_apid (429, 2712, 685), codeshare (None, \"Y\"), src_ap (\"ADB\", \"C\", \"BJB\"), airline (\"7\", \"WY\", \"XQ\"), dst_ap (\"HG\", \"DRG\", \"AR\"), alid (3437, 11963, 11857) | airports : iata (\"WMP\", \"SNB\", \"ABX\"), elevation (4347, 3057, 1549), y (36.181098938, 14.8746004105, 54.96390151977539), icao (\"LLIB\", \"PJON\", \"EBFN\"), x (14.568099975586, 87.69525, 9.604000091552734), country (\"Syria\", \"Greenland\", \"Argentina\"), name (\"North Caicos Airport\", \"Ellsworth Air Force Base\", \"Hays Regional Airport\"), apid (3121, 7148, 7011), city (\"Ilheus\", \"Moundou\", \"Kabri Dehar\") | airports_elevation : total_elevation (4347, 3057, 1549), avg_elevation (4347, 3057, 1549), apid (3121, 7148, 7011), country (\"Syria\", \"Greenland\", \"Argentina\"), y (36.181098938, 14.8746004105, 54.96390151977539), city (\"Ilheus\", \"Moundou\", \"Kabri Dehar\"), name (\"North Caicos Airport\", \"Ellsworth Air Force Base\", \"Hays Regional Airport\"), min_elevation (4347, 3057, 1549), x (14.568099975586, 87.69525, 9.604000091552734), max_elevation (4347, 3057, 1549), iata (\"WMP\", \"SNB\", \"ABX\"), icao (\"LLIB\", \"PJON\", \"EBFN\") | airlines : name (\"Vacationair\", \"Eurojet Servis\", \"Saint Barth Commuter\"), callsign (\"AIR PROP\", \"AEROGAUCHO\", \"CORPJET\"), icao (\"MBB\", \"LGU\", \"ADS\"), active (\"Y\", \"N\"), alid (4320, 4747, 4527), country (\"Turks and Caicos Islands\", \"Serbia\", \"Belize\"), iata (\"4Y\", \"QR\", \"IW\")", "schema_without_content": "routes : src_apid , rid , dst_apid , codeshare , src_ap , airline , dst_ap , alid  | airports : iata , elevation , y , icao , x , country , name , apid , city  | airports_elevation : total_elevation , avg_elevation , apid , country , y , city , name , min_elevation , x , max_elevation , iata , icao  | airlines : name , callsign , icao , active , alid , country , iata "}, {"db_id": "flight_4", "query": "select avg_elevation, country from airports_elevation group by country", "query_toks": ["SELECT", "avg", "(", "elevation", ")", ",", "country", "FROM", "airports", "GROUP", "BY", "country"], "query_toks_no_value": ["select", "avg", "(", "elevation", ")", ",", "country", "from", "airports", "group", "by", "country"], "question": "Find the average elevation of all airports for each country.", "question_toks": ["Find", "the", "average", "elevation", "of", "all", "airports", "for", "each", "country", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 15, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}, "primary_key": {"airports": "apid"}, "orig_query": "select avg(elevation), country from airports group by country", "split_map": {"airports": ["max_elevation", "min_elevation", "avg_elevation", "total_elevation"]}, "schema_with_content": "routes : dst_ap (\"ASW\", \"KA\", \"EVV\"), src_ap (\"JFR\", \"II\", \"FY\"), codeshare (None, \"Y\"), alid (5013, 10675, 476), rid (44370, 24752, 49942), dst_apid (2243, 2134, 3913), src_apid (1459, 1729, 514), airline (\"W2\", \"4D\", \"JT\") | airports : elevation (1307, 2591, 1214), iata (\"VUP\", \"VRC\", \"TTG\"), apid (2829, 1545, 12043), city (\"Kjeller\", \"Dasht-e-naz\", \"Ozuki\"), name (\"Navoi Airport\", \"Doshan Tappeh Air Base\", \"P\u00c3\u00a9cs-Pog\u00c3\u00a1ny Airport\"), y (52.241668701171875, 52.730800628699996, 52.6125984192), icao (\"EFPY\", \"EGNC\", \"EDDE\"), x (45.2734673023, 12.447699546813965, -90.253402709961), country (\"Bulgaria\", \"Ecuador\", \"Belarus\") | airports_elevation : apid (2829, 1545, 12043), max_elevation (1307, 2591, 1214), city (\"Kjeller\", \"Dasht-e-naz\", \"Ozuki\"), total_elevation (1307, 2591, 1214), x (45.2734673023, 12.447699546813965, -90.253402709961), country (\"Bulgaria\", \"Ecuador\", \"Belarus\"), y (52.241668701171875, 52.730800628699996, 52.6125984192), min_elevation (1307, 2591, 1214), name (\"Navoi Airport\", \"Doshan Tappeh Air Base\", \"P\u00c3\u00a9cs-Pog\u00c3\u00a1ny Airport\"), avg_elevation (1307, 2591, 1214), iata (\"VUP\", \"VRC\", \"TTG\"), icao (\"EFPY\", \"EGNC\", \"EDDE\") | airlines : icao (\"MID\", \"BHC\", \"NHT\"), callsign (\"SATCO\", \"Lankair\", \"CELLOJET\"), active (\"Y\", \"N\"), alid (2935, 4502, 1076), country (\"Poland\", \"Eritrea\", \"Afghanistan\"), name (\"Eurosense\", \"SAAD (A320) Limited\", \"Maryland Air\"), iata (\"W9\", \"4B\", \"AQ\")", "schema_without_content": "routes : dst_ap , src_ap , codeshare , alid , rid , dst_apid , src_apid , airline  | airports : elevation , iata , apid , city , name , y , icao , x , country  | airports_elevation : apid , max_elevation , city , total_elevation , x , country , y , min_elevation , name , avg_elevation , iata , icao  | airlines : icao , callsign , active , alid , country , name  Limited\", \"Maryland Air\", iata "}, {"db_id": "flight_4", "query": "select avg_elevation, country from airports_elevation group by country", "query_toks": ["SELECT", "avg", "(", "elevation", ")", ",", "country", "FROM", "airports", "GROUP", "BY", "country"], "query_toks_no_value": ["select", "avg", "(", "elevation", ")", ",", "country", "from", "airports", "group", "by", "country"], "question": "For each country, what is the average elevation of that country's airports?", "question_toks": ["For", "each", "country", ",", "what", "is", "the", "average", "elevation", "of", "that", "country", "'s", "airports", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 15, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}, "primary_key": {"airports": "apid"}, "orig_query": "select avg(elevation), country from airports group by country", "split_map": {"airports": ["max_elevation", "min_elevation", "avg_elevation", "total_elevation"]}, "schema_with_content": "routes : codeshare (None, \"Y\"), src_apid (6311, 5897, 3329), dst_ap (\"TZA\", \"BJZ\", \"SOW\"), src_ap (\"YGX\", \"WDH\", \"AT\"), rid (7007, 26862, 41073), alid (3871, 20577, 2417), airline (\"H2\", \"GA\", \"TD\"), dst_apid (1001, 5699, 1688) | airports : name (\"Lyon-Bron Airport\", \"Orlando International Airport\", \"Gbadolite Airport\"), icao (\"KIAG\", \"YBCV\", \"PALB\"), elevation (3331, 617, 2230), x (60.641700744628906, 108.540000916, -3.777359962463379), apid (9377, 3182, 1713), city (\"Lufkin\", \"Meghauli\", \"Mornington Island\"), y (6.20292, 45.09299850463867, -35.99470138549805), country (\"Nauru\", \"Norfolk Island\", \"Belize\"), iata (\"VRY\", \"VPZ\", \"VCA\") | airports_elevation : name (\"Lyon-Bron Airport\", \"Orlando International Airport\", \"Gbadolite Airport\"), total_elevation (3331, 617, 2230), x (60.641700744628906, 108.540000916, -3.777359962463379), min_elevation (3331, 617, 2230), city (\"Lufkin\", \"Meghauli\", \"Mornington Island\"), avg_elevation (3331, 617, 2230), country (\"Nauru\", \"Norfolk Island\", \"Belize\"), apid (9377, 3182, 1713), max_elevation (3331, 617, 2230), y (6.20292, 45.09299850463867, -35.99470138549805), iata (\"VRY\", \"VPZ\", \"VCA\"), icao (\"KIAG\", \"YBCV\", \"PALB\") | airlines : alid (1525, 4099, 3497), iata (\"OQ\", \"GK\", \"J9\"), name (\"Primera Air\", \"Pacific Air Boats\", \"Air Cess\"), active (\"Y\", \"N\"), icao (\"TUM\", \"NTX\", \"HBA\"), country (\"Kenya\", \"Togo\", \"Eritrea\"), callsign (\"UNIVERSITARIO\", \"SKYGATE\", \"EGYPTAIR CARGO\")", "schema_without_content": "routes : codeshare , src_apid , dst_ap , src_ap , rid , alid , airline , dst_apid  | airports : name , icao , elevation , x , apid , city , y , country , iata  | airports_elevation : name , total_elevation , x , min_elevation , city , avg_elevation , country , apid , max_elevation , y , iata , icao  | airlines : alid , iata , name , active , icao , country , callsign "}, {"db_id": "architecture", "query": "select avg_length_feet from bridge_length_feet", "query_toks": ["SELECT", "avg", "(", "length_feet", ")", "FROM", "bridge"], "query_toks_no_value": ["select", "avg", "(", "length_feet", ")", "from", "bridge"], "question": "What is the average length in feet of the bridges?", "question_toks": ["What", "is", "the", "average", "length", "in", "feet", "of", "the", "bridges", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 10, false], null]]]], "union": null, "where": []}, "primary_key": {"bridge": "id"}, "orig_query": "select avg(length_feet) from bridge", "split_map": {"bridge": ["max_length_feet", "min_length_feet", "avg_length_feet", "total_length_feet"]}, "schema_with_content": "architect : gender (\"male\", \"female\"), name (\"Le Corbusier\", \"Zaha Hadid\", \"Mies Van Der Rohe\"), id (\"5\", \"1\", \"3\"), nationality (\"Iraqi, British\", \"Swiss, French\", \"American\") | bridge : name (\"Shipton's Arch\", \"Stevens Arch\", \"Sipapu Natural Bridge\"), length_meters (74.0, 67.0, 65.0), length_feet (290.0, 212.0, 225.0), id (15, 8, 5), location (\"Dinosaur National Monument , Colorado , USA\", \"Escalante Canyon , Utah , USA\", \"Sanostee , New Mexico , USA\"), architect_id (3, 4, 5) | bridge_length_feet : min_length_feet (290.0, 212.0, 225.0), location (\"Dinosaur National Monument , Colorado , USA\", \"Escalante Canyon , Utah , USA\", \"Sanostee , New Mexico , USA\"), length_meters (74.0, 67.0, 65.0), avg_length_feet (290.0, 212.0, 225.0), max_length_feet (290.0, 212.0, 225.0), id (15, 8, 5), name (\"Shipton's Arch\", \"Stevens Arch\", \"Sipapu Natural Bridge\"), total_length_feet (290.0, 212.0, 225.0), architect_id (3, 4, 5) | mill : name (\"Moulin de Fexhe\", \"Le Vieux Molen\", \"Moulin du Ch\u00c3\u00a2teau\"), architect_id (4, 4, 4), location (\"Momalle\", \"Momalle\", \"Fexhe-le-haut-Clocher\"), id (3, 2, 6), notes (\"Molenechos (Dutch)\"), built_year (1856, 1840, 1840), type (\"Grondzeiler\", \"Bergmolen\")", "schema_without_content": "architect : gender , name , id , nationality  | bridge : name , length_meters , length_feet , id , location , architect_id  | bridge_length_feet : min_length_feet , location , length_meters , avg_length_feet , max_length_feet , id , name , total_length_feet , architect_id  | mill : name , architect_id , location , id , notes \", built_year , type "}, {"db_id": "culture_company", "query": "select avg_budget_million, max_budget_million, min_budget_million from movie_budget_million where year < 2000", "query_toks": ["SELECT", "avg", "(", "budget_million", ")", ",", "max", "(", "budget_million", ")", ",", "min", "(", "budget_million", ")", "FROM", "movie", "WHERE", "YEAR", "<", "2000"], "query_toks_no_value": ["select", "avg", "(", "budget_million", ")", ",", "max", "(", "budget_million", ")", ",", "min", "(", "budget_million", ")", "from", "movie", "where", "year", "<", "value"], "question": "What is the average, maximum, and minimum budget for all movies before 2000.", "question_toks": ["What", "is", "the", "average", ",", "maximum", ",", "and", "minimum", "budget", "for", "all", "movies", "before", "2000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 12, false], null]], [1, [0, [0, 12, false], null]], [2, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 10, false], null], 2000.0, null]]}, "primary_key": {"movie": "movie_id"}, "orig_query": "select avg(budget_million), max(budget_million), min(budget_million) from movie where year < 2000", "split_map": {"movie": ["max_budget_million", "min_budget_million", "avg_budget_million", "total_budget_million"]}, "schema_with_content": "book_club : book_club_id (9, 6, 10), category (\"Gay M/SF\", \"Lesb. M/SF\", \"Gay SF/F\"), result (\"Won [A ]\", \"Won [A ]\", \"Won [A ]\"), book_title (\"Somewhere in the Night\", \"Walking Water / After All This\", \"Death Takes the Stage\"), year (1989, 1990), author_or_editor (\"George Baxt\", \"Thom Nickels\", \"Sandy Bayer\"), publisher (\"Alyson\", \"International Polygonics\", \"Crossing Press\") | movie : gross_worldwide (30471, 3728888, 19412993), title (\"Battlefield Earth\", \"The Whole Nine Yards\", \"Get Carter\"), budget_million (44.0, 63.6, 62.0), director (\"Demian Lichtenstein\", \"Anthony Hickox\", \"Anthony Hickox\"), movie_id (7, 6, 1), year (1999, 2000, 2001) | movie_budget_million : avg_budget_million (44.0, 63.6, 62.0), min_budget_million (44.0, 63.6, 62.0), year (1999, 2000, 2001), movie_id (7, 6, 1), title (\"Battlefield Earth\", \"The Whole Nine Yards\", \"Get Carter\"), max_budget_million (44.0, 63.6, 62.0), total_budget_million (44.0, 63.6, 62.0), director (\"Demian Lichtenstein\", \"Anthony Hickox\", \"Anthony Hickox\"), gross_worldwide (30471, 3728888, 19412993) | culture_company : group_equity_shareholding (60.0, 49.0, 49.0), movie_id (\"5\", \"7\", \"4\"), type (\"Corporate\", \"Joint Venture\", \"Subsidiary\"), book_club_id (\"5\", \"2\", \"1\"), company_name (\"Cathay Pacific Culture\", \"Cathay Pacific Culture Services (HK) Limited\", \"Culture China Cargo\"), incorporated_in (\"China\", \"Hong Kong\")", "schema_without_content": "book_club : book_club_id , category , result , book_title , year , author_or_editor , publisher  | movie : gross_worldwide , title , budget_million , director , movie_id , year  | movie_budget_million : avg_budget_million , min_budget_million , year , movie_id , title , max_budget_million , total_budget_million , director , gross_worldwide  | culture_company : group_equity_shareholding , movie_id , type , book_club_id , company_name  Limited\", \"Culture China Cargo\", incorporated_in "}, {"db_id": "culture_company", "query": "select avg_budget_million, max_budget_million, min_budget_million from movie_budget_million where year < 2000", "query_toks": ["SELECT", "avg", "(", "budget_million", ")", ",", "max", "(", "budget_million", ")", ",", "min", "(", "budget_million", ")", "FROM", "movie", "WHERE", "YEAR", "<", "2000"], "query_toks_no_value": ["select", "avg", "(", "budget_million", ")", ",", "max", "(", "budget_million", ")", ",", "min", "(", "budget_million", ")", "from", "movie", "where", "year", "<", "value"], "question": "Return the average, maximum, and minimum budgets in millions for movies made before the year 2000.", "question_toks": ["Return", "the", "average", ",", "maximum", ",", "and", "minimum", "budgets", "in", "millions", "for", "movies", "made", "before", "the", "year", "2000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 12, false], null]], [1, [0, [0, 12, false], null]], [2, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 10, false], null], 2000.0, null]]}, "primary_key": {"movie": "movie_id"}, "orig_query": "select avg(budget_million), max(budget_million), min(budget_million) from movie where year < 2000", "split_map": {"movie": ["max_budget_million", "min_budget_million", "avg_budget_million", "total_budget_million"]}, "schema_with_content": "book_club : book_club_id (11, 12, 1), category (\"Gay M/SF\", \"Lesb. M/SF\", \"Gay SF/F\"), book_title (\"Who\u00d3\u00b3 Next\", \"Skiptrace\", \"Death Takes the Stage\"), publisher (\"Naiad Press\", \"St. Martin's Press\", \"St. Martin's Press\"), year (1989, 1990), result (\"Won [A ]\", \"Nom\", \"Won\"), author_or_editor (\"Claire McNab\", \"Michael Bishop\", \"Donald Ward\") | movie : gross_worldwide (456774, 456774, 19412993), year (1999, 2000, 2001), title (\"The Big Kahuna\", \"The Big Kahuna\", \"Get Carter\"), director (\"Anthony Hickox\", \"Demian Lichtenstein\", \"Jonathan Lynn\"), budget_million (63.6, 4.0, 4.0), movie_id (7, 1, 10) | movie_budget_million : movie_id (7, 1, 10), director (\"Anthony Hickox\", \"Demian Lichtenstein\", \"Jonathan Lynn\"), total_budget_million (63.6, 4.0, 4.0), avg_budget_million (63.6, 4.0, 4.0), max_budget_million (63.6, 4.0, 4.0), min_budget_million (63.6, 4.0, 4.0), title (\"The Big Kahuna\", \"The Big Kahuna\", \"Get Carter\"), year (1999, 2000, 2001), gross_worldwide (456774, 456774, 19412993) | culture_company : company_name (\"Cathay Pacific Culture Services (HK) Limited\", \"Culture China Cargo\", \"Cathay Pacific Culture Services (HK) Limited\"), book_club_id (\"3\", \"2\", \"3\"), incorporated_in (\"China\", \"Hong Kong\"), type (\"Corporate\", \"Joint Venture\", \"Subsidiary\"), movie_id (\"4\", \"3\", \"2\"), group_equity_shareholding (49.0, 100.0, 60.0)", "schema_without_content": "book_club : book_club_id , category , book_title , publisher , year , result , author_or_editor  | movie : gross_worldwide , year , title , director , budget_million , movie_id  | movie_budget_million : movie_id , director , total_budget_million , avg_budget_million , max_budget_million , min_budget_million , title , year , gross_worldwide  | culture_company : company_name  Limited\", \"Culture China Cargo\", \"Cathay Pacific Culture Services  Limited\", book_club_id , incorporated_in , type , movie_id , group_equity_shareholding "}]